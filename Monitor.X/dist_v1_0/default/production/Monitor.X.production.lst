

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Jul  9 11:45:49 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    21                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1,inline
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1,inline
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1,inline
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1,inline
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=2,class=CODE,delta=1
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1
   147                           	psect	text122,global,reloc=2,class=CODE,delta=1
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1
   151                           	psect	text126,global,reloc=2,class=CODE,delta=1
   152                           	psect	text127,global,reloc=2,class=CODE,delta=1
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1
   154                           	psect	text129,global,reloc=2,class=CODE,delta=1
   155                           	psect	text130,global,reloc=2,class=CODE,delta=1
   156                           	psect	text131,global,reloc=2,class=CODE,delta=1
   157                           	psect	text132,global,reloc=2,class=CODE,delta=1
   158                           	psect	text133,global,reloc=2,class=CODE,delta=1,group=2
   159                           	psect	text134,global,reloc=2,class=CODE,delta=1
   160                           	psect	text135,global,reloc=2,class=CODE,delta=1
   161                           	psect	text136,global,reloc=2,class=CODE,delta=1
   162                           	psect	text137,global,reloc=2,class=CODE,delta=1
   163                           	psect	text138,global,reloc=2,class=CODE,delta=1
   164                           	psect	text139,global,reloc=2,class=CODE,delta=1
   165                           	psect	text140,global,reloc=2,class=CODE,delta=1,inline
   166                           	psect	text141,global,reloc=2,class=CODE,delta=1
   167                           	psect	text142,global,reloc=2,class=CODE,delta=1
   168                           	psect	text143,global,reloc=2,class=CODE,delta=1
   169                           	psect	text144,global,reloc=2,class=CODE,delta=1,inline
   170                           	psect	text145,global,reloc=2,class=CODE,delta=1
   171                           	psect	text146,global,reloc=2,class=CODE,delta=1
   172                           	psect	text147,global,reloc=2,class=CODE,delta=1
   173                           	psect	text148,global,reloc=2,class=CODE,delta=1
   174                           	psect	text149,global,reloc=2,class=CODE,delta=1
   175                           	psect	text150,global,reloc=2,class=CODE,delta=1,group=1
   176                           	psect	text151,global,reloc=2,class=CODE,delta=1,group=1
   177                           	psect	text152,global,reloc=2,class=CODE,delta=1
   178                           	psect	text153,global,reloc=2,class=CODE,delta=1
   179                           	psect	text154,global,reloc=2,class=CODE,delta=1
   180                           	psect	text155,global,reloc=2,class=CODE,delta=1
   181                           	psect	text156,global,reloc=2,class=CODE,delta=1
   182                           	psect	text157,global,reloc=2,class=CODE,delta=1
   183                           	psect	text158,global,reloc=2,class=CODE,delta=1
   184                           	psect	text159,global,reloc=2,class=CODE,delta=1
   185                           	psect	text160,global,reloc=2,class=CODE,delta=1
   186                           	psect	text161,global,reloc=2,class=CODE,delta=1
   187                           	psect	text162,global,reloc=2,class=CODE,delta=1,group=2
   188                           	psect	text163,global,reloc=2,class=CODE,delta=1
   189                           	psect	text164,global,reloc=2,class=CODE,delta=1
   190                           	psect	text165,global,reloc=2,class=CODE,delta=1
   191                           	psect	text166,global,reloc=2,class=CODE,delta=1,group=2
   192                           	psect	text167,global,reloc=2,class=CODE,delta=1,group=2
   193                           	psect	text168,global,reloc=2,class=CODE,delta=1,group=2
   194                           	psect	text169,global,reloc=2,class=CODE,delta=1,group=2
   195                           	psect	text170,global,reloc=2,class=CODE,delta=1
   196                           	psect	text171,global,reloc=2,class=CODE,delta=1
   197                           	psect	text172,global,reloc=2,class=CODE,delta=1,group=2
   198                           	psect	text173,global,reloc=2,class=CODE,delta=1,group=1
   199                           	psect	text174,global,reloc=2,class=CODE,delta=1,group=1
   200                           	psect	text175,global,reloc=2,class=CODE,delta=1
   201                           	psect	text176,global,reloc=2,class=CODE,delta=1
   202                           	psect	text177,global,reloc=2,class=CODE,delta=1,group=2
   203                           	psect	text178,global,reloc=2,class=CODE,delta=1,group=2
   204                           	psect	text179,global,reloc=2,class=CODE,delta=1,group=2
   205                           	psect	text180,global,reloc=2,class=CODE,delta=1
   206                           	psect	text181,global,reloc=2,class=CODE,delta=1
   207                           	psect	text182,global,reloc=2,class=CODE,delta=1,group=2
   208                           	psect	text183,global,reloc=2,class=CODE,delta=1,group=2
   209                           	psect	text184,global,reloc=2,class=CODE,delta=1,group=2
   210                           	psect	text185,global,reloc=2,class=CODE,delta=1,group=1
   211                           	psect	text186,global,reloc=2,class=CODE,delta=1,group=1
   212                           	psect	text187,global,reloc=2,class=CODE,delta=1
   213                           	psect	text188,global,reloc=2,class=CODE,delta=1
   214                           	psect	text189,global,reloc=2,class=CODE,delta=1
   215                           	psect	text190,global,reloc=2,class=CODE,delta=1
   216                           	psect	text191,global,reloc=2,class=CODE,delta=1
   217                           	psect	text192,global,reloc=2,class=CODE,delta=1
   218                           	psect	text193,global,reloc=2,class=CODE,delta=1
   219                           	psect	text194,global,reloc=2,class=CODE,delta=1
   220                           	psect	text195,global,reloc=2,class=CODE,delta=1
   221                           	psect	text196,global,reloc=2,class=CODE,delta=1
   222                           	psect	text197,global,reloc=2,class=CODE,delta=1
   223                           	psect	text198,global,reloc=2,class=CODE,delta=1,group=1
   224                           	psect	text199,global,reloc=2,class=CODE,delta=1
   225                           	psect	text200,global,reloc=2,class=CODE,delta=1
   226                           	psect	text201,global,reloc=2,class=CODE,delta=1
   227                           	psect	text202,global,reloc=2,class=CODE,delta=1
   228                           	psect	text203,global,reloc=2,class=CODE,delta=1
   229                           	psect	text204,global,reloc=2,class=CODE,delta=1
   230                           	psect	text205,global,reloc=2,class=CODE,delta=1
   231                           	psect	text206,global,reloc=2,class=CODE,delta=1
   232                           	psect	text207,global,reloc=2,class=CODE,delta=1
   233                           	psect	text208,global,reloc=2,class=CODE,delta=1
   234                           	psect	text209,global,reloc=2,class=CODE,delta=1
   235                           	psect	text210,global,reloc=2,class=CODE,delta=1
   236                           	psect	text211,global,reloc=2,class=CODE,delta=1
   237                           	psect	text212,global,reloc=2,class=CODE,delta=1
   238                           	psect	text213,global,reloc=2,class=CODE,delta=1
   239                           	psect	text214,global,reloc=2,class=CODE,delta=1
   240                           	psect	text215,global,reloc=2,class=CODE,delta=1
   241                           	psect	text216,global,reloc=2,class=CODE,delta=1
   242                           	psect	text217,global,reloc=2,class=CODE,delta=1
   243                           	psect	text218,global,reloc=2,class=CODE,delta=1
   244                           	psect	text219,global,reloc=2,class=CODE,delta=1
   245                           	psect	text220,global,reloc=2,class=CODE,delta=1
   246                           	psect	text221,global,reloc=2,class=CODE,delta=1
   247                           	psect	text222,global,reloc=2,class=CODE,delta=1
   248                           	psect	text223,global,reloc=2,class=CODE,delta=1
   249                           	psect	text224,global,reloc=2,class=CODE,delta=1
   250                           	psect	text225,global,reloc=2,class=CODE,delta=1
   251                           	psect	text226,global,reloc=2,class=CODE,delta=1
   252                           	psect	text227,global,reloc=2,class=CODE,delta=1
   253                           	psect	text228,global,reloc=2,class=CODE,delta=1
   254                           	psect	text229,global,reloc=2,class=CODE,delta=1
   255                           	psect	text230,global,reloc=2,class=CODE,delta=1
   256                           	psect	text231,global,reloc=2,class=CODE,delta=1
   257                           	psect	text232,global,reloc=2,class=CODE,delta=1
   258                           	psect	text233,global,reloc=2,class=CODE,delta=1
   259                           	psect	text234,global,reloc=2,class=CODE,delta=1
   260                           	psect	text235,global,reloc=2,class=CODE,delta=1
   261                           	psect	text236,global,reloc=2,class=CODE,delta=1
   262                           	psect	text237,global,reloc=2,class=CODE,delta=1
   263                           	psect	text238,global,reloc=2,class=CODE,delta=1
   264                           	psect	text239,global,reloc=2,class=CODE,delta=1
   265                           	psect	text240,global,reloc=2,class=CODE,delta=1
   266                           	psect	text241,global,reloc=2,class=CODE,delta=1
   267                           	psect	text242,global,reloc=2,class=CODE,delta=1
   268                           	psect	text243,global,reloc=2,class=CODE,delta=1
   269                           	psect	text244,global,reloc=2,class=CODE,delta=1
   270                           	psect	text245,global,reloc=2,class=CODE,delta=1
   271                           	psect	text246,global,reloc=2,class=CODE,delta=1
   272                           	psect	text247,global,reloc=2,class=CODE,delta=1
   273                           	psect	text248,global,reloc=2,class=CODE,delta=1
   274                           	psect	text249,global,reloc=2,class=CODE,delta=1
   275                           	psect	text250,global,reloc=2,class=CODE,delta=1
   276                           	psect	text251,global,reloc=2,class=CODE,delta=1
   277                           	psect	text252,global,reloc=2,class=CODE,delta=1
   278                           	psect	text253,global,reloc=2,class=CODE,delta=1,group=1
   279                           	psect	text254,global,reloc=2,class=CODE,delta=1,group=1
   280                           	psect	text255,global,reloc=2,class=CODE,delta=1
   281                           	psect	text256,global,reloc=2,class=CODE,delta=1
   282                           	psect	text257,global,reloc=2,class=CODE,delta=1
   283                           	psect	text258,global,reloc=2,class=CODE,delta=1
   284                           	psect	text259,global,reloc=2,class=CODE,delta=1
   285                           	psect	text260,global,reloc=2,class=CODE,delta=1
   286                           	psect	text261,global,reloc=2,class=CODE,delta=1
   287                           	psect	text262,global,reloc=2,class=CODE,delta=1
   288                           	psect	text263,global,reloc=2,class=CODE,delta=1
   289                           	psect	text264,global,reloc=2,class=CODE,delta=1
   290                           	psect	text265,global,reloc=2,class=CODE,delta=1
   291                           	psect	text266,global,reloc=2,class=CODE,delta=1
   292                           	psect	text267,global,reloc=2,class=CODE,delta=1
   293                           	psect	text268,global,reloc=2,class=CODE,delta=1
   294                           	psect	text269,global,reloc=2,class=CODE,delta=1
   295                           	psect	text270,global,reloc=2,class=CODE,delta=1
   296                           	psect	text271,global,reloc=2,class=CODE,delta=1
   297                           	psect	text272,global,reloc=2,class=CODE,delta=1
   298                           	psect	text273,global,reloc=2,class=CODE,delta=1
   299                           	psect	text274,global,reloc=2,class=CODE,delta=1
   300                           	psect	text275,global,reloc=2,class=CODE,delta=1
   301                           	psect	text276,global,reloc=2,class=CODE,delta=1
   302                           	psect	text277,global,reloc=2,class=CODE,delta=1
   303                           	psect	text278,global,reloc=2,class=CODE,delta=1
   304                           	psect	text279,global,reloc=2,class=CODE,delta=1
   305                           	psect	text280,global,reloc=2,class=CODE,delta=1
   306                           	psect	text281,global,reloc=2,class=CODE,delta=1
   307                           	psect	text282,global,reloc=2,class=CODE,delta=1
   308                           	psect	text283,global,reloc=2,class=CODE,delta=1
   309                           	psect	text284,global,reloc=2,class=CODE,delta=1
   310                           	psect	text285,global,reloc=2,class=CODE,delta=1
   311                           	psect	text286,global,reloc=2,class=CODE,delta=1
   312                           	psect	text287,global,reloc=2,class=CODE,delta=1
   313                           	psect	text288,global,reloc=2,class=CODE,delta=1
   314                           	psect	text289,global,reloc=2,class=CODE,delta=1
   315                           	psect	text290,global,reloc=2,class=CODE,delta=1
   316                           	psect	text291,global,reloc=2,class=CODE,delta=1
   317                           	psect	text292,global,reloc=2,class=CODE,delta=1
   318                           	psect	text293,global,reloc=2,class=CODE,delta=1
   319                           	psect	text294,global,reloc=2,class=CODE,delta=1
   320                           	psect	text295,global,reloc=2,class=CODE,delta=1
   321                           	psect	text296,global,reloc=2,class=CODE,delta=1
   322                           	psect	text297,global,reloc=2,class=CODE,delta=1
   323                           	psect	text298,global,reloc=2,class=CODE,delta=1
   324                           	psect	text299,global,reloc=2,class=CODE,delta=1
   325                           	psect	text300,global,reloc=2,class=CODE,delta=1
   326                           	psect	text301,global,reloc=2,class=CODE,delta=1
   327                           	psect	text302,global,reloc=2,class=CODE,delta=1
   328                           	psect	text303,global,reloc=2,class=CODE,delta=1
   329                           	psect	text304,global,reloc=2,class=CODE,delta=1
   330                           	psect	text305,global,reloc=2,class=CODE,delta=1
   331                           	psect	text306,global,reloc=2,class=CODE,delta=1
   332                           	psect	text307,global,reloc=2,class=CODE,delta=1
   333                           	psect	text308,global,reloc=2,class=CODE,delta=1
   334                           	psect	text309,global,reloc=2,class=CODE,delta=1
   335                           	psect	text310,global,reloc=2,class=CODE,delta=1
   336                           	psect	text311,global,reloc=2,class=CODE,delta=1
   337                           	psect	text312,global,reloc=2,class=CODE,delta=1
   338                           	psect	text313,global,reloc=2,class=CODE,delta=1
   339                           	psect	text314,global,reloc=2,class=CODE,delta=1
   340                           	psect	text315,global,reloc=2,class=CODE,delta=1,inline
   341                           	psect	text316,global,reloc=2,class=CODE,delta=1
   342                           	psect	text317,global,reloc=2,class=CODE,delta=1
   343                           	psect	text318,global,reloc=2,class=CODE,delta=1
   344                           	psect	text319,global,reloc=2,class=CODE,delta=1
   345                           	psect	text320,global,reloc=2,class=CODE,delta=1
   346                           	psect	text321,global,reloc=2,class=CODE,delta=1
   347                           	psect	text322,global,reloc=2,class=CODE,delta=1
   348                           	psect	text323,global,reloc=2,class=CODE,delta=1
   349                           	psect	text324,global,reloc=2,class=CODE,delta=1
   350                           	psect	text325,global,reloc=2,class=CODE,delta=1
   351                           	psect	text326,global,reloc=2,class=CODE,delta=1
   352                           	psect	text327,global,reloc=2,class=CODE,delta=1
   353                           	psect	text328,global,reloc=2,class=CODE,delta=1
   354                           	psect	text329,global,reloc=2,class=CODE,delta=1
   355                           	psect	text330,global,reloc=2,class=CODE,delta=1
   356                           	psect	text331,global,reloc=2,class=CODE,delta=1
   357                           	psect	text332,global,reloc=2,class=CODE,delta=1
   358                           	psect	text333,global,reloc=2,class=CODE,delta=1
   359                           	psect	text334,global,reloc=2,class=CODE,delta=1
   360                           	psect	text335,global,reloc=2,class=CODE,delta=1
   361                           	psect	text336,global,reloc=2,class=CODE,delta=1,inline
   362                           	psect	text337,global,reloc=2,class=CODE,delta=1,inline
   363                           	psect	text338,global,reloc=2,class=CODE,delta=1
   364                           	psect	text339,global,reloc=2,class=CODE,delta=1
   365                           	psect	text340,global,reloc=2,class=CODE,delta=1
   366                           	psect	text341,global,reloc=2,class=CODE,delta=1
   367                           	psect	text342,global,reloc=2,class=CODE,delta=1,inline
   368                           	psect	text343,global,reloc=2,class=CODE,delta=1,inline
   369                           	psect	text344,global,reloc=2,class=CODE,delta=1,inline
   370                           	psect	text345,global,reloc=2,class=CODE,delta=1,inline
   371                           	psect	text346,global,reloc=2,class=CODE,delta=1
   372                           	psect	text347,global,reloc=2,class=CODE,delta=1
   373                           	psect	text348,global,reloc=2,class=CODE,delta=1,inline
   374                           	psect	text349,global,reloc=2,class=CODE,delta=1
   375                           	psect	text350,global,reloc=2,class=CODE,delta=1
   376                           	psect	text351,global,reloc=2,class=CODE,delta=1
   377                           	psect	text352,global,reloc=2,class=CODE,delta=1
   378                           	psect	text353,global,reloc=2,class=CODE,delta=1
   379                           	psect	text354,global,reloc=2,class=CODE,delta=1
   380                           	psect	text355,global,reloc=2,class=CODE,delta=1
   381                           	psect	text356,global,reloc=2,class=CODE,delta=1
   382                           	psect	text357,global,reloc=2,class=CODE,delta=1
   383                           	psect	text358,global,reloc=2,class=CODE,delta=1
   384                           	psect	text359,global,reloc=2,class=CODE,delta=1
   385                           	psect	text360,global,reloc=2,class=CODE,delta=1
   386                           	psect	text361,global,reloc=2,class=CODE,delta=1
   387                           	psect	text362,global,reloc=2,class=CODE,delta=1
   388                           	psect	text363,global,reloc=2,class=CODE,delta=1
   389                           	psect	text364,global,reloc=2,class=CODE,delta=1
   390                           	psect	text365,global,reloc=2,class=CODE,delta=1
   391                           	psect	text366,global,reloc=2,class=CODE,delta=1
   392                           	psect	text367,global,reloc=2,class=CODE,delta=1
   393                           	psect	text368,global,reloc=2,class=CODE,delta=1
   394                           	psect	text369,global,reloc=2,class=CODE,delta=1
   395                           	psect	text370,global,reloc=2,class=CODE,delta=1
   396                           	psect	text371,global,reloc=2,class=CODE,delta=1
   397                           	psect	text372,global,reloc=2,class=CODE,delta=1
   398                           	psect	text373,global,reloc=2,class=CODE,delta=1
   399                           	psect	text374,global,reloc=2,class=CODE,delta=1
   400                           	psect	text375,global,reloc=2,class=CODE,delta=1
   401                           	psect	text376,global,reloc=2,class=CODE,delta=1
   402                           	psect	text377,global,reloc=2,class=CODE,delta=1
   403                           	psect	text378,global,reloc=2,class=CODE,delta=1
   404                           	psect	text379,global,reloc=2,class=CODE,delta=1
   405                           	psect	text380,global,reloc=2,class=CODE,delta=1
   406                           	psect	text381,global,reloc=2,class=CODE,delta=1
   407                           	psect	text382,global,reloc=2,class=CODE,delta=1
   408                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   409                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   410                           	psect	text383,global,reloc=2,class=CODE,delta=1
   411                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   412  0000                     
   413                           ; Version 2.10
   414                           ; Generated 31/07/2019 GMT
   415                           ; 
   416                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   417                           ; All rights reserved.
   418                           ; 
   419                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   420                           ; 
   421                           ; Redistribution and use in source and binary forms, with or without modification, are
   422                           ; permitted provided that the following conditions are met:
   423                           ; 
   424                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   425                           ;        conditions and the following disclaimer.
   426                           ; 
   427                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   428                           ;        of conditions and the following disclaimer in the documentation and/or other
   429                           ;        materials provided with the distribution.
   430                           ; 
   431                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   432                           ;        software without specific prior written permission.
   433                           ; 
   434                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   435                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   436                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   437                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   438                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   439                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   440                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   441                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   442                           ; 
   443                           ; 
   444                           ; Code-generator required, PIC18F46K42 Definitions
   445                           ; 
   446                           ; SFR Addresses
   447  0000                     
   448 ;; Function _I2C2_SlaveDefWrInterruptHandler is unused but had its address taken
   449  0000                     
   450 ;; Function _I2C2_SlaveDefAddrInterruptHandler is unused but had its address taken
   451  0000                     
   452 ;; Function _I2C2_SlaveDefWrColInterruptHandler is unused but had its address taken
   453  0000                     
   454 ;; Function _I2C2_SlaveDefBusColInterruptHandler is unused but had its address taken
   455  0000                     
   456                           	psect	idataBIGRAM
   457  004994                     __pidataBIGRAM:
   458                           	opt callstack 0
   459                           
   460                           ;initializer for _alarmData
   461  004994  42                 	db	66
   462  004995  61                 	db	97
   463  004996  74                 	db	116
   464  004997  74                 	db	116
   465  004998  65                 	db	101
   466  004999  72                 	db	114
   467  00499A  79                 	db	121
   468  00499B  20                 	db	32
   469  00499C  46                 	db	70
   470  00499D  61                 	db	97
   471  00499E  69                 	db	105
   472  00499F  6C                 	db	108
   473  0049A0  20                 	db	32
   474  0049A1  20                 	db	32
   475  0049A2  00                 	db	0
   476  0049A3  00                 	db	0
   477  0049A4  00                 	db	0
   478  0049A5  0004               	dw	4
   479  0049A7  E4                 	db	low _BatteryFailAlarm
   480  0049A8  69                 	db	high _BatteryFailAlarm
   481  0049A9  4D                 	db	77
   482  0049AA  6F                 	db	111
   483  0049AB  6E                 	db	110
   484  0049AC  69                 	db	105
   485  0049AD  74                 	db	116
   486  0049AE  6F                 	db	111
   487  0049AF  72                 	db	114
   488  0049B0  20                 	db	32
   489  0049B1  46                 	db	70
   490  0049B2  61                 	db	97
   491  0049B3  69                 	db	105
   492  0049B4  6C                 	db	108
   493  0049B5  20                 	db	32
   494  0049B6  20                 	db	32
   495  0049B7  00                 	db	0
   496  0049B8  00                 	db	0
   497  0049B9  00                 	db	0
   498  0049BA  0004               	dw	4
   499  0049BC  C8                 	db	low _MonitorFailAlarm
   500  0049BD  6A                 	db	high _MonitorFailAlarm
   501  0049BE  43                 	db	67
   502  0049BF  6F                 	db	111
   503  0049C0  6E                 	db	110
   504  0049C1  74                 	db	116
   505  0049C2  72                 	db	114
   506  0049C3  6F                 	db	111
   507  0049C4  6C                 	db	108
   508  0049C5  20                 	db	32
   509  0049C6  46                 	db	70
   510  0049C7  61                 	db	97
   511  0049C8  69                 	db	105
   512  0049C9  6C                 	db	108
   513  0049CA  20                 	db	32
   514  0049CB  20                 	db	32
   515  0049CC  00                 	db	0
   516  0049CD  00                 	db	0
   517  0049CE  00                 	db	0
   518  0049CF  0004               	dw	4
   519  0049D1  EC                 	db	low _ControlFailAlarm
   520  0049D2  A0                 	db	high _ControlFailAlarm
   521  0049D3  56                 	db	86
   522  0049D4  65                 	db	101
   523  0049D5  72                 	db	114
   524  0049D6  79                 	db	121
   525  0049D7  20                 	db	32
   526  0049D8  48                 	db	72
   527  0049D9  69                 	db	105
   528  0049DA  67                 	db	103
   529  0049DB  68                 	db	104
   530  0049DC  20                 	db	32
   531  0049DD  50                 	db	80
   532  0049DE  72                 	db	114
   533  0049DF  65                 	db	101
   534  0049E0  73                 	db	115
   535  0049E1  00                 	db	0
   536  0049E2  00                 	db	0
   537  0049E3  00                 	db	0
   538  0049E4  0004               	dw	4
   539  0049E6  BE                 	db	low _VeryHighPressureAlarmHigh
   540  0049E7  A6                 	db	high _VeryHighPressureAlarmHigh
   541  0049E8  48                 	db	72
   542  0049E9  69                 	db	105
   543  0049EA  67                 	db	103
   544  0049EB  68                 	db	104
   545  0049EC  20                 	db	32
   546  0049ED  50                 	db	80
   547  0049EE  72                 	db	114
   548  0049EF  65                 	db	101
   549  0049F0  73                 	db	115
   550  0049F1  73                 	db	115
   551  0049F2  75                 	db	117
   552  0049F3  72                 	db	114
   553  0049F4  65                 	db	101
   554  0049F5  20                 	db	32
   555  0049F6  00                 	db	0
   556  0049F7  00                 	db	0
   557  0049F8  00                 	db	0
   558  0049F9  0004               	dw	4
   559  0049FB  B6                 	db	low _HighPressureAlarmHigh
   560  0049FC  A6                 	db	high _HighPressureAlarmHigh
   561  0049FD  48                 	db	72
   562  0049FE  69                 	db	105
   563  0049FF  67                 	db	103
   564  004A00  68                 	db	104
   565  004A01  20                 	db	32
   566  004A02  50                 	db	80
   567  004A03  72                 	db	114
   568  004A04  65                 	db	101
   569  004A05  73                 	db	115
   570  004A06  73                 	db	115
   571  004A07  75                 	db	117
   572  004A08  72                 	db	114
   573  004A09  65                 	db	101
   574  004A0A  20                 	db	32
   575  004A0B  00                 	db	0
   576  004A0C  00                 	db	0
   577  004A0D  00                 	db	0
   578  004A0E  0001               	dw	1
   579  004A10  8A                 	db	low _HighPressureAlarmLow
   580  004A11  81                 	db	high _HighPressureAlarmLow
   581  004A12  43                 	db	67
   582  004A13  69                 	db	105
   583  004A14  72                 	db	114
   584  004A15  63                 	db	99
   585  004A16  75                 	db	117
   586  004A17  69                 	db	105
   587  004A18  74                 	db	116
   588  004A19  20                 	db	32
   589  004A1A  46                 	db	70
   590  004A1B  61                 	db	97
   591  004A1C  69                 	db	105
   592  004A1D  6C                 	db	108
   593  004A1E  20                 	db	32
   594  004A1F  20                 	db	32
   595  004A20  00                 	db	0
   596  004A21  00                 	db	0
   597  004A22  00                 	db	0
   598  004A23  0004               	dw	4
   599  004A25  B2                 	db	low _CircuitFailureAlarm
   600  004A26  A6                 	db	high _CircuitFailureAlarm
   601  004A27  47                 	db	71
   602  004A28  61                 	db	97
   603  004A29  73                 	db	115
   604  004A2A  20                 	db	32
   605  004A2B  46                 	db	70
   606  004A2C  61                 	db	97
   607  004A2D  69                 	db	105
   608  004A2E  6C                 	db	108
   609  004A2F  75                 	db	117
   610  004A30  72                 	db	114
   611  004A31  65                 	db	101
   612  004A32  20                 	db	32
   613  004A33  20                 	db	32
   614  004A34  20                 	db	32
   615  004A35  00                 	db	0
   616  004A36  00                 	db	0
   617  004A37  00                 	db	0
   618  004A38  0004               	dw	4
   619  004A3A  BA                 	db	low _GasFailureAlarm
   620  004A3B  A6                 	db	high _GasFailureAlarm
   621  004A3C  42                 	db	66
   622  004A3D  61                 	db	97
   623  004A3E  74                 	db	116
   624  004A3F  74                 	db	116
   625  004A40  65                 	db	101
   626  004A41  72                 	db	114
   627  004A42  79                 	db	121
   628  004A43  20                 	db	32
   629  004A44  4C                 	db	76
   630  004A45  6F                 	db	111
   631  004A46  77                 	db	119
   632  004A47  20                 	db	32
   633  004A48  20                 	db	32
   634  004A49  20                 	db	32
   635  004A4A  00                 	db	0
   636  004A4B  00                 	db	0
   637  004A4C  00                 	db	0
   638  004A4D  0002               	dw	2
   639  004A4F  AE                 	db	low _BaterryLowAlarmMed
   640  004A50  A6                 	db	high _BaterryLowAlarmMed
   641  004A51  42                 	db	66
   642  004A52  61                 	db	97
   643  004A53  74                 	db	116
   644  004A54  74                 	db	116
   645  004A55  65                 	db	101
   646  004A56  72                 	db	114
   647  004A57  79                 	db	121
   648  004A58  20                 	db	32
   649  004A59  4C                 	db	76
   650  004A5A  6F                 	db	111
   651  004A5B  77                 	db	119
   652  004A5C  20                 	db	32
   653  004A5D  20                 	db	32
   654  004A5E  20                 	db	32
   655  004A5F  00                 	db	0
   656  004A60  00                 	db	0
   657  004A61  00                 	db	0
   658  004A62  0004               	dw	4
   659  004A64  AA                 	db	low _BaterryLowAlarmHigh
   660  004A65  A6                 	db	high _BaterryLowAlarmHigh
   661  004A66  45                 	db	69
   662  004A67  50                 	db	80
   663  004A68  20                 	db	32
   664  004A69  42                 	db	66
   665  004A6A  65                 	db	101
   666  004A6B  6C                 	db	108
   667  004A6C  6F                 	db	111
   668  004A6D  77                 	db	119
   669  004A6E  20                 	db	32
   670  004A6F  53                 	db	83
   671  004A70  65                 	db	101
   672  004A71  74                 	db	116
   673  004A72  20                 	db	32
   674  004A73  20                 	db	32
   675  004A74  00                 	db	0
   676  004A75  00                 	db	0
   677  004A76  00                 	db	0
   678  004A77  0002               	dw	2
   679  004A79  B2                 	db	low _EPBelowSetAlarm
   680  004A7A  9F                 	db	high _EPBelowSetAlarm
   681  004A7B  45                 	db	69
   682  004A7C  50                 	db	80
   683  004A7D  20                 	db	32
   684  004A7E  41                 	db	65
   685  004A7F  62                 	db	98
   686  004A80  6F                 	db	111
   687  004A81  76                 	db	118
   688  004A82  65                 	db	101
   689  004A83  20                 	db	32
   690  004A84  53                 	db	83
   691  004A85  65                 	db	101
   692  004A86  74                 	db	116
   693  004A87  20                 	db	32
   694  004A88  20                 	db	32
   695  004A89  00                 	db	0
   696  004A8A  00                 	db	0
   697  004A8B  00                 	db	0
   698  004A8C  0002               	dw	2
   699  004A8E  98                 	db	low _EPAboveSetAlarm
   700  004A8F  9F                 	db	high _EPAboveSetAlarm
   701  004A90  49                 	db	73
   702  004A91  50                 	db	80
   703  004A92  20                 	db	32
   704  004A93  42                 	db	66
   705  004A94  65                 	db	101
   706  004A95  6C                 	db	108
   707  004A96  6F                 	db	111
   708  004A97  77                 	db	119
   709  004A98  20                 	db	32
   710  004A99  53                 	db	83
   711  004A9A  65                 	db	101
   712  004A9B  74                 	db	116
   713  004A9C  20                 	db	32
   714  004A9D  20                 	db	32
   715  004A9E  00                 	db	0
   716  004A9F  00                 	db	0
   717  004AA0  00                 	db	0
   718  004AA1  0002               	dw	2
   719  004AA3  7E                 	db	low _IPBelowSetAlarm
   720  004AA4  9F                 	db	high _IPBelowSetAlarm
   721  004AA5  49                 	db	73
   722  004AA6  50                 	db	80
   723  004AA7  20                 	db	32
   724  004AA8  41                 	db	65
   725  004AA9  62                 	db	98
   726  004AAA  6F                 	db	111
   727  004AAB  76                 	db	118
   728  004AAC  65                 	db	101
   729  004AAD  20                 	db	32
   730  004AAE  53                 	db	83
   731  004AAF  65                 	db	101
   732  004AB0  74                 	db	116
   733  004AB1  20                 	db	32
   734  004AB2  20                 	db	32
   735  004AB3  00                 	db	0
   736  004AB4  00                 	db	0
   737  004AB5  00                 	db	0
   738  004AB6  0002               	dw	2
   739  004AB8  64                 	db	low _IPAboveSetAlarm
   740  004AB9  9F                 	db	high _IPAboveSetAlarm
   741  004ABA  54                 	db	84
   742  004ABB  64                 	db	100
   743  004ABC  69                 	db	105
   744  004ABD  20                 	db	32
   745  004ABE  74                 	db	116
   746  004ABF  6F                 	db	111
   747  004AC0  6F                 	db	111
   748  004AC1  20                 	db	32
   749  004AC2  6C                 	db	108
   750  004AC3  6F                 	db	111
   751  004AC4  6E                 	db	110
   752  004AC5  67                 	db	103
   753  004AC6  20                 	db	32
   754  004AC7  20                 	db	32
   755  004AC8  00                 	db	0
   756  004AC9  00                 	db	0
   757  004ACA  00                 	db	0
   758  004ACB  0002               	dw	2
   759  004ACD  A6                 	db	low _TdiTooLongAlarm
   760  004ACE  A6                 	db	high _TdiTooLongAlarm
   761  004ACF  54                 	db	84
   762  004AD0  64                 	db	100
   763  004AD1  65                 	db	101
   764  004AD2  20                 	db	32
   765  004AD3  74                 	db	116
   766  004AD4  6F                 	db	111
   767  004AD5  6F                 	db	111
   768  004AD6  20                 	db	32
   769  004AD7  6C                 	db	108
   770  004AD8  6F                 	db	111
   771  004AD9  6E                 	db	110
   772  004ADA  67                 	db	103
   773  004ADB  20                 	db	32
   774  004ADC  20                 	db	32
   775  004ADD  00                 	db	0
   776  004ADE  00                 	db	0
   777  004ADF  00                 	db	0
   778  004AE0  0002               	dw	2
   779  004AE2  A2                 	db	low _TdeTooLongAlarm
   780  004AE3  A6                 	db	high _TdeTooLongAlarm
   781  004AE4  4F                 	db	79
   782  004AE5  76                 	db	118
   783  004AE6  65                 	db	101
   784  004AE7  72                 	db	114
   785  004AE8  20                 	db	32
   786  004AE9  4D                 	db	77
   787  004AEA  61                 	db	97
   788  004AEB  78                 	db	120
   789  004AEC  20                 	db	32
   790  004AED  56                 	db	86
   791  004AEE  6F                 	db	111
   792  004AEF  6C                 	db	108
   793  004AF0  20                 	db	32
   794  004AF1  20                 	db	32
   795  004AF2  00                 	db	0
   796  004AF3  00                 	db	0
   797  004AF4  00                 	db	0
   798  004AF5  0002               	dw	2
   799  004AF7  9E                 	db	low _VAboveMaxAlarm
   800  004AF8  A6                 	db	high _VAboveMaxAlarm
   801  004AF9  42                 	db	66
   802  004AFA  65                 	db	101
   803  004AFB  6C                 	db	108
   804  004AFC  6F                 	db	111
   805  004AFD  77                 	db	119
   806  004AFE  20                 	db	32
   807  004AFF  4D                 	db	77
   808  004B00  69                 	db	105
   809  004B01  6E                 	db	110
   810  004B02  20                 	db	32
   811  004B03  56                 	db	86
   812  004B04  6F                 	db	111
   813  004B05  6C                 	db	108
   814  004B06  20                 	db	32
   815  004B07  00                 	db	0
   816  004B08  00                 	db	0
   817  004B09  00                 	db	0
   818  004B0A  0002               	dw	2
   819  004B0C  9A                 	db	low _VBelowMinAlarm
   820  004B0D  A6                 	db	high _VBelowMinAlarm
   821  004B0E  4E                 	db	78
   822  004B0F  6F                 	db	111
   823  004B10  20                 	db	32
   824  004B11  50                 	db	80
   825  004B12  6F                 	db	111
   826  004B13  77                 	db	119
   827  004B14  65                 	db	101
   828  004B15  72                 	db	114
   829  004B16  20                 	db	32
   830  004B17  53                 	db	83
   831  004B18  75                 	db	117
   832  004B19  70                 	db	112
   833  004B1A  70                 	db	112
   834  004B1B  6C                 	db	108
   835  004B1C  00                 	db	0
   836  004B1D  00                 	db	0
   837  004B1E  00                 	db	0
   838  004B1F  0001               	dw	1
   839  004B21  96                 	db	low _NoPowerSupplyAlarm
   840  004B22  A6                 	db	high _NoPowerSupplyAlarm
   841                           
   842                           	psect	idataBANK1
   843  00A676                     __pidataBANK1:
   844                           	opt callstack 0
   845                           
   846                           ;initializer for _monitorSV1
   847  00A676  01                 	db	1
   848                           
   849                           ;initializer for _controlSV1
   850  00A677  01                 	db	1
   851                           
   852                           ;initializer for _batterySV1
   853  00A678  01                 	db	1
   854                           
   855                           ;initializer for _veryHighSV1
   856  00A679  01                 	db	1
   857                           
   858                           	psect	idataBANK2
   859  009F10                     __pidataBANK2:
   860                           	opt callstack 0
   861                           
   862                           ;initializer for _adcChannels
   863  009F10  04                 	db	4
   864  009F11  00                 	db	0
   865  009F12  0000               	dw	0
   866  009F14  00                 	db	0
   867  009F15  02                 	db	2
   868  009F16  00                 	db	0
   869  009F17  0000               	dw	0
   870  009F19  03                 	db	3
   871  009F1A  00                 	db	0
   872  009F1B  00                 	db	0
   873  009F1C  0000               	dw	0
   874  009F1E  00                 	db	0
   875  009F1F  05                 	db	5
   876  009F20  00                 	db	0
   877  009F21  0000               	dw	0
   878  009F23  03                 	db	3
   879                           
   880                           ;initializer for stoa@F1144
   881  009F24  28                 	db	40
   882  009F25  6E                 	db	110
   883  009F26  75                 	db	117
   884  009F27  6C                 	db	108
   885  009F28  6C                 	db	108
   886  009F29  29                 	db	41
   887  009F2A  00                 	db	0
   888                           
   889                           ;initializer for _alarmPmax
   890  009F2B  0028               	dw	40
   891                           
   892                           	psect	nvBANK2
   893  0002D9                     __pnvBANK2:
   894                           	opt callstack 0
   895  0002D9                     _TMR6_InterruptHandler:
   896                           	opt callstack 0
   897  0002D9                     	ds	2
   898  0002DB                     _TMR1_InterruptHandler:
   899                           	opt callstack 0
   900  0002DB                     	ds	2
   901  0002DD                     _timer1ReloadVal:
   902                           	opt callstack 0
   903  0002DD                     	ds	2
   904  0002DF                     _TMR0_InterruptHandler:
   905                           	opt callstack 0
   906  0002DF                     	ds	2
   907  0002E1                     _TMR5_InterruptHandler:
   908                           	opt callstack 0
   909  0002E1                     	ds	2
   910  0002E3                     _timer5ReloadVal:
   911                           	opt callstack 0
   912  0002E3                     	ds	2
   913  0002E5                     _UART1_ErrorHandler:
   914                           	opt callstack 0
   915  0002E5                     	ds	2
   916  0002E7                     _UART1_OverrunErrorHandler:
   917                           	opt callstack 0
   918  0002E7                     	ds	2
   919  0002E9                     _UART1_FramingErrorHandler:
   920                           	opt callstack 0
   921  0002E9                     	ds	2
   922  0002EB                     _uart1TxBufferRemaining:
   923                           	opt callstack 0
   924  0002EB                     	ds	2
   925  0002ED                     _TMR4_InterruptHandler:
   926                           	opt callstack 0
   927  0002ED                     	ds	2
   928  0002EF                     _UART1_TxInterruptHandler:
   929                           	opt callstack 0
   930  0002EF                     	ds	2
   931  0002F1                     _UART1_RxInterruptHandler:
   932                           	opt callstack 0
   933  0002F1                     	ds	2
   934  0002F3                     _ADCC_ADTI_InterruptHandler:
   935                           	opt callstack 0
   936  0002F3                     	ds	2
   937  0000                     _PMD7	set	14791
   938  0000                     _PMD6	set	14790
   939  0000                     _PMD5	set	14789
   940  0000                     _PMD4	set	14788
   941  0000                     _PMD3	set	14787
   942  0000                     _PMD2	set	14786
   943  0000                     _PMD1	set	14785
   944  0000                     _PMD0	set	14784
   945  0000                     _OSCTUNE	set	14814
   946  0000                     _OSCFRQ	set	14815
   947  0000                     _OSCEN	set	14813
   948  0000                     _OSCCON3	set	14811
   949  0000                     _OSCCON1	set	14809
   950  0000                     _PIR4bits	set	14756
   951  0000                     _PIE4bits	set	14740
   952  0000                     _PIR7bits	set	14759
   953  0000                     _PIE7bits	set	14743
   954  0000                     _PIR8bits	set	14760
   955  0000                     _PIE8bits	set	14744
   956  0000                     _PIR9bits	set	14761
   957  0000                     _PIE9bits	set	14745
   958  0000                     _PIR5bits	set	14757
   959  0000                     _PIE5bits	set	14741
   960  0000                     _PIR6bits	set	14758
   961  0000                     _PIE6bits	set	14742
   962  0000                     _PIR3bits	set	14755
   963  0000                     _PIE3bits	set	14739
   964  0000                     _PIE1bits	set	14737
   965  0000                     _PIR1bits	set	14753
   966  0000                     _I2C2SDAPPS	set	15076
   967  0000                     _U1RXPPS	set	15077
   968  0000                     _RD0PPS	set	14872
   969  0000                     _RB4PPS	set	14860
   970  0000                     _RC1PPS	set	14865
   971  0000                     _RB5PPS	set	14861
   972  0000                     _I2C2SCLPPS	set	15075
   973  0000                     _INLVLE	set	14980
   974  0000                     _INLVLD	set	14964
   975  0000                     _INLVLC	set	14948
   976  0000                     _INLVLB	set	14932
   977  0000                     _INLVLA	set	14916
   978  0000                     _SLRCONE	set	14979
   979  0000                     _SLRCOND	set	14963
   980  0000                     _SLRCONC	set	14947
   981  0000                     _SLRCONB	set	14931
   982  0000                     _SLRCONA	set	14915
   983  0000                     _ODCOND	set	14962
   984  0000                     _ODCONC	set	14946
   985  0000                     _ODCONB	set	14930
   986  0000                     _ODCONA	set	14914
   987  0000                     _ODCONE	set	14978
   988  0000                     _RD1I2C	set	14971
   989  0000                     _RD0I2C	set	14970
   990  0000                     _RC4I2C	set	14955
   991  0000                     _RC3I2C	set	14954
   992  0000                     _RB2I2C	set	14939
   993  0000                     _RB1I2C	set	14938
   994  0000                     _WPUC	set	14945
   995  0000                     _WPUA	set	14913
   996  0000                     _WPUB	set	14929
   997  0000                     _WPUE	set	14977
   998  0000                     _WPUD	set	14961
   999  0000                     _ANSELA	set	14912
  1000  0000                     _ANSELE	set	14976
  1001  0000                     _ANSELB	set	14928
  1002  0000                     _ANSELC	set	14944
  1003  0000                     _ANSELD	set	14960
  1004  0000                     _I2C2STAT1	set	15714
  1005  0000                     _I2C2STAT0	set	15713
  1006  0000                     _I2C2ADB0	set	15703
  1007  0000                     _I2C2RXB	set	15700
  1008  0000                     _I2C2TXB	set	15701
  1009  0000                     _I2C2PIRbits	set	15715
  1010  0000                     _I2C2ERRbits	set	15712
  1011  0000                     _I2C2PIEbits	set	15716
  1012  0000                     _I2C2ADR1	set	15706
  1013  0000                     _I2C2ADR0	set	15705
  1014  0000                     _I2C2STAT1bits	set	15714
  1015  0000                     _I2C2CON0bits	set	15709
  1016  0000                     _I2C2PIR	set	15715
  1017  0000                     _I2C2CNT	set	15702
  1018  0000                     _I2C2CON2	set	15711
  1019  0000                     _I2C2CON1	set	15710
  1020  0000                     _I2C2CON0	set	15709
  1021  0000                     _U1RXB	set	15848
  1022  0000                     _U1TXB	set	15850
  1023  0000                     _U1ERRIRbits	set	15865
  1024  0000                     _U1ERRIE	set	15866
  1025  0000                     _U1ERRIR	set	15865
  1026  0000                     _U1UIR	set	15864
  1027  0000                     _U1FIFO	set	15863
  1028  0000                     _U1BRGH	set	15862
  1029  0000                     _U1BRGL	set	15861
  1030  0000                     _U1CON2	set	15860
  1031  0000                     _U1CON1	set	15859
  1032  0000                     _U1CON0	set	15858
  1033  0000                     _U1P3H	set	15857
  1034  0000                     _U1P3L	set	15856
  1035  0000                     _U1P2H	set	15855
  1036  0000                     _U1P2L	set	15854
  1037  0000                     _U1P1H	set	15853
  1038  0000                     _U1P1L	set	15852
  1039  0000                     _CM1PCH	set	16063
  1040  0000                     _CM1NCH	set	16062
  1041  0000                     _CM1CON1	set	16061
  1042  0000                     _CM1CON0	set	16060
  1043  0000                     _FVRCON	set	16065
  1044  0000                     _ADRESL	set	16111
  1045  0000                     _ADRESH	set	16112
  1046  0000                     _ADCON0bits	set	16120
  1047  0000                     _ADCON0	set	16120
  1048  0000                     _ADCLK	set	16127
  1049  0000                     _ADACT	set	16126
  1050  0000                     _ADREF	set	16125
  1051  0000                     _ADSTAT	set	16124
  1052  0000                     _ADCON3	set	16123
  1053  0000                     _ADCON2	set	16122
  1054  0000                     _ADCON1	set	16121
  1055  0000                     _ADPREH	set	16119
  1056  0000                     _ADPREL	set	16118
  1057  0000                     _ADCAP	set	16117
  1058  0000                     _ADACQH	set	16116
  1059  0000                     _ADACQL	set	16115
  1060  0000                     _ADPCH	set	16113
  1061  0000                     _ADRPT	set	16108
  1062  0000                     _ADACCU	set	16106
  1063  0000                     _ADSTPTH	set	16101
  1064  0000                     _ADSTPTL	set	16100
  1065  0000                     _ADUTHH	set	16097
  1066  0000                     _ADUTHL	set	16096
  1067  0000                     _ADLTHH	set	16095
  1068  0000                     _ADLTHL	set	16094
  1069  0000                     _CCPTMRS1bits	set	16223
  1070  0000                     _LATAbits	set	16314
  1071  0000                     _PORTDbits	set	16333
  1072  0000                     _LATDbits	set	16317
  1073  0000                     _LATCbits	set	16316
  1074  0000                     _PCON0	set	16368
  1075  0000                     _TRISD	set	16325
  1076  0000                     _TRISC	set	16324
  1077  0000                     _TRISB	set	16323
  1078  0000                     _TRISA	set	16322
  1079  0000                     _TRISE	set	16326
  1080  0000                     _LATC	set	16316
  1081  0000                     _LATB	set	16315
  1082  0000                     _LATA	set	16314
  1083  0000                     _LATD	set	16317
  1084  0000                     _LATE	set	16318
  1085  0000                     _T6CONbits	set	16276
  1086  0000                     _T6CON	set	16276
  1087  0000                     _T6TMR	set	16274
  1088  0000                     _T6PR	set	16275
  1089  0000                     _T6RST	set	16279
  1090  0000                     _T6HLT	set	16277
  1091  0000                     _T6CLKCON	set	16278
  1092  0000                     _T1CONbits	set	16306
  1093  0000                     _T1CON	set	16306
  1094  0000                     _TMR1L	set	16304
  1095  0000                     _TMR1H	set	16305
  1096  0000                     _T1CLK	set	16309
  1097  0000                     _T1GATE	set	16308
  1098  0000                     _T1GCON	set	16307
  1099  0000                     _T0CON0bits	set	16312
  1100  0000                     _T0CON0	set	16312
  1101  0000                     _TMR0L	set	16310
  1102  0000                     _TMR0H	set	16311
  1103  0000                     _T0CON1	set	16313
  1104  0000                     _T5CONbits	set	16282
  1105  0000                     _T5CON	set	16282
  1106  0000                     _TMR5L	set	16280
  1107  0000                     _TMR5H	set	16281
  1108  0000                     _T5CLK	set	16285
  1109  0000                     _T5GATE	set	16284
  1110  0000                     _T5GCON	set	16283
  1111  0000                     _PWM6DCL	set	16232
  1112  0000                     _PWM6DCH	set	16233
  1113  0000                     _PWM6CON	set	16234
  1114  0000                     _PR4	set	16287
  1115  0000                     _T4CONbits	set	16288
  1116  0000                     _T4CON	set	16288
  1117  0000                     _T4TMR	set	16286
  1118  0000                     _T4PR	set	16287
  1119  0000                     _T4RST	set	16291
  1120  0000                     _T4HLT	set	16289
  1121  0000                     _T4CLKCON	set	16290
  1122  0000                     _T2CON	set	16300
  1123  0000                     _T2TMR	set	16298
  1124  0000                     _T2PR	set	16299
  1125  0000                     _T2RST	set	16303
  1126  0000                     _T2HLT	set	16301
  1127  0000                     _T2CLKCON	set	16302
  1128  0000                     _INTCON0bits	set	16338
  1129                           
  1130                           	psect	mediumconst
  1131  00FC56                     __pmediumconst:
  1132                           	opt callstack 0
  1133  00FC56  00                 	db	0
  1134  00FC57                     STR_33:
  1135                           
  1136                           ; BSR set to: 2
  1137  00FC57  0D                 	db	13
  1138  00FC58  0A                 	db	10
  1139  00FC59  4E                 	db	78	;'N'
  1140  00FC5A  65                 	db	101	;'e'
  1141  00FC5B  77                 	db	119	;'w'
  1142  00FC5C  20                 	db	32
  1143  00FC5D  42                 	db	66	;'B'
  1144  00FC5E  72                 	db	114	;'r'
  1145  00FC5F  65                 	db	101	;'e'
  1146  00FC60  61                 	db	97	;'a'
  1147  00FC61  74                 	db	116	;'t'
  1148  00FC62  68                 	db	104	;'h'
  1149  00FC63  3A                 	db	58	;':'
  1150  00FC64  20                 	db	32
  1151  00FC65  54                 	db	84	;'T'
  1152  00FC66  54                 	db	84	;'T'
  1153  00FC67  31                 	db	49	;'1'
  1154  00FC68  32                 	db	50	;'2'
  1155  00FC69  3A                 	db	58	;':'
  1156  00FC6A  20                 	db	32
  1157  00FC6B  25                 	db	37
  1158  00FC6C  64                 	db	100	;'d'
  1159  00FC6D  20                 	db	32
  1160  00FC6E  54                 	db	84	;'T'
  1161  00FC6F  54                 	db	84	;'T'
  1162  00FC70  32                 	db	50	;'2'
  1163  00FC71  3A                 	db	58	;':'
  1164  00FC72  20                 	db	32
  1165  00FC73  25                 	db	37
  1166  00FC74  64                 	db	100	;'d'
  1167  00FC75  20                 	db	32
  1168  00FC76  54                 	db	84	;'T'
  1169  00FC77  54                 	db	84	;'T'
  1170  00FC78  33                 	db	51	;'3'
  1171  00FC79  3A                 	db	58	;':'
  1172  00FC7A  20                 	db	32
  1173  00FC7B  25                 	db	37
  1174  00FC7C  64                 	db	100	;'d'
  1175  00FC7D  20                 	db	32
  1176  00FC7E  54                 	db	84	;'T'
  1177  00FC7F  54                 	db	84	;'T'
  1178  00FC80  33                 	db	51	;'3'
  1179  00FC81  34                 	db	52	;'4'
  1180  00FC82  3A                 	db	58	;':'
  1181  00FC83  20                 	db	32
  1182  00FC84  25                 	db	37
  1183  00FC85  64                 	db	100	;'d'
  1184  00FC86  20                 	db	32
  1185  00FC87  54                 	db	84	;'T'
  1186  00FC88  54                 	db	84	;'T'
  1187  00FC89  34                 	db	52	;'4'
  1188  00FC8A  3A                 	db	58	;':'
  1189  00FC8B  20                 	db	32
  1190  00FC8C  25                 	db	37
  1191  00FC8D  64                 	db	100	;'d'
  1192  00FC8E  20                 	db	32
  1193  00FC8F  54                 	db	84	;'T'
  1194  00FC90  54                 	db	84	;'T'
  1195  00FC91  31                 	db	49	;'1'
  1196  00FC92  3A                 	db	58	;':'
  1197  00FC93  20                 	db	32
  1198  00FC94  25                 	db	37
  1199  00FC95  64                 	db	100	;'d'
  1200  00FC96  20                 	db	32
  1201  00FC97  00                 	db	0
  1202  00FC98                     STR_41:
  1203                           
  1204                           ; BSR set to: 2
  1205  00FC98  0D                 	db	13
  1206  00FC99  0A                 	db	10
  1207  00FC9A  43                 	db	67	;'C'
  1208  00FC9B  61                 	db	97	;'a'
  1209  00FC9C  6C                 	db	108	;'l'
  1210  00FC9D  69                 	db	105	;'i'
  1211  00FC9E  62                 	db	98	;'b'
  1212  00FC9F  72                 	db	114	;'r'
  1213  00FCA0  61                 	db	97	;'a'
  1214  00FCA1  74                 	db	116	;'t'
  1215  00FCA2  65                 	db	101	;'e'
  1216  00FCA3  64                 	db	100	;'d'
  1217  00FCA4  3A                 	db	58	;':'
  1218  00FCA5  20                 	db	32
  1219  00FCA6  50                 	db	80	;'P'
  1220  00FCA7  72                 	db	114	;'r'
  1221  00FCA8  65                 	db	101	;'e'
  1222  00FCA9  73                 	db	115	;'s'
  1223  00FCAA  3A                 	db	58	;':'
  1224  00FCAB  25                 	db	37
  1225  00FCAC  64                 	db	100	;'d'
  1226  00FCAD  20                 	db	32
  1227  00FCAE  4F                 	db	79	;'O'
  1228  00FCAF  66                 	db	102	;'f'
  1229  00FCB0  66                 	db	102	;'f'
  1230  00FCB1  3A                 	db	58	;':'
  1231  00FCB2  25                 	db	37
  1232  00FCB3  64                 	db	100	;'d'
  1233  00FCB4  20                 	db	32
  1234  00FCB5  2F                 	db	47
  1235  00FCB6  2F                 	db	47
  1236  00FCB7  56                 	db	86	;'V'
  1237  00FCB8  6F                 	db	111	;'o'
  1238  00FCB9  6C                 	db	108	;'l'
  1239  00FCBA  75                 	db	117	;'u'
  1240  00FCBB  6D                 	db	109	;'m'
  1241  00FCBC  65                 	db	101	;'e'
  1242  00FCBD  20                 	db	32
  1243  00FCBE  70                 	db	112	;'p'
  1244  00FCBF  72                 	db	114	;'r'
  1245  00FCC0  65                 	db	101	;'e'
  1246  00FCC1  73                 	db	115	;'s'
  1247  00FCC2  3A                 	db	58	;':'
  1248  00FCC3  25                 	db	37
  1249  00FCC4  64                 	db	100	;'d'
  1250  00FCC5  20                 	db	32
  1251  00FCC6  4F                 	db	79	;'O'
  1252  00FCC7  66                 	db	102	;'f'
  1253  00FCC8  66                 	db	102	;'f'
  1254  00FCC9  3A                 	db	58	;':'
  1255  00FCCA  25                 	db	37
  1256  00FCCB  64                 	db	100	;'d'
  1257  00FCCC  0D                 	db	13
  1258  00FCCD  0A                 	db	10
  1259  00FCCE  00                 	db	0
  1260  00FCCF                     STR_38:
  1261                           
  1262                           ; BSR set to: 2
  1263  00FCCF  41                 	db	65	;'A'
  1264  00FCD0  44                 	db	68	;'D'
  1265  00FCD1  43                 	db	67	;'C'
  1266  00FCD2  6F                 	db	111	;'o'
  1267  00FCD3  66                 	db	102	;'f'
  1268  00FCD4  66                 	db	102	;'f'
  1269  00FCD5  73                 	db	115	;'s'
  1270  00FCD6  65                 	db	101	;'e'
  1271  00FCD7  74                 	db	116	;'t'
  1272  00FCD8  3A                 	db	58	;':'
  1273  00FCD9  20                 	db	32
  1274  00FCDA  25                 	db	37
  1275  00FCDB  64                 	db	100	;'d'
  1276  00FCDC  20                 	db	32
  1277  00FCDD  41                 	db	65	;'A'
  1278  00FCDE  44                 	db	68	;'D'
  1279  00FCDF  43                 	db	67	;'C'
  1280  00FCE0  56                 	db	86	;'V'
  1281  00FCE1  6F                 	db	111	;'o'
  1282  00FCE2  66                 	db	102	;'f'
  1283  00FCE3  66                 	db	102	;'f'
  1284  00FCE4  73                 	db	115	;'s'
  1285  00FCE5  65                 	db	101	;'e'
  1286  00FCE6  74                 	db	116	;'t'
  1287  00FCE7  3A                 	db	58	;':'
  1288  00FCE8  20                 	db	32
  1289  00FCE9  25                 	db	37
  1290  00FCEA  64                 	db	100	;'d'
  1291  00FCEB  20                 	db	32
  1292  00FCEC  31                 	db	49	;'1'
  1293  00FCED  32                 	db	50	;'2'
  1294  00FCEE  56                 	db	86	;'V'
  1295  00FCEF  3A                 	db	58	;':'
  1296  00FCF0  20                 	db	32
  1297  00FCF1  25                 	db	37
  1298  00FCF2  64                 	db	100	;'d'
  1299  00FCF3  20                 	db	32
  1300  00FCF4  6D                 	db	109	;'m'
  1301  00FCF5  56                 	db	86	;'V'
  1302  00FCF6  20                 	db	32
  1303  00FCF7  35                 	db	53	;'5'
  1304  00FCF8  56                 	db	86	;'V'
  1305  00FCF9  3A                 	db	58	;':'
  1306  00FCFA  20                 	db	32
  1307  00FCFB  25                 	db	37
  1308  00FCFC  64                 	db	100	;'d'
  1309  00FCFD  20                 	db	32
  1310  00FCFE  6D                 	db	109	;'m'
  1311  00FCFF  56                 	db	86	;'V'
  1312  00FD00  20                 	db	32
  1313  00FD01  2D                 	db	45
  1314  00FD02  2D                 	db	45
  1315  00FD03  20                 	db	32
  1316  00FD04  00                 	db	0
  1317  00FD05                     STR_40:
  1318                           
  1319                           ; BSR set to: 2
  1320  00FD05  0D                 	db	13
  1321  00FD06  0A                 	db	10
  1322  00FD07  50                 	db	80	;'P'
  1323  00FD08  72                 	db	114	;'r'
  1324  00FD09  65                 	db	101	;'e'
  1325  00FD0A  43                 	db	67	;'C'
  1326  00FD0B  61                 	db	97	;'a'
  1327  00FD0C  6C                 	db	108	;'l'
  1328  00FD0D  69                 	db	105	;'i'
  1329  00FD0E  62                 	db	98	;'b'
  1330  00FD0F  3A                 	db	58	;':'
  1331  00FD10  20                 	db	32
  1332  00FD11  50                 	db	80	;'P'
  1333  00FD12  72                 	db	114	;'r'
  1334  00FD13  65                 	db	101	;'e'
  1335  00FD14  73                 	db	115	;'s'
  1336  00FD15  3A                 	db	58	;':'
  1337  00FD16  25                 	db	37
  1338  00FD17  64                 	db	100	;'d'
  1339  00FD18  20                 	db	32
  1340  00FD19  4F                 	db	79	;'O'
  1341  00FD1A  66                 	db	102	;'f'
  1342  00FD1B  66                 	db	102	;'f'
  1343  00FD1C  3A                 	db	58	;':'
  1344  00FD1D  25                 	db	37
  1345  00FD1E  64                 	db	100	;'d'
  1346  00FD1F  20                 	db	32
  1347  00FD20  2F                 	db	47
  1348  00FD21  2F                 	db	47
  1349  00FD22  56                 	db	86	;'V'
  1350  00FD23  6F                 	db	111	;'o'
  1351  00FD24  6C                 	db	108	;'l'
  1352  00FD25  75                 	db	117	;'u'
  1353  00FD26  6D                 	db	109	;'m'
  1354  00FD27  65                 	db	101	;'e'
  1355  00FD28  20                 	db	32
  1356  00FD29  70                 	db	112	;'p'
  1357  00FD2A  72                 	db	114	;'r'
  1358  00FD2B  65                 	db	101	;'e'
  1359  00FD2C  73                 	db	115	;'s'
  1360  00FD2D  3A                 	db	58	;':'
  1361  00FD2E  25                 	db	37
  1362  00FD2F  64                 	db	100	;'d'
  1363  00FD30  20                 	db	32
  1364  00FD31  4F                 	db	79	;'O'
  1365  00FD32  66                 	db	102	;'f'
  1366  00FD33  66                 	db	102	;'f'
  1367  00FD34  3A                 	db	58	;':'
  1368  00FD35  25                 	db	37
  1369  00FD36  64                 	db	100	;'d'
  1370  00FD37  0D                 	db	13
  1371  00FD38  0A                 	db	10
  1372  00FD39  00                 	db	0
  1373  00FD3A                     STR_4:
  1374                           
  1375                           ; BSR set to: 2
  1376  00FD3A  0D                 	db	13
  1377  00FD3B  0A                 	db	10
  1378  00FD3C  50                 	db	80	;'P'
  1379  00FD3D  52                 	db	82	;'R'
  1380  00FD3E  53                 	db	83	;'S'
  1381  00FD3F  3A                 	db	58	;':'
  1382  00FD40  20                 	db	32
  1383  00FD41  25                 	db	37
  1384  00FD42  64                 	db	100	;'d'
  1385  00FD43  20                 	db	32
  1386  00FD44  70                 	db	112	;'p'
  1387  00FD45  61                 	db	97	;'a'
  1388  00FD46  20                 	db	32
  1389  00FD47  50                 	db	80	;'P'
  1390  00FD48  52                 	db	82	;'R'
  1391  00FD49  53                 	db	83	;'S'
  1392  00FD4A  56                 	db	86	;'V'
  1393  00FD4B  3A                 	db	58	;':'
  1394  00FD4C  20                 	db	32
  1395  00FD4D  25                 	db	37
  1396  00FD4E  64                 	db	100	;'d'
  1397  00FD4F  20                 	db	32
  1398  00FD50  70                 	db	112	;'p'
  1399  00FD51  61                 	db	97	;'a'
  1400  00FD52  20                 	db	32
  1401  00FD53  31                 	db	49	;'1'
  1402  00FD54  32                 	db	50	;'2'
  1403  00FD55  56                 	db	86	;'V'
  1404  00FD56  3A                 	db	58	;':'
  1405  00FD57  20                 	db	32
  1406  00FD58  25                 	db	37
  1407  00FD59  64                 	db	100	;'d'
  1408  00FD5A  20                 	db	32
  1409  00FD5B  6D                 	db	109	;'m'
  1410  00FD5C  56                 	db	86	;'V'
  1411  00FD5D  20                 	db	32
  1412  00FD5E  35                 	db	53	;'5'
  1413  00FD5F  56                 	db	86	;'V'
  1414  00FD60  3A                 	db	58	;':'
  1415  00FD61  25                 	db	37
  1416  00FD62  64                 	db	100	;'d'
  1417  00FD63  20                 	db	32
  1418  00FD64  0D                 	db	13
  1419  00FD65  0A                 	db	10
  1420  00FD66  00                 	db	0
  1421  00FD67                     STR_39:
  1422                           
  1423                           ; BSR set to: 2
  1424  00FD67  54                 	db	84	;'T'
  1425  00FD68  61                 	db	97	;'a'
  1426  00FD69  72                 	db	114	;'r'
  1427  00FD6A  67                 	db	103	;'g'
  1428  00FD6B  65                 	db	101	;'e'
  1429  00FD6C  74                 	db	116	;'t'
  1430  00FD6D  73                 	db	115	;'s'
  1431  00FD6E  3A                 	db	58	;':'
  1432  00FD6F  20                 	db	32
  1433  00FD70  50                 	db	80	;'P'
  1434  00FD71  6D                 	db	109	;'m'
  1435  00FD72  61                 	db	97	;'a'
  1436  00FD73  78                 	db	120	;'x'
  1437  00FD74  3A                 	db	58	;':'
  1438  00FD75  20                 	db	32
  1439  00FD76  25                 	db	37
  1440  00FD77  64                 	db	100	;'d'
  1441  00FD78  20                 	db	32
  1442  00FD79  49                 	db	73	;'I'
  1443  00FD7A  50                 	db	80	;'P'
  1444  00FD7B  3A                 	db	58	;':'
  1445  00FD7C  20                 	db	32
  1446  00FD7D  25                 	db	37
  1447  00FD7E  64                 	db	100	;'d'
  1448  00FD7F  20                 	db	32
  1449  00FD80  45                 	db	69	;'E'
  1450  00FD81  50                 	db	80	;'P'
  1451  00FD82  3A                 	db	58	;':'
  1452  00FD83  20                 	db	32
  1453  00FD84  25                 	db	37
  1454  00FD85  64                 	db	100	;'d'
  1455  00FD86  20                 	db	32
  1456  00FD87  56                 	db	86	;'V'
  1457  00FD88  3A                 	db	58	;':'
  1458  00FD89  20                 	db	32
  1459  00FD8A  25                 	db	37
  1460  00FD8B  64                 	db	100	;'d'
  1461  00FD8C  2F                 	db	47
  1462  00FD8D  25                 	db	37
  1463  00FD8E  64                 	db	100	;'d'
  1464  00FD8F  0D                 	db	13
  1465  00FD90  0A                 	db	10
  1466  00FD91  00                 	db	0
  1467  00FD92                     STR_35:
  1468                           
  1469                           ; BSR set to: 2
  1470  00FD92  20                 	db	32
  1471  00FD93  20                 	db	32
  1472  00FD94  20                 	db	32
  1473  00FD95  50                 	db	80	;'P'
  1474  00FD96  6D                 	db	109	;'m'
  1475  00FD97  61                 	db	97	;'a'
  1476  00FD98  78                 	db	120	;'x'
  1477  00FD99  3A                 	db	58	;':'
  1478  00FD9A  20                 	db	32
  1479  00FD9B  25                 	db	37
  1480  00FD9C  64                 	db	100	;'d'
  1481  00FD9D  20                 	db	32
  1482  00FD9E  6C                 	db	108	;'l'
  1483  00FD9F  49                 	db	73	;'I'
  1484  00FDA0  50                 	db	80	;'P'
  1485  00FDA1  3A                 	db	58	;':'
  1486  00FDA2  20                 	db	32
  1487  00FDA3  25                 	db	37
  1488  00FDA4  64                 	db	100	;'d'
  1489  00FDA5  20                 	db	32
  1490  00FDA6  49                 	db	73	;'I'
  1491  00FDA7  50                 	db	80	;'P'
  1492  00FDA8  3A                 	db	58	;':'
  1493  00FDA9  20                 	db	32
  1494  00FDAA  25                 	db	37
  1495  00FDAB  64                 	db	100	;'d'
  1496  00FDAC  20                 	db	32
  1497  00FDAD  50                 	db	80	;'P'
  1498  00FDAE  68                 	db	104	;'h'
  1499  00FDAF  69                 	db	105	;'i'
  1500  00FDB0  67                 	db	103	;'g'
  1501  00FDB1  68                 	db	104	;'h'
  1502  00FDB2  3A                 	db	58	;':'
  1503  00FDB3  20                 	db	32
  1504  00FDB4  25                 	db	37
  1505  00FDB5  64                 	db	100	;'d'
  1506  00FDB6  20                 	db	32
  1507  00FDB7  2D                 	db	45
  1508  00FDB8  2D                 	db	45
  1509  00FDB9  20                 	db	32
  1510  00FDBA  00                 	db	0
  1511  00FDBB                     STR_37:
  1512                           
  1513                           ; BSR set to: 2
  1514  00FDBB  48                 	db	72	;'H'
  1515  00FDBC  69                 	db	105	;'i'
  1516  00FDBD  4C                 	db	76	;'L'
  1517  00FDBE  69                 	db	105	;'i'
  1518  00FDBF  6D                 	db	109	;'m'
  1519  00FDC0  69                 	db	105	;'i'
  1520  00FDC1  74                 	db	116	;'t'
  1521  00FDC2  3A                 	db	58	;':'
  1522  00FDC3  20                 	db	32
  1523  00FDC4  25                 	db	37
  1524  00FDC5  64                 	db	100	;'d'
  1525  00FDC6  20                 	db	32
  1526  00FDC7  4C                 	db	76	;'L'
  1527  00FDC8  6F                 	db	111	;'o'
  1528  00FDC9  4C                 	db	76	;'L'
  1529  00FDCA  69                 	db	105	;'i'
  1530  00FDCB  6D                 	db	109	;'m'
  1531  00FDCC  69                 	db	105	;'i'
  1532  00FDCD  74                 	db	116	;'t'
  1533  00FDCE  3A                 	db	58	;':'
  1534  00FDCF  20                 	db	32
  1535  00FDD0  25                 	db	37
  1536  00FDD1  64                 	db	100	;'d'
  1537  00FDD2  20                 	db	32
  1538  00FDD3  2D                 	db	45
  1539  00FDD4  2D                 	db	45
  1540  00FDD5  20                 	db	32
  1541  00FDD6  56                 	db	86	;'V'
  1542  00FDD7  6F                 	db	111	;'o'
  1543  00FDD8  6C                 	db	108	;'l'
  1544  00FDD9  75                 	db	117	;'u'
  1545  00FDDA  6D                 	db	109	;'m'
  1546  00FDDB  65                 	db	101	;'e'
  1547  00FDDC  3A                 	db	58	;':'
  1548  00FDDD  20                 	db	32
  1549  00FDDE  25                 	db	37
  1550  00FDDF  64                 	db	100	;'d'
  1551  00FDE0  0D                 	db	13
  1552  00FDE1  0A                 	db	10
  1553  00FDE2  00                 	db	0
  1554  00FDE3                     STR_36:
  1555                           
  1556                           ; BSR set to: 2
  1557  00FDE3  50                 	db	80	;'P'
  1558  00FDE4  6D                 	db	109	;'m'
  1559  00FDE5  69                 	db	105	;'i'
  1560  00FDE6  6E                 	db	110	;'n'
  1561  00FDE7  3A                 	db	58	;':'
  1562  00FDE8  20                 	db	32
  1563  00FDE9  25                 	db	37
  1564  00FDEA  64                 	db	100	;'d'
  1565  00FDEB  20                 	db	32
  1566  00FDEC  6C                 	db	108	;'l'
  1567  00FDED  45                 	db	69	;'E'
  1568  00FDEE  50                 	db	80	;'P'
  1569  00FDEF  3A                 	db	58	;':'
  1570  00FDF0  20                 	db	32
  1571  00FDF1  25                 	db	37
  1572  00FDF2  64                 	db	100	;'d'
  1573  00FDF3  20                 	db	32
  1574  00FDF4  45                 	db	69	;'E'
  1575  00FDF5  50                 	db	80	;'P'
  1576  00FDF6  3A                 	db	58	;':'
  1577  00FDF7  20                 	db	32
  1578  00FDF8  25                 	db	37
  1579  00FDF9  64                 	db	100	;'d'
  1580  00FDFA  20                 	db	32
  1581  00FDFB  50                 	db	80	;'P'
  1582  00FDFC  6C                 	db	108	;'l'
  1583  00FDFD  6F                 	db	111	;'o'
  1584  00FDFE  77                 	db	119	;'w'
  1585  00FDFF  3A                 	db	58	;':'
  1586  00FE00  25                 	db	37
  1587  00FE01  64                 	db	100	;'d'
  1588  00FE02  20                 	db	32
  1589  00FE03  2D                 	db	45
  1590  00FE04  2D                 	db	45
  1591  00FE05  20                 	db	32
  1592  00FE06  00                 	db	0
  1593  00FE07                     STR_51:
  1594                           
  1595                           ; BSR set to: 2
  1596  00FE07  0D                 	db	13
  1597  00FE08  0A                 	db	10
  1598  00FE09  20                 	db	32
  1599  00FE0A  43                 	db	67	;'C'
  1600  00FE0B  6F                 	db	111	;'o'
  1601  00FE0C  6E                 	db	110	;'n'
  1602  00FE0D  74                 	db	116	;'t'
  1603  00FE0E  72                 	db	114	;'r'
  1604  00FE0F  6F                 	db	111	;'o'
  1605  00FE10  6C                 	db	108	;'l'
  1606  00FE11  6C                 	db	108	;'l'
  1607  00FE12  65                 	db	101	;'e'
  1608  00FE13  72                 	db	114	;'r'
  1609  00FE14  20                 	db	32
  1610  00FE15  62                 	db	98	;'b'
  1611  00FE16  75                 	db	117	;'u'
  1612  00FE17  7A                 	db	122	;'z'
  1613  00FE18  7A                 	db	122	;'z'
  1614  00FE19  65                 	db	101	;'e'
  1615  00FE1A  72                 	db	114	;'r'
  1616  00FE1B  20                 	db	32
  1617  00FE1C  64                 	db	100	;'d'
  1618  00FE1D  65                 	db	101	;'e'
  1619  00FE1E  74                 	db	116	;'t'
  1620  00FE1F  65                 	db	101	;'e'
  1621  00FE20  63                 	db	99	;'c'
  1622  00FE21  74                 	db	116	;'t'
  1623  00FE22  65                 	db	101	;'e'
  1624  00FE23  64                 	db	100	;'d'
  1625  00FE24  0D                 	db	13
  1626  00FE25  0A                 	db	10
  1627  00FE26  00                 	db	0
  1628  00FE27                     STR_50:
  1629                           
  1630                           ; BSR set to: 2
  1631  00FE27  0D                 	db	13
  1632  00FE28  0A                 	db	10
  1633  00FE29  20                 	db	32
  1634  00FE2A  45                 	db	69	;'E'
  1635  00FE2B  72                 	db	114	;'r'
  1636  00FE2C  72                 	db	114	;'r'
  1637  00FE2D  6F                 	db	111	;'o'
  1638  00FE2E  72                 	db	114	;'r'
  1639  00FE2F  20                 	db	32
  1640  00FE30  69                 	db	105	;'i'
  1641  00FE31  6E                 	db	110	;'n'
  1642  00FE32  20                 	db	32
  1643  00FE33  43                 	db	67	;'C'
  1644  00FE34  6F                 	db	111	;'o'
  1645  00FE35  6E                 	db	110	;'n'
  1646  00FE36  74                 	db	116	;'t'
  1647  00FE37  72                 	db	114	;'r'
  1648  00FE38  6F                 	db	111	;'o'
  1649  00FE39  6C                 	db	108	;'l'
  1650  00FE3A  6C                 	db	108	;'l'
  1651  00FE3B  65                 	db	101	;'e'
  1652  00FE3C  72                 	db	114	;'r'
  1653  00FE3D  20                 	db	32
  1654  00FE3E  62                 	db	98	;'b'
  1655  00FE3F  75                 	db	117	;'u'
  1656  00FE40  7A                 	db	122	;'z'
  1657  00FE41  7A                 	db	122	;'z'
  1658  00FE42  65                 	db	101	;'e'
  1659  00FE43  72                 	db	114	;'r'
  1660  00FE44  0D                 	db	13
  1661  00FE45  0A                 	db	10
  1662  00FE46  00                 	db	0
  1663  00FE47                     STR_34:
  1664                           
  1665                           ; BSR set to: 2
  1666  00FE47  54                 	db	84	;'T'
  1667  00FE48  49                 	db	73	;'I'
  1668  00FE49  3A                 	db	58	;':'
  1669  00FE4A  20                 	db	32
  1670  00FE4B  25                 	db	37
  1671  00FE4C  64                 	db	100	;'d'
  1672  00FE4D  20                 	db	32
  1673  00FE4E  54                 	db	84	;'T'
  1674  00FE4F  45                 	db	69	;'E'
  1675  00FE50  3A                 	db	58	;':'
  1676  00FE51  20                 	db	32
  1677  00FE52  25                 	db	37
  1678  00FE53  64                 	db	100	;'d'
  1679  00FE54  20                 	db	32
  1680  00FE55  54                 	db	84	;'T'
  1681  00FE56  44                 	db	68	;'D'
  1682  00FE57  49                 	db	73	;'I'
  1683  00FE58  3A                 	db	58	;':'
  1684  00FE59  20                 	db	32
  1685  00FE5A  25                 	db	37
  1686  00FE5B  64                 	db	100	;'d'
  1687  00FE5C  20                 	db	32
  1688  00FE5D  54                 	db	84	;'T'
  1689  00FE5E  44                 	db	68	;'D'
  1690  00FE5F  45                 	db	69	;'E'
  1691  00FE60  3A                 	db	58	;':'
  1692  00FE61  20                 	db	32
  1693  00FE62  25                 	db	37
  1694  00FE63  64                 	db	100	;'d'
  1695  00FE64  0D                 	db	13
  1696  00FE65  0A                 	db	10
  1697  00FE66  00                 	db	0
  1698  00FE67                     STR_10:
  1699                           
  1700                           ; BSR set to: 2
  1701  00FE67  25                 	db	37
  1702  00FE68  32                 	db	50	;'2'
  1703  00FE69  64                 	db	100	;'d'
  1704  00FE6A  25                 	db	37
  1705  00FE6B  25                 	db	37
  1706  00FE6C  20                 	db	32
  1707  00FE6D  25                 	db	37
  1708  00FE6E  64                 	db	100	;'d'
  1709  00FE6F  2E                 	db	46
  1710  00FE70  25                 	db	37
  1711  00FE71  30                 	db	48	;'0'
  1712  00FE72  32                 	db	50	;'2'
  1713  00FE73  64                 	db	100	;'d'
  1714  00FE74  20                 	db	32
  1715  00FE75  25                 	db	37
  1716  00FE76  64                 	db	100	;'d'
  1717  00FE77  2E                 	db	46
  1718  00FE78  25                 	db	37
  1719  00FE79  30                 	db	48	;'0'
  1720  00FE7A  32                 	db	50	;'2'
  1721  00FE7B  64                 	db	100	;'d'
  1722  00FE7C  25                 	db	37
  1723  00FE7D  63                 	db	99	;'c'
  1724  00FE7E  25                 	db	37
  1725  00FE7F  73                 	db	115	;'s'
  1726  00FE80  00                 	db	0
  1727  00FE81                     STR_12:
  1728                           
  1729                           ; BSR set to: 2
  1730  00FE81  25                 	db	37
  1731  00FE82  31                 	db	49	;'1'
  1732  00FE83  64                 	db	100	;'d'
  1733  00FE84  25                 	db	37
  1734  00FE85  31                 	db	49	;'1'
  1735  00FE86  64                 	db	100	;'d'
  1736  00FE87  20                 	db	32
  1737  00FE88  25                 	db	37
  1738  00FE89  32                 	db	50	;'2'
  1739  00FE8A  64                 	db	100	;'d'
  1740  00FE8B  20                 	db	32
  1741  00FE8C  25                 	db	37
  1742  00FE8D  32                 	db	50	;'2'
  1743  00FE8E  64                 	db	100	;'d'
  1744  00FE8F  20                 	db	32
  1745  00FE90  25                 	db	37
  1746  00FE91  32                 	db	50	;'2'
  1747  00FE92  64                 	db	100	;'d'
  1748  00FE93  20                 	db	32
  1749  00FE94  25                 	db	37
  1750  00FE95  34                 	db	52	;'4'
  1751  00FE96  64                 	db	100	;'d'
  1752  00FE97  00                 	db	0
  1753  00FE98                     STR_14:
  1754                           
  1755                           ; BSR set to: 2
  1756  00FE98  0D                 	db	13
  1757  00FE99  0A                 	db	10
  1758  00FE9A  44                 	db	68	;'D'
  1759  00FE9B  49                 	db	73	;'I'
  1760  00FE9C  53                 	db	83	;'S'
  1761  00FE9D  20                 	db	32
  1762  00FE9E  53                 	db	83	;'S'
  1763  00FE9F  56                 	db	86	;'V'
  1764  00FEA0  31                 	db	49	;'1'
  1765  00FEA1  20                 	db	32
  1766  00FEA2  41                 	db	65	;'A'
  1767  00FEA3  4C                 	db	76	;'L'
  1768  00FEA4  41                 	db	65	;'A'
  1769  00FEA5  52                 	db	82	;'R'
  1770  00FEA6  4D                 	db	77	;'M'
  1771  00FEA7  21                 	db	33
  1772  00FEA8  0D                 	db	13
  1773  00FEA9  0A                 	db	10
  1774  00FEAA  00                 	db	0
  1775  00FEAB                     STR_22:
  1776                           
  1777                           ; BSR set to: 2
  1778  00FEAB  0D                 	db	13
  1779  00FEAC  0A                 	db	10
  1780  00FEAD  46                 	db	70	;'F'
  1781  00FEAE  61                 	db	97	;'a'
  1782  00FEAF  69                 	db	105	;'i'
  1783  00FEB0  6C                 	db	108	;'l'
  1784  00FEB1  20                 	db	32
  1785  00FEB2  35                 	db	53	;'5'
  1786  00FEB3  56                 	db	86	;'V'
  1787  00FEB4  20                 	db	32
  1788  00FEB5  3A                 	db	58	;':'
  1789  00FEB6  20                 	db	32
  1790  00FEB7  25                 	db	37
  1791  00FEB8  64                 	db	100	;'d'
  1792  00FEB9  20                 	db	32
  1793  00FEBA  0D                 	db	13
  1794  00FEBB  0A                 	db	10
  1795  00FEBC  00                 	db	0
  1796  00FEBD                     STR_9:
  1797                           
  1798                           ; BSR set to: 2
  1799  00FEBD  56                 	db	86	;'V'
  1800  00FEBE  65                 	db	101	;'e'
  1801  00FEBF  6E                 	db	110	;'n'
  1802  00FEC0  74                 	db	116	;'t'
  1803  00FEC1  69                 	db	105	;'i'
  1804  00FEC2  6C                 	db	108	;'l'
  1805  00FEC3  61                 	db	97	;'a'
  1806  00FEC4  74                 	db	116	;'t'
  1807  00FEC5  6F                 	db	111	;'o'
  1808  00FEC6  72                 	db	114	;'r'
  1809  00FEC7  20                 	db	32
  1810  00FEC8  76                 	db	118	;'v'
  1811  00FEC9  31                 	db	49	;'1'
  1812  00FECA  2E                 	db	46
  1813  00FECB  30                 	db	48	;'0'
  1814  00FECC  20                 	db	32
  1815  00FECD  00                 	db	0
  1816  00FECE                     STR_8:
  1817                           
  1818                           ; BSR set to: 2
  1819  00FECE  4F                 	db	79	;'O'
  1820  00FECF  78                 	db	120	;'x'
  1821  00FED0  79                 	db	121	;'y'
  1822  00FED1  56                 	db	86	;'V'
  1823  00FED2  69                 	db	105	;'i'
  1824  00FED3  74                 	db	116	;'t'
  1825  00FED4  61                 	db	97	;'a'
  1826  00FED5  45                 	db	69	;'E'
  1827  00FED6  6D                 	db	109	;'m'
  1828  00FED7  65                 	db	101	;'e'
  1829  00FED8  72                 	db	114	;'r'
  1830  00FED9  67                 	db	103	;'g'
  1831  00FEDA  65                 	db	101	;'e'
  1832  00FEDB  6E                 	db	110	;'n'
  1833  00FEDC  63                 	db	99	;'c'
  1834  00FEDD  79                 	db	121	;'y'
  1835  00FEDE  00                 	db	0
  1836  00FEDF                     STR_6:
  1837                           
  1838                           ; BSR set to: 2
  1839  00FEDF  20                 	db	32
  1840  00FEE0  20                 	db	32
  1841  00FEE1  20                 	db	32
  1842  00FEE2  20                 	db	32
  1843  00FEE3  4F                 	db	79	;'O'
  1844  00FEE4  78                 	db	120	;'x'
  1845  00FEE5  79                 	db	121	;'y'
  1846  00FEE6  56                 	db	86	;'V'
  1847  00FEE7  69                 	db	105	;'i'
  1848  00FEE8  74                 	db	116	;'t'
  1849  00FEE9  61                 	db	97	;'a'
  1850  00FEEA  20                 	db	32
  1851  00FEEB  20                 	db	32
  1852  00FEEC  20                 	db	32
  1853  00FEED  20                 	db	32
  1854  00FEEE  20                 	db	32
  1855  00FEEF  00                 	db	0
  1856  00FEF0                     STR_5:
  1857                           
  1858                           ; BSR set to: 2
  1859  00FEF0  45                 	db	69	;'E'
  1860  00FEF1  6D                 	db	109	;'m'
  1861  00FEF2  65                 	db	101	;'e'
  1862  00FEF3  72                 	db	114	;'r'
  1863  00FEF4  67                 	db	103	;'g'
  1864  00FEF5  20                 	db	32
  1865  00FEF6  52                 	db	82	;'R'
  1866  00FEF7  65                 	db	101	;'e'
  1867  00FEF8  73                 	db	115	;'s'
  1868  00FEF9  70                 	db	112	;'p'
  1869  00FEFA  69                 	db	105	;'i'
  1870  00FEFB  72                 	db	114	;'r'
  1871  00FEFC  61                 	db	97	;'a'
  1872  00FEFD  74                 	db	116	;'t'
  1873  00FEFE  6F                 	db	111	;'o'
  1874  00FEFF  72                 	db	114	;'r'
  1875  00FF00  00                 	db	0
  1876  00FF01                     STR_52:
  1877                           
  1878                           ; BSR set to: 2
  1879  00FF01  0D                 	db	13
  1880  00FF02  0A                 	db	10
  1881  00FF03  20                 	db	32
  1882  00FF04  53                 	db	83	;'S'
  1883  00FF05  4C                 	db	76	;'L'
  1884  00FF06  45                 	db	69	;'E'
  1885  00FF07  45                 	db	69	;'E'
  1886  00FF08  50                 	db	80	;'P'
  1887  00FF09  20                 	db	32
  1888  00FF0A  4D                 	db	77	;'M'
  1889  00FF0B  4F                 	db	79	;'O'
  1890  00FF0C  44                 	db	68	;'D'
  1891  00FF0D  45                 	db	69	;'E'
  1892  00FF0E  0D                 	db	13
  1893  00FF0F  0A                 	db	10
  1894  00FF10  00                 	db	0
  1895  00FF11                     STR_53:
  1896                           
  1897                           ; BSR set to: 2
  1898  00FF11  49                 	db	73	;'I'
  1899  00FF12  32                 	db	50	;'2'
  1900  00FF13  43                 	db	67	;'C'
  1901  00FF14  3A                 	db	58	;':'
  1902  00FF15  20                 	db	32
  1903  00FF16  6D                 	db	109	;'m'
  1904  00FF17  69                 	db	105	;'i'
  1905  00FF18  73                 	db	115	;'s'
  1906  00FF19  73                 	db	115	;'s'
  1907  00FF1A  20                 	db	32
  1908  00FF1B  25                 	db	37
  1909  00FF1C  64                 	db	100	;'d'
  1910  00FF1D  0D                 	db	13
  1911  00FF1E  0A                 	db	10
  1912  00FF1F  00                 	db	0
  1913  00FF20                     STR_21:
  1914                           
  1915                           ; BSR set to: 2
  1916  00FF20  46                 	db	70	;'F'
  1917  00FF21  6F                 	db	111	;'o'
  1918  00FF22  75                 	db	117	;'u'
  1919  00FF23  6E                 	db	110	;'n'
  1920  00FF24  64                 	db	100	;'d'
  1921  00FF25  20                 	db	32
  1922  00FF26  42                 	db	66	;'B'
  1923  00FF27  75                 	db	117	;'u'
  1924  00FF28  7A                 	db	122	;'z'
  1925  00FF29  7A                 	db	122	;'z'
  1926  00FF2A  65                 	db	101	;'e'
  1927  00FF2B  72                 	db	114	;'r'
  1928  00FF2C  0D                 	db	13
  1929  00FF2D  0A                 	db	10
  1930  00FF2E  00                 	db	0
  1931  00FF2F                     STR_20:
  1932                           
  1933                           ; BSR set to: 2
  1934  00FF2F  45                 	db	69	;'E'
  1935  00FF30  72                 	db	114	;'r'
  1936  00FF31  72                 	db	114	;'r'
  1937  00FF32  6F                 	db	111	;'o'
  1938  00FF33  72                 	db	114	;'r'
  1939  00FF34  20                 	db	32
  1940  00FF35  42                 	db	66	;'B'
  1941  00FF36  75                 	db	117	;'u'
  1942  00FF37  7A                 	db	122	;'z'
  1943  00FF38  7A                 	db	122	;'z'
  1944  00FF39  65                 	db	101	;'e'
  1945  00FF3A  72                 	db	114	;'r'
  1946  00FF3B  0D                 	db	13
  1947  00FF3C  0A                 	db	10
  1948  00FF3D  00                 	db	0
  1949  00FF3E                     STR_7:
  1950                           
  1951                           ; BSR set to: 2
  1952  00FF3E  43                 	db	67	;'C'
  1953  00FF3F  61                 	db	97	;'a'
  1954  00FF40  6C                 	db	108	;'l'
  1955  00FF41  3A                 	db	58	;':'
  1956  00FF42  20                 	db	32
  1957  00FF43  25                 	db	37
  1958  00FF44  34                 	db	52	;'4'
  1959  00FF45  64                 	db	100	;'d'
  1960  00FF46  20                 	db	32
  1961  00FF47  2D                 	db	45
  1962  00FF48  20                 	db	32
  1963  00FF49  25                 	db	37
  1964  00FF4A  34                 	db	52	;'4'
  1965  00FF4B  64                 	db	100	;'d'
  1966  00FF4C  00                 	db	0
  1967  00FF4D                     STR_2:
  1968                           
  1969                           ; BSR set to: 2
  1970  00FF4D  0D                 	db	13
  1971  00FF4E  0A                 	db	10
  1972  00FF4F  53                 	db	83	;'S'
  1973  00FF50  74                 	db	116	;'t'
  1974  00FF51  61                 	db	97	;'a'
  1975  00FF52  63                 	db	99	;'c'
  1976  00FF53  6B                 	db	107	;'k'
  1977  00FF54  3A                 	db	58	;':'
  1978  00FF55  25                 	db	37
  1979  00FF56  30                 	db	48	;'0'
  1980  00FF57  32                 	db	50	;'2'
  1981  00FF58  58                 	db	88	;'X'
  1982  00FF59  0D                 	db	13
  1983  00FF5A  0A                 	db	10
  1984  00FF5B  00                 	db	0
  1985  00FF5C                     STR_47:
  1986                           
  1987                           ; BSR set to: 2
  1988  00FF5C  0D                 	db	13
  1989  00FF5D  0A                 	db	10
  1990  00FF5E  41                 	db	65	;'A'
  1991  00FF5F  6C                 	db	108	;'l'
  1992  00FF60  53                 	db	83	;'S'
  1993  00FF61  56                 	db	86	;'V'
  1994  00FF62  31                 	db	49	;'1'
  1995  00FF63  3A                 	db	58	;':'
  1996  00FF64  20                 	db	32
  1997  00FF65  25                 	db	37
  1998  00FF66  64                 	db	100	;'d'
  1999  00FF67  0D                 	db	13
  2000  00FF68  0A                 	db	10
  2001  00FF69  00                 	db	0
  2002  00FF6A                     STR_49:
  2003                           
  2004                           ; BSR set to: 2
  2005  00FF6A  0D                 	db	13
  2006  00FF6B  0A                 	db	10
  2007  00FF6C  49                 	db	73	;'I'
  2008  00FF6D  4E                 	db	78	;'N'
  2009  00FF6E  49                 	db	73	;'I'
  2010  00FF6F  54                 	db	84	;'T'
  2011  00FF70  3A                 	db	58	;':'
  2012  00FF71  20                 	db	32
  2013  00FF72  25                 	db	37
  2014  00FF73  64                 	db	100	;'d'
  2015  00FF74  0D                 	db	13
  2016  00FF75  0A                 	db	10
  2017  00FF76  00                 	db	0
  2018  00FF77                     STR_1:
  2019                           
  2020                           ; BSR set to: 2
  2021  00FF77  1B                 	db	27
  2022  00FF78  63                 	db	99	;'c'
  2023  00FF79  20                 	db	32
  2024  00FF7A  4F                 	db	79	;'O'
  2025  00FF7B  78                 	db	120	;'x'
  2026  00FF7C  79                 	db	121	;'y'
  2027  00FF7D  76                 	db	118	;'v'
  2028  00FF7E  69                 	db	105	;'i'
  2029  00FF7F  74                 	db	116	;'t'
  2030  00FF80  61                 	db	97	;'a'
  2031  00FF81  0D                 	db	13
  2032  00FF82  0A                 	db	10
  2033  00FF83  00                 	db	0
  2034  00FF84                     STR_31:
  2035                           
  2036                           ; BSR set to: 2
  2037  00FF84  45                 	db	69	;'E'
  2038  00FF85  41                 	db	65	;'A'
  2039  00FF86  49                 	db	73	;'I'
  2040  00FF87  3A                 	db	58	;':'
  2041  00FF88  20                 	db	32
  2042  00FF89  25                 	db	37
  2043  00FF8A  30                 	db	48	;'0'
  2044  00FF8B  32                 	db	50	;'2'
  2045  00FF8C  58                 	db	88	;'X'
  2046  00FF8D  0D                 	db	13
  2047  00FF8E  0A                 	db	10
  2048  00FF8F  00                 	db	0
  2049  00FF90                     STR_48:
  2050                           
  2051                           ; BSR set to: 2
  2052  00FF90  0D                 	db	13
  2053  00FF91  0A                 	db	10
  2054  00FF92  53                 	db	83	;'S'
  2055  00FF93  56                 	db	86	;'V'
  2056  00FF94  31                 	db	49	;'1'
  2057  00FF95  3A                 	db	58	;':'
  2058  00FF96  20                 	db	32
  2059  00FF97  25                 	db	37
  2060  00FF98  64                 	db	100	;'d'
  2061  00FF99  0D                 	db	13
  2062  00FF9A  0A                 	db	10
  2063  00FF9B  00                 	db	0
  2064  00FF9C                     STR_19:
  2065                           
  2066                           ; BSR set to: 2
  2067  00FF9C  42                 	db	66	;'B'
  2068  00FF9D  43                 	db	67	;'C'
  2069  00FF9E  4D                 	db	77	;'M'
  2070  00FF9F  50                 	db	80	;'P'
  2071  00FFA0  48                 	db	72	;'H'
  2072  00FFA1  5F                 	db	95	;'_'
  2073  00FFA2  43                 	db	67	;'C'
  2074  00FFA3  6E                 	db	110	;'n'
  2075  00FFA4  74                 	db	116	;'t'
  2076  00FFA5  0D                 	db	13
  2077  00FFA6  0A                 	db	10
  2078  00FFA7  00                 	db	0
  2079  00FFA8                     STR_43:
  2080                           
  2081                           ; BSR set to: 2
  2082  00FFA8  20                 	db	32
  2083  00FFA9  28                 	db	40
  2084  00FFAA  45                 	db	69	;'E'
  2085  00FFAB  72                 	db	114	;'r'
  2086  00FFAC  72                 	db	114	;'r'
  2087  00FFAD  44                 	db	68	;'D'
  2088  00FFAE  52                 	db	82	;'R'
  2089  00FFAF  29                 	db	41
  2090  00FFB0  20                 	db	32
  2091  00FFB1  00                 	db	0
  2092  00FFB2                     STR_13:
  2093                           
  2094                           ; BSR set to: 2
  2095  00FFB2  25                 	db	37
  2096  00FFB3  63                 	db	99	;'c'
  2097  00FFB4  20                 	db	32
  2098  00FFB5  25                 	db	37
  2099  00FFB6  31                 	db	49	;'1'
  2100  00FFB7  34                 	db	52	;'4'
  2101  00FFB8  73                 	db	115	;'s'
  2102  00FFB9  00                 	db	0
  2103  00FFBA                     STR_23:
  2104                           
  2105                           ; BSR set to: 2
  2106  00FFBA  0D                 	db	13
  2107  00FFBB  0A                 	db	10
  2108  00FFBC  54                 	db	84	;'T'
  2109  00FFBD  41                 	db	65	;'A'
  2110  00FFBE  3A                 	db	58	;':'
  2111  00FFBF  20                 	db	32
  2112  00FFC0  00                 	db	0
  2113  00FFC1                     STR_25:
  2114                           
  2115                           ; BSR set to: 2
  2116  00FFC1  4D                 	db	77	;'M'
  2117  00FFC2  55                 	db	85	;'U'
  2118  00FFC3  54                 	db	84	;'T'
  2119  00FFC4  45                 	db	69	;'E'
  2120  00FFC5  00                 	db	0
  2121  00FFC6                     STR_15:
  2122                           
  2123                           ; BSR set to: 2
  2124  00FFC6  5F                 	db	95	;'_'
  2125  00FFC7  44                 	db	68	;'D'
  2126  00FFC8  42                 	db	66	;'B'
  2127  00FFC9  5F                 	db	95	;'_'
  2128  00FFCA  00                 	db	0
  2129  00FFCB                     STR_16:
  2130                           
  2131                           ; BSR set to: 2
  2132  00FFCB  5F                 	db	95	;'_'
  2133  00FFCC  45                 	db	69	;'E'
  2134  00FFCD  42                 	db	66	;'B'
  2135  00FFCE  5F                 	db	95	;'_'
  2136  00FFCF  00                 	db	0
  2137  00FFD0                     STR_55:
  2138                           
  2139                           ; BSR set to: 2
  2140  00FFD0  26                 	db	38
  2141  00FFD1  0D                 	db	13
  2142  00FFD2  0A                 	db	10
  2143  00FFD3  00                 	db	0
  2144  00FFD4                     STR_54:
  2145                           
  2146                           ; BSR set to: 2
  2147  00FFD4  45                 	db	69	;'E'
  2148  00FFD5  43                 	db	67	;'C'
  2149  00FFD6  20                 	db	32
  2150  00FFD7  00                 	db	0
  2151  00FFD8                     STR_42:
  2152                           
  2153                           ; BSR set to: 2
  2154  00FFD8  30                 	db	48	;'0'
  2155  00FFD9  0D                 	db	13
  2156  00FFDA  0A                 	db	10
  2157  00FFDB  00                 	db	0
  2158  00FFDC                     STR_46:
  2159                           
  2160                           ; BSR set to: 2
  2161  00FFDC  50                 	db	80	;'P'
  2162  00FFDD  0D                 	db	13
  2163  00FFDE  0A                 	db	10
  2164  00FFDF  00                 	db	0
  2165  00FFE0                     STR_45:
  2166                           
  2167                           ; BSR set to: 2
  2168  00FFE0  65                 	db	101	;'e'
  2169  00FFE1  0D                 	db	13
  2170  00FFE2  0A                 	db	10
  2171  00FFE3  00                 	db	0
  2172  00FFE4                     STR_32:
  2173                           
  2174                           ; BSR set to: 2
  2175  00FFE4  6F                 	db	111	;'o'
  2176  00FFE5  0D                 	db	13
  2177  00FFE6  0A                 	db	10
  2178  00FFE7  00                 	db	0
  2179  00FFE8                     STR_30:
  2180                           
  2181                           ; BSR set to: 2
  2182  00FFE8  41                 	db	65	;'A'
  2183  00FFE9  0D                 	db	13
  2184  00FFEA  0A                 	db	10
  2185  00FFEB  00                 	db	0
  2186  00FFEC                     STR_3:
  2187                           
  2188                           ; BSR set to: 2
  2189  00FFEC  6D                 	db	109	;'m'
  2190  00FFED  0D                 	db	13
  2191  00FFEE  0A                 	db	10
  2192  00FFEF  00                 	db	0
  2193  00FFF0                     STR_26:
  2194                           
  2195                           ; BSR set to: 2
  2196  00FFF0  48                 	db	72	;'H'
  2197  00FFF1  69                 	db	105	;'i'
  2198  00FFF2  00                 	db	0
  2199  00FFF3                     STR_28:
  2200                           
  2201                           ; BSR set to: 2
  2202  00FFF3  41                 	db	65	;'A'
  2203  00FFF4  6C                 	db	108	;'l'
  2204  00FFF5  00                 	db	0
  2205  00FFF6                     STR_27:
  2206                           
  2207                           ; BSR set to: 2
  2208  00FFF6  4D                 	db	77	;'M'
  2209  00FFF7  75                 	db	117	;'u'
  2210  00FFF8  00                 	db	0
  2211  00FFF9                     STR_11:
  2212                           
  2213                           ; BSR set to: 2
  2214  00FFF9  43                 	db	67	;'C'
  2215  00FFFA  61                 	db	97	;'a'
  2216  00FFFB  00                 	db	0
  2217  00FFFC                     STR_44:
  2218                           
  2219                           ; BSR set to: 2
  2220  00FFFC  3D                 	db	61	;'='
  2221  00FFFD  00                 	db	0
  2222  0000                     
  2223                           ; #config settings
  2224  00FFFE  00                 	db	0	; dummy byte at the end
  2225  0000                     
  2226                           	psect	cinit
  2227  006D48                     __pcinit:
  2228                           	opt callstack 0
  2229  006D48                     start_initialization:
  2230                           	opt callstack 0
  2231  006D48                     __initialization:
  2232                           	opt callstack 0
  2233                           
  2234                           ; Initialize objects allocated to BIGRAM (399 bytes)
  2235                           ; load TBLPTR registers with __pidataBIGRAM
  2236  006D48  0E94               	movlw	low __pidataBIGRAM
  2237  006D4A  6EF6               	movwf	tblptrl,c
  2238  006D4C  0E49               	movlw	high __pidataBIGRAM
  2239  006D4E  6EF7               	movwf	tblptrh,c
  2240  006D50  0E00               	movlw	low (__pidataBIGRAM shr (0+16))
  2241  006D52  6EF8               	movwf	tblptru,c
  2242  006D54  EE02  F114         	lfsr	0,__pdataBIGRAM
  2243  006D58  EE10 F18F          	lfsr	1,399
  2244  006D5C                     copy_data0:
  2245  006D5C  0009               	tblrd		*+
  2246  006D5E  006F FFD7 FFEE     	movff	tablat,postinc0
  2247  006D64  50E5               	movf	postdec1,w,c
  2248  006D66  50E1               	movf	fsr1l,w,c
  2249  006D68  E1F9               	bnz	copy_data0
  2250  006D6A  50E2               	movf	fsr1h,w,c
  2251  006D6C  E1F7               	bnz	copy_data0
  2252                           
  2253                           ; Initialize objects allocated to BANK2 (29 bytes)
  2254                           ; load TBLPTR registers with __pidataBANK2
  2255  006D6E  0E10               	movlw	low __pidataBANK2
  2256  006D70  6EF6               	movwf	tblptrl,c
  2257  006D72  0E9F               	movlw	high __pidataBANK2
  2258  006D74  6EF7               	movwf	tblptrh,c
  2259  006D76  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  2260  006D78  6EF8               	movwf	tblptru,c
  2261  006D7A  EE00  F2BC         	lfsr	0,__pdataBANK2
  2262  006D7E  EE10 F01D          	lfsr	1,29
  2263  006D82                     copy_data1:
  2264  006D82  0009               	tblrd		*+
  2265  006D84  006F FFD7 FFEE     	movff	tablat,postinc0
  2266  006D8A  50E5               	movf	postdec1,w,c
  2267  006D8C  50E1               	movf	fsr1l,w,c
  2268  006D8E  E1F9               	bnz	copy_data1
  2269                           
  2270                           ; Initialize objects allocated to BANK1 (4 bytes)
  2271                           ; load TBLPTR registers with __pidataBANK1
  2272  006D90  0E76               	movlw	low __pidataBANK1
  2273  006D92  6EF6               	movwf	tblptrl,c
  2274  006D94  0EA6               	movlw	high __pidataBANK1
  2275  006D96  6EF7               	movwf	tblptrh,c
  2276  006D98  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  2277  006D9A  6EF8               	movwf	tblptru,c
  2278  006D9C  EE00  F1F8         	lfsr	0,__pdataBANK1
  2279  006DA0  EE10 F004          	lfsr	1,4
  2280  006DA4                     copy_data2:
  2281  006DA4  0009               	tblrd		*+
  2282  006DA6  006F FFD7 FFEE     	movff	tablat,postinc0
  2283  006DAC  50E5               	movf	postdec1,w,c
  2284  006DAE  50E1               	movf	fsr1l,w,c
  2285  006DB0  E1F9               	bnz	copy_data2
  2286                           
  2287                           ; Clear objects allocated to BIGRAM (1200 bytes)
  2288  006DB2  EE01  F064         	lfsr	0,__pbssBIGRAM
  2289  006DB6  EE11 F0B0          	lfsr	1,1200
  2290  006DBA                     clear_0:
  2291  006DBA  6AEE               	clrf	postinc0,c
  2292  006DBC  50E5               	movf	postdec1,w,c
  2293  006DBE  50E1               	movf	fsr1l,w,c
  2294  006DC0  E1FC               	bnz	clear_0
  2295  006DC2  50E2               	movf	fsr1h,w,c
  2296  006DC4  E1FA               	bnz	clear_0
  2297                           
  2298                           ; Clear objects allocated to BANK4 (100 bytes)
  2299  006DC6  EE01  F000         	lfsr	0,__pbssBANK4
  2300  006DCA  0E64               	movlw	100
  2301  006DCC                     clear_1:
  2302  006DCC  6AEE               	clrf	postinc0,c
  2303  006DCE  06E8               	decf	wreg,f,c
  2304  006DD0  E1FD               	bnz	clear_1
  2305                           
  2306                           ; Clear objects allocated to BANK3 (249 bytes)
  2307  006DD2  EE00  F300         	lfsr	0,__pbssBANK3
  2308  006DD6  0EF9               	movlw	249
  2309  006DD8                     clear_2:
  2310  006DD8  6AEE               	clrf	postinc0,c
  2311  006DDA  06E8               	decf	wreg,f,c
  2312  006DDC  E1FD               	bnz	clear_2
  2313                           
  2314                           ; Clear objects allocated to BANK2 (188 bytes)
  2315  006DDE  EE00  F200         	lfsr	0,__pbssBANK2
  2316  006DE2  0EBC               	movlw	188
  2317  006DE4                     clear_3:
  2318  006DE4  6AEE               	clrf	postinc0,c
  2319  006DE6  06E8               	decf	wreg,f,c
  2320  006DE8  E1FD               	bnz	clear_3
  2321                           
  2322                           ; Clear objects allocated to BANK1 (49 bytes)
  2323  006DEA  EE00  F1C7         	lfsr	0,__pbssBANK1
  2324  006DEE  0E31               	movlw	49
  2325  006DF0                     clear_4:
  2326  006DF0  6AEE               	clrf	postinc0,c
  2327  006DF2  06E8               	decf	wreg,f,c
  2328  006DF4  E1FD               	bnz	clear_4
  2329                           
  2330                           ; Clear objects allocated to BANK0 (56 bytes)
  2331  006DF6  EE00  F0C8         	lfsr	0,__pbssBANK0
  2332  006DFA  0E38               	movlw	56
  2333  006DFC                     clear_5:
  2334  006DFC  6AEE               	clrf	postinc0,c
  2335  006DFE  06E8               	decf	wreg,f,c
  2336  006E00  E1FD               	bnz	clear_5
  2337                           
  2338                           ;
  2339                           ; Setup IVTBASE
  2340                           ;
  2341  006E02  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  2342  006E04  6ED5               	movwf	213,c
  2343  006E06  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  2344  006E08  6ED6               	movwf	214,c
  2345  006E0A  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  2346  006E0C  6ED7               	movwf	215,c
  2347  006E0E                     end_of_initialization:
  2348                           	opt callstack 0
  2349  006E0E                     __end_of__initialization:
  2350                           	opt callstack 0
  2351  006E0E  0100               	movlb	0
  2352  006E10  EFC2  F016         	goto	_main	;jump to C main() function
  2353                           
  2354                           	psect	bssBANK0
  2355  0000C8                     __pbssBANK0:
  2356                           	opt callstack 0
  2357  0000C8                     _tt:
  2358                           	opt callstack 0
  2359  0000C8                     	ds	4
  2360  0000CC                     _cntByte:
  2361                           	opt callstack 0
  2362  0000CC                     	ds	2
  2363  0000CE                     _prSlow:
  2364                           	opt callstack 0
  2365  0000CE                     	ds	2
  2366  0000D0                     _numtde:
  2367                           	opt callstack 0
  2368  0000D0                     	ds	2
  2369  0000D2                     _numtdi:
  2370                           	opt callstack 0
  2371  0000D2                     	ds	2
  2372  0000D4                     _lrpe:
  2373                           	opt callstack 0
  2374  0000D4                     	ds	2
  2375  0000D6                     _minPressure:
  2376                           	opt callstack 0
  2377  0000D6                     	ds	2
  2378  0000D8                     _pmax:
  2379                           	opt callstack 0
  2380  0000D8                     	ds	2
  2381  0000DA                     _tt4:
  2382                           	opt callstack 0
  2383  0000DA                     	ds	2
  2384  0000DC                     _tt2:
  2385                           	opt callstack 0
  2386  0000DC                     	ds	2
  2387  0000DE                     _volume:
  2388                           	opt callstack 0
  2389  0000DE                     	ds	2
  2390  0000E0                     _displayStatus:
  2391                           	opt callstack 0
  2392  0000E0                     	ds	2
  2393  0000E2                     _ipAboveSetAlarm:
  2394                           	opt callstack 0
  2395  0000E2                     	ds	2
  2396  0000E4                     _ipBelowSetAlarm:
  2397                           	opt callstack 0
  2398  0000E4                     	ds	2
  2399  0000E6                     _epAboveSetAlarm:
  2400                           	opt callstack 0
  2401  0000E6                     	ds	2
  2402  0000E8                     _epBelowSetAlarm:
  2403                           	opt callstack 0
  2404  0000E8                     	ds	2
  2405  0000EA                     _ledCnt:
  2406                           	opt callstack 0
  2407  0000EA                     	ds	2
  2408  0000EC                     _uart1TxTail:
  2409                           	opt callstack 0
  2410  0000EC                     	ds	2
  2411  0000EE                     _I2C2_InterruptHandler:
  2412                           	opt callstack 0
  2413  0000EE                     	ds	2
  2414  0000F0                     _run:
  2415                           	opt callstack 0
  2416  0000F0                     	ds	1
  2417  0000F1                     SetSV1@last:
  2418                           	opt callstack 0
  2419  0000F1                     	ds	1
  2420  0000F2                     SetAlarmSV1@last:
  2421                           	opt callstack 0
  2422  0000F2                     	ds	1
  2423  0000F3                     _disableAlarmSV1:
  2424                           	opt callstack 0
  2425  0000F3                     	ds	1
  2426  0000F4                     _enableAlarms:
  2427                           	opt callstack 0
  2428  0000F4                     	ds	1
  2429  0000F5                     MonitorFailAlarm@monitorFailAlarm5V:
  2430                           	opt callstack 0
  2431  0000F5                     	ds	1
  2432  0000F6                     _controlFailAlarm:
  2433                           	opt callstack 0
  2434  0000F6                     	ds	1
  2435  0000F7                     _batteryFailAlarm:
  2436                           	opt callstack 0
  2437  0000F7                     	ds	1
  2438  0000F8                     _detected:
  2439                           	opt callstack 0
  2440  0000F8                     	ds	1
  2441  0000F9                     _on:
  2442                           	opt callstack 0
  2443  0000F9                     	ds	1
  2444  0000FA                     _alarmState:
  2445                           	opt callstack 0
  2446  0000FA                     	ds	1
  2447  0000FB                     _ledType:
  2448                           	opt callstack 0
  2449  0000FB                     	ds	1
  2450  0000FC                     _histButton:
  2451                           	opt callstack 0
  2452  0000FC                     	ds	1
  2453  0000FD                     _muteButton:
  2454                           	opt callstack 0
  2455  0000FD                     	ds	1
  2456  0000FE                     _enable:
  2457                           	opt callstack 0
  2458  0000FE                     	ds	1
  2459  0000FF                     _calibrate:
  2460                           	opt callstack 0
  2461  0000FF                     	ds	1
  2462                           
  2463                           	psect	bssBANK1
  2464  0001C7                     __pbssBANK1:
  2465                           	opt callstack 0
  2466  0001C7                     _width:
  2467                           	opt callstack 0
  2468  0001C7                     	ds	2
  2469  0001C9                     _prec:
  2470                           	opt callstack 0
  2471  0001C9                     	ds	2
  2472  0001CB                     _flags:
  2473                           	opt callstack 0
  2474  0001CB                     	ds	2
  2475  0001CD                     _loLimit:
  2476                           	opt callstack 0
  2477  0001CD                     	ds	2
  2478  0001CF                     _hiLimit:
  2479                           	opt callstack 0
  2480  0001CF                     	ds	2
  2481  0001D1                     _lrpi:
  2482                           	opt callstack 0
  2483  0001D1                     	ds	2
  2484  0001D3                     _pHigh:
  2485                           	opt callstack 0
  2486  0001D3                     	ds	2
  2487  0001D5                     _pe:
  2488                           	opt callstack 0
  2489  0001D5                     	ds	2
  2490  0001D7                     _pi:
  2491                           	opt callstack 0
  2492  0001D7                     	ds	2
  2493  0001D9                     _tde:
  2494                           	opt callstack 0
  2495  0001D9                     	ds	2
  2496  0001DB                     _tdi:
  2497                           	opt callstack 0
  2498  0001DB                     	ds	2
  2499  0001DD                     _tt3:
  2500                           	opt callstack 0
  2501  0001DD                     	ds	2
  2502  0001DF                     _state:
  2503                           	opt callstack 0
  2504  0001DF                     	ds	2
  2505  0001E1                     _targetLow:
  2506                           	opt callstack 0
  2507  0001E1                     	ds	2
  2508  0001E3                     _targetHigh:
  2509                           	opt callstack 0
  2510  0001E3                     	ds	2
  2511  0001E5                     _currentChannel:
  2512                           	opt callstack 0
  2513  0001E5                     	ds	2
  2514  0001E7                     _hist:
  2515                           	opt callstack 0
  2516  0001E7                     	ds	2
  2517  0001E9                     _histSec:
  2518                           	opt callstack 0
  2519  0001E9                     	ds	2
  2520  0001EB                     _muteSec:
  2521                           	opt callstack 0
  2522  0001EB                     	ds	2
  2523  0001ED                     _uart1TxHead:
  2524                           	opt callstack 0
  2525  0001ED                     	ds	2
  2526  0001EF                     _alarmStep:
  2527                           	opt callstack 0
  2528  0001EF                     	ds	1
  2529  0001F0                     _LED:
  2530                           	opt callstack 0
  2531  0001F0                     	ds	1
  2532  0001F1                     _uart1RxCount:
  2533                           	opt callstack 0
  2534  0001F1                     	ds	1
  2535  0001F2                     _uart1RxTail:
  2536                           	opt callstack 0
  2537  0001F2                     	ds	1
  2538  0001F3                     _uart1RxHead:
  2539                           	opt callstack 0
  2540  0001F3                     	ds	1
  2541  0001F4                     _adcVOffset:
  2542                           	opt callstack 0
  2543  0001F4                     	ds	2
  2544  0001F6                     _adcOffset:
  2545                           	opt callstack 0
  2546  0001F6                     	ds	2
  2547                           
  2548                           	psect	dataBANK1
  2549  0001F8                     __pdataBANK1:
  2550                           	opt callstack 0
  2551  0001F8                     _monitorSV1:
  2552                           	opt callstack 0
  2553  0001F8                     	ds	1
  2554  0001F9                     _controlSV1:
  2555                           	opt callstack 0
  2556  0001F9                     	ds	1
  2557  0001FA                     _batterySV1:
  2558                           	opt callstack 0
  2559  0001FA                     	ds	1
  2560  0001FB                     _veryHighSV1:
  2561                           	opt callstack 0
  2562  0001FB                     	ds	1
  2563                           
  2564                           	psect	bssBANK2
  2565  000200                     __pbssBANK2:
  2566                           	opt callstack 0
  2567  000200                     _msg:
  2568                           	opt callstack 0
  2569  000200                     	ds	10
  2570  00020A                     _uart1RxStatusBuffer:
  2571                           	opt callstack 0
  2572  00020A                     	ds	8
  2573  000212                     _uart1RxBuffer:
  2574                           	opt callstack 0
  2575  000212                     	ds	8
  2576  00021A                     _pLowAcc:
  2577                           	opt callstack 0
  2578  00021A                     	ds	4
  2579  00021E                     _pHighAcc:
  2580                           	opt callstack 0
  2581  00021E                     	ds	4
  2582  000222                     _volumeAcc:
  2583                           	opt callstack 0
  2584  000222                     	ds	4
  2585  000226                     main@cnt:
  2586                           	opt callstack 0
  2587  000226                     	ds	4
  2588  00022A                     _nout:
  2589                           	opt callstack 0
  2590  00022A                     	ds	2
  2591  00022C                     ControllerTimerHandler@cnt:
  2592                           	opt callstack 0
  2593  00022C                     	ds	2
  2594  00022E                     ControllerTimerHandler@errors:
  2595                           	opt callstack 0
  2596  00022E                     	ds	2
  2597  000230                     UpdateState@cnt:
  2598                           	opt callstack 0
  2599  000230                     	ds	2
  2600  000232                     _spr:
  2601                           	opt callstack 0
  2602  000232                     	ds	2
  2603  000234                     MonitorPressureTask@cnt2:
  2604                           	opt callstack 0
  2605  000234                     	ds	2
  2606  000236                     MonitorPressureTask@ecnt:
  2607                           	opt callstack 0
  2608  000236                     	ds	2
  2609  000238                     MonitorPressureTask@nt_4872:
  2610                           	opt callstack 0
  2611  000238                     	ds	2
  2612  00023A                     MonitorPressureTask@cnt:
  2613                           	opt callstack 0
  2614  00023A                     	ds	2
  2615  00023C                     	ds	2
  2616  00023E                     _prFast:
  2617                           	opt callstack 0
  2618  00023E                     	ds	2
  2619  000240                     _prSlowNumStable:
  2620                           	opt callstack 0
  2621  000240                     	ds	2
  2622  000242                     _prSlowDev:
  2623                           	opt callstack 0
  2624  000242                     	ds	2
  2625  000244                     _count:
  2626                           	opt callstack 0
  2627  000244                     	ds	2
  2628  000246                     _rpe:
  2629                           	opt callstack 0
  2630  000246                     	ds	2
  2631  000248                     _rpi:
  2632                           	opt callstack 0
  2633  000248                     	ds	2
  2634  00024A                     _numLow:
  2635                           	opt callstack 0
  2636  00024A                     	ds	2
  2637  00024C                     _numHigh:
  2638                           	opt callstack 0
  2639  00024C                     	ds	2
  2640  00024E                     _pLow:
  2641                           	opt callstack 0
  2642  00024E                     	ds	2
  2643  000250                     _alarmMaxPressure:
  2644                           	opt callstack 0
  2645  000250                     	ds	2
  2646  000252                     _maxPressure:
  2647                           	opt callstack 0
  2648  000252                     	ds	2
  2649  000254                     _pmin:
  2650                           	opt callstack 0
  2651  000254                     	ds	2
  2652  000256                     _bpm:
  2653                           	opt callstack 0
  2654  000256                     	ds	2
  2655  000258                     _te:
  2656                           	opt callstack 0
  2657  000258                     	ds	2
  2658  00025A                     _ti:
  2659                           	opt callstack 0
  2660  00025A                     	ds	2
  2661  00025C                     _ttAlarm:
  2662                           	opt callstack 0
  2663  00025C                     	ds	2
  2664  00025E                     _ttNoAlarm:
  2665                           	opt callstack 0
  2666  00025E                     	ds	2
  2667  000260                     _tt34:
  2668                           	opt callstack 0
  2669  000260                     	ds	2
  2670  000262                     _tt12:
  2671                           	opt callstack 0
  2672  000262                     	ds	2
  2673  000264                     _ttExt:
  2674                           	opt callstack 0
  2675  000264                     	ds	2
  2676  000266                     _tt1:
  2677                           	opt callstack 0
  2678  000266                     	ds	2
  2679  000268                     _volumeMin:
  2680                           	opt callstack 0
  2681  000268                     	ds	2
  2682  00026A                     _volumeMax:
  2683                           	opt callstack 0
  2684  00026A                     	ds	2
  2685  00026C                     _targetBp:
  2686                           	opt callstack 0
  2687  00026C                     	ds	2
  2688  00026E                     _targetPmax:
  2689                           	opt callstack 0
  2690  00026E                     	ds	2
  2691  000270                     AdcHandler@cnt:
  2692                           	opt callstack 0
  2693  000270                     	ds	2
  2694  000272                     AlarmHandler@cnt:
  2695                           	opt callstack 0
  2696  000272                     	ds	2
  2697  000274                     AlarmCheckTask@current:
  2698                           	opt callstack 0
  2699  000274                     	ds	2
  2700  000276                     	ds	2
  2701  000278                     HighPressureAlarmLow@count:
  2702                           	opt callstack 0
  2703  000278                     	ds	2
  2704  00027A                     MonitorFailAlarm@cnt5v:
  2705                           	opt callstack 0
  2706  00027A                     	ds	2
  2707  00027C                     BatteryFailAlarm@timeFail:
  2708                           	opt callstack 0
  2709  00027C                     	ds	2
  2710  00027E                     BatteryFailAlarm@timeBelow10:
  2711                           	opt callstack 0
  2712  00027E                     	ds	2
  2713  000280                     BatteryFailAlarm@timeBattery:
  2714                           	opt callstack 0
  2715  000280                     	ds	2
  2716  000282                     BuzzerTask@noDetections:
  2717                           	opt callstack 0
  2718  000282                     	ds	2
  2719  000284                     ButtonTask@cnt:
  2720                           	opt callstack 0
  2721  000284                     	ds	2
  2722  000286                     AlarmDisplay@cnt:
  2723                           	opt callstack 0
  2724  000286                     	ds	2
  2725  000288                     ValueDisplay@cnt:
  2726                           	opt callstack 0
  2727  000288                     	ds	2
  2728  00028A                     _CMP1_InterruptHandler:
  2729                           	opt callstack 0
  2730  00028A                     	ds	2
  2731  00028C                     _I2C2_SlaveWrColInterruptHandler:
  2732                           	opt callstack 0
  2733  00028C                     	ds	2
  2734  00028E                     _I2C2_SlaveBusColInterruptHandler:
  2735                           	opt callstack 0
  2736  00028E                     	ds	2
  2737  000290                     _I2C2_SlaveAddrInterruptHandler:
  2738                           	opt callstack 0
  2739  000290                     	ds	2
  2740  000292                     _I2C2_SlaveStopInterruptHandler:
  2741                           	opt callstack 0
  2742  000292                     	ds	2
  2743  000294                     _I2C2_SlaveWrInterruptHandler:
  2744                           	opt callstack 0
  2745  000294                     	ds	2
  2746  000296                     _I2C2_SlaveRdInterruptHandler:
  2747                           	opt callstack 0
  2748  000296                     	ds	2
  2749  000298                     UpdateState@old:
  2750                           	opt callstack 0
  2751  000298                     	ds	1
  2752  000299                     controller@volumeControl:
  2753                           	opt callstack 0
  2754  000299                     	ds	1
  2755  00029A                     _init:
  2756                           	opt callstack 0
  2757  00029A                     	ds	1
  2758  00029B                     _commandReceived:
  2759                           	opt callstack 0
  2760  00029B                     	ds	1
  2761  00029C                     MonitorPressureTask@down:
  2762                           	opt callstack 0
  2763  00029C                     	ds	1
  2764  00029D                     MonitorPressureTask@measPe:
  2765                           	opt callstack 0
  2766  00029D                     	ds	1
  2767  00029E                     MonitorPressureTask@measPi:
  2768                           	opt callstack 0
  2769  00029E                     	ds	1
  2770  00029F                     _normalSV1:
  2771                           	opt callstack 0
  2772  00029F                     	ds	1
  2773  0002A0                     _alarmSV1:
  2774                           	opt callstack 0
  2775  0002A0                     	ds	1
  2776  0002A1                     _volumeControl:
  2777                           	opt callstack 0
  2778  0002A1                     	ds	1
  2779  0002A2                     monitor@enable:
  2780                           	opt callstack 0
  2781  0002A2                     	ds	1
  2782  0002A3                     _alarmCheck:
  2783                           	opt callstack 0
  2784  0002A3                     	ds	1
  2785  0002A4                     _noPowerSupplyAlarm:
  2786                           	opt callstack 0
  2787  0002A4                     	ds	1
  2788  0002A5                     _vAboveMaxAlarm:
  2789                           	opt callstack 0
  2790  0002A5                     	ds	1
  2791  0002A6                     _vBelowMinAlarm:
  2792                           	opt callstack 0
  2793  0002A6                     	ds	1
  2794  0002A7                     _tdeTooLongAlarm:
  2795                           	opt callstack 0
  2796  0002A7                     	ds	1
  2797  0002A8                     _tdiTooLongAlarm:
  2798                           	opt callstack 0
  2799  0002A8                     	ds	1
  2800  0002A9                     _baterryLowAlarmHigh:
  2801                           	opt callstack 0
  2802  0002A9                     	ds	1
  2803  0002AA                     _baterryLowAlarmMed:
  2804                           	opt callstack 0
  2805  0002AA                     	ds	1
  2806  0002AB                     _circuitFailureAlarm:
  2807                           	opt callstack 0
  2808  0002AB                     	ds	1
  2809  0002AC                     _veryHighPressureAlarmHigh:
  2810                           	opt callstack 0
  2811  0002AC                     	ds	1
  2812  0002AD                     _highPressureAlarmHigh:
  2813                           	opt callstack 0
  2814  0002AD                     	ds	1
  2815  0002AE                     _highPressureAlarmLow:
  2816                           	opt callstack 0
  2817  0002AE                     	ds	1
  2818  0002AF                     _gasFailureAlarm:
  2819                           	opt callstack 0
  2820  0002AF                     	ds	1
  2821  0002B0                     _monitorFailAlarm:
  2822                           	opt callstack 0
  2823  0002B0                     	ds	1
  2824  0002B1                     _controllerDetected:
  2825                           	opt callstack 0
  2826  0002B1                     	ds	1
  2827  0002B2                     _checkController:
  2828                           	opt callstack 0
  2829  0002B2                     	ds	1
  2830  0002B3                     _buzzerState:
  2831                           	opt callstack 0
  2832  0002B3                     	ds	1
  2833  0002B4                     _I2C2_on:
  2834                           	opt callstack 0
  2835  0002B4                     	ds	1
  2836  0002B5                     _i2c2SlaveAddr:
  2837                           	opt callstack 0
  2838  0002B5                     	ds	1
  2839  0002B6                     _i2c2RdData:
  2840                           	opt callstack 0
  2841  0002B6                     	ds	1
  2842  0002B7                     _i2c2WrData:
  2843                           	opt callstack 0
  2844  0002B7                     	ds	1
  2845  0002B8                     _i2c2State:
  2846                           	opt callstack 0
  2847  0002B8                     	ds	1
  2848  0002B9                     _uart1RxLastError:
  2849                           	opt callstack 0
  2850  0002B9                     	ds	1
  2851  0002BA                     _bp:
  2852                           	opt callstack 0
  2853  0002BA                     	ds	2
  2854                           
  2855                           	psect	dataBANK2
  2856  0002BC                     __pdataBANK2:
  2857                           	opt callstack 0
  2858  0002BC                     _adcChannels:
  2859                           	opt callstack 0
  2860  0002BC                     	ds	20
  2861  0002D0                     stoa@F1144:
  2862                           	opt callstack 0
  2863  0002D0                     	ds	7
  2864  0002D7                     _alarmPmax:
  2865                           	opt callstack 0
  2866  0002D7                     	ds	2
  2867                           
  2868                           	psect	bssBANK3
  2869  000300                     __pbssBANK3:
  2870                           	opt callstack 0
  2871  000300                     _alarms:
  2872                           	opt callstack 0
  2873  000300                     	ds	38
  2874  000326                     _testAlarm:
  2875                           	opt callstack 0
  2876  000326                     	ds	38
  2877  00034C                     _a:
  2878                           	opt callstack 0
  2879  00034C                     	ds	21
  2880  000361                     _tdiBuffer:
  2881                           	opt callstack 0
  2882  000361                     	ds	20
  2883  000375                     _tdeBuffer:
  2884                           	opt callstack 0
  2885  000375                     	ds	20
  2886  000389                     _dbuf:
  2887                           	opt callstack 0
  2888  000389                     	ds	32
  2889  0003A9                     _msg4:
  2890                           	opt callstack 0
  2891  0003A9                     	ds	20
  2892  0003BD                     _msg3:
  2893                           	opt callstack 0
  2894  0003BD                     	ds	20
  2895  0003D1                     _msg2:
  2896                           	opt callstack 0
  2897  0003D1                     	ds	20
  2898  0003E5                     _msg1:
  2899                           	opt callstack 0
  2900  0003E5                     	ds	20
  2901                           
  2902                           	psect	bssBANK4
  2903  000400                     __pbssBANK4:
  2904                           	opt callstack 0
  2905  000400                     _prFastBuffer:
  2906                           	opt callstack 0
  2907  000400                     	ds	50
  2908  000432                     _prSlowBuffer:
  2909                           	opt callstack 0
  2910  000432                     	ds	50
  2911                           
  2912                           	psect	bssBIGRAM
  2913  000464                     __pbssBIGRAM:
  2914                           	opt callstack 0
  2915  000464                     _uart1TxBuffer:
  2916                           	opt callstack 0
  2917  000464                     	ds	1200
  2918                           
  2919                           	psect	dataBIGRAM
  2920  000914                     __pdataBIGRAM:
  2921                           	opt callstack 0
  2922  000914                     _alarmData:
  2923                           	opt callstack 0
  2924  000914                     	ds	399
  2925                           
  2926                           	psect	cstackBANK3
  2927  0003F9                     __pcstackBANK3:
  2928                           	opt callstack 0
  2929  0003F9                     main@ch:
  2930                           	opt callstack 0
  2931                           
  2932                           ; 1 bytes @ 0x0
  2933  0003F9                     	ds	1
  2934                           
  2935                           	psect	cstackBANK2
  2936  0002F5                     __pcstackBANK2:
  2937                           	opt callstack 0
  2938  0002F5                     
  2939                           ; 1 bytes @ 0x0
  2940  0002F5                     	ds	2
  2941  0002F7                     HistAlarm@i:
  2942                           	opt callstack 0
  2943  0002F7                     _AlarmCheckTask$6533:
  2944                           	opt callstack 0
  2945                           
  2946                           ; 2 bytes @ 0x2
  2947  0002F7                     	ds	2
  2948  0002F9                     _AlarmCheckTask$6537:
  2949                           	opt callstack 0
  2950                           
  2951                           ; 2 bytes @ 0x4
  2952  0002F9                     	ds	2
  2953  0002FB                     _AlarmCheckTask$4558:
  2954                           	opt callstack 0
  2955                           
  2956                           ; 1 bytes @ 0x6
  2957  0002FB                     	ds	1
  2958  0002FC                     AlarmCheckTask@type:
  2959                           	opt callstack 0
  2960                           
  2961                           ; 2 bytes @ 0x7
  2962  0002FC                     	ds	2
  2963  0002FE                     AlarmCheckTask@id:
  2964                           	opt callstack 0
  2965                           
  2966                           ; 2 bytes @ 0x9
  2967  0002FE                     	ds	2
  2968                           
  2969                           	psect	cstackBANK1
  2970  000100                     __pcstackBANK1:
  2971                           	opt callstack 0
  2972  000100                     ??_INTERRUPT_InterruptManager:
  2973                           
  2974                           ; 1 bytes @ 0x0
  2975  000100                     	ds	4
  2976  000104                     ?_strlen:
  2977                           	opt callstack 0
  2978  000104                     ?_GetTdi:
  2979                           	opt callstack 0
  2980  000104                     ?_GetTde:
  2981                           	opt callstack 0
  2982  000104                     ?_GetTi:
  2983                           	opt callstack 0
  2984  000104                     ?_GetTe:
  2985                           	opt callstack 0
  2986  000104                     ?_GetBpm:
  2987                           	opt callstack 0
  2988  000104                     ?_GetVolume:
  2989                           	opt callstack 0
  2990  000104                     ?_GetSpr:
  2991                           	opt callstack 0
  2992  000104                     ?_isupper:
  2993                           	opt callstack 0
  2994  000104                     ?_isalpha:
  2995                           	opt callstack 0
  2996  000104                     ?_isdigit:
  2997                           	opt callstack 0
  2998  000104                     ?_isspace:
  2999                           	opt callstack 0
  3000  000104                     ?_islower:
  3001                           	opt callstack 0
  3002  000104                     ?___wmul:
  3003                           	opt callstack 0
  3004  000104                     ?___awmod:
  3005                           	opt callstack 0
  3006  000104                     ?___lmul:
  3007                           	opt callstack 0
  3008  000104                     ?___llmod:
  3009                           	opt callstack 0
  3010  000104                     ?___aodiv:
  3011                           	opt callstack 0
  3012  000104                     ?___aomod:
  3013                           	opt callstack 0
  3014  000104                     ADCC_StartConversion@channel:
  3015                           	opt callstack 0
  3016  000104                     TMR4_Period8BitSet@periodVal:
  3017                           	opt callstack 0
  3018  000104                     UART1_Read@readValue:
  3019                           	opt callstack 0
  3020  000104                     UART1_Write@txData:
  3021                           	opt callstack 0
  3022  000104                     I2C2_SlaveSetSlaveAddr@slaveAddr:
  3023                           	opt callstack 0
  3024  000104                     I2C2_SlaveSetSlaveMask@maskAddr:
  3025                           	opt callstack 0
  3026  000104                     LCDWriteChar@chr:
  3027                           	opt callstack 0
  3028  000104                     LCDWrite4@chr:
  3029                           	opt callstack 0
  3030  000104                     LCDWriteCmd@data:
  3031                           	opt callstack 0
  3032  000104                     SetAlarmLED@type:
  3033                           	opt callstack 0
  3034  000104                     BuzzerOn@period:
  3035                           	opt callstack 0
  3036  000104                     AlarmSet@id:
  3037                           	opt callstack 0
  3038  000104                     AlarmClear@id:
  3039                           	opt callstack 0
  3040  000104                     ADCC_SetADTIInterruptHandler@InterruptHandler:
  3041                           	opt callstack 0
  3042  000104                     TMR4_SetInterruptHandler@InterruptHandler:
  3043                           	opt callstack 0
  3044  000104                     UART1_SetFramingErrorHandler@interruptHandler:
  3045                           	opt callstack 0
  3046  000104                     UART1_SetOverrunErrorHandler@interruptHandler:
  3047                           	opt callstack 0
  3048  000104                     UART1_SetErrorHandler@interruptHandler:
  3049                           	opt callstack 0
  3050  000104                     UART1_SetRxInterruptHandler@InterruptHandler:
  3051                           	opt callstack 0
  3052  000104                     UART1_SetTxInterruptHandler@InterruptHandler:
  3053                           	opt callstack 0
  3054  000104                     TMR5_SetInterruptHandler@InterruptHandler:
  3055                           	opt callstack 0
  3056  000104                     TMR0_SetInterruptHandler@InterruptHandler:
  3057                           	opt callstack 0
  3058  000104                     TMR1_SetInterruptHandler@InterruptHandler:
  3059                           	opt callstack 0
  3060  000104                     TMR6_SetInterruptHandler@InterruptHandler:
  3061                           	opt callstack 0
  3062  000104                     I2C2_SlaveSetIsrHandler@handler:
  3063                           	opt callstack 0
  3064  000104                     I2C2_SlaveSetReadIntHandler@handler:
  3065                           	opt callstack 0
  3066  000104                     I2C2_SlaveSetWriteIntHandler@handler:
  3067                           	opt callstack 0
  3068  000104                     I2C2_SlaveSetStopIntHandler@handler:
  3069                           	opt callstack 0
  3070  000104                     I2C2_SlaveSetAddrIntHandler@handler:
  3071                           	opt callstack 0
  3072  000104                     I2C2_SlaveSetWrColIntHandler@handler:
  3073                           	opt callstack 0
  3074  000104                     I2C2_SlaveSetBusColIntHandler@handler:
  3075                           	opt callstack 0
  3076  000104                     CMP1_SetIntHandler@handler:
  3077                           	opt callstack 0
  3078  000104                     ClearVars@i:
  3079                           	opt callstack 0
  3080  000104                     ___wmul@multiplier:
  3081                           	opt callstack 0
  3082  000104                     ___awmod@dividend:
  3083                           	opt callstack 0
  3084  000104                     isalpha@c:
  3085                           	opt callstack 0
  3086  000104                     isdigit@c:
  3087                           	opt callstack 0
  3088  000104                     isspace@c:
  3089                           	opt callstack 0
  3090  000104                     isupper@c:
  3091                           	opt callstack 0
  3092  000104                     strlen@s:
  3093                           	opt callstack 0
  3094  000104                     islower@c:
  3095                           	opt callstack 0
  3096  000104                     ___lmul@multiplier:
  3097                           	opt callstack 0
  3098  000104                     ___llmod@dividend:
  3099                           	opt callstack 0
  3100  000104                     ___aodiv@dividend:
  3101                           	opt callstack 0
  3102  000104                     ___aomod@dividend:
  3103                           	opt callstack 0
  3104                           
  3105                           ; 8 bytes @ 0x4
  3106  000104                     	ds	1
  3107  000105                     putch@txData:
  3108                           	opt callstack 0
  3109                           
  3110                           ; 1 bytes @ 0x5
  3111  000105                     	ds	1
  3112  000106                     ??_TMR5_Initialize:
  3113  000106                     ??_TMR1_Initialize:
  3114  000106                     ??_BuzzerTest:
  3115  000106                     ??_isupper:
  3116  000106                     ??_isalpha:
  3117  000106                     ??_isdigit:
  3118  000106                     ??_isspace:
  3119  000106                     ??_islower:
  3120  000106                     ?_fputc:
  3121                           	opt callstack 0
  3122  000106                     AnyAlarm@i:
  3123                           	opt callstack 0
  3124  000106                     AlarmInit@i:
  3125                           	opt callstack 0
  3126  000106                     ClearVars@i_4906:
  3127                           	opt callstack 0
  3128  000106                     ___wmul@multiplicand:
  3129                           	opt callstack 0
  3130  000106                     ___awmod@divisor:
  3131                           	opt callstack 0
  3132  000106                     fputc@c:
  3133                           	opt callstack 0
  3134  000106                     strlen@a:
  3135                           	opt callstack 0
  3136                           
  3137                           ; 2 bytes @ 0x6
  3138  000106                     	ds	2
  3139  000108                     ?_GetAlarmState:
  3140                           	opt callstack 0
  3141  000108                     BuzzerTest@note:
  3142                           	opt callstack 0
  3143  000108                     ___awmod@counter:
  3144                           	opt callstack 0
  3145  000108                     LCDMessage@str:
  3146                           	opt callstack 0
  3147  000108                     ___wmul@product:
  3148                           	opt callstack 0
  3149  000108                     fputc@fp:
  3150                           	opt callstack 0
  3151  000108                     ___lmul@multiplicand:
  3152                           	opt callstack 0
  3153  000108                     ___llmod@divisor:
  3154                           	opt callstack 0
  3155                           
  3156                           ; 4 bytes @ 0x8
  3157  000108                     	ds	1
  3158  000109                     ___awmod@sign:
  3159                           	opt callstack 0
  3160                           
  3161                           ; 1 bytes @ 0x9
  3162  000109                     	ds	1
  3163  00010A                     ??_LCDMessage:
  3164  00010A                     ??_fputc:
  3165  00010A                     ?_toupper:
  3166                           	opt callstack 0
  3167  00010A                     ?_HigherAlarm:
  3168                           	opt callstack 0
  3169  00010A                     ?_AdcSeeData:
  3170                           	opt callstack 0
  3171  00010A                     ?_AdcGetData:
  3172                           	opt callstack 0
  3173  00010A                     ?___awdiv:
  3174                           	opt callstack 0
  3175  00010A                     _isspace$5701:
  3176                           	opt callstack 0
  3177  00010A                     AdcDataReady@id:
  3178                           	opt callstack 0
  3179  00010A                     AdcSeeData@id:
  3180                           	opt callstack 0
  3181  00010A                     AdcGetData@id:
  3182                           	opt callstack 0
  3183  00010A                     ___awdiv@dividend:
  3184                           	opt callstack 0
  3185  00010A                     toupper@c:
  3186                           	opt callstack 0
  3187                           
  3188                           ; 2 bytes @ 0xA
  3189  00010A                     	ds	1
  3190  00010B                     ?_atoi:
  3191                           	opt callstack 0
  3192  00010B                     atoi@s:
  3193                           	opt callstack 0
  3194                           
  3195                           ; 2 bytes @ 0xB
  3196  00010B                     	ds	1
  3197  00010C                     ??_toupper:
  3198  00010C                     ??_HigherAlarm:
  3199  00010C                     ___llmod@counter:
  3200                           	opt callstack 0
  3201  00010C                     LCDMessage@length:
  3202                           	opt callstack 0
  3203  00010C                     AdcSeeData@data:
  3204                           	opt callstack 0
  3205  00010C                     AdcGetData@data:
  3206                           	opt callstack 0
  3207  00010C                     ___awdiv@divisor:
  3208                           	opt callstack 0
  3209  00010C                     ___lmul@product:
  3210                           	opt callstack 0
  3211  00010C                     ___aodiv@divisor:
  3212                           	opt callstack 0
  3213  00010C                     ___aomod@divisor:
  3214                           	opt callstack 0
  3215                           
  3216                           ; 8 bytes @ 0xC
  3217  00010C                     	ds	1
  3218  00010D                     ??_atoi:
  3219                           
  3220                           ; 1 bytes @ 0xD
  3221  00010D                     	ds	1
  3222  00010E                     ___awdiv@counter:
  3223                           	opt callstack 0
  3224  00010E                     LCDMessage@i:
  3225                           	opt callstack 0
  3226                           
  3227                           ; 2 bytes @ 0xE
  3228  00010E                     	ds	1
  3229  00010F                     ?_stoa:
  3230                           	opt callstack 0
  3231  00010F                     ___awdiv@sign:
  3232                           	opt callstack 0
  3233  00010F                     stoa@fp:
  3234                           	opt callstack 0
  3235  00010F                     fputs@s:
  3236                           	opt callstack 0
  3237  00010F                     putchar@c:
  3238                           	opt callstack 0
  3239                           
  3240                           ; 2 bytes @ 0xF
  3241  00010F                     	ds	1
  3242  000110                     ?___aldiv:
  3243                           	opt callstack 0
  3244  000110                     LCDMessage1@str:
  3245                           	opt callstack 0
  3246  000110                     LCDMessage12@str1:
  3247                           	opt callstack 0
  3248  000110                     LCDMessage2@str:
  3249                           	opt callstack 0
  3250  000110                     ___awdiv@quotient:
  3251                           	opt callstack 0
  3252  000110                     _toupper$5789:
  3253                           	opt callstack 0
  3254  000110                     ___aldiv@dividend:
  3255                           	opt callstack 0
  3256                           
  3257                           ; 4 bytes @ 0x10
  3258  000110                     	ds	1
  3259  000111                     HigherAlarm@max:
  3260                           	opt callstack 0
  3261  000111                     stoa@s:
  3262                           	opt callstack 0
  3263  000111                     atoi@neg:
  3264                           	opt callstack 0
  3265  000111                     fputs@fp:
  3266                           	opt callstack 0
  3267                           
  3268                           ; 2 bytes @ 0x11
  3269  000111                     	ds	1
  3270  000112                     ?_SeePressureV_pa:
  3271                           	opt callstack 0
  3272  000112                     ?_GetIp:
  3273                           	opt callstack 0
  3274  000112                     ?_GetEp:
  3275                           	opt callstack 0
  3276  000112                     ?_GetTargetIp:
  3277                           	opt callstack 0
  3278  000112                     ?_GetTargetEp:
  3279                           	opt callstack 0
  3280  000112                     ?_GetPmax:
  3281                           	opt callstack 0
  3282  000112                     ?_GetMaxPressure:
  3283                           	opt callstack 0
  3284  000112                     ?_GetPressureV_pa:
  3285                           	opt callstack 0
  3286  000112                     LCDMessage12@str2:
  3287                           	opt callstack 0
  3288                           
  3289                           ; 2 bytes @ 0x12
  3290  000112                     	ds	1
  3291  000113                     ??_stoa:
  3292  000113                     fputs@c:
  3293                           	opt callstack 0
  3294  000113                     HigherAlarm@i:
  3295                           	opt callstack 0
  3296  000113                     _atoi$5674:
  3297                           	opt callstack 0
  3298                           
  3299                           ; 2 bytes @ 0x13
  3300  000113                     	ds	1
  3301  000114                     ??_SeePressureV_pa:
  3302  000114                     ??_LCDTest:
  3303  000114                     ??_GetIp:
  3304  000114                     ??_GetPressureV_pa:
  3305  000114                     ___aodiv@counter:
  3306                           	opt callstack 0
  3307  000114                     ___aomod@counter:
  3308                           	opt callstack 0
  3309  000114                     GetMaxPressure@temp:
  3310                           	opt callstack 0
  3311  000114                     fputs@i:
  3312                           	opt callstack 0
  3313  000114                     ___aldiv@divisor:
  3314                           	opt callstack 0
  3315  000114                     stoa@nuls:
  3316                           	opt callstack 0
  3317                           
  3318                           ; 7 bytes @ 0x14
  3319  000114                     	ds	1
  3320  000115                     ___aodiv@sign:
  3321                           	opt callstack 0
  3322  000115                     ___aomod@sign:
  3323                           	opt callstack 0
  3324  000115                     _atoi$5676:
  3325                           	opt callstack 0
  3326                           
  3327                           ; 2 bytes @ 0x15
  3328  000115                     	ds	1
  3329  000116                     ??_HighPressureAlarmLow:
  3330  000116                     ?_abs:
  3331                           	opt callstack 0
  3332  000116                     ?_pad:
  3333                           	opt callstack 0
  3334  000116                     GetPressureV_pa@adcv:
  3335                           	opt callstack 0
  3336  000116                     SeePressureV_pa@adcv:
  3337                           	opt callstack 0
  3338  000116                     pad@fp:
  3339                           	opt callstack 0
  3340  000116                     abs@a:
  3341                           	opt callstack 0
  3342  000116                     ___aodiv@quotient:
  3343                           	opt callstack 0
  3344  000116                     LCDTest@msg1:
  3345                           	opt callstack 0
  3346                           
  3347                           ; 17 bytes @ 0x16
  3348  000116                     	ds	1
  3349  000117                     _atoi$5675:
  3350                           	opt callstack 0
  3351  000117                     HighPressureAlarmLow@max:
  3352                           	opt callstack 0
  3353  000117                     _GetIp$4809:
  3354                           	opt callstack 0
  3355                           
  3356                           ; 2 bytes @ 0x17
  3357  000117                     	ds	1
  3358  000118                     ??_abs:
  3359  000118                     ___aldiv@counter:
  3360                           	opt callstack 0
  3361  000118                     SeePressureV_pa@p:
  3362                           	opt callstack 0
  3363  000118                     pad@buf:
  3364                           	opt callstack 0
  3365  000118                     atoi@n:
  3366                           	opt callstack 0
  3367  000118                     GetPressureV_pa@mv:
  3368                           	opt callstack 0
  3369                           
  3370                           ; 4 bytes @ 0x18
  3371  000118                     	ds	1
  3372  000119                     ___aldiv@sign:
  3373                           	opt callstack 0
  3374  000119                     _GetIp$4810:
  3375                           	opt callstack 0
  3376                           
  3377                           ; 2 bytes @ 0x19
  3378  000119                     	ds	1
  3379  00011A                     pad@p:
  3380                           	opt callstack 0
  3381  00011A                     SeePressureV_pa@mv:
  3382                           	opt callstack 0
  3383  00011A                     ___aldiv@quotient:
  3384                           	opt callstack 0
  3385                           
  3386                           ; 4 bytes @ 0x1A
  3387  00011A                     	ds	1
  3388  00011B                     stoa@i:
  3389                           	opt callstack 0
  3390                           
  3391                           ; 2 bytes @ 0x1B
  3392  00011B                     	ds	1
  3393  00011C                     ??_pad:
  3394  00011C                     GetPressureV_pa@p:
  3395                           	opt callstack 0
  3396                           
  3397                           ; 2 bytes @ 0x1C
  3398  00011C                     	ds	1
  3399  00011D                     pad@i:
  3400                           	opt callstack 0
  3401  00011D                     stoa@w:
  3402                           	opt callstack 0
  3403                           
  3404                           ; 2 bytes @ 0x1D
  3405  00011D                     	ds	1
  3406  00011E                     ?_SeePressure_pa:
  3407                           	opt callstack 0
  3408  00011E                     ?_See12V:
  3409                           	opt callstack 0
  3410  00011E                     ?_See5V:
  3411                           	opt callstack 0
  3412  00011E                     ?_Get12V:
  3413                           	opt callstack 0
  3414  00011E                     ?_Get5V:
  3415                           	opt callstack 0
  3416  00011E                     ?_GetPressure_pa:
  3417                           	opt callstack 0
  3418                           
  3419                           ; 2 bytes @ 0x1E
  3420  00011E                     	ds	1
  3421  00011F                     pad@w:
  3422                           	opt callstack 0
  3423  00011F                     stoa@cp:
  3424                           	opt callstack 0
  3425                           
  3426                           ; 2 bytes @ 0x1F
  3427  00011F                     	ds	1
  3428  000120                     ??_SeePressure_pa:
  3429  000120                     ??_GetPressure_pa:
  3430  000120                     See5V@mv:
  3431                           	opt callstack 0
  3432  000120                     Get5V@mv:
  3433                           	opt callstack 0
  3434  000120                     See12V@mv:
  3435                           	opt callstack 0
  3436  000120                     Get12V@mv:
  3437                           	opt callstack 0
  3438                           
  3439                           ; 4 bytes @ 0x20
  3440  000120                     	ds	1
  3441  000121                     ?_ctoa:
  3442                           	opt callstack 0
  3443  000121                     ?_dtoa:
  3444                           	opt callstack 0
  3445  000121                     ?_xtoa:
  3446                           	opt callstack 0
  3447  000121                     ctoa@fp:
  3448                           	opt callstack 0
  3449  000121                     dtoa@fp:
  3450                           	opt callstack 0
  3451  000121                     stoa@p:
  3452                           	opt callstack 0
  3453  000121                     xtoa@fp:
  3454                           	opt callstack 0
  3455                           
  3456                           ; 2 bytes @ 0x21
  3457  000121                     	ds	1
  3458  000122                     GetPressure_pa@p32:
  3459                           	opt callstack 0
  3460  000122                     SeePressure_pa@p32:
  3461                           	opt callstack 0
  3462                           
  3463                           ; 4 bytes @ 0x22
  3464  000122                     	ds	1
  3465  000123                     ctoa@c:
  3466                           	opt callstack 0
  3467  000123                     stoa@l:
  3468                           	opt callstack 0
  3469  000123                     dtoa@d:
  3470                           	opt callstack 0
  3471  000123                     xtoa@d:
  3472                           	opt callstack 0
  3473                           
  3474                           ; 8 bytes @ 0x23
  3475  000123                     	ds	1
  3476  000124                     See5V@adc:
  3477                           	opt callstack 0
  3478  000124                     Get5V@adc:
  3479                           	opt callstack 0
  3480  000124                     See12V@adc:
  3481                           	opt callstack 0
  3482  000124                     Get12V@adc:
  3483                           	opt callstack 0
  3484  000124                     ctoa@w:
  3485                           	opt callstack 0
  3486                           
  3487                           ; 2 bytes @ 0x24
  3488  000124                     	ds	2
  3489  000126                     GetPressure_pa@adc:
  3490                           	opt callstack 0
  3491  000126                     SeePressure_pa@adc:
  3492                           	opt callstack 0
  3493  000126                     See5V@v12:
  3494                           	opt callstack 0
  3495  000126                     Get5V@v12:
  3496                           	opt callstack 0
  3497  000126                     See12V@v12:
  3498                           	opt callstack 0
  3499  000126                     Get12V@v12:
  3500                           	opt callstack 0
  3501                           
  3502                           ; 2 bytes @ 0x26
  3503  000126                     	ds	1
  3504  000127                     LCDTest@msg2:
  3505                           	opt callstack 0
  3506                           
  3507                           ; 17 bytes @ 0x27
  3508  000127                     	ds	1
  3509  000128                     BatteryFailAlarm@bat:
  3510                           	opt callstack 0
  3511  000128                     GetPressure_pa@p:
  3512                           	opt callstack 0
  3513  000128                     SeePressure_pa@p:
  3514                           	opt callstack 0
  3515                           
  3516                           ; 2 bytes @ 0x28
  3517  000128                     	ds	2
  3518  00012A                     GetPressure_pa@mv:
  3519                           	opt callstack 0
  3520  00012A                     SeePressure_pa@mv:
  3521                           	opt callstack 0
  3522                           
  3523                           ; 4 bytes @ 0x2A
  3524  00012A                     	ds	1
  3525  00012B                     ??_dtoa:
  3526  00012B                     xtoa@x:
  3527                           	opt callstack 0
  3528                           
  3529                           ; 1 bytes @ 0x2B
  3530  00012B                     	ds	1
  3531  00012C                     ??_xtoa:
  3532                           
  3533                           ; 1 bytes @ 0x2C
  3534  00012C                     	ds	7
  3535  000133                     _dtoa$5178:
  3536                           	opt callstack 0
  3537                           
  3538                           ; 2 bytes @ 0x33
  3539  000133                     	ds	1
  3540  000134                     _xtoa$5199:
  3541                           	opt callstack 0
  3542                           
  3543                           ; 2 bytes @ 0x34
  3544  000134                     	ds	1
  3545  000135                     dtoa@p:
  3546                           	opt callstack 0
  3547                           
  3548                           ; 2 bytes @ 0x35
  3549  000135                     	ds	1
  3550  000136                     _xtoa$5200:
  3551                           	opt callstack 0
  3552                           
  3553                           ; 2 bytes @ 0x36
  3554  000136                     	ds	1
  3555  000137                     dtoa@w:
  3556                           	opt callstack 0
  3557                           
  3558                           ; 2 bytes @ 0x37
  3559  000137                     	ds	1
  3560  000138                     LCDTest@i:
  3561                           	opt callstack 0
  3562  000138                     xtoa@p:
  3563                           	opt callstack 0
  3564                           
  3565                           ; 2 bytes @ 0x38
  3566  000138                     	ds	1
  3567  000139                     dtoa@s:
  3568                           	opt callstack 0
  3569                           
  3570                           ; 2 bytes @ 0x39
  3571  000139                     	ds	1
  3572  00013A                     LCDTest@j:
  3573                           	opt callstack 0
  3574  00013A                     xtoa@w:
  3575                           	opt callstack 0
  3576                           
  3577                           ; 2 bytes @ 0x3A
  3578  00013A                     	ds	1
  3579  00013B                     dtoa@n:
  3580                           	opt callstack 0
  3581                           
  3582                           ; 8 bytes @ 0x3B
  3583  00013B                     	ds	1
  3584  00013C                     ??_LCDInit:
  3585  00013C                     xtoa@n:
  3586                           	opt callstack 0
  3587                           
  3588                           ; 8 bytes @ 0x3C
  3589  00013C                     	ds	2
  3590  00013E                     
  3591                           ; 1 bytes @ 0x3E
  3592  00013E                     	ds	5
  3593  000143                     dtoa@i:
  3594                           	opt callstack 0
  3595                           
  3596                           ; 2 bytes @ 0x43
  3597  000143                     	ds	1
  3598  000144                     xtoa@i:
  3599                           	opt callstack 0
  3600                           
  3601                           ; 2 bytes @ 0x44
  3602  000144                     	ds	2
  3603  000146                     xtoa@c:
  3604                           	opt callstack 0
  3605                           
  3606                           ; 2 bytes @ 0x46
  3607  000146                     	ds	2
  3608  000148                     ?_vfpfcnvrt:
  3609                           	opt callstack 0
  3610  000148                     vfpfcnvrt@fp:
  3611                           	opt callstack 0
  3612                           
  3613                           ; 2 bytes @ 0x48
  3614  000148                     	ds	2
  3615  00014A                     vfpfcnvrt@fmt:
  3616                           	opt callstack 0
  3617                           
  3618                           ; 2 bytes @ 0x4A
  3619  00014A                     	ds	2
  3620  00014C                     vfpfcnvrt@ap:
  3621                           	opt callstack 0
  3622                           
  3623                           ; 2 bytes @ 0x4C
  3624  00014C                     	ds	2
  3625  00014E                     ??_vfpfcnvrt:
  3626                           
  3627                           ; 1 bytes @ 0x4E
  3628  00014E                     	ds	4
  3629  000152                     vfpfcnvrt@ll:
  3630                           	opt callstack 0
  3631                           
  3632                           ; 8 bytes @ 0x52
  3633  000152                     	ds	8
  3634  00015A                     vfpfcnvrt@llu:
  3635                           	opt callstack 0
  3636                           
  3637                           ; 8 bytes @ 0x5A
  3638  00015A                     	ds	8
  3639  000162                     vfpfcnvrt@cp:
  3640                           	opt callstack 0
  3641                           
  3642                           ; 2 bytes @ 0x62
  3643  000162                     	ds	2
  3644  000164                     vfpfcnvrt@done:
  3645                           	opt callstack 0
  3646                           
  3647                           ; 2 bytes @ 0x64
  3648  000164                     	ds	2
  3649  000166                     _vfpfcnvrt$5214:
  3650                           	opt callstack 0
  3651                           
  3652                           ; 2 bytes @ 0x66
  3653  000166                     	ds	2
  3654  000168                     vfpfcnvrt@c:
  3655                           	opt callstack 0
  3656                           
  3657                           ; 1 bytes @ 0x68
  3658  000168                     	ds	1
  3659  000169                     ?_vfprintf:
  3660                           	opt callstack 0
  3661  000169                     vfprintf@fp:
  3662                           	opt callstack 0
  3663                           
  3664                           ; 2 bytes @ 0x69
  3665  000169                     	ds	2
  3666  00016B                     vfprintf@fmt:
  3667                           	opt callstack 0
  3668                           
  3669                           ; 2 bytes @ 0x6B
  3670  00016B                     	ds	2
  3671  00016D                     vfprintf@ap:
  3672                           	opt callstack 0
  3673                           
  3674                           ; 2 bytes @ 0x6D
  3675  00016D                     	ds	2
  3676  00016F                     vfprintf@cfmt:
  3677                           	opt callstack 0
  3678                           
  3679                           ; 2 bytes @ 0x6F
  3680  00016F                     	ds	2
  3681  000171                     ?_printf:
  3682                           	opt callstack 0
  3683  000171                     ?_sprintf:
  3684                           	opt callstack 0
  3685  000171                     sprintf@s:
  3686                           	opt callstack 0
  3687  000171                     printf@fmt:
  3688                           	opt callstack 0
  3689                           
  3690                           ; 2 bytes @ 0x71
  3691  000171                     	ds	2
  3692  000173                     sprintf@fmt:
  3693                           	opt callstack 0
  3694                           
  3695                           ; 2 bytes @ 0x73
  3696  000173                     	ds	12
  3697  00017F                     
  3698                           ; 1 bytes @ 0x7F
  3699  00017F                     	ds	2
  3700  000181                     printf@ap:
  3701                           	opt callstack 0
  3702                           
  3703                           ; 2 bytes @ 0x81
  3704  000181                     	ds	2
  3705  000183                     ??_BuzzerCheck:
  3706  000183                     ??_BuzzerTask:
  3707  000183                     _MonitorFailAlarm$4446:
  3708                           	opt callstack 0
  3709  000183                     SetCalibrateState@calib:
  3710                           	opt callstack 0
  3711  000183                     SetAlarmSV1@value:
  3712                           	opt callstack 0
  3713  000183                     SetSV1@value:
  3714                           	opt callstack 0
  3715  000183                     TestAlarm@id:
  3716                           	opt callstack 0
  3717                           
  3718                           ; 2 bytes @ 0x83
  3719  000183                     	ds	1
  3720  000184                     MonitorFailAlarm@v5:
  3721                           	opt callstack 0
  3722                           
  3723                           ; 2 bytes @ 0x84
  3724  000184                     	ds	1
  3725  000185                     ??_TestAlarm:
  3726  000185                     BuzzerSet@state:
  3727                           	opt callstack 0
  3728  000185                     sprintf@ap:
  3729                           	opt callstack 0
  3730                           
  3731                           ; 2 bytes @ 0x85
  3732  000185                     	ds	1
  3733  000186                     _MuteAlarm$4543:
  3734                           	opt callstack 0
  3735                           
  3736                           ; 1 bytes @ 0x86
  3737  000186                     	ds	1
  3738  000187                     MuteAlarm@high:
  3739                           	opt callstack 0
  3740  000187                     sprintf@f:
  3741                           	opt callstack 0
  3742                           
  3743                           ; 6 bytes @ 0x87
  3744  000187                     	ds	2
  3745  000189                     TestAlarm@i:
  3746                           	opt callstack 0
  3747                           
  3748                           ; 2 bytes @ 0x89
  3749  000189                     	ds	4
  3750  00018D                     
  3751                           ; 1 bytes @ 0x8D
  3752  00018D                     	ds	8
  3753  000195                     ValueDisplay@pi:
  3754                           	opt callstack 0
  3755                           
  3756                           ; 2 bytes @ 0x95
  3757  000195                     	ds	2
  3758  000197                     ValueDisplay@pe:
  3759                           	opt callstack 0
  3760                           
  3761                           ; 2 bytes @ 0x97
  3762  000197                     	ds	2
  3763  000199                     ValueDisplay@vol:
  3764                           	opt callstack 0
  3765                           
  3766                           ; 2 bytes @ 0x99
  3767  000199                     	ds	2
  3768  00019B                     ValueDisplay@pmax:
  3769                           	opt callstack 0
  3770                           
  3771                           ; 2 bytes @ 0x9B
  3772  00019B                     	ds	2
  3773  00019D                     ValueDisplay@spr:
  3774                           	opt callstack 0
  3775                           
  3776                           ; 2 bytes @ 0x9D
  3777  00019D                     	ds	2
  3778  00019F                     _ValueDisplay$6530:
  3779                           	opt callstack 0
  3780                           
  3781                           ; 2 bytes @ 0x9F
  3782  00019F                     	ds	2
  3783  0001A1                     ValueDisplay@eti:
  3784                           	opt callstack 0
  3785                           
  3786                           ; 1 bytes @ 0xA1
  3787  0001A1                     	ds	1
  3788  0001A2                     ValueDisplay@ete:
  3789                           	opt callstack 0
  3790                           
  3791                           ; 1 bytes @ 0xA2
  3792  0001A2                     	ds	1
  3793  0001A3                     ValueDisplay@dtdi:
  3794                           	opt callstack 0
  3795                           
  3796                           ; 1 bytes @ 0xA3
  3797  0001A3                     	ds	1
  3798  0001A4                     ValueDisplay@dtde:
  3799                           	opt callstack 0
  3800                           
  3801                           ; 1 bytes @ 0xA4
  3802  0001A4                     	ds	1
  3803  0001A5                     ValueDisplay@dr:
  3804                           	opt callstack 0
  3805                           
  3806                           ; 1 bytes @ 0xA5
  3807  0001A5                     	ds	1
  3808  0001A6                     _ValueDisplay$4007:
  3809                           	opt callstack 0
  3810                           
  3811                           ; 2 bytes @ 0xA6
  3812  0001A6                     	ds	2
  3813  0001A8                     _ValueDisplay$4008:
  3814                           	opt callstack 0
  3815                           
  3816                           ; 2 bytes @ 0xA8
  3817  0001A8                     	ds	2
  3818  0001AA                     ValueDisplay@tdi:
  3819                           	opt callstack 0
  3820                           
  3821                           ; 2 bytes @ 0xAA
  3822  0001AA                     	ds	2
  3823  0001AC                     ValueDisplay@tde:
  3824                           	opt callstack 0
  3825                           
  3826                           ; 2 bytes @ 0xAC
  3827  0001AC                     	ds	2
  3828  0001AE                     ValueDisplay@etdi:
  3829                           	opt callstack 0
  3830                           
  3831                           ; 1 bytes @ 0xAE
  3832  0001AE                     	ds	1
  3833  0001AF                     ValueDisplay@etde:
  3834                           	opt callstack 0
  3835                           
  3836                           ; 1 bytes @ 0xAF
  3837  0001AF                     	ds	1
  3838  0001B0                     ValueDisplay@er:
  3839                           	opt callstack 0
  3840                           
  3841                           ; 1 bytes @ 0xB0
  3842  0001B0                     	ds	1
  3843  0001B1                     ValueDisplay@r:
  3844                           	opt callstack 0
  3845                           
  3846                           ; 2 bytes @ 0xB1
  3847  0001B1                     	ds	2
  3848  0001B3                     ValueDisplay@te:
  3849                           	opt callstack 0
  3850                           
  3851                           ; 2 bytes @ 0xB3
  3852  0001B3                     	ds	2
  3853  0001B5                     ValueDisplay@ti:
  3854                           	opt callstack 0
  3855                           
  3856                           ; 2 bytes @ 0xB5
  3857  0001B5                     	ds	2
  3858  0001B7                     AlarmDisplay@type:
  3859                           	opt callstack 0
  3860                           
  3861                           ; 2 bytes @ 0xB7
  3862  0001B7                     	ds	2
  3863  0001B9                     AlarmDisplay@alarm:
  3864                           	opt callstack 0
  3865                           
  3866                           ; 2 bytes @ 0xB9
  3867  0001B9                     	ds	2
  3868  0001BB                     AlarmDisplay@t:
  3869                           	opt callstack 0
  3870                           
  3871                           ; 1 bytes @ 0xBB
  3872  0001BB                     	ds	1
  3873  0001BC                     _AlarmDisplay$4015:
  3874                           	opt callstack 0
  3875                           
  3876                           ; 2 bytes @ 0xBC
  3877  0001BC                     	ds	2
  3878  0001BE                     _AlarmDisplay$4016:
  3879                           	opt callstack 0
  3880                           
  3881                           ; 2 bytes @ 0xBE
  3882  0001BE                     	ds	2
  3883  0001C0                     AlarmUpdateLCD@id:
  3884                           	opt callstack 0
  3885                           
  3886                           ; 2 bytes @ 0xC0
  3887  0001C0                     	ds	2
  3888  0001C2                     _AlarmUpdateLCD$6531:
  3889                           	opt callstack 0
  3890                           
  3891                           ; 2 bytes @ 0xC2
  3892  0001C2                     	ds	2
  3893  0001C4                     _AlarmUpdateLCD$6532:
  3894                           	opt callstack 0
  3895                           
  3896                           ; 2 bytes @ 0xC4
  3897  0001C4                     	ds	2
  3898  0001C6                     ??_main:
  3899                           
  3900                           ; 1 bytes @ 0xC6
  3901  0001C6                     	ds	1
  3902                           
  3903                           	psect	cstackBANK0
  3904  000060                     __pcstackBANK0:
  3905                           	opt callstack 0
  3906  000060                     i2vfpfcnvrt@ll:
  3907                           	opt callstack 0
  3908                           
  3909                           ; 8 bytes @ 0x0
  3910  000060                     	ds	8
  3911  000068                     i2vfpfcnvrt@llu:
  3912                           	opt callstack 0
  3913                           
  3914                           ; 8 bytes @ 0x8
  3915  000068                     	ds	8
  3916  000070                     i2vfpfcnvrt@cp:
  3917                           	opt callstack 0
  3918                           
  3919                           ; 2 bytes @ 0x10
  3920  000070                     	ds	2
  3921  000072                     i2vfpfcnvrt@done:
  3922                           	opt callstack 0
  3923                           
  3924                           ; 2 bytes @ 0x12
  3925  000072                     	ds	2
  3926  000074                     i2_vfpfcnvrt$5214:
  3927                           	opt callstack 0
  3928                           
  3929                           ; 2 bytes @ 0x14
  3930  000074                     	ds	2
  3931  000076                     i2vfpfcnvrt@c:
  3932                           	opt callstack 0
  3933                           
  3934                           ; 1 bytes @ 0x16
  3935  000076                     	ds	1
  3936  000077                     ?i2_sprintf:
  3937                           	opt callstack 0
  3938  000077                     ?i2_printf:
  3939                           	opt callstack 0
  3940  000077                     i2sprintf@s:
  3941                           	opt callstack 0
  3942  000077                     i2printf@fmt:
  3943                           	opt callstack 0
  3944                           
  3945                           ; 2 bytes @ 0x17
  3946  000077                     	ds	2
  3947  000079                     i2sprintf@fmt:
  3948                           	opt callstack 0
  3949                           
  3950                           ; 2 bytes @ 0x19
  3951  000079                     	ds	8
  3952  000081                     i2_MuteAlarm$4543:
  3953                           	opt callstack 0
  3954                           
  3955                           ; 1 bytes @ 0x21
  3956  000081                     	ds	1
  3957  000082                     i2MuteAlarm@high:
  3958                           	opt callstack 0
  3959                           
  3960                           ; 2 bytes @ 0x22
  3961  000082                     	ds	9
  3962  00008B                     i2sprintf@ap:
  3963                           	opt callstack 0
  3964                           
  3965                           ; 2 bytes @ 0x2B
  3966  00008B                     	ds	2
  3967  00008D                     i2sprintf@f:
  3968                           	opt callstack 0
  3969                           
  3970                           ; 6 bytes @ 0x2D
  3971  00008D                     	ds	6
  3972  000093                     DisplayCalibrate@pr:
  3973                           	opt callstack 0
  3974                           
  3975                           ; 2 bytes @ 0x33
  3976  000093                     	ds	2
  3977  000095                     DisplayCalibrate@off:
  3978                           	opt callstack 0
  3979                           
  3980                           ; 2 bytes @ 0x35
  3981  000095                     	ds	2
  3982  000097                     DisplayCalibrate@prv:
  3983                           	opt callstack 0
  3984                           
  3985                           ; 2 bytes @ 0x37
  3986  000097                     	ds	2
  3987  000099                     DisplayCalibrate@offv:
  3988                           	opt callstack 0
  3989                           
  3990                           ; 2 bytes @ 0x39
  3991  000099                     	ds	2
  3992  00009B                     MonitorPressureTask@v12:
  3993                           	opt callstack 0
  3994  00009B                     i2ValueDisplay@pi:
  3995                           	opt callstack 0
  3996                           
  3997                           ; 2 bytes @ 0x3B
  3998  00009B                     	ds	2
  3999  00009D                     MonitorPressureTask@v5:
  4000                           	opt callstack 0
  4001  00009D                     i2ValueDisplay@pe:
  4002                           	opt callstack 0
  4003                           
  4004                           ; 2 bytes @ 0x3D
  4005  00009D                     	ds	2
  4006  00009F                     MonitorPressureTask@halfLimit:
  4007                           	opt callstack 0
  4008  00009F                     i2ValueDisplay@vol:
  4009                           	opt callstack 0
  4010                           
  4011                           ; 2 bytes @ 0x3F
  4012  00009F                     	ds	2
  4013  0000A1                     MonitorPressureTask@v1:
  4014                           	opt callstack 0
  4015  0000A1                     i2ValueDisplay@pmax:
  4016                           	opt callstack 0
  4017                           
  4018                           ; 2 bytes @ 0x41
  4019  0000A1                     	ds	2
  4020  0000A3                     _MonitorPressureTask$4886:
  4021                           	opt callstack 0
  4022  0000A3                     i2ValueDisplay@spr:
  4023                           	opt callstack 0
  4024                           
  4025                           ; 2 bytes @ 0x43
  4026  0000A3                     	ds	2
  4027  0000A5                     _MonitorPressureTask$4895:
  4028                           	opt callstack 0
  4029  0000A5                     i2_ValueDisplay$7130:
  4030                           	opt callstack 0
  4031                           
  4032                           ; 2 bytes @ 0x45
  4033  0000A5                     	ds	2
  4034  0000A7                     i2ValueDisplay@eti:
  4035                           	opt callstack 0
  4036  0000A7                     _MonitorPressureTask$4896:
  4037                           	opt callstack 0
  4038                           
  4039                           ; 2 bytes @ 0x47
  4040  0000A7                     	ds	1
  4041  0000A8                     i2ValueDisplay@ete:
  4042                           	opt callstack 0
  4043                           
  4044                           ; 1 bytes @ 0x48
  4045  0000A8                     	ds	1
  4046  0000A9                     i2ValueDisplay@dtdi:
  4047                           	opt callstack 0
  4048  0000A9                     _MonitorPressureTask$4898:
  4049                           	opt callstack 0
  4050                           
  4051                           ; 2 bytes @ 0x49
  4052  0000A9                     	ds	1
  4053  0000AA                     i2ValueDisplay@dtde:
  4054                           	opt callstack 0
  4055                           
  4056                           ; 1 bytes @ 0x4A
  4057  0000AA                     	ds	1
  4058  0000AB                     i2ValueDisplay@dr:
  4059                           	opt callstack 0
  4060  0000AB                     _MonitorPressureTask$4899:
  4061                           	opt callstack 0
  4062                           
  4063                           ; 2 bytes @ 0x4B
  4064  0000AB                     	ds	1
  4065  0000AC                     i2_ValueDisplay$4007:
  4066                           	opt callstack 0
  4067                           
  4068                           ; 2 bytes @ 0x4C
  4069  0000AC                     	ds	1
  4070  0000AD                     MonitorPressureTask@adcv:
  4071                           	opt callstack 0
  4072                           
  4073                           ; 2 bytes @ 0x4D
  4074  0000AD                     	ds	1
  4075  0000AE                     i2_ValueDisplay$4008:
  4076                           	opt callstack 0
  4077                           
  4078                           ; 2 bytes @ 0x4E
  4079  0000AE                     	ds	1
  4080  0000AF                     MonitorPressureTask@tmp:
  4081                           	opt callstack 0
  4082                           
  4083                           ; 2 bytes @ 0x4F
  4084  0000AF                     	ds	1
  4085  0000B0                     i2ValueDisplay@tdi:
  4086                           	opt callstack 0
  4087                           
  4088                           ; 2 bytes @ 0x50
  4089  0000B0                     	ds	1
  4090  0000B1                     MonitorPressureTask@tmp2:
  4091                           	opt callstack 0
  4092                           
  4093                           ; 2 bytes @ 0x51
  4094  0000B1                     	ds	1
  4095  0000B2                     i2ValueDisplay@tde:
  4096                           	opt callstack 0
  4097                           
  4098                           ; 2 bytes @ 0x52
  4099  0000B2                     	ds	1
  4100  0000B3                     MonitorPressureTask@v2:
  4101                           	opt callstack 0
  4102                           
  4103                           ; 2 bytes @ 0x53
  4104  0000B3                     	ds	1
  4105  0000B4                     i2ValueDisplay@etdi:
  4106                           	opt callstack 0
  4107                           
  4108                           ; 1 bytes @ 0x54
  4109  0000B4                     	ds	1
  4110  0000B5                     i2ValueDisplay@etde:
  4111                           	opt callstack 0
  4112  0000B5                     MonitorPressureTask@next:
  4113                           	opt callstack 0
  4114                           
  4115                           ; 2 bytes @ 0x55
  4116  0000B5                     	ds	1
  4117  0000B6                     i2ValueDisplay@er:
  4118                           	opt callstack 0
  4119                           
  4120                           ; 1 bytes @ 0x56
  4121  0000B6                     	ds	1
  4122  0000B7                     MonitorPressureTask@i_4894:
  4123                           	opt callstack 0
  4124  0000B7                     i2ValueDisplay@r:
  4125                           	opt callstack 0
  4126                           
  4127                           ; 2 bytes @ 0x57
  4128  0000B7                     	ds	2
  4129  0000B9                     MonitorPressureTask@i_4897:
  4130                           	opt callstack 0
  4131  0000B9                     i2ValueDisplay@te:
  4132                           	opt callstack 0
  4133                           
  4134                           ; 2 bytes @ 0x59
  4135  0000B9                     	ds	2
  4136  0000BB                     MonitorPressureTask@temp:
  4137                           	opt callstack 0
  4138  0000BB                     i2ValueDisplay@ti:
  4139                           	opt callstack 0
  4140                           
  4141                           ; 2 bytes @ 0x5B
  4142  0000BB                     	ds	2
  4143  0000BD                     ??_UpdateState:
  4144  0000BD                     MonitorPressureTask@i:
  4145                           	opt callstack 0
  4146  0000BD                     i2AlarmDisplay@type:
  4147                           	opt callstack 0
  4148                           
  4149                           ; 2 bytes @ 0x5D
  4150  0000BD                     	ds	2
  4151  0000BF                     MonitorPressureTask@i_4881:
  4152                           	opt callstack 0
  4153  0000BF                     i2AlarmDisplay@alarm:
  4154                           	opt callstack 0
  4155                           
  4156                           ; 2 bytes @ 0x5F
  4157  0000BF                     	ds	2
  4158  0000C1                     MonitorPressureTask@pr:
  4159                           	opt callstack 0
  4160  0000C1                     i2AlarmUpdateLCD@id:
  4161                           	opt callstack 0
  4162                           
  4163                           ; 2 bytes @ 0x61
  4164  0000C1                     	ds	2
  4165  0000C3                     i2_AlarmUpdateLCD$7131:
  4166                           	opt callstack 0
  4167                           
  4168                           ; 2 bytes @ 0x63
  4169  0000C3                     	ds	2
  4170  0000C5                     i2_AlarmUpdateLCD$7132:
  4171                           	opt callstack 0
  4172                           
  4173                           ; 2 bytes @ 0x65
  4174  0000C5                     	ds	2
  4175  0000C7                     ??_ButtonTask:
  4176                           
  4177                           ; 1 bytes @ 0x67
  4178  0000C7                     	ds	1
  4179                           
  4180                           	psect	cstackCOMRAM
  4181  000001                     __pcstackCOMRAM:
  4182                           	opt callstack 0
  4183  000001                     ?_isqrt:
  4184                           	opt callstack 0
  4185  000001                     ?_ADCC_GetConversionResult:
  4186                           	opt callstack 0
  4187  000001                     ?___lwdiv:
  4188                           	opt callstack 0
  4189  000001                     ?i2_GetTde:
  4190                           	opt callstack 0
  4191  000001                     ?i2_GetTdi:
  4192                           	opt callstack 0
  4193  000001                     ?i2_GetTi:
  4194                           	opt callstack 0
  4195  000001                     ?i2_GetTe:
  4196                           	opt callstack 0
  4197  000001                     ?i2_GetBpm:
  4198                           	opt callstack 0
  4199  000001                     ?i2_GetVolume:
  4200                           	opt callstack 0
  4201  000001                     ?i2_GetSpr:
  4202                           	opt callstack 0
  4203  000001                     ?i2___wmul:
  4204                           	opt callstack 0
  4205  000001                     ?i2___awmod:
  4206                           	opt callstack 0
  4207  000001                     ?i2_isalpha:
  4208                           	opt callstack 0
  4209  000001                     ?i2_isdigit:
  4210                           	opt callstack 0
  4211  000001                     ?i2_isspace:
  4212                           	opt callstack 0
  4213  000001                     ?i2_isupper:
  4214                           	opt callstack 0
  4215  000001                     ?i2_strlen:
  4216                           	opt callstack 0
  4217  000001                     ?i2_islower:
  4218                           	opt callstack 0
  4219  000001                     ?___lldiv:
  4220                           	opt callstack 0
  4221  000001                     ?i2___lmul:
  4222                           	opt callstack 0
  4223  000001                     ?i2___aodiv:
  4224                           	opt callstack 0
  4225  000001                     ?i2___aomod:
  4226                           	opt callstack 0
  4227  000001                     I2C2_SlaveSetCounter@counter:
  4228                           	opt callstack 0
  4229  000001                     GetControllerBuzzerCheck@tmp:
  4230                           	opt callstack 0
  4231  000001                     SetVolumeControl@vc:
  4232                           	opt callstack 0
  4233  000001                     i2ADCC_StartConversion@channel:
  4234                           	opt callstack 0
  4235  000001                     i2TMR4_Period8BitSet@periodVal:
  4236                           	opt callstack 0
  4237  000001                     i2UART1_Write@txData:
  4238                           	opt callstack 0
  4239  000001                     i2BuzzerOn@period:
  4240                           	opt callstack 0
  4241  000001                     isqrt@x:
  4242                           	opt callstack 0
  4243  000001                     TMR5_WriteTimer@timerVal:
  4244                           	opt callstack 0
  4245  000001                     TMR1_WriteTimer@timerVal:
  4246                           	opt callstack 0
  4247  000001                     SetMaxPressure@pr:
  4248                           	opt callstack 0
  4249  000001                     ___lwdiv@dividend:
  4250                           	opt callstack 0
  4251  000001                     i2ADCC_SetADTIInterruptHandler@InterruptHandler:
  4252                           	opt callstack 0
  4253  000001                     i2TMR4_SetInterruptHandler@InterruptHandler:
  4254                           	opt callstack 0
  4255  000001                     i2ClearVars@i:
  4256                           	opt callstack 0
  4257  000001                     i2___wmul@multiplier:
  4258                           	opt callstack 0
  4259  000001                     i2___awmod@dividend:
  4260                           	opt callstack 0
  4261  000001                     i2isalpha@c:
  4262                           	opt callstack 0
  4263  000001                     i2isdigit@c:
  4264                           	opt callstack 0
  4265  000001                     i2isspace@c:
  4266                           	opt callstack 0
  4267  000001                     i2isupper@c:
  4268                           	opt callstack 0
  4269  000001                     i2strlen@s:
  4270                           	opt callstack 0
  4271  000001                     i2islower@c:
  4272                           	opt callstack 0
  4273  000001                     ___lldiv@dividend:
  4274                           	opt callstack 0
  4275  000001                     i2___lmul@multiplier:
  4276                           	opt callstack 0
  4277  000001                     i2___aodiv@dividend:
  4278                           	opt callstack 0
  4279  000001                     i2___aomod@dividend:
  4280                           	opt callstack 0
  4281                           
  4282                           ; 8 bytes @ 0x0
  4283  000001                     	ds	1
  4284  000002                     i2putch@txData:
  4285                           	opt callstack 0
  4286                           
  4287                           ; 1 bytes @ 0x1
  4288  000002                     	ds	1
  4289  000003                     ??_isqrt:
  4290  000003                     ??_ADCC_GetConversionResult:
  4291  000003                     ??i2_isalpha:
  4292  000003                     ??i2_isdigit:
  4293  000003                     ??i2_isspace:
  4294  000003                     ??i2_isupper:
  4295  000003                     ??i2_islower:
  4296  000003                     ___lwdiv@divisor:
  4297                           	opt callstack 0
  4298  000003                     i2AnyAlarm@i:
  4299                           	opt callstack 0
  4300  000003                     i2ClearVars@i_4906:
  4301                           	opt callstack 0
  4302  000003                     i2___wmul@multiplicand:
  4303                           	opt callstack 0
  4304  000003                     i2___awmod@divisor:
  4305                           	opt callstack 0
  4306  000003                     i2fputc@c:
  4307                           	opt callstack 0
  4308  000003                     i2strlen@a:
  4309                           	opt callstack 0
  4310                           
  4311                           ; 2 bytes @ 0x2
  4312  000003                     	ds	1
  4313  000004                     ReceiveHandler@data:
  4314                           	opt callstack 0
  4315                           
  4316                           ; 1 bytes @ 0x3
  4317  000004                     	ds	1
  4318  000005                     ?i2_GetAlarmState:
  4319                           	opt callstack 0
  4320  000005                     i2___awmod@counter:
  4321                           	opt callstack 0
  4322  000005                     isqrt@op:
  4323                           	opt callstack 0
  4324  000005                     ___lwdiv@quotient:
  4325                           	opt callstack 0
  4326  000005                     i2___wmul@product:
  4327                           	opt callstack 0
  4328  000005                     i2fputc@fp:
  4329                           	opt callstack 0
  4330  000005                     ___lldiv@divisor:
  4331                           	opt callstack 0
  4332  000005                     i2___lmul@multiplicand:
  4333                           	opt callstack 0
  4334                           
  4335                           ; 4 bytes @ 0x4
  4336  000005                     	ds	1
  4337  000006                     i2___awmod@sign:
  4338                           	opt callstack 0
  4339                           
  4340                           ; 1 bytes @ 0x5
  4341  000006                     	ds	1
  4342  000007                     ??i2_fputc:
  4343  000007                     ?i2_HigherAlarm:
  4344                           	opt callstack 0
  4345  000007                     ?i2_AdcSeeData:
  4346                           	opt callstack 0
  4347  000007                     ?i2_AdcGetData:
  4348                           	opt callstack 0
  4349  000007                     ?i2___awdiv:
  4350                           	opt callstack 0
  4351  000007                     ?i2_toupper:
  4352                           	opt callstack 0
  4353  000007                     ___lwdiv@counter:
  4354                           	opt callstack 0
  4355  000007                     i2_isspace$5701:
  4356                           	opt callstack 0
  4357  000007                     isqrt@res:
  4358                           	opt callstack 0
  4359  000007                     i2AdcDataReady@id:
  4360                           	opt callstack 0
  4361  000007                     i2AdcSeeData@id:
  4362                           	opt callstack 0
  4363  000007                     i2AdcGetData@id:
  4364                           	opt callstack 0
  4365  000007                     i2___awdiv@dividend:
  4366                           	opt callstack 0
  4367  000007                     i2toupper@c:
  4368                           	opt callstack 0
  4369                           
  4370                           ; 2 bytes @ 0x6
  4371  000007                     	ds	1
  4372  000008                     ?i2_atoi:
  4373                           	opt callstack 0
  4374  000008                     i2atoi@s:
  4375                           	opt callstack 0
  4376                           
  4377                           ; 2 bytes @ 0x7
  4378  000008                     	ds	1
  4379  000009                     ??i2_HigherAlarm:
  4380  000009                     ??i2_toupper:
  4381  000009                     isqrt@one:
  4382                           	opt callstack 0
  4383  000009                     i2AdcSeeData@data:
  4384                           	opt callstack 0
  4385  000009                     i2AdcGetData@data:
  4386                           	opt callstack 0
  4387  000009                     i2___awdiv@divisor:
  4388                           	opt callstack 0
  4389  000009                     ___lldiv@quotient:
  4390                           	opt callstack 0
  4391  000009                     i2___lmul@product:
  4392                           	opt callstack 0
  4393  000009                     i2___aodiv@divisor:
  4394                           	opt callstack 0
  4395  000009                     i2___aomod@divisor:
  4396                           	opt callstack 0
  4397                           
  4398                           ; 8 bytes @ 0x8
  4399  000009                     	ds	1
  4400  00000A                     ??i2_atoi:
  4401                           
  4402                           ; 1 bytes @ 0x9
  4403  00000A                     	ds	1
  4404  00000B                     i2___awdiv@counter:
  4405                           	opt callstack 0
  4406                           
  4407                           ; 1 bytes @ 0xA
  4408  00000B                     	ds	1
  4409  00000C                     ?i2_stoa:
  4410                           	opt callstack 0
  4411  00000C                     i2___awdiv@sign:
  4412                           	opt callstack 0
  4413  00000C                     i2stoa@fp:
  4414                           	opt callstack 0
  4415  00000C                     i2fputs@s:
  4416                           	opt callstack 0
  4417                           
  4418                           ; 2 bytes @ 0xB
  4419  00000C                     	ds	1
  4420  00000D                     ?i2___aldiv:
  4421                           	opt callstack 0
  4422  00000D                     ___lldiv@counter:
  4423                           	opt callstack 0
  4424  00000D                     i2___awdiv@quotient:
  4425                           	opt callstack 0
  4426  00000D                     i2_toupper$5789:
  4427                           	opt callstack 0
  4428  00000D                     i2___aldiv@dividend:
  4429                           	opt callstack 0
  4430                           
  4431                           ; 4 bytes @ 0xC
  4432  00000D                     	ds	1
  4433  00000E                     i2HigherAlarm@max:
  4434                           	opt callstack 0
  4435  00000E                     i2stoa@s:
  4436                           	opt callstack 0
  4437  00000E                     i2atoi@neg:
  4438                           	opt callstack 0
  4439  00000E                     i2fputs@fp:
  4440                           	opt callstack 0
  4441                           
  4442                           ; 2 bytes @ 0xD
  4443  00000E                     	ds	1
  4444  00000F                     ?i2_GetEp:
  4445                           	opt callstack 0
  4446  00000F                     ?i2_GetIp:
  4447                           	opt callstack 0
  4448  00000F                     ?i2_GetPmax:
  4449                           	opt callstack 0
  4450  00000F                     ?i2_GetTargetIp:
  4451                           	opt callstack 0
  4452  00000F                     ?i2_GetTargetEp:
  4453                           	opt callstack 0
  4454  00000F                     ?i2_GetPressureV_pa:
  4455                           	opt callstack 0
  4456                           
  4457                           ; 2 bytes @ 0xE
  4458  00000F                     	ds	1
  4459  000010                     ??i2_stoa:
  4460  000010                     i2fputs@c:
  4461                           	opt callstack 0
  4462  000010                     i2HigherAlarm@i:
  4463                           	opt callstack 0
  4464  000010                     i2_atoi$5674:
  4465                           	opt callstack 0
  4466                           
  4467                           ; 2 bytes @ 0xF
  4468  000010                     	ds	1
  4469  000011                     ??i2_GetIp:
  4470  000011                     ??i2_GetPressureV_pa:
  4471  000011                     i2___aodiv@counter:
  4472                           	opt callstack 0
  4473  000011                     i2___aomod@counter:
  4474                           	opt callstack 0
  4475  000011                     i2fputs@i:
  4476                           	opt callstack 0
  4477  000011                     i2___aldiv@divisor:
  4478                           	opt callstack 0
  4479  000011                     i2stoa@nuls:
  4480                           	opt callstack 0
  4481                           
  4482                           ; 7 bytes @ 0x10
  4483  000011                     	ds	1
  4484  000012                     i2___aodiv@sign:
  4485                           	opt callstack 0
  4486  000012                     i2___aomod@sign:
  4487                           	opt callstack 0
  4488  000012                     i2_atoi$5676:
  4489                           	opt callstack 0
  4490                           
  4491                           ; 2 bytes @ 0x11
  4492  000012                     	ds	1
  4493  000013                     ?i2_pad:
  4494                           	opt callstack 0
  4495  000013                     ?i2_abs:
  4496                           	opt callstack 0
  4497  000013                     i2GetPressureV_pa@adcv:
  4498                           	opt callstack 0
  4499  000013                     i2pad@fp:
  4500                           	opt callstack 0
  4501  000013                     i2abs@a:
  4502                           	opt callstack 0
  4503  000013                     i2___aodiv@quotient:
  4504                           	opt callstack 0
  4505                           
  4506                           ; 8 bytes @ 0x12
  4507  000013                     	ds	1
  4508  000014                     i2_atoi$5675:
  4509                           	opt callstack 0
  4510  000014                     i2_GetIp$4809:
  4511                           	opt callstack 0
  4512                           
  4513                           ; 2 bytes @ 0x13
  4514  000014                     	ds	1
  4515  000015                     ??i2_abs:
  4516  000015                     i2___aldiv@counter:
  4517                           	opt callstack 0
  4518  000015                     i2pad@buf:
  4519                           	opt callstack 0
  4520  000015                     i2atoi@n:
  4521                           	opt callstack 0
  4522  000015                     i2GetPressureV_pa@mv:
  4523                           	opt callstack 0
  4524                           
  4525                           ; 4 bytes @ 0x14
  4526  000015                     	ds	1
  4527  000016                     i2___aldiv@sign:
  4528                           	opt callstack 0
  4529  000016                     i2_GetIp$4810:
  4530                           	opt callstack 0
  4531                           
  4532                           ; 2 bytes @ 0x15
  4533  000016                     	ds	1
  4534  000017                     i2pad@p:
  4535                           	opt callstack 0
  4536  000017                     i2___aldiv@quotient:
  4537                           	opt callstack 0
  4538                           
  4539                           ; 4 bytes @ 0x16
  4540  000017                     	ds	1
  4541  000018                     i2stoa@i:
  4542                           	opt callstack 0
  4543                           
  4544                           ; 2 bytes @ 0x17
  4545  000018                     	ds	1
  4546  000019                     ??i2_pad:
  4547  000019                     i2GetPressureV_pa@p:
  4548                           	opt callstack 0
  4549                           
  4550                           ; 2 bytes @ 0x18
  4551  000019                     	ds	1
  4552  00001A                     i2pad@i:
  4553                           	opt callstack 0
  4554  00001A                     i2stoa@w:
  4555                           	opt callstack 0
  4556                           
  4557                           ; 2 bytes @ 0x19
  4558  00001A                     	ds	1
  4559  00001B                     ?i2_GetPressure_pa:
  4560                           	opt callstack 0
  4561  00001B                     ?i2_See5V:
  4562                           	opt callstack 0
  4563  00001B                     ?i2_See12V:
  4564                           	opt callstack 0
  4565  00001B                     SetTarget@pmax:
  4566                           	opt callstack 0
  4567                           
  4568                           ; 2 bytes @ 0x1A
  4569  00001B                     	ds	1
  4570  00001C                     i2pad@w:
  4571                           	opt callstack 0
  4572  00001C                     i2stoa@cp:
  4573                           	opt callstack 0
  4574                           
  4575                           ; 2 bytes @ 0x1B
  4576  00001C                     	ds	1
  4577  00001D                     ??i2_GetPressure_pa:
  4578  00001D                     SetTarget@ip:
  4579                           	opt callstack 0
  4580  00001D                     i2See5V@mv:
  4581                           	opt callstack 0
  4582  00001D                     i2See12V@mv:
  4583                           	opt callstack 0
  4584                           
  4585                           ; 4 bytes @ 0x1C
  4586  00001D                     	ds	1
  4587  00001E                     ?i2_ctoa:
  4588                           	opt callstack 0
  4589  00001E                     ?i2_dtoa:
  4590                           	opt callstack 0
  4591  00001E                     ?i2_xtoa:
  4592                           	opt callstack 0
  4593  00001E                     i2ctoa@fp:
  4594                           	opt callstack 0
  4595  00001E                     i2dtoa@fp:
  4596                           	opt callstack 0
  4597  00001E                     i2stoa@p:
  4598                           	opt callstack 0
  4599  00001E                     i2xtoa@fp:
  4600                           	opt callstack 0
  4601                           
  4602                           ; 2 bytes @ 0x1D
  4603  00001E                     	ds	1
  4604  00001F                     SetTarget@ep:
  4605                           	opt callstack 0
  4606  00001F                     i2GetPressure_pa@p32:
  4607                           	opt callstack 0
  4608                           
  4609                           ; 4 bytes @ 0x1E
  4610  00001F                     	ds	1
  4611  000020                     i2ctoa@c:
  4612                           	opt callstack 0
  4613  000020                     i2stoa@l:
  4614                           	opt callstack 0
  4615  000020                     i2dtoa@d:
  4616                           	opt callstack 0
  4617  000020                     i2xtoa@d:
  4618                           	opt callstack 0
  4619                           
  4620                           ; 8 bytes @ 0x1F
  4621  000020                     	ds	1
  4622  000021                     SetTarget@br:
  4623                           	opt callstack 0
  4624  000021                     i2See5V@adc:
  4625                           	opt callstack 0
  4626  000021                     i2See12V@adc:
  4627                           	opt callstack 0
  4628  000021                     i2ctoa@w:
  4629                           	opt callstack 0
  4630                           
  4631                           ; 2 bytes @ 0x20
  4632  000021                     	ds	2
  4633  000023                     SetTarget@vmax:
  4634                           	opt callstack 0
  4635  000023                     i2GetPressure_pa@adc:
  4636                           	opt callstack 0
  4637  000023                     i2See5V@v12:
  4638                           	opt callstack 0
  4639  000023                     i2See12V@v12:
  4640                           	opt callstack 0
  4641                           
  4642                           ; 2 bytes @ 0x22
  4643  000023                     	ds	2
  4644  000025                     SetTarget@vmin:
  4645                           	opt callstack 0
  4646  000025                     i2GetPressure_pa@p:
  4647                           	opt callstack 0
  4648                           
  4649                           ; 2 bytes @ 0x24
  4650  000025                     	ds	2
  4651  000027                     i2GetPressure_pa@mv:
  4652                           	opt callstack 0
  4653                           
  4654                           ; 4 bytes @ 0x26
  4655  000027                     	ds	1
  4656  000028                     ??i2_dtoa:
  4657  000028                     i2xtoa@x:
  4658                           	opt callstack 0
  4659                           
  4660                           ; 1 bytes @ 0x27
  4661  000028                     	ds	1
  4662  000029                     ??i2_xtoa:
  4663                           
  4664                           ; 1 bytes @ 0x28
  4665  000029                     	ds	2
  4666  00002B                     ?_GetPressure_mbar02:
  4667                           	opt callstack 0
  4668                           
  4669                           ; 2 bytes @ 0x2A
  4670  00002B                     	ds	2
  4671  00002D                     _GetPressure_mbar02$7129:
  4672                           	opt callstack 0
  4673                           
  4674                           ; 2 bytes @ 0x2C
  4675  00002D                     	ds	3
  4676  000030                     i2_dtoa$5178:
  4677                           	opt callstack 0
  4678                           
  4679                           ; 2 bytes @ 0x2F
  4680  000030                     	ds	1
  4681  000031                     i2_xtoa$5199:
  4682                           	opt callstack 0
  4683                           
  4684                           ; 2 bytes @ 0x30
  4685  000031                     	ds	1
  4686  000032                     i2dtoa@p:
  4687                           	opt callstack 0
  4688                           
  4689                           ; 2 bytes @ 0x31
  4690  000032                     	ds	1
  4691  000033                     i2_xtoa$5200:
  4692                           	opt callstack 0
  4693                           
  4694                           ; 2 bytes @ 0x32
  4695  000033                     	ds	1
  4696  000034                     i2dtoa@w:
  4697                           	opt callstack 0
  4698                           
  4699                           ; 2 bytes @ 0x33
  4700  000034                     	ds	1
  4701  000035                     i2xtoa@p:
  4702                           	opt callstack 0
  4703                           
  4704                           ; 2 bytes @ 0x34
  4705  000035                     	ds	1
  4706  000036                     i2dtoa@s:
  4707                           	opt callstack 0
  4708                           
  4709                           ; 2 bytes @ 0x35
  4710  000036                     	ds	1
  4711  000037                     i2xtoa@w:
  4712                           	opt callstack 0
  4713                           
  4714                           ; 2 bytes @ 0x36
  4715  000037                     	ds	1
  4716  000038                     i2dtoa@n:
  4717                           	opt callstack 0
  4718                           
  4719                           ; 8 bytes @ 0x37
  4720  000038                     	ds	1
  4721  000039                     i2xtoa@n:
  4722                           	opt callstack 0
  4723                           
  4724                           ; 8 bytes @ 0x38
  4725  000039                     	ds	7
  4726  000040                     i2dtoa@i:
  4727                           	opt callstack 0
  4728                           
  4729                           ; 2 bytes @ 0x3F
  4730  000040                     	ds	1
  4731  000041                     i2xtoa@i:
  4732                           	opt callstack 0
  4733                           
  4734                           ; 2 bytes @ 0x40
  4735  000041                     	ds	2
  4736  000043                     i2xtoa@c:
  4737                           	opt callstack 0
  4738                           
  4739                           ; 2 bytes @ 0x42
  4740  000043                     	ds	2
  4741  000045                     ?i2_vfpfcnvrt:
  4742                           	opt callstack 0
  4743  000045                     i2vfpfcnvrt@fp:
  4744                           	opt callstack 0
  4745                           
  4746                           ; 2 bytes @ 0x44
  4747  000045                     	ds	2
  4748  000047                     i2vfpfcnvrt@fmt:
  4749                           	opt callstack 0
  4750                           
  4751                           ; 2 bytes @ 0x46
  4752  000047                     	ds	2
  4753  000049                     i2vfpfcnvrt@ap:
  4754                           	opt callstack 0
  4755                           
  4756                           ; 2 bytes @ 0x48
  4757  000049                     	ds	2
  4758  00004B                     ??i2_vfpfcnvrt:
  4759                           
  4760                           ; 1 bytes @ 0x4A
  4761  00004B                     	ds	4
  4762  00004F                     ?i2_vfprintf:
  4763                           	opt callstack 0
  4764  00004F                     i2vfprintf@fp:
  4765                           	opt callstack 0
  4766                           
  4767                           ; 2 bytes @ 0x4E
  4768  00004F                     	ds	2
  4769  000051                     i2vfprintf@fmt:
  4770                           	opt callstack 0
  4771                           
  4772                           ; 2 bytes @ 0x50
  4773  000051                     	ds	2
  4774  000053                     i2vfprintf@ap:
  4775                           	opt callstack 0
  4776                           
  4777                           ; 2 bytes @ 0x52
  4778  000053                     	ds	2
  4779  000055                     i2vfprintf@cfmt:
  4780                           	opt callstack 0
  4781                           
  4782                           ; 2 bytes @ 0x54
  4783  000055                     	ds	2
  4784  000057                     i2AlarmDisplay@t:
  4785                           	opt callstack 0
  4786                           
  4787                           ; 1 bytes @ 0x56
  4788  000057                     	ds	1
  4789  000058                     i2_AlarmDisplay$4015:
  4790                           	opt callstack 0
  4791                           
  4792                           ; 2 bytes @ 0x57
  4793  000058                     	ds	1
  4794  000059                     i2printf@ap:
  4795                           	opt callstack 0
  4796                           
  4797                           ; 2 bytes @ 0x58
  4798  000059                     	ds	1
  4799  00005A                     i2_AlarmDisplay$4016:
  4800                           	opt callstack 0
  4801                           
  4802                           ; 2 bytes @ 0x59
  4803  00005A                     	ds	1
  4804  00005B                     ??_AlarmHandler:
  4805  00005B                     ??_MonitorPressureTask:
  4806  00005B                     ??i2_BuzzerTask:
  4807  00005B                     i2SetCalibrateState@calib:
  4808                           	opt callstack 0
  4809  00005B                     i2SetAlarmSV1@value:
  4810                           	opt callstack 0
  4811  00005B                     i2SetSV1@value:
  4812                           	opt callstack 0
  4813                           
  4814                           ; 1 bytes @ 0x5A
  4815  00005B                     	ds	1
  4816  00005C                     UpdateState@initPhase:
  4817                           	opt callstack 0
  4818                           
  4819                           ; 2 bytes @ 0x5B
  4820  00005C                     	ds	1
  4821  00005D                     
  4822                           ; 1 bytes @ 0x5C
  4823  00005D                     	ds	1
  4824  00005E                     i2HistAlarm@i:
  4825                           	opt callstack 0
  4826                           
  4827                           ; 2 bytes @ 0x5D
  4828  00005E                     	ds	2
  4829  000060                     
  4830                           ; 1 bytes @ 0x5F
  4831 ;;
  4832 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  4833 ;;
  4834 ;; *************** function _main *****************
  4835 ;; Defined at:
  4836 ;;		line 75 in file "main.c"
  4837 ;; Parameters:    Size  Location     Type
  4838 ;;		None
  4839 ;; Auto vars:     Size  Location     Type
  4840 ;;  ch              1    0[BANK3 ] unsigned char 
  4841 ;; Return value:  Size  Location     Type
  4842 ;;                  1    wreg      void 
  4843 ;; Registers used:
  4844 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4845 ;; Tracked objects:
  4846 ;;		On entry : 0/0
  4847 ;;		On exit  : 3F/3
  4848 ;;		Unchanged: 0/0
  4849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4851 ;;      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4852 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4853 ;;      Totals:         0       0       1       0       1       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4854 ;;Total ram usage:        2 bytes
  4855 ;; Hardware stack levels required when called:   29
  4856 ;; This function calls:
  4857 ;;		_AlarmCheckTask
  4858 ;;		_AlarmInit
  4859 ;;		_ButtonInit
  4860 ;;		_BuzzerCheck
  4861 ;;		_BuzzerTest
  4862 ;;		_ControllerInit
  4863 ;;		_DisableAlarmSV1
  4864 ;;		_DisplayTask
  4865 ;;		_DumpI2C
  4866 ;;		_EnableAlarmSV1
  4867 ;;		_HistAlarm
  4868 ;;		_InitDisplay
  4869 ;;		_LCDOff
  4870 ;;		_LCDOn
  4871 ;;		_MonitorDisable
  4872 ;;		_MonitorDump
  4873 ;;		_MonitorEnable
  4874 ;;		_MonitorInit
  4875 ;;		_MuteAlarm
  4876 ;;		_SYSTEM_Initialize
  4877 ;;		_See12V
  4878 ;;		_See5V
  4879 ;;		_SeePressureV_pa
  4880 ;;		_SeePressure_pa
  4881 ;;		_SetAlarmSV1
  4882 ;;		_SetCalibrateState
  4883 ;;		_SetSV1
  4884 ;;		_TestAlarm
  4885 ;;		_UART1_is_rx_ready
  4886 ;;		___llmod
  4887 ;;		_getch
  4888 ;;		_printf
  4889 ;; This function is called by:
  4890 ;;		Startup code after reset
  4891 ;; This function uses a non-reentrant model
  4892 ;;
  4893                           
  4894                           	psect	text0
  4895  002D84                     __ptext0:
  4896                           	opt callstack 0
  4897  002D84                     _main:
  4898                           	opt callstack 2
  4899                           
  4900                           ;main.c: 78:     SYSTEM_Initialize();
  4901                           
  4902                           ;incstack = 0
  4903  002D84  EC53  F049         	call	_SYSTEM_Initialize	;wreg free
  4904                           
  4905                           ; BSR set to: 61
  4906                           ;main.c: 79:     SetSV1(0);
  4907  002D88  0E00               	movlw	0
  4908  002D8A  EC4E  F04B         	call	_SetSV1
  4909                           
  4910                           ;main.c: 80:     SetAlarmSV1(1);
  4911  002D8E  0E01               	movlw	1
  4912  002D90  EC68  F04B         	call	_SetAlarmSV1
  4913                           
  4914                           ;main.c: 81:     PWM6CON = 0x00;
  4915  002D94  0E00               	movlw	0
  4916  002D96  6E6A               	movwf	106,c	;volatile
  4917                           
  4918                           ;main.c: 90:     (INTCON0bits.GIE = 1);
  4919  002D98  8ED2               	bsf	210,7,c	;volatile
  4920                           
  4921                           ;main.c: 95:     printf ("\033c Oxyvita\r\n");
  4922  002D9A  0E77               	movlw	low STR_1
  4923  002D9C  0101               	movlb	1	; () banked
  4924  002D9E  6F71               	movwf	printf@fmt& (0+255),b
  4925  002DA0  0EFF               	movlw	high STR_1
  4926  002DA2  6F72               	movwf	(printf@fmt+1)& (0+255),b
  4927  002DA4  EC32  F04D         	call	_printf	;wreg free
  4928                           
  4929                           ; BSR set to: 2
  4930                           ;main.c: 96:     LCDOn();
  4931  002DA8  EC22  F052         	call	_LCDOn	;wreg free
  4932                           
  4933                           ; BSR set to: 1
  4934                           ;main.c: 97:     InitDisplay();
  4935  002DAC  ECF2  F051         	call	_InitDisplay	;wreg free
  4936                           
  4937                           ; BSR set to: 0
  4938                           ;main.c: 99:     AlarmInit();
  4939  002DB0  EC06  F041         	call	_AlarmInit	;wreg free
  4940                           
  4941                           ;main.c: 100:     MonitorInit();
  4942  002DB4  ECF3  F041         	call	_MonitorInit	;wreg free
  4943                           
  4944                           ;main.c: 101:     ControllerInit();
  4945  002DB8  EC74  F049         	call	_ControllerInit	;wreg free
  4946                           
  4947                           ; BSR set to: 1
  4948                           ;main.c: 102:     ButtonInit();
  4949  002DBC  EC1D  F04D         	call	_ButtonInit	;wreg free
  4950                           
  4951                           ; BSR set to: 1
  4952                           ;main.c: 117:     BuzzerCheck();
  4953  002DC0  EC9B  F03E         	call	_BuzzerCheck	;wreg free
  4954  002DC4                     l22387:
  4955                           
  4956                           ;main.c: 120:     {;main.c: 123:         DisplayTask();
  4957  002DC4  EC98  F03A         	call	_DisplayTask	;wreg free
  4958                           
  4959                           ;main.c: 124:         AlarmCheckTask();
  4960  002DC8  EC17  F027         	call	_AlarmCheckTask	;wreg free
  4961                           
  4962                           ;main.c: 126:         if (PCON0&0xC0) printf("\r\nStack:%02X\r\n");
  4963  002DCC  006F FFC0  F1C6    	movff	16368,??_main	;volatile
  4964  002DD2  0EC0               	movlw	192
  4965  002DD4  0101               	movlb	1	; () banked
  4966  002DD6  17C6               	andwf	??_main& (0+255),f,b
  4967  002DD8  B4D8               	btfsc	status,2,c
  4968  002DDA  D006               	goto	l22395
  4969                           
  4970                           ; BSR set to: 1
  4971  002DDC  0E4D               	movlw	low STR_2
  4972  002DDE  6F71               	movwf	printf@fmt& (0+255),b
  4973  002DE0  0EFF               	movlw	high STR_2
  4974  002DE2  6F72               	movwf	(printf@fmt+1)& (0+255),b
  4975  002DE4  EC32  F04D         	call	_printf	;wreg free
  4976  002DE8                     l22395:
  4977                           
  4978                           ;main.c: 127:         static uint32_t cnt = 0;;main.c: 128:         if (cnt==0) printf("
      +                          m\r\n");
  4979  002DE8  0102               	movlb	2	; () banked
  4980  002DEA  5126               	movf	main@cnt& (0+255),w,b
  4981  002DEC  1127               	iorwf	(main@cnt+1)& (0+255),w,b
  4982  002DEE  1128               	iorwf	(main@cnt+2)& (0+255),w,b
  4983  002DF0  1129               	iorwf	(main@cnt+3)& (0+255),w,b
  4984  002DF2  A4D8               	btfss	status,2,c
  4985  002DF4  D007               	goto	l22399
  4986                           
  4987                           ; BSR set to: 2
  4988  002DF6  0EEC               	movlw	low STR_3
  4989  002DF8  0101               	movlb	1	; () banked
  4990  002DFA  6F71               	movwf	printf@fmt& (0+255),b
  4991  002DFC  0EFF               	movlw	high STR_3
  4992  002DFE  6F72               	movwf	(printf@fmt+1)& (0+255),b
  4993  002E00  EC32  F04D         	call	_printf	;wreg free
  4994  002E04                     l22399:
  4995                           
  4996                           ; BSR set to: 2
  4997                           ;main.c: 129:         cnt = (cnt+1)%300000;
  4998  002E04  0E01               	movlw	1
  4999  002E06  2526               	addwf	main@cnt& (0+255),w,b
  5000  002E08  0101               	movlb	1	; () banked
  5001  002E0A  6F04               	movwf	___llmod@dividend& (0+255),b
  5002  002E0C  0E00               	movlw	0
  5003  002E0E  0102               	movlb	2	; () banked
  5004  002E10  2127               	addwfc	(main@cnt+1)& (0+255),w,b
  5005  002E12  0101               	movlb	1	; () banked
  5006  002E14  6F05               	movwf	(___llmod@dividend+1)& (0+255),b
  5007  002E16  0E00               	movlw	0
  5008  002E18  0102               	movlb	2	; () banked
  5009  002E1A  2128               	addwfc	(main@cnt+2)& (0+255),w,b
  5010  002E1C  0101               	movlb	1	; () banked
  5011  002E1E  6F06               	movwf	(___llmod@dividend+2)& (0+255),b
  5012  002E20  0E00               	movlw	0
  5013  002E22  0102               	movlb	2	; () banked
  5014  002E24  2129               	addwfc	(main@cnt+3)& (0+255),w,b
  5015  002E26  0101               	movlb	1	; () banked
  5016  002E28  6F07               	movwf	(___llmod@dividend+3)& (0+255),b
  5017  002E2A  0EE0               	movlw	224
  5018  002E2C  6F08               	movwf	___llmod@divisor& (0+255),b
  5019  002E2E  0E93               	movlw	147
  5020  002E30  6F09               	movwf	(___llmod@divisor+1)& (0+255),b
  5021  002E32  0E04               	movlw	4
  5022  002E34  6F0A               	movwf	(___llmod@divisor+2)& (0+255),b
  5023  002E36  0E00               	movlw	0
  5024  002E38  6F0B               	movwf	(___llmod@divisor+3)& (0+255),b
  5025  002E3A  EC9D  F042         	call	___llmod	;wreg free
  5026  002E3E  0060  F410  F226   	movff	?___llmod,main@cnt
  5027  002E44  0060  F414  F227   	movff	?___llmod+1,main@cnt+1
  5028  002E4A  0060  F418  F228   	movff	?___llmod+2,main@cnt+2
  5029  002E50  0060  F41C  F229   	movff	?___llmod+3,main@cnt+3
  5030                           
  5031                           ; BSR set to: 1
  5032                           ;main.c: 131:         if (UART1_is_rx_ready())
  5033  002E56  ECEF  F050         	call	_UART1_is_rx_ready	;wreg free
  5034  002E5A  0900               	iorlw	0
  5035  002E5C  B4D8               	btfsc	status,2,c
  5036  002E5E  D7B2               	goto	l22387
  5037                           
  5038                           ; BSR set to: 1
  5039                           ;main.c: 132:         {;main.c: 133:             char ch = getch();
  5040  002E60  ECED  F052         	call	_getch	;wreg free
  5041  002E64  0103               	movlb	3	; () banked
  5042  002E66  6FF9               	movwf	main@ch& (0+255),b
  5043                           
  5044                           ; BSR set to: 3
  5045                           ;main.c: 134:             if (ch=='a') BuzzerTest('A');
  5046  002E68  0E61               	movlw	97
  5047  002E6A  19F9               	xorwf	main@ch& (0+255),w,b
  5048  002E6C  A4D8               	btfss	status,2,c
  5049  002E6E  D003               	goto	l22409
  5050                           
  5051                           ; BSR set to: 3
  5052  002E70  0E41               	movlw	65
  5053  002E72  EC2E  F03F         	call	_BuzzerTest
  5054  002E76                     l22409:
  5055                           
  5056                           ;main.c: 135:             if (ch=='b') BuzzerTest('B');
  5057  002E76  0E62               	movlw	98
  5058  002E78  0103               	movlb	3	; () banked
  5059  002E7A  19F9               	xorwf	main@ch& (0+255),w,b
  5060  002E7C  A4D8               	btfss	status,2,c
  5061  002E7E  D003               	goto	l22413
  5062                           
  5063                           ; BSR set to: 3
  5064  002E80  0E42               	movlw	66
  5065  002E82  EC2E  F03F         	call	_BuzzerTest
  5066  002E86                     l22413:
  5067                           
  5068                           ;main.c: 136:             if (ch=='c') BuzzerTest('C');
  5069  002E86  0E63               	movlw	99
  5070  002E88  0103               	movlb	3	; () banked
  5071  002E8A  19F9               	xorwf	main@ch& (0+255),w,b
  5072  002E8C  A4D8               	btfss	status,2,c
  5073  002E8E  D003               	goto	l22417
  5074                           
  5075                           ; BSR set to: 3
  5076  002E90  0E43               	movlw	67
  5077  002E92  EC2E  F03F         	call	_BuzzerTest
  5078  002E96                     l22417:
  5079                           
  5080                           ;main.c: 137:             if (ch=='d') BuzzerTest('D');
  5081  002E96  0E64               	movlw	100
  5082  002E98  0103               	movlb	3	; () banked
  5083  002E9A  19F9               	xorwf	main@ch& (0+255),w,b
  5084  002E9C  A4D8               	btfss	status,2,c
  5085  002E9E  D003               	goto	l22421
  5086                           
  5087                           ; BSR set to: 3
  5088  002EA0  0E44               	movlw	68
  5089  002EA2  EC2E  F03F         	call	_BuzzerTest
  5090  002EA6                     l22421:
  5091                           
  5092                           ;main.c: 138:             if (ch=='e') BuzzerTest('E');
  5093  002EA6  0E65               	movlw	101
  5094  002EA8  0103               	movlb	3	; () banked
  5095  002EAA  19F9               	xorwf	main@ch& (0+255),w,b
  5096  002EAC  A4D8               	btfss	status,2,c
  5097  002EAE  D003               	goto	l22425
  5098                           
  5099                           ; BSR set to: 3
  5100  002EB0  0E45               	movlw	69
  5101  002EB2  EC2E  F03F         	call	_BuzzerTest
  5102  002EB6                     l22425:
  5103                           
  5104                           ;main.c: 139:             if (ch=='f') BuzzerTest('F');
  5105  002EB6  0E66               	movlw	102
  5106  002EB8  0103               	movlb	3	; () banked
  5107  002EBA  19F9               	xorwf	main@ch& (0+255),w,b
  5108  002EBC  A4D8               	btfss	status,2,c
  5109  002EBE  D003               	goto	l22429
  5110                           
  5111                           ; BSR set to: 3
  5112  002EC0  0E46               	movlw	70
  5113  002EC2  EC2E  F03F         	call	_BuzzerTest
  5114  002EC6                     l22429:
  5115                           
  5116                           ;main.c: 140:             if (ch=='o') BuzzerTest('O');
  5117  002EC6  0E6F               	movlw	111
  5118  002EC8  0103               	movlb	3	; () banked
  5119  002ECA  19F9               	xorwf	main@ch& (0+255),w,b
  5120  002ECC  A4D8               	btfss	status,2,c
  5121  002ECE  D003               	goto	l22433
  5122                           
  5123                           ; BSR set to: 3
  5124  002ED0  0E4F               	movlw	79
  5125  002ED2  EC2E  F03F         	call	_BuzzerTest
  5126  002ED6                     l22433:
  5127                           
  5128                           ;main.c: 141:             if (ch=='t') BuzzerCheck();
  5129  002ED6  0E74               	movlw	116
  5130  002ED8  0103               	movlb	3	; () banked
  5131  002EDA  19F9               	xorwf	main@ch& (0+255),w,b
  5132  002EDC  B4D8               	btfsc	status,2,c
  5133                           
  5134                           ; BSR set to: 3
  5135  002EDE  EC9B  F03E         	call	_BuzzerCheck	;wreg free
  5136                           
  5137                           ;main.c: 142:             if (ch=='h') HistAlarm();
  5138  002EE2  0E68               	movlw	104
  5139  002EE4  0103               	movlb	3	; () banked
  5140  002EE6  19F9               	xorwf	main@ch& (0+255),w,b
  5141  002EE8  B4D8               	btfsc	status,2,c
  5142                           
  5143                           ; BSR set to: 3
  5144  002EEA  EC80  F032         	call	_HistAlarm	;wreg free
  5145                           
  5146                           ;main.c: 143:             if (ch=='m') MuteAlarm();
  5147  002EEE  0E6D               	movlw	109
  5148  002EF0  0103               	movlb	3	; () banked
  5149  002EF2  19F9               	xorwf	main@ch& (0+255),w,b
  5150  002EF4  B4D8               	btfsc	status,2,c
  5151                           
  5152                           ; BSR set to: 3
  5153  002EF6  ECDA  F022         	call	_MuteAlarm	;wreg free
  5154                           
  5155                           ;main.c: 144:             if (ch=='i') DumpI2C();
  5156  002EFA  0E69               	movlw	105
  5157  002EFC  0103               	movlb	3	; () banked
  5158  002EFE  19F9               	xorwf	main@ch& (0+255),w,b
  5159  002F00  B4D8               	btfsc	status,2,c
  5160                           
  5161                           ; BSR set to: 3
  5162  002F02  EC75  F053         	call	_DumpI2C	;wreg free
  5163                           
  5164                           ; BSR set to: 3
  5165                           ;main.c: 145:             if (ch=='v') SetSV1(0);
  5166  002F06  0E76               	movlw	118
  5167  002F08  19F9               	xorwf	main@ch& (0+255),w,b
  5168  002F0A  A4D8               	btfss	status,2,c
  5169  002F0C  D003               	goto	l22453
  5170                           
  5171                           ; BSR set to: 3
  5172  002F0E  0E00               	movlw	0
  5173  002F10  EC4E  F04B         	call	_SetSV1
  5174  002F14                     l22453:
  5175                           
  5176                           ;main.c: 146:             if (ch=='V') SetSV1(1);
  5177  002F14  0E56               	movlw	86
  5178  002F16  0103               	movlb	3	; () banked
  5179  002F18  19F9               	xorwf	main@ch& (0+255),w,b
  5180  002F1A  A4D8               	btfss	status,2,c
  5181  002F1C  D003               	goto	l22457
  5182                           
  5183                           ; BSR set to: 3
  5184  002F1E  0E01               	movlw	1
  5185  002F20  EC4E  F04B         	call	_SetSV1
  5186  002F24                     l22457:
  5187                           
  5188                           ;main.c: 147:             if (ch=='0') TestAlarm(0);
  5189  002F24  0E30               	movlw	48
  5190  002F26  0103               	movlb	3	; () banked
  5191  002F28  19F9               	xorwf	main@ch& (0+255),w,b
  5192  002F2A  A4D8               	btfss	status,2,c
  5193  002F2C  D007               	goto	l22461
  5194                           
  5195                           ; BSR set to: 3
  5196  002F2E  0E00               	movlw	0
  5197  002F30  0101               	movlb	1	; () banked
  5198  002F32  6F84               	movwf	(TestAlarm@id+1)& (0+255),b
  5199  002F34  0E00               	movlw	0
  5200  002F36  6F83               	movwf	TestAlarm@id& (0+255),b
  5201  002F38  ECEA  F039         	call	_TestAlarm	;wreg free
  5202  002F3C                     l22461:
  5203                           
  5204                           ;main.c: 148:             if (ch=='1') TestAlarm(1);
  5205  002F3C  0E31               	movlw	49
  5206  002F3E  0103               	movlb	3	; () banked
  5207  002F40  19F9               	xorwf	main@ch& (0+255),w,b
  5208  002F42  A4D8               	btfss	status,2,c
  5209  002F44  D007               	goto	l22465
  5210                           
  5211                           ; BSR set to: 3
  5212  002F46  0E00               	movlw	0
  5213  002F48  0101               	movlb	1	; () banked
  5214  002F4A  6F84               	movwf	(TestAlarm@id+1)& (0+255),b
  5215  002F4C  0E01               	movlw	1
  5216  002F4E  6F83               	movwf	TestAlarm@id& (0+255),b
  5217  002F50  ECEA  F039         	call	_TestAlarm	;wreg free
  5218  002F54                     l22465:
  5219                           
  5220                           ;main.c: 149:             if (ch=='2') TestAlarm(2);
  5221  002F54  0E32               	movlw	50
  5222  002F56  0103               	movlb	3	; () banked
  5223  002F58  19F9               	xorwf	main@ch& (0+255),w,b
  5224  002F5A  A4D8               	btfss	status,2,c
  5225  002F5C  D007               	goto	l22469
  5226                           
  5227                           ; BSR set to: 3
  5228  002F5E  0E00               	movlw	0
  5229  002F60  0101               	movlb	1	; () banked
  5230  002F62  6F84               	movwf	(TestAlarm@id+1)& (0+255),b
  5231  002F64  0E02               	movlw	2
  5232  002F66  6F83               	movwf	TestAlarm@id& (0+255),b
  5233  002F68  ECEA  F039         	call	_TestAlarm	;wreg free
  5234  002F6C                     l22469:
  5235                           
  5236                           ;main.c: 150:             if (ch=='3') TestAlarm(3);
  5237  002F6C  0E33               	movlw	51
  5238  002F6E  0103               	movlb	3	; () banked
  5239  002F70  19F9               	xorwf	main@ch& (0+255),w,b
  5240  002F72  A4D8               	btfss	status,2,c
  5241  002F74  D007               	goto	l22473
  5242                           
  5243                           ; BSR set to: 3
  5244  002F76  0E00               	movlw	0
  5245  002F78  0101               	movlb	1	; () banked
  5246  002F7A  6F84               	movwf	(TestAlarm@id+1)& (0+255),b
  5247  002F7C  0E03               	movlw	3
  5248  002F7E  6F83               	movwf	TestAlarm@id& (0+255),b
  5249  002F80  ECEA  F039         	call	_TestAlarm	;wreg free
  5250  002F84                     l22473:
  5251                           
  5252                           ;main.c: 151:             if (ch=='4') TestAlarm(4);
  5253  002F84  0E34               	movlw	52
  5254  002F86  0103               	movlb	3	; () banked
  5255  002F88  19F9               	xorwf	main@ch& (0+255),w,b
  5256  002F8A  A4D8               	btfss	status,2,c
  5257  002F8C  D007               	goto	l22477
  5258                           
  5259                           ; BSR set to: 3
  5260  002F8E  0E00               	movlw	0
  5261  002F90  0101               	movlb	1	; () banked
  5262  002F92  6F84               	movwf	(TestAlarm@id+1)& (0+255),b
  5263  002F94  0E04               	movlw	4
  5264  002F96  6F83               	movwf	TestAlarm@id& (0+255),b
  5265  002F98  ECEA  F039         	call	_TestAlarm	;wreg free
  5266  002F9C                     l22477:
  5267                           
  5268                           ;main.c: 152:             if (ch=='5') TestAlarm(5);
  5269  002F9C  0E35               	movlw	53
  5270  002F9E  0103               	movlb	3	; () banked
  5271  002FA0  19F9               	xorwf	main@ch& (0+255),w,b
  5272  002FA2  A4D8               	btfss	status,2,c
  5273  002FA4  D007               	goto	l22481
  5274                           
  5275                           ; BSR set to: 3
  5276  002FA6  0E00               	movlw	0
  5277  002FA8  0101               	movlb	1	; () banked
  5278  002FAA  6F84               	movwf	(TestAlarm@id+1)& (0+255),b
  5279  002FAC  0E05               	movlw	5
  5280  002FAE  6F83               	movwf	TestAlarm@id& (0+255),b
  5281  002FB0  ECEA  F039         	call	_TestAlarm	;wreg free
  5282  002FB4                     l22481:
  5283                           
  5284                           ;main.c: 153:             if (ch=='6') TestAlarm(6);
  5285  002FB4  0E36               	movlw	54
  5286  002FB6  0103               	movlb	3	; () banked
  5287  002FB8  19F9               	xorwf	main@ch& (0+255),w,b
  5288  002FBA  A4D8               	btfss	status,2,c
  5289  002FBC  D007               	goto	l22485
  5290                           
  5291                           ; BSR set to: 3
  5292  002FBE  0E00               	movlw	0
  5293  002FC0  0101               	movlb	1	; () banked
  5294  002FC2  6F84               	movwf	(TestAlarm@id+1)& (0+255),b
  5295  002FC4  0E06               	movlw	6
  5296  002FC6  6F83               	movwf	TestAlarm@id& (0+255),b
  5297  002FC8  ECEA  F039         	call	_TestAlarm	;wreg free
  5298  002FCC                     l22485:
  5299                           
  5300                           ;main.c: 154:             if (ch=='7') TestAlarm(7);
  5301  002FCC  0E37               	movlw	55
  5302  002FCE  0103               	movlb	3	; () banked
  5303  002FD0  19F9               	xorwf	main@ch& (0+255),w,b
  5304  002FD2  A4D8               	btfss	status,2,c
  5305  002FD4  D007               	goto	l22489
  5306                           
  5307                           ; BSR set to: 3
  5308  002FD6  0E00               	movlw	0
  5309  002FD8  0101               	movlb	1	; () banked
  5310  002FDA  6F84               	movwf	(TestAlarm@id+1)& (0+255),b
  5311  002FDC  0E07               	movlw	7
  5312  002FDE  6F83               	movwf	TestAlarm@id& (0+255),b
  5313  002FE0  ECEA  F039         	call	_TestAlarm	;wreg free
  5314  002FE4                     l22489:
  5315                           
  5316                           ;main.c: 155:             if (ch=='8') TestAlarm(8);
  5317  002FE4  0E38               	movlw	56
  5318  002FE6  0103               	movlb	3	; () banked
  5319  002FE8  19F9               	xorwf	main@ch& (0+255),w,b
  5320  002FEA  A4D8               	btfss	status,2,c
  5321  002FEC  D007               	goto	l22493
  5322                           
  5323                           ; BSR set to: 3
  5324  002FEE  0E00               	movlw	0
  5325  002FF0  0101               	movlb	1	; () banked
  5326  002FF2  6F84               	movwf	(TestAlarm@id+1)& (0+255),b
  5327  002FF4  0E08               	movlw	8
  5328  002FF6  6F83               	movwf	TestAlarm@id& (0+255),b
  5329  002FF8  ECEA  F039         	call	_TestAlarm	;wreg free
  5330  002FFC                     l22493:
  5331                           
  5332                           ;main.c: 156:             if (ch=='9') TestAlarm(9);
  5333  002FFC  0E39               	movlw	57
  5334  002FFE  0103               	movlb	3	; () banked
  5335  003000  19F9               	xorwf	main@ch& (0+255),w,b
  5336  003002  A4D8               	btfss	status,2,c
  5337  003004  D007               	goto	l22497
  5338                           
  5339                           ; BSR set to: 3
  5340  003006  0E00               	movlw	0
  5341  003008  0101               	movlb	1	; () banked
  5342  00300A  6F84               	movwf	(TestAlarm@id+1)& (0+255),b
  5343  00300C  0E09               	movlw	9
  5344  00300E  6F83               	movwf	TestAlarm@id& (0+255),b
  5345  003010  ECEA  F039         	call	_TestAlarm	;wreg free
  5346  003014                     l22497:
  5347                           
  5348                           ;main.c: 157:             if (ch=='G') SetSV1(1);
  5349  003014  0E47               	movlw	71
  5350  003016  0103               	movlb	3	; () banked
  5351  003018  19F9               	xorwf	main@ch& (0+255),w,b
  5352  00301A  A4D8               	btfss	status,2,c
  5353  00301C  D003               	goto	l22501
  5354                           
  5355                           ; BSR set to: 3
  5356  00301E  0E01               	movlw	1
  5357  003020  EC4E  F04B         	call	_SetSV1
  5358  003024                     l22501:
  5359                           
  5360                           ;main.c: 158:             if (ch=='g') SetSV1(0);
  5361  003024  0E67               	movlw	103
  5362  003026  0103               	movlb	3	; () banked
  5363  003028  19F9               	xorwf	main@ch& (0+255),w,b
  5364  00302A  A4D8               	btfss	status,2,c
  5365  00302C  D003               	goto	l22505
  5366                           
  5367                           ; BSR set to: 3
  5368  00302E  0E00               	movlw	0
  5369  003030  EC4E  F04B         	call	_SetSV1
  5370  003034                     l22505:
  5371                           
  5372                           ;main.c: 159:             if (ch=='R') MonitorEnable();
  5373  003034  0E52               	movlw	82
  5374  003036  0103               	movlb	3	; () banked
  5375  003038  19F9               	xorwf	main@ch& (0+255),w,b
  5376  00303A  B4D8               	btfsc	status,2,c
  5377                           
  5378                           ; BSR set to: 3
  5379  00303C  EC71  F052         	call	_MonitorEnable	;wreg free
  5380                           
  5381                           ;main.c: 160:             if (ch=='r') MonitorDisable();
  5382  003040  0E72               	movlw	114
  5383  003042  0103               	movlb	3	; () banked
  5384  003044  19F9               	xorwf	main@ch& (0+255),w,b
  5385  003046  B4D8               	btfsc	status,2,c
  5386                           
  5387                           ; BSR set to: 3
  5388  003048  EC75  F052         	call	_MonitorDisable	;wreg free
  5389                           
  5390                           ;main.c: 161:             if (ch=='d') DisableAlarmSV1();
  5391  00304C  0E64               	movlw	100
  5392  00304E  0103               	movlb	3	; () banked
  5393  003050  19F9               	xorwf	main@ch& (0+255),w,b
  5394  003052  B4D8               	btfsc	status,2,c
  5395                           
  5396                           ; BSR set to: 3
  5397  003054  EC7D  F052         	call	_DisableAlarmSV1	;wreg free
  5398                           
  5399                           ;main.c: 162:             if (ch=='D') EnableAlarmSV1();
  5400  003058  0E44               	movlw	68
  5401  00305A  0103               	movlb	3	; () banked
  5402  00305C  19F9               	xorwf	main@ch& (0+255),w,b
  5403  00305E  B4D8               	btfsc	status,2,c
  5404                           
  5405                           ; BSR set to: 3
  5406  003060  EC79  F052         	call	_EnableAlarmSV1	;wreg free
  5407                           
  5408                           ;main.c: 164:             if (ch=='l') printf("\r\nPRS: %d pa PRSV: %d pa 12V: %d mV 5V:
      +                          %d \r\n", SeePressure_pa(), SeePressureV_pa(), See12V(), See5V());
  5409  003064  0E6C               	movlw	108
  5410  003066  0103               	movlb	3	; () banked
  5411  003068  19F9               	xorwf	main@ch& (0+255),w,b
  5412  00306A  A4D8               	btfss	status,2,c
  5413  00306C  D027               	goto	l22525
  5414                           
  5415                           ; BSR set to: 3
  5416  00306E  0E3A               	movlw	low STR_4
  5417  003070  0101               	movlb	1	; () banked
  5418  003072  6F71               	movwf	printf@fmt& (0+255),b
  5419  003074  0EFD               	movlw	high STR_4
  5420  003076  6F72               	movwf	(printf@fmt+1)& (0+255),b
  5421  003078  EC3D  F02C         	call	_SeePressure_pa	;wreg free
  5422  00307C  0060  F478  F173   	movff	?_SeePressure_pa,?_printf+2
  5423  003082  0060  F47C  F174   	movff	?_SeePressure_pa+1,?_printf+3
  5424  003088  EC84  F040         	call	_SeePressureV_pa	;wreg free
  5425  00308C  0060  F448  F175   	movff	?_SeePressureV_pa,?_printf+4
  5426  003092  0060  F44C  F176   	movff	?_SeePressureV_pa+1,?_printf+5
  5427  003098  EC85  F03C         	call	_See12V	;wreg free
  5428  00309C  0060  F478  F177   	movff	?_See12V,?_printf+6
  5429  0030A2  0060  F47C  F178   	movff	?_See12V+1,?_printf+7
  5430  0030A8  ECD4  F042         	call	_See5V	;wreg free
  5431  0030AC  0060  F478  F179   	movff	?_See5V,?_printf+8
  5432  0030B2  0060  F47C  F17A   	movff	?_See5V+1,?_printf+9
  5433  0030B8  EC32  F04D         	call	_printf	;wreg free
  5434  0030BC                     l22525:
  5435                           
  5436                           ;main.c: 165:             if (ch=='p') MonitorDump();
  5437  0030BC  0E70               	movlw	112
  5438  0030BE  0103               	movlb	3	; () banked
  5439  0030C0  19F9               	xorwf	main@ch& (0+255),w,b
  5440  0030C2  B4D8               	btfsc	status,2,c
  5441                           
  5442                           ; BSR set to: 3
  5443  0030C4  EC82  F018         	call	_MonitorDump	;wreg free
  5444                           
  5445                           ;main.c: 166:             if (ch=='z') SetCalibrateState(0);
  5446  0030C8  0E7A               	movlw	122
  5447  0030CA  0103               	movlb	3	; () banked
  5448  0030CC  19F9               	xorwf	main@ch& (0+255),w,b
  5449  0030CE  A4D8               	btfss	status,2,c
  5450  0030D0  D003               	goto	l22533
  5451                           
  5452                           ; BSR set to: 3
  5453  0030D2  0E00               	movlw	0
  5454  0030D4  ECEF  F031         	call	_SetCalibrateState
  5455  0030D8                     l22533:
  5456                           
  5457                           ;main.c: 167:             if (ch=='Z') SetCalibrateState(1);
  5458  0030D8  0E5A               	movlw	90
  5459  0030DA  0103               	movlb	3	; () banked
  5460  0030DC  19F9               	xorwf	main@ch& (0+255),w,b
  5461  0030DE  A4D8               	btfss	status,2,c
  5462  0030E0  D003               	goto	l22537
  5463                           
  5464                           ; BSR set to: 3
  5465  0030E2  0E01               	movlw	1
  5466  0030E4  ECEF  F031         	call	_SetCalibrateState
  5467  0030E8                     l22537:
  5468                           
  5469                           ;main.c: 168:             if (ch=='o') LCDOff();
  5470  0030E8  0E6F               	movlw	111
  5471  0030EA  0103               	movlb	3	; () banked
  5472  0030EC  19F9               	xorwf	main@ch& (0+255),w,b
  5473  0030EE  B4D8               	btfsc	status,2,c
  5474                           
  5475                           ; BSR set to: 3
  5476  0030F0  EC27  F052         	call	_LCDOff	;wreg free
  5477                           
  5478                           ;main.c: 169:             if (ch=='O') LCDOn();
  5479  0030F4  0E4F               	movlw	79
  5480  0030F6  0103               	movlb	3	; () banked
  5481  0030F8  19F9               	xorwf	main@ch& (0+255),w,b
  5482  0030FA  A4D8               	btfss	status,2,c
  5483  0030FC  D663               	goto	l22387
  5484                           
  5485                           ; BSR set to: 3
  5486  0030FE  EC22  F052         	call	_LCDOn	;wreg free
  5487                           
  5488                           ; BSR set to: 3
  5489                           
  5490                           ;main.c: 174:         }
  5491  003102  D660               	goto	l22387
  5492  003104                     __end_of_main:
  5493                           	opt callstack 0
  5494                           
  5495 ;; *************** function _getch *****************
  5496 ;; Defined at:
  5497 ;;		line 224 in file "mcc_generated_files/uart1.c"
  5498 ;; Parameters:    Size  Location     Type
  5499 ;;		None
  5500 ;; Auto vars:     Size  Location     Type
  5501 ;;		None
  5502 ;; Return value:  Size  Location     Type
  5503 ;;                  1    wreg      unsigned char 
  5504 ;; Registers used:
  5505 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5506 ;; Tracked objects:
  5507 ;;		On entry : 3F/1
  5508 ;;		On exit  : 3F/1
  5509 ;;		Unchanged: 0/0
  5510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5515 ;;Total ram usage:        0 bytes
  5516 ;; Hardware stack levels used:    1
  5517 ;; Hardware stack levels required when called:   17
  5518 ;; This function calls:
  5519 ;;		_UART1_Read
  5520 ;; This function is called by:
  5521 ;;		_main
  5522 ;; This function uses a non-reentrant model
  5523 ;;
  5524                           
  5525                           	psect	text1
  5526  00A5DA                     __ptext1:
  5527                           	opt callstack 0
  5528  00A5DA                     _getch:
  5529                           	opt callstack 13
  5530                           
  5531                           ; BSR set to: 1
  5532                           ;mcc_generated_files/uart1.c: 226:     return UART1_Read();
  5533                           
  5534                           ; BSR set to: 3
  5535                           ;incstack = 0
  5536  00A5DA  ECC6  F048         	call	_UART1_Read	;wreg free
  5537                           
  5538                           ; BSR set to: 1
  5539  00A5DE  0012               	return		;funcret
  5540  00A5E0                     __end_of_getch:
  5541                           	opt callstack 0
  5542                           
  5543 ;; *************** function _UART1_Read *****************
  5544 ;; Defined at:
  5545 ;;		line 179 in file "mcc_generated_files/uart1.c"
  5546 ;; Parameters:    Size  Location     Type
  5547 ;;		None
  5548 ;; Auto vars:     Size  Location     Type
  5549 ;;  readValue       1    4[BANK1 ] unsigned char 
  5550 ;; Return value:  Size  Location     Type
  5551 ;;                  1    wreg      unsigned char 
  5552 ;; Registers used:
  5553 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5554 ;; Tracked objects:
  5555 ;;		On entry : 3F/1
  5556 ;;		On exit  : 3F/1
  5557 ;;		Unchanged: 0/0
  5558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5560 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5562 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5563 ;;Total ram usage:        1 bytes
  5564 ;; Hardware stack levels used:    1
  5565 ;; Hardware stack levels required when called:   16
  5566 ;; This function calls:
  5567 ;;		Nothing
  5568 ;; This function is called by:
  5569 ;;		_getch
  5570 ;; This function uses a non-reentrant model
  5571 ;;
  5572                           
  5573                           	psect	text2
  5574  00918C                     __ptext2:
  5575                           	opt callstack 0
  5576  00918C                     _UART1_Read:
  5577                           	opt callstack 13
  5578                           
  5579                           ; BSR set to: 1
  5580                           ;mcc_generated_files/uart1.c: 183:     while(0 == uart1RxCount)
  5581                           
  5582                           ; BSR set to: 1
  5583                           ;mcc_generated_files/uart1.c: 183:     while(0 == uart1RxCount)
  5584                           
  5585                           ; BSR set to: 1
  5586                           ;incstack = 0
  5587  00918C  51F1               	movf	_uart1RxCount& (0+255),w,b	;volatile
  5588  00918E  B4D8               	btfsc	status,2,c
  5589  009190  D7FD               	goto	_UART1_Read
  5590                           
  5591                           ; BSR set to: 1
  5592                           ;mcc_generated_files/uart1.c: 187:     uart1RxLastError = uart1RxStatusBuffer[uart1RxTai
      +                          l];
  5593  009192  0E0A               	movlw	low _uart1RxStatusBuffer
  5594  009194  25F2               	addwf	_uart1RxTail& (0+255),w,b	;volatile
  5595  009196  6ED9               	movwf	fsr2l,c
  5596  009198  6ADA               	clrf	fsr2h,c
  5597  00919A  0E02               	movlw	high _uart1RxStatusBuffer
  5598  00919C  22DA               	addwfc	fsr2h,f,c
  5599  00919E  50DF               	movf	indf2,w,c
  5600  0091A0  0102               	movlb	2	; () banked
  5601  0091A2  6FB9               	movwf	_uart1RxLastError& (0+255),b	;volatile
  5602                           
  5603                           ;mcc_generated_files/uart1.c: 189:     readValue = uart1RxBuffer[uart1RxTail++];
  5604  0091A4  0E12               	movlw	low _uart1RxBuffer
  5605  0091A6  0101               	movlb	1	; () banked
  5606  0091A8  25F2               	addwf	_uart1RxTail& (0+255),w,b	;volatile
  5607  0091AA  6ED9               	movwf	fsr2l,c
  5608  0091AC  6ADA               	clrf	fsr2h,c
  5609  0091AE  0E02               	movlw	high _uart1RxBuffer
  5610  0091B0  22DA               	addwfc	fsr2h,f,c
  5611  0091B2  50DF               	movf	indf2,w,c
  5612  0091B4  6F04               	movwf	UART1_Read@readValue& (0+255),b
  5613                           
  5614                           ; BSR set to: 1
  5615  0091B6  2BF2               	incf	_uart1RxTail& (0+255),f,b	;volatile
  5616                           
  5617                           ; BSR set to: 1
  5618                           ;mcc_generated_files/uart1.c: 190:     if(sizeof(uart1RxBuffer) <= uart1RxTail)
  5619  0091B8  0E07               	movlw	7
  5620  0091BA  65F2               	cpfsgt	_uart1RxTail& (0+255),b
  5621  0091BC  D002               	goto	l20503
  5622                           
  5623                           ; BSR set to: 1
  5624                           ;mcc_generated_files/uart1.c: 191:     {;mcc_generated_files/uart1.c: 192:         uart1
      +                          RxTail = 0;
  5625  0091BE  0E00               	movlw	0
  5626  0091C0  6FF2               	movwf	_uart1RxTail& (0+255),b	;volatile
  5627  0091C2                     l20503:
  5628                           
  5629                           ; BSR set to: 1
  5630                           ;mcc_generated_files/uart1.c: 194:     PIE3bits.U1RXIE = 0;
  5631  0091C2  0139               	movlb	57	; () banked
  5632  0091C4  9793               	bcf	147,3,b	;volatile
  5633                           
  5634                           ; BSR set to: 57
  5635                           ;mcc_generated_files/uart1.c: 195:     uart1RxCount--;
  5636  0091C6  0101               	movlb	1	; () banked
  5637  0091C8  07F1               	decf	_uart1RxCount& (0+255),f,b	;volatile
  5638                           
  5639                           ; BSR set to: 1
  5640                           ;mcc_generated_files/uart1.c: 196:     PIE3bits.U1RXIE = 1;
  5641  0091CA  0139               	movlb	57	; () banked
  5642  0091CC  8793               	bsf	147,3,b	;volatile
  5643                           
  5644                           ; BSR set to: 57
  5645                           ;mcc_generated_files/uart1.c: 198:     return readValue;
  5646  0091CE  0101               	movlb	1	; () banked
  5647  0091D0  5104               	movf	UART1_Read@readValue& (0+255),w,b
  5648                           
  5649                           ; BSR set to: 1
  5650  0091D2  0012               	return		;funcret
  5651  0091D4                     __end_of_UART1_Read:
  5652                           	opt callstack 0
  5653                           
  5654 ;; *************** function ___llmod *****************
  5655 ;; Defined at:
  5656 ;;		line 7 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/llmod.c"
  5657 ;; Parameters:    Size  Location     Type
  5658 ;;  dividend        4    4[BANK1 ] unsigned long 
  5659 ;;  divisor         4    8[BANK1 ] unsigned long 
  5660 ;; Auto vars:     Size  Location     Type
  5661 ;;  counter         1   12[BANK1 ] unsigned char 
  5662 ;; Return value:  Size  Location     Type
  5663 ;;                  4    4[BANK1 ] unsigned long 
  5664 ;; Registers used:
  5665 ;;		wreg, status,2, status,0
  5666 ;; Tracked objects:
  5667 ;;		On entry : 3F/1
  5668 ;;		On exit  : 3F/1
  5669 ;;		Unchanged: 0/0
  5670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5671 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5672 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5674 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5675 ;;Total ram usage:        9 bytes
  5676 ;; Hardware stack levels used:    1
  5677 ;; Hardware stack levels required when called:   16
  5678 ;; This function calls:
  5679 ;;		Nothing
  5680 ;; This function is called by:
  5681 ;;		_main
  5682 ;; This function uses a non-reentrant model
  5683 ;;
  5684                           
  5685                           	psect	text3
  5686  00853A                     __ptext3:
  5687                           	opt callstack 0
  5688  00853A                     ___llmod:
  5689                           	opt callstack 14
  5690                           
  5691                           ; BSR set to: 1
  5692                           
  5693                           ; BSR set to: 1
  5694                           ;incstack = 0
  5695  00853A  5108               	movf	___llmod@divisor& (0+255),w,b
  5696  00853C  1109               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  5697  00853E  110A               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  5698  008540  110B               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  5699  008542  B4D8               	btfsc	status,2,c
  5700  008544  D024               	goto	l4028
  5701                           
  5702                           ; BSR set to: 1
  5703  008546  0E01               	movlw	1
  5704  008548  6F0C               	movwf	___llmod@counter& (0+255),b
  5705  00854A  D006               	goto	l22293
  5706  00854C                     l22291:
  5707                           
  5708                           ; BSR set to: 1
  5709  00854C  90D8               	bcf	status,0,c
  5710  00854E  3708               	rlcf	___llmod@divisor& (0+255),f,b
  5711  008550  3709               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  5712  008552  370A               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  5713  008554  370B               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  5714  008556  2B0C               	incf	___llmod@counter& (0+255),f,b
  5715  008558                     l22293:
  5716                           
  5717                           ; BSR set to: 1
  5718  008558  AF0B               	btfss	(___llmod@divisor+3)& (0+255),7,b
  5719  00855A  D7F8               	goto	l22291
  5720  00855C                     u22040:
  5721                           
  5722                           ; BSR set to: 1
  5723  00855C  5108               	movf	___llmod@divisor& (0+255),w,b
  5724  00855E  5D04               	subwf	___llmod@dividend& (0+255),w,b
  5725  008560  5109               	movf	(___llmod@divisor+1)& (0+255),w,b
  5726  008562  5905               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  5727  008564  510A               	movf	(___llmod@divisor+2)& (0+255),w,b
  5728  008566  5906               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  5729  008568  510B               	movf	(___llmod@divisor+3)& (0+255),w,b
  5730  00856A  5907               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  5731  00856C  A0D8               	btfss	status,0,c
  5732  00856E  D008               	goto	l22299
  5733                           
  5734                           ; BSR set to: 1
  5735  008570  5108               	movf	___llmod@divisor& (0+255),w,b
  5736  008572  5F04               	subwf	___llmod@dividend& (0+255),f,b
  5737  008574  5109               	movf	(___llmod@divisor+1)& (0+255),w,b
  5738  008576  5B05               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  5739  008578  510A               	movf	(___llmod@divisor+2)& (0+255),w,b
  5740  00857A  5B06               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  5741  00857C  510B               	movf	(___llmod@divisor+3)& (0+255),w,b
  5742  00857E  5B07               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  5743  008580                     l22299:
  5744                           
  5745                           ; BSR set to: 1
  5746  008580  90D8               	bcf	status,0,c
  5747  008582  330B               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  5748  008584  330A               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  5749  008586  3309               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  5750  008588  3308               	rrcf	___llmod@divisor& (0+255),f,b
  5751                           
  5752                           ; BSR set to: 1
  5753  00858A  2F0C               	decfsz	___llmod@counter& (0+255),f,b
  5754  00858C  D7E7               	goto	u22040
  5755  00858E                     l4028:
  5756                           
  5757                           ; BSR set to: 1
  5758  00858E  0060  F410  F104   	movff	___llmod@dividend,?___llmod
  5759  008594  0060  F414  F105   	movff	___llmod@dividend+1,?___llmod+1
  5760  00859A  0060  F418  F106   	movff	___llmod@dividend+2,?___llmod+2
  5761  0085A0  0060  F41C  F107   	movff	___llmod@dividend+3,?___llmod+3
  5762                           
  5763                           ; BSR set to: 1
  5764  0085A6  0012               	return		;funcret
  5765  0085A8                     __end_of___llmod:
  5766                           	opt callstack 0
  5767                           
  5768 ;; *************** function _UART1_is_rx_ready *****************
  5769 ;; Defined at:
  5770 ;;		line 160 in file "mcc_generated_files/uart1.c"
  5771 ;; Parameters:    Size  Location     Type
  5772 ;;		None
  5773 ;; Auto vars:     Size  Location     Type
  5774 ;;		None
  5775 ;; Return value:  Size  Location     Type
  5776 ;;                  1    wreg      _Bool 
  5777 ;; Registers used:
  5778 ;;		wreg, status,2
  5779 ;; Tracked objects:
  5780 ;;		On entry : 3F/1
  5781 ;;		On exit  : 3F/1
  5782 ;;		Unchanged: 0/0
  5783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5788 ;;Total ram usage:        0 bytes
  5789 ;; Hardware stack levels used:    1
  5790 ;; Hardware stack levels required when called:   16
  5791 ;; This function calls:
  5792 ;;		Nothing
  5793 ;; This function is called by:
  5794 ;;		_main
  5795 ;; This function uses a non-reentrant model
  5796 ;;
  5797                           
  5798                           	psect	text4
  5799  00A1DE                     __ptext4:
  5800                           	opt callstack 0
  5801  00A1DE                     _UART1_is_rx_ready:
  5802                           	opt callstack 14
  5803                           
  5804                           ; BSR set to: 1
  5805                           ;mcc_generated_files/uart1.c: 162:     return (uart1RxCount ? 1 : 0);
  5806                           
  5807                           ; BSR set to: 1
  5808                           ;incstack = 0
  5809  00A1DE  51F1               	movf	_uart1RxCount& (0+255),w,b	;volatile
  5810  00A1E0  B4D8               	btfsc	status,2,c
  5811  00A1E2  D002               	goto	u21310
  5812  00A1E4  0E01               	movlw	1
  5813  00A1E6  0012               	return	
  5814  00A1E8                     u21310:
  5815  00A1E8  0E00               	movlw	0
  5816                           
  5817                           ; BSR set to: 1
  5818  00A1EA  0012               	return		;funcret
  5819  00A1EC                     __end_of_UART1_is_rx_ready:
  5820                           	opt callstack 0
  5821                           
  5822 ;; *************** function _TestAlarm *****************
  5823 ;; Defined at:
  5824 ;;		line 341 in file "alarm.c"
  5825 ;; Parameters:    Size  Location     Type
  5826 ;;  id              2  131[BANK1 ] int 
  5827 ;; Auto vars:     Size  Location     Type
  5828 ;;  i               2  137[BANK1 ] int 
  5829 ;; Return value:  Size  Location     Type
  5830 ;;                  1    wreg      void 
  5831 ;; Registers used:
  5832 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5833 ;; Tracked objects:
  5834 ;;		On entry : 3F/1
  5835 ;;		On exit  : 3F/2
  5836 ;;		Unchanged: 0/0
  5837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5838 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5839 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5840 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5841 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5842 ;;Total ram usage:        8 bytes
  5843 ;; Hardware stack levels used:    1
  5844 ;; Hardware stack levels required when called:   25
  5845 ;; This function calls:
  5846 ;;		_printf
  5847 ;;		_putchar
  5848 ;; This function is called by:
  5849 ;;		_main
  5850 ;; This function uses a non-reentrant model
  5851 ;;
  5852                           
  5853                           	psect	text5
  5854  0073D4                     __ptext5:
  5855                           	opt callstack 0
  5856  0073D4                     _TestAlarm:
  5857                           	opt callstack 5
  5858                           
  5859                           ; BSR set to: 1
  5860                           ;alarm.c: 342:     testAlarm[id] = !testAlarm[id];
  5861                           
  5862                           ; BSR set to: 1
  5863                           ;incstack = 0
  5864  0073D4  90D8               	bcf	status,0,c
  5865  0073D6  3583               	rlcf	TestAlarm@id& (0+255),w,b
  5866  0073D8  6ED9               	movwf	fsr2l,c
  5867  0073DA  3584               	rlcf	(TestAlarm@id+1)& (0+255),w,b
  5868  0073DC  6EDA               	movwf	fsr2h,c
  5869  0073DE  0E26               	movlw	low _testAlarm
  5870  0073E0  26D9               	addwf	fsr2l,f,c
  5871  0073E2  0E03               	movlw	high _testAlarm
  5872  0073E4  22DA               	addwfc	fsr2h,f,c
  5873  0073E6  50DE               	movf	postinc2,w,c
  5874  0073E8  10DE               	iorwf	postinc2,w,c
  5875  0073EA  A4D8               	btfss	status,2,c
  5876  0073EC  D002               	goto	u21940
  5877  0073EE  0E01               	movlw	1
  5878  0073F0  D001               	goto	u21950
  5879  0073F2                     u21940:
  5880  0073F2  0E00               	movlw	0
  5881  0073F4                     u21950:
  5882  0073F4  6F87               	movwf	(??_TestAlarm+2)& (0+255),b
  5883  0073F6  6B88               	clrf	(??_TestAlarm+3)& (0+255),b
  5884  0073F8  90D8               	bcf	status,0,c
  5885  0073FA  3583               	rlcf	TestAlarm@id& (0+255),w,b
  5886  0073FC  6ED9               	movwf	fsr2l,c
  5887  0073FE  3584               	rlcf	(TestAlarm@id+1)& (0+255),w,b
  5888  007400  6EDA               	movwf	fsr2h,c
  5889  007402  0E26               	movlw	low _testAlarm
  5890  007404  26D9               	addwf	fsr2l,f,c
  5891  007406  0E03               	movlw	high _testAlarm
  5892  007408  22DA               	addwfc	fsr2h,f,c
  5893  00740A  0060  F61F  FFDE   	movff	??_TestAlarm+2,postinc2
  5894  007410  0060  F623  FFDD   	movff	??_TestAlarm+3,postdec2
  5895                           
  5896                           ; BSR set to: 1
  5897                           ;alarm.c: 343:     printf("\r\nTA: ");
  5898  007416  0EBA               	movlw	low STR_23
  5899  007418  6F71               	movwf	printf@fmt& (0+255),b
  5900  00741A  0EFF               	movlw	high STR_23
  5901  00741C  6F72               	movwf	(printf@fmt+1)& (0+255),b
  5902  00741E  EC32  F04D         	call	_printf	;wreg free
  5903                           
  5904                           ; BSR set to: 2
  5905                           ;alarm.c: 344:     for (int i=0; i<sizeof(alarmData)/sizeof(a); i++)
  5906  007422  0E00               	movlw	0
  5907  007424  0101               	movlb	1	; () banked
  5908  007426  6F8A               	movwf	(TestAlarm@i+1)& (0+255),b
  5909  007428  0E00               	movlw	0
  5910  00742A  6F89               	movwf	TestAlarm@i& (0+255),b
  5911  00742C                     l22201:
  5912                           
  5913                           ; BSR set to: 1
  5914                           ;alarm.c: 345:     {;alarm.c: 346:         if (testAlarm[i]) putchar('0'+i); else putcha
      +                          r('.');
  5915  00742C  90D8               	bcf	status,0,c
  5916  00742E  3589               	rlcf	TestAlarm@i& (0+255),w,b
  5917  007430  6ED9               	movwf	fsr2l,c
  5918  007432  358A               	rlcf	(TestAlarm@i+1)& (0+255),w,b
  5919  007434  6EDA               	movwf	fsr2h,c
  5920  007436  0E26               	movlw	low _testAlarm
  5921  007438  26D9               	addwf	fsr2l,f,c
  5922  00743A  0E03               	movlw	high _testAlarm
  5923  00743C  22DA               	addwfc	fsr2h,f,c
  5924  00743E  50DE               	movf	postinc2,w,c
  5925  007440  10DE               	iorwf	postinc2,w,c
  5926  007442  B4D8               	btfsc	status,2,c
  5927  007444  D009               	goto	l22205
  5928                           
  5929                           ; BSR set to: 1
  5930  007446  0E30               	movlw	48
  5931  007448  2589               	addwf	TestAlarm@i& (0+255),w,b
  5932  00744A  6F0F               	movwf	putchar@c& (0+255),b
  5933  00744C  0E00               	movlw	0
  5934  00744E  218A               	addwfc	(TestAlarm@i+1)& (0+255),w,b
  5935  007450  6F10               	movwf	(putchar@c+1)& (0+255),b
  5936  007452  ECA5  F04F         	call	_putchar	;wreg free
  5937  007456  D006               	goto	l22207
  5938  007458                     l22205:
  5939                           
  5940                           ; BSR set to: 1
  5941  007458  0E00               	movlw	0
  5942  00745A  6F10               	movwf	(putchar@c+1)& (0+255),b
  5943  00745C  0E2E               	movlw	46
  5944  00745E  6F0F               	movwf	putchar@c& (0+255),b
  5945  007460  ECA5  F04F         	call	_putchar	;wreg free
  5946  007464                     l22207:
  5947                           
  5948                           ; BSR set to: 1
  5949                           ;alarm.c: 347:     }
  5950  007464  4B89               	infsnz	TestAlarm@i& (0+255),f,b
  5951  007466  2B8A               	incf	(TestAlarm@i+1)& (0+255),f,b
  5952                           
  5953                           ; BSR set to: 1
  5954  007468  518A               	movf	(TestAlarm@i+1)& (0+255),w,b
  5955  00746A  E104               	bnz	u21970
  5956  00746C  0E13               	movlw	19
  5957  00746E  5D89               	subwf	TestAlarm@i& (0+255),w,b
  5958  007470  A0D8               	btfss	status,0,c
  5959  007472  D7DC               	goto	l22201
  5960  007474                     u21970:
  5961                           
  5962                           ; BSR set to: 1
  5963                           ;alarm.c: 348:     printf("\r\n");
  5964  007474  0EBA               	movlw	low (STR_22+15)
  5965  007476  6F71               	movwf	printf@fmt& (0+255),b
  5966  007478  0EFE               	movlw	high (STR_22+15)
  5967  00747A  6F72               	movwf	(printf@fmt+1)& (0+255),b
  5968  00747C  EC32  F04D         	call	_printf	;wreg free
  5969                           
  5970                           ; BSR set to: 2
  5971  007480  0012               	return		;funcret
  5972  007482                     __end_of_TestAlarm:
  5973                           	opt callstack 0
  5974                           
  5975 ;; *************** function _putchar *****************
  5976 ;; Defined at:
  5977 ;;		line 4 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/putchar.c"
  5978 ;; Parameters:    Size  Location     Type
  5979 ;;  c               2   15[BANK1 ] int 
  5980 ;; Auto vars:     Size  Location     Type
  5981 ;;		None
  5982 ;; Return value:  Size  Location     Type
  5983 ;;                  2   15[BANK1 ] int 
  5984 ;; Registers used:
  5985 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5986 ;; Tracked objects:
  5987 ;;		On entry : 3F/1
  5988 ;;		On exit  : 3F/1
  5989 ;;		Unchanged: 0/0
  5990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5991 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5994 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5995 ;;Total ram usage:        2 bytes
  5996 ;; Hardware stack levels used:    1
  5997 ;; Hardware stack levels required when called:   19
  5998 ;; This function calls:
  5999 ;;		_fputc
  6000 ;; This function is called by:
  6001 ;;		_TestAlarm
  6002 ;; This function uses a non-reentrant model
  6003 ;;
  6004                           
  6005                           	psect	text6
  6006  009F4A                     __ptext6:
  6007                           	opt callstack 0
  6008  009F4A                     _putchar:
  6009                           	opt callstack 10
  6010                           
  6011                           ; BSR set to: 1
  6012                           ;	Return value of _putchar is never used
  6013                           
  6014                           ; BSR set to: 2
  6015                           ;incstack = 0
  6016  009F4A  0060  F43C  F106   	movff	putchar@c,fputc@c
  6017  009F50  0060  F440  F107   	movff	putchar@c+1,fputc@c+1
  6018  009F56  0E00               	movlw	0
  6019  009F58  6F08               	movwf	fputc@fp& (0+255),b
  6020  009F5A  0E00               	movlw	0
  6021  009F5C  6F09               	movwf	(fputc@fp+1)& (0+255),b
  6022  009F5E  ECCF  F037         	call	_fputc	;wreg free
  6023                           
  6024                           ; BSR set to: 1
  6025  009F62  0012               	return		;funcret
  6026  009F64                     __end_of_putchar:
  6027                           	opt callstack 0
  6028                           
  6029 ;; *************** function _SetSV1 *****************
  6030 ;; Defined at:
  6031 ;;		line 890 in file "monitor.c"
  6032 ;; Parameters:    Size  Location     Type
  6033 ;;  value           1    wreg     _Bool 
  6034 ;; Auto vars:     Size  Location     Type
  6035 ;;  value           1  131[BANK1 ] _Bool 
  6036 ;; Return value:  Size  Location     Type
  6037 ;;                  1    wreg      void 
  6038 ;; Registers used:
  6039 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6040 ;; Tracked objects:
  6041 ;;		On entry : 1/3D
  6042 ;;		On exit  : 3D/0
  6043 ;;		Unchanged: 0/0
  6044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6046 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6048 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6049 ;;Total ram usage:        1 bytes
  6050 ;; Hardware stack levels used:    1
  6051 ;; Hardware stack levels required when called:   25
  6052 ;; This function calls:
  6053 ;;		_printf
  6054 ;; This function is called by:
  6055 ;;		_main
  6056 ;; This function uses a non-reentrant model
  6057 ;;
  6058                           
  6059                           	psect	text7
  6060  00969C                     __ptext7:
  6061                           	opt callstack 0
  6062  00969C                     _SetSV1:
  6063                           	opt callstack 5
  6064                           
  6065                           ; BSR set to: 1
  6066                           ;incstack = 0
  6067                           ;SetSV1@value stored from wreg
  6068  00969C  0101               	movlb	1	; () banked
  6069  00969E  6F83               	movwf	SetSV1@value& (0+255),b
  6070                           
  6071                           ;monitor.c: 891:     static _Bool last= 0;;monitor.c: 892:     if (last!=value) printf("
      +                          \r\nSV1: %d\r\n", value);
  6072  0096A0  0101               	movlb	1	; () banked
  6073  0096A2  5183               	movf	SetSV1@value& (0+255),w,b
  6074  0096A4  0100               	movlb	0	; () banked
  6075  0096A6  19F1               	xorwf	SetSV1@last& (0+255),w,b
  6076  0096A8  B4D8               	btfsc	status,2,c
  6077  0096AA  D00B               	goto	l21819
  6078                           
  6079                           ; BSR set to: 0
  6080  0096AC  0E90               	movlw	low STR_48
  6081  0096AE  0101               	movlb	1	; () banked
  6082  0096B0  6F71               	movwf	printf@fmt& (0+255),b
  6083  0096B2  0EFF               	movlw	high STR_48
  6084  0096B4  6F72               	movwf	(printf@fmt+1)& (0+255),b
  6085  0096B6  0060  F60C  F173   	movff	SetSV1@value,?_printf+2
  6086  0096BC  6B74               	clrf	(?_printf+3)& (0+255),b
  6087  0096BE  EC32  F04D         	call	_printf	;wreg free
  6088  0096C2                     l21819:
  6089                           
  6090                           ;monitor.c: 893:     last = value;
  6091  0096C2  0060  F60C  F0F1   	movff	SetSV1@value,SetSV1@last
  6092                           
  6093                           ;monitor.c: 894:     normalSV1 = value;
  6094  0096C8  0060  F60C  F29F   	movff	SetSV1@value,_normalSV1
  6095  0096CE  0012               	return		;funcret
  6096  0096D0                     __end_of_SetSV1:
  6097                           	opt callstack 0
  6098                           
  6099 ;; *************** function _SetCalibrateState *****************
  6100 ;; Defined at:
  6101 ;;		line 245 in file "monitor.c"
  6102 ;; Parameters:    Size  Location     Type
  6103 ;;  calib           1    wreg     _Bool 
  6104 ;; Auto vars:     Size  Location     Type
  6105 ;;  calib           1  131[BANK1 ] _Bool 
  6106 ;; Return value:  Size  Location     Type
  6107 ;;                  1    wreg      void 
  6108 ;; Registers used:
  6109 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6110 ;; Tracked objects:
  6111 ;;		On entry : 3F/3
  6112 ;;		On exit  : 3C/0
  6113 ;;		Unchanged: 0/0
  6114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6116 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6118 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6119 ;;Total ram usage:        1 bytes
  6120 ;; Hardware stack levels used:    1
  6121 ;; Hardware stack levels required when called:   25
  6122 ;; This function calls:
  6123 ;;		_ClearVars
  6124 ;;		_GetPressureV_pa
  6125 ;;		_GetPressure_pa
  6126 ;;		_TMR0_StartTimer
  6127 ;;		_TMR0_StopTimer
  6128 ;;		_UnDisplayCalibrate
  6129 ;;		___awdiv
  6130 ;;		_printf
  6131 ;; This function is called by:
  6132 ;;		_main
  6133 ;; This function uses a non-reentrant model
  6134 ;;
  6135                           
  6136                           	psect	text8
  6137  0063DE                     __ptext8:
  6138                           	opt callstack 0
  6139  0063DE                     _SetCalibrateState:
  6140                           	opt callstack 5
  6141                           
  6142                           ;incstack = 0
  6143                           ;SetCalibrateState@calib stored from wreg
  6144  0063DE  0101               	movlb	1	; () banked
  6145  0063E0  6F83               	movwf	SetCalibrateState@calib& (0+255),b
  6146                           
  6147                           ;monitor.c: 246:     TMR0_StopTimer();
  6148  0063E2  EC3D  F053         	call	_TMR0_StopTimer	;wreg free
  6149                           
  6150                           ;monitor.c: 247:     if (calib) {
  6151  0063E6  0101               	movlb	1	; () banked
  6152  0063E8  5183               	movf	SetCalibrateState@calib& (0+255),w,b
  6153  0063EA  B4D8               	btfsc	status,2,c
  6154  0063EC  D005               	goto	l22269
  6155                           
  6156                           ; BSR set to: 1
  6157                           ;monitor.c: 249:         state = 1;
  6158  0063EE  0E00               	movlw	0
  6159  0063F0  6FE0               	movwf	(_state+1)& (0+255),b
  6160  0063F2  0E01               	movlw	1
  6161  0063F4  6FDF               	movwf	_state& (0+255),b
  6162                           
  6163                           ;monitor.c: 250:     } else {
  6164  0063F6  D07F               	goto	l22279
  6165  0063F8                     l22269:
  6166                           
  6167                           ; BSR set to: 1
  6168                           ;monitor.c: 261:         if (state == 1) {
  6169  0063F8  05DF               	decf	_state& (0+255),w,b
  6170  0063FA  11E0               	iorwf	(_state+1)& (0+255),w,b
  6171  0063FC  A4D8               	btfss	status,2,c
  6172  0063FE  D079               	goto	l22277
  6173                           
  6174                           ; BSR set to: 1
  6175                           ;monitor.c: 262:             printf("\r\nPreCalib: Pres:%d Off:%d //Volume pres:%d Off:%
      +                          d\r\n", GetPressure_pa(), adcOffset/8, GetPressureV_pa(), adcVOffset/8);
  6176  006400  0E05               	movlw	low STR_40
  6177  006402  6F71               	movwf	printf@fmt& (0+255),b
  6178  006404  0EFD               	movlw	high STR_40
  6179  006406  6F72               	movwf	(printf@fmt+1)& (0+255),b
  6180  006408  EC55  F026         	call	_GetPressure_pa	;wreg free
  6181  00640C  0060  F478  F173   	movff	?_GetPressure_pa,?_printf+2
  6182  006412  0060  F47C  F174   	movff	?_GetPressure_pa+1,?_printf+3
  6183  006418  0060  F7D8  F10A   	movff	_adcOffset,___awdiv@dividend
  6184  00641E  0060  F7DC  F10B   	movff	_adcOffset+1,___awdiv@dividend+1
  6185  006424  0E00               	movlw	0
  6186  006426  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
  6187  006428  0E08               	movlw	8
  6188  00642A  6F0C               	movwf	___awdiv@divisor& (0+255),b
  6189  00642C  ECB9  F03F         	call	___awdiv	;wreg free
  6190  006430  0060  F428  F175   	movff	?___awdiv,?_printf+4
  6191  006436  0060  F42C  F176   	movff	?___awdiv+1,?_printf+5
  6192  00643C  EC92  F03B         	call	_GetPressureV_pa	;wreg free
  6193  006440  0060  F448  F177   	movff	?_GetPressureV_pa,?_printf+6
  6194  006446  0060  F44C  F178   	movff	?_GetPressureV_pa+1,?_printf+7
  6195  00644C  0060  F7D0  F10A   	movff	_adcVOffset,___awdiv@dividend
  6196  006452  0060  F7D4  F10B   	movff	_adcVOffset+1,___awdiv@dividend+1
  6197  006458  0E00               	movlw	0
  6198  00645A  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
  6199  00645C  0E08               	movlw	8
  6200  00645E  6F0C               	movwf	___awdiv@divisor& (0+255),b
  6201  006460  ECB9  F03F         	call	___awdiv	;wreg free
  6202  006464  0060  F428  F179   	movff	?___awdiv,?_printf+8
  6203  00646A  0060  F42C  F17A   	movff	?___awdiv+1,?_printf+9
  6204  006470  EC32  F04D         	call	_printf	;wreg free
  6205                           
  6206                           ; BSR set to: 2
  6207                           ;monitor.c: 263:             state = 0;
  6208  006474  0E00               	movlw	0
  6209  006476  0101               	movlb	1	; () banked
  6210  006478  6FE0               	movwf	(_state+1)& (0+255),b
  6211  00647A  0E00               	movlw	0
  6212  00647C  6FDF               	movwf	_state& (0+255),b
  6213                           
  6214                           ; BSR set to: 1
  6215                           ;monitor.c: 264:             printf("\r\nCalibrated: Pres:%d Off:%d //Volume pres:%d Off
      +                          :%d\r\n", GetPressure_pa(), adcOffset/8, GetPressureV_pa(), adcVOffset/8);
  6216  00647E  0E98               	movlw	low STR_41
  6217  006480  6F71               	movwf	printf@fmt& (0+255),b
  6218  006482  0EFC               	movlw	high STR_41
  6219  006484  6F72               	movwf	(printf@fmt+1)& (0+255),b
  6220  006486  EC55  F026         	call	_GetPressure_pa	;wreg free
  6221  00648A  0060  F478  F173   	movff	?_GetPressure_pa,?_printf+2
  6222  006490  0060  F47C  F174   	movff	?_GetPressure_pa+1,?_printf+3
  6223  006496  0060  F7D8  F10A   	movff	_adcOffset,___awdiv@dividend
  6224  00649C  0060  F7DC  F10B   	movff	_adcOffset+1,___awdiv@dividend+1
  6225  0064A2  0E00               	movlw	0
  6226  0064A4  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
  6227  0064A6  0E08               	movlw	8
  6228  0064A8  6F0C               	movwf	___awdiv@divisor& (0+255),b
  6229  0064AA  ECB9  F03F         	call	___awdiv	;wreg free
  6230  0064AE  0060  F428  F175   	movff	?___awdiv,?_printf+4
  6231  0064B4  0060  F42C  F176   	movff	?___awdiv+1,?_printf+5
  6232  0064BA  EC92  F03B         	call	_GetPressureV_pa	;wreg free
  6233  0064BE  0060  F448  F177   	movff	?_GetPressureV_pa,?_printf+6
  6234  0064C4  0060  F44C  F178   	movff	?_GetPressureV_pa+1,?_printf+7
  6235  0064CA  0060  F7D0  F10A   	movff	_adcVOffset,___awdiv@dividend
  6236  0064D0  0060  F7D4  F10B   	movff	_adcVOffset+1,___awdiv@dividend+1
  6237  0064D6  0E00               	movlw	0
  6238  0064D8  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
  6239  0064DA  0E08               	movlw	8
  6240  0064DC  6F0C               	movwf	___awdiv@divisor& (0+255),b
  6241  0064DE  ECB9  F03F         	call	___awdiv	;wreg free
  6242  0064E2  0060  F428  F179   	movff	?___awdiv,?_printf+8
  6243  0064E8  0060  F42C  F17A   	movff	?___awdiv+1,?_printf+9
  6244  0064EE  EC32  F04D         	call	_printf	;wreg free
  6245  0064F2                     l22277:
  6246                           
  6247                           ;monitor.c: 266:         UnDisplayCalibrate();
  6248  0064F2  ECF6  F050         	call	_UnDisplayCalibrate	;wreg free
  6249  0064F6                     l22279:
  6250                           
  6251                           ;monitor.c: 268:     ClearVars();
  6252  0064F6  EC8F  F020         	call	_ClearVars	;wreg free
  6253                           
  6254                           ; BSR set to: 2
  6255                           ;monitor.c: 269:     TMR0_StartTimer();
  6256  0064FA  EC41  F053         	call	_TMR0_StartTimer	;wreg free
  6257  0064FE  0012               	return		;funcret
  6258  006500                     __end_of_SetCalibrateState:
  6259                           	opt callstack 0
  6260                           
  6261 ;; *************** function _UnDisplayCalibrate *****************
  6262 ;; Defined at:
  6263 ;;		line 61 in file "display.c"
  6264 ;; Parameters:    Size  Location     Type
  6265 ;;		None
  6266 ;; Auto vars:     Size  Location     Type
  6267 ;;		None
  6268 ;; Return value:  Size  Location     Type
  6269 ;;                  1    wreg      void 
  6270 ;; Registers used:
  6271 ;;		wreg, status,2
  6272 ;; Tracked objects:
  6273 ;;		On entry : 3C/1
  6274 ;;		On exit  : 3F/3
  6275 ;;		Unchanged: 0/0
  6276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6281 ;;Total ram usage:        0 bytes
  6282 ;; Hardware stack levels used:    1
  6283 ;; Hardware stack levels required when called:   16
  6284 ;; This function calls:
  6285 ;;		Nothing
  6286 ;; This function is called by:
  6287 ;;		_SetCalibrateState
  6288 ;; This function uses a non-reentrant model
  6289 ;;
  6290                           
  6291                           	psect	text9
  6292  00A1EC                     __ptext9:
  6293                           	opt callstack 0
  6294  00A1EC                     _UnDisplayCalibrate:
  6295                           	opt callstack 13
  6296                           
  6297                           ;display.c: 62:     calibrate=0;
  6298                           
  6299                           ;incstack = 0
  6300  00A1EC  0E00               	movlw	0
  6301  00A1EE  0100               	movlb	0	; () banked
  6302  00A1F0  6FFF               	movwf	_calibrate& (0+255),b
  6303                           
  6304                           ;display.c: 63:     msg4[0]=0;
  6305  00A1F2  0E00               	movlw	0
  6306  00A1F4  0103               	movlb	3	; () banked
  6307  00A1F6  6FA9               	movwf	_msg4& (0+255),b
  6308                           
  6309                           ; BSR set to: 3
  6310  00A1F8  0012               	return		;funcret
  6311  00A1FA                     __end_of_UnDisplayCalibrate:
  6312                           	opt callstack 0
  6313                           
  6314 ;; *************** function _TMR0_StopTimer *****************
  6315 ;; Defined at:
  6316 ;;		line 93 in file "mcc_generated_files/tmr0.c"
  6317 ;; Parameters:    Size  Location     Type
  6318 ;;		None
  6319 ;; Auto vars:     Size  Location     Type
  6320 ;;		None
  6321 ;; Return value:  Size  Location     Type
  6322 ;;                  1    wreg      void 
  6323 ;; Registers used:
  6324 ;;		None
  6325 ;; Tracked objects:
  6326 ;;		On entry : 0/1
  6327 ;;		On exit  : 0/0
  6328 ;;		Unchanged: 0/0
  6329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6334 ;;Total ram usage:        0 bytes
  6335 ;; Hardware stack levels used:    1
  6336 ;; Hardware stack levels required when called:   16
  6337 ;; This function calls:
  6338 ;;		Nothing
  6339 ;; This function is called by:
  6340 ;;		_SetCalibrateState
  6341 ;; This function uses a non-reentrant model
  6342 ;;
  6343                           
  6344                           	psect	text10
  6345  00A67A                     __ptext10:
  6346                           	opt callstack 0
  6347  00A67A                     _TMR0_StopTimer:
  6348                           	opt callstack 13
  6349                           
  6350                           ;mcc_generated_files/tmr0.c: 96:     T0CON0bits.T0EN = 0;
  6351                           
  6352                           ; BSR set to: 3
  6353                           ;incstack = 0
  6354  00A67A  9EB8               	bcf	184,7,c	;volatile
  6355  00A67C  0012               	return		;funcret
  6356  00A67E                     __end_of_TMR0_StopTimer:
  6357                           	opt callstack 0
  6358                           
  6359 ;; *************** function _GetPressure_pa *****************
  6360 ;; Defined at:
  6361 ;;		line 787 in file "monitor.c"
  6362 ;; Parameters:    Size  Location     Type
  6363 ;;		None
  6364 ;; Auto vars:     Size  Location     Type
  6365 ;;  mv              4   42[BANK1 ] long 
  6366 ;;  p32             4   34[BANK1 ] long 
  6367 ;;  p               2   40[BANK1 ] short 
  6368 ;;  adc             2   38[BANK1 ] unsigned short 
  6369 ;; Return value:  Size  Location     Type
  6370 ;;                  2   30[BANK1 ] short 
  6371 ;; Registers used:
  6372 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6373 ;; Tracked objects:
  6374 ;;		On entry : 3F/1
  6375 ;;		On exit  : 3F/1
  6376 ;;		Unchanged: 0/0
  6377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6378 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6379 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6380 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6381 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6382 ;;Total ram usage:       16 bytes
  6383 ;; Hardware stack levels used:    1
  6384 ;; Hardware stack levels required when called:   18
  6385 ;; This function calls:
  6386 ;;		_AdcGetData
  6387 ;;		___aldiv
  6388 ;;		___awdiv
  6389 ;;		___lmul
  6390 ;; This function is called by:
  6391 ;;		_SetCalibrateState
  6392 ;; This function uses a non-reentrant model
  6393 ;;
  6394                           
  6395                           	psect	text11
  6396  004CAA                     __ptext11:
  6397                           	opt callstack 0
  6398  004CAA                     _GetPressure_pa:
  6399                           	opt callstack 11
  6400                           
  6401                           ; BSR set to: 1
  6402                           ;monitor.c: 788:     adc_result_t adc = AdcGetData(0);
  6403                           
  6404                           ;incstack = 0
  6405  004CAA  0E00               	movlw	0
  6406  004CAC  6F0B               	movwf	(AdcGetData@id+1)& (0+255),b
  6407  004CAE  0E00               	movlw	0
  6408  004CB0  6F0A               	movwf	AdcGetData@id& (0+255),b
  6409  004CB2  ECB5  F044         	call	_AdcGetData	;wreg free
  6410  004CB6  0060  F428  F126   	movff	?_AdcGetData,GetPressure_pa@adc
  6411  004CBC  0060  F42C  F127   	movff	?_AdcGetData+1,GetPressure_pa@adc+1
  6412                           
  6413                           ; BSR set to: 1
  6414                           ;monitor.c: 789:     if (state == 1) {
  6415  004CC2  05DF               	decf	_state& (0+255),w,b
  6416  004CC4  11E0               	iorwf	(_state+1)& (0+255),w,b
  6417  004CC6  A4D8               	btfss	status,2,c
  6418  004CC8  D007               	goto	l21069
  6419                           
  6420                           ; BSR set to: 1
  6421                           ;monitor.c: 790:         return adc;
  6422  004CCA  0060  F498  F11E   	movff	GetPressure_pa@adc,?_GetPressure_pa
  6423  004CD0  0060  F49C  F11F   	movff	GetPressure_pa@adc+1,?_GetPressure_pa+1
  6424  004CD6  0012               	return	
  6425  004CD8                     l21069:
  6426                           
  6427                           ; BSR set to: 1
  6428                           ;monitor.c: 793:     int32_t mv = adc - adcOffset/8;
  6429  004CD8  0060  F7D8  F10A   	movff	_adcOffset,___awdiv@dividend
  6430  004CDE  0060  F7DC  F10B   	movff	_adcOffset+1,___awdiv@dividend+1
  6431  004CE4  0E00               	movlw	0
  6432  004CE6  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
  6433  004CE8  0E08               	movlw	8
  6434  004CEA  6F0C               	movwf	___awdiv@divisor& (0+255),b
  6435  004CEC  ECB9  F03F         	call	___awdiv	;wreg free
  6436  004CF0  0060  F498  F120   	movff	GetPressure_pa@adc,??_GetPressure_pa
  6437  004CF6  0060  F49C  F121   	movff	GetPressure_pa@adc+1,??_GetPressure_pa+1
  6438  004CFC  510A               	movf	?___awdiv& (0+255),w,b
  6439  004CFE  5F20               	subwf	??_GetPressure_pa& (0+255),f,b
  6440  004D00  510B               	movf	(?___awdiv+1)& (0+255),w,b
  6441  004D02  5B21               	subwfb	(??_GetPressure_pa+1)& (0+255),f,b
  6442  004D04  0060  F480  F12A   	movff	??_GetPressure_pa,GetPressure_pa@mv
  6443  004D0A  0060  F484  F12B   	movff	??_GetPressure_pa+1,GetPressure_pa@mv+1
  6444  004D10  6B2C               	clrf	(GetPressure_pa@mv+2)& (0+255),b
  6445  004D12  6B2D               	clrf	(GetPressure_pa@mv+3)& (0+255),b
  6446                           
  6447                           ; BSR set to: 1
  6448                           ;monitor.c: 794:     mv = (mv < 0) ? 0 : mv;
  6449  004D14  AF2D               	btfss	(GetPressure_pa@mv+3)& (0+255),7,b
  6450  004D16  D008               	goto	l21077
  6451                           
  6452                           ; BSR set to: 1
  6453  004D18  0E00               	movlw	0
  6454  004D1A  6F2A               	movwf	GetPressure_pa@mv& (0+255),b
  6455  004D1C  0E00               	movlw	0
  6456  004D1E  6F2B               	movwf	(GetPressure_pa@mv+1)& (0+255),b
  6457  004D20  0E00               	movlw	0
  6458  004D22  6F2C               	movwf	(GetPressure_pa@mv+2)& (0+255),b
  6459  004D24  0E00               	movlw	0
  6460  004D26  6F2D               	movwf	(GetPressure_pa@mv+3)& (0+255),b
  6461  004D28                     l21077:
  6462                           
  6463                           ; BSR set to: 1
  6464                           ;monitor.c: 795:     mv = ( mv * 625 )/ 512;
  6465  004D28  0060  F4A8  F104   	movff	GetPressure_pa@mv,___lmul@multiplier
  6466  004D2E  0060  F4AC  F105   	movff	GetPressure_pa@mv+1,___lmul@multiplier+1
  6467  004D34  0060  F4B0  F106   	movff	GetPressure_pa@mv+2,___lmul@multiplier+2
  6468  004D3A  0060  F4B4  F107   	movff	GetPressure_pa@mv+3,___lmul@multiplier+3
  6469  004D40  0E71               	movlw	113
  6470  004D42  6F08               	movwf	___lmul@multiplicand& (0+255),b
  6471  004D44  0E02               	movlw	2
  6472  004D46  6F09               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6473  004D48  0E00               	movlw	0
  6474  004D4A  6F0A               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6475  004D4C  0E00               	movlw	0
  6476  004D4E  6F0B               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6477  004D50  ECAF  F045         	call	___lmul	;wreg free
  6478  004D54  0060  F410  F110   	movff	?___lmul,___aldiv@dividend
  6479  004D5A  0060  F414  F111   	movff	?___lmul+1,___aldiv@dividend+1
  6480  004D60  0060  F418  F112   	movff	?___lmul+2,___aldiv@dividend+2
  6481  004D66  0060  F41C  F113   	movff	?___lmul+3,___aldiv@dividend+3
  6482  004D6C  0E00               	movlw	0
  6483  004D6E  6F14               	movwf	___aldiv@divisor& (0+255),b
  6484  004D70  0E02               	movlw	2
  6485  004D72  6F15               	movwf	(___aldiv@divisor+1)& (0+255),b
  6486  004D74  0E00               	movlw	0
  6487  004D76  6F16               	movwf	(___aldiv@divisor+2)& (0+255),b
  6488  004D78  0E00               	movlw	0
  6489  004D7A  6F17               	movwf	(___aldiv@divisor+3)& (0+255),b
  6490  004D7C  ECD0  F035         	call	___aldiv	;wreg free
  6491  004D80  0060  F440  F12A   	movff	?___aldiv,GetPressure_pa@mv
  6492  004D86  0060  F444  F12B   	movff	?___aldiv+1,GetPressure_pa@mv+1
  6493  004D8C  0060  F448  F12C   	movff	?___aldiv+2,GetPressure_pa@mv+2
  6494  004D92  0060  F44C  F12D   	movff	?___aldiv+3,GetPressure_pa@mv+3
  6495                           
  6496                           ; BSR set to: 1
  6497                           ;monitor.c: 797:     int32_t p32 = (mv*20)/9;
  6498  004D98  0060  F4A8  F104   	movff	GetPressure_pa@mv,___lmul@multiplier
  6499  004D9E  0060  F4AC  F105   	movff	GetPressure_pa@mv+1,___lmul@multiplier+1
  6500  004DA4  0060  F4B0  F106   	movff	GetPressure_pa@mv+2,___lmul@multiplier+2
  6501  004DAA  0060  F4B4  F107   	movff	GetPressure_pa@mv+3,___lmul@multiplier+3
  6502  004DB0  0E14               	movlw	20
  6503  004DB2  6F08               	movwf	___lmul@multiplicand& (0+255),b
  6504  004DB4  0E00               	movlw	0
  6505  004DB6  6F09               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6506  004DB8  0E00               	movlw	0
  6507  004DBA  6F0A               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6508  004DBC  0E00               	movlw	0
  6509  004DBE  6F0B               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6510  004DC0  ECAF  F045         	call	___lmul	;wreg free
  6511  004DC4  0060  F410  F110   	movff	?___lmul,___aldiv@dividend
  6512  004DCA  0060  F414  F111   	movff	?___lmul+1,___aldiv@dividend+1
  6513  004DD0  0060  F418  F112   	movff	?___lmul+2,___aldiv@dividend+2
  6514  004DD6  0060  F41C  F113   	movff	?___lmul+3,___aldiv@dividend+3
  6515  004DDC  0E09               	movlw	9
  6516  004DDE  6F14               	movwf	___aldiv@divisor& (0+255),b
  6517  004DE0  0E00               	movlw	0
  6518  004DE2  6F15               	movwf	(___aldiv@divisor+1)& (0+255),b
  6519  004DE4  0E00               	movlw	0
  6520  004DE6  6F16               	movwf	(___aldiv@divisor+2)& (0+255),b
  6521  004DE8  0E00               	movlw	0
  6522  004DEA  6F17               	movwf	(___aldiv@divisor+3)& (0+255),b
  6523  004DEC  ECD0  F035         	call	___aldiv	;wreg free
  6524  004DF0  0060  F440  F122   	movff	?___aldiv,GetPressure_pa@p32
  6525  004DF6  0060  F444  F123   	movff	?___aldiv+1,GetPressure_pa@p32+1
  6526  004DFC  0060  F448  F124   	movff	?___aldiv+2,GetPressure_pa@p32+2
  6527  004E02  0060  F44C  F125   	movff	?___aldiv+3,GetPressure_pa@p32+3
  6528                           
  6529                           ; BSR set to: 1
  6530                           ;monitor.c: 798:     int16_t p = ((int16_t) p32);
  6531  004E08  0060  F488  F128   	movff	GetPressure_pa@p32,GetPressure_pa@p
  6532  004E0E  0060  F48C  F129   	movff	GetPressure_pa@p32+1,GetPressure_pa@p+1
  6533                           
  6534                           ; BSR set to: 1
  6535                           ;monitor.c: 799:     if (p<0) p=0;
  6536  004E14  AF29               	btfss	(GetPressure_pa@p+1)& (0+255),7,b
  6537  004E16  D004               	goto	l21087
  6538                           
  6539                           ; BSR set to: 1
  6540  004E18  0E00               	movlw	0
  6541  004E1A  6F29               	movwf	(GetPressure_pa@p+1)& (0+255),b
  6542  004E1C  0E00               	movlw	0
  6543  004E1E  6F28               	movwf	GetPressure_pa@p& (0+255),b
  6544  004E20                     l21087:
  6545                           
  6546                           ; BSR set to: 1
  6547                           ;monitor.c: 800:     return p;
  6548  004E20  0060  F4A0  F11E   	movff	GetPressure_pa@p,?_GetPressure_pa
  6549  004E26  0060  F4A4  F11F   	movff	GetPressure_pa@p+1,?_GetPressure_pa+1
  6550                           
  6551                           ; BSR set to: 1
  6552  004E2C  0012               	return		;funcret
  6553  004E2E                     __end_of_GetPressure_pa:
  6554                           	opt callstack 0
  6555                           
  6556 ;; *************** function _GetPressureV_pa *****************
  6557 ;; Defined at:
  6558 ;;		line 814 in file "monitor.c"
  6559 ;; Parameters:    Size  Location     Type
  6560 ;;		None
  6561 ;; Auto vars:     Size  Location     Type
  6562 ;;  mv              4   24[BANK1 ] long 
  6563 ;;  p               2   28[BANK1 ] short 
  6564 ;;  adcv            2   22[BANK1 ] unsigned short 
  6565 ;; Return value:  Size  Location     Type
  6566 ;;                  2   18[BANK1 ] short 
  6567 ;; Registers used:
  6568 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6569 ;; Tracked objects:
  6570 ;;		On entry : 3F/1
  6571 ;;		On exit  : 3F/1
  6572 ;;		Unchanged: 0/0
  6573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6574 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6575 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6576 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6577 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6578 ;;Total ram usage:       12 bytes
  6579 ;; Hardware stack levels used:    1
  6580 ;; Hardware stack levels required when called:   18
  6581 ;; This function calls:
  6582 ;;		_AdcGetData
  6583 ;;		___awdiv
  6584 ;; This function is called by:
  6585 ;;		_SetCalibrateState
  6586 ;; This function uses a non-reentrant model
  6587 ;;
  6588                           
  6589                           	psect	text12
  6590  007724                     __ptext12:
  6591                           	opt callstack 0
  6592  007724                     _GetPressureV_pa:
  6593                           	opt callstack 11
  6594                           
  6595                           ; BSR set to: 1
  6596                           ;monitor.c: 816:     adc_result_t adcv = AdcGetData(2);
  6597                           
  6598                           ; BSR set to: 1
  6599                           ;incstack = 0
  6600  007724  0E00               	movlw	0
  6601  007726  6F0B               	movwf	(AdcGetData@id+1)& (0+255),b
  6602  007728  0E02               	movlw	2
  6603  00772A  6F0A               	movwf	AdcGetData@id& (0+255),b
  6604  00772C  ECB5  F044         	call	_AdcGetData	;wreg free
  6605  007730  0060  F428  F116   	movff	?_AdcGetData,GetPressureV_pa@adcv
  6606  007736  0060  F42C  F117   	movff	?_AdcGetData+1,GetPressureV_pa@adcv+1
  6607                           
  6608                           ; BSR set to: 1
  6609                           ;monitor.c: 817:     if (state == 1) {
  6610  00773C  05DF               	decf	_state& (0+255),w,b
  6611  00773E  11E0               	iorwf	(_state+1)& (0+255),w,b
  6612  007740  A4D8               	btfss	status,2,c
  6613  007742  D007               	goto	l21097
  6614                           
  6615                           ; BSR set to: 1
  6616                           ;monitor.c: 818:         return adcv;
  6617  007744  0060  F458  F112   	movff	GetPressureV_pa@adcv,?_GetPressureV_pa
  6618  00774A  0060  F45C  F113   	movff	GetPressureV_pa@adcv+1,?_GetPressureV_pa+1
  6619  007750  0012               	return	
  6620  007752                     l21097:
  6621                           
  6622                           ; BSR set to: 1
  6623                           ;monitor.c: 821:     int32_t mv = adcv - adcVOffset/8;
  6624  007752  0060  F7D0  F10A   	movff	_adcVOffset,___awdiv@dividend
  6625  007758  0060  F7D4  F10B   	movff	_adcVOffset+1,___awdiv@dividend+1
  6626  00775E  0E00               	movlw	0
  6627  007760  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
  6628  007762  0E08               	movlw	8
  6629  007764  6F0C               	movwf	___awdiv@divisor& (0+255),b
  6630  007766  ECB9  F03F         	call	___awdiv	;wreg free
  6631  00776A  0060  F458  F114   	movff	GetPressureV_pa@adcv,??_GetPressureV_pa
  6632  007770  0060  F45C  F115   	movff	GetPressureV_pa@adcv+1,??_GetPressureV_pa+1
  6633  007776  510A               	movf	?___awdiv& (0+255),w,b
  6634  007778  5F14               	subwf	??_GetPressureV_pa& (0+255),f,b
  6635  00777A  510B               	movf	(?___awdiv+1)& (0+255),w,b
  6636  00777C  5B15               	subwfb	(??_GetPressureV_pa+1)& (0+255),f,b
  6637  00777E  0060  F450  F118   	movff	??_GetPressureV_pa,GetPressureV_pa@mv
  6638  007784  0060  F454  F119   	movff	??_GetPressureV_pa+1,GetPressureV_pa@mv+1
  6639  00778A  6B1A               	clrf	(GetPressureV_pa@mv+2)& (0+255),b
  6640  00778C  6B1B               	clrf	(GetPressureV_pa@mv+3)& (0+255),b
  6641                           
  6642                           ; BSR set to: 1
  6643                           ;monitor.c: 822:     mv = (mv < 0) ? 0 : mv;
  6644  00778E  AF1B               	btfss	(GetPressureV_pa@mv+3)& (0+255),7,b
  6645  007790  D008               	goto	l21105
  6646                           
  6647                           ; BSR set to: 1
  6648  007792  0E00               	movlw	0
  6649  007794  6F18               	movwf	GetPressureV_pa@mv& (0+255),b
  6650  007796  0E00               	movlw	0
  6651  007798  6F19               	movwf	(GetPressureV_pa@mv+1)& (0+255),b
  6652  00779A  0E00               	movlw	0
  6653  00779C  6F1A               	movwf	(GetPressureV_pa@mv+2)& (0+255),b
  6654  00779E  0E00               	movlw	0
  6655  0077A0  6F1B               	movwf	(GetPressureV_pa@mv+3)& (0+255),b
  6656  0077A2                     l21105:
  6657                           
  6658                           ; BSR set to: 1
  6659                           ;monitor.c: 825:     int16_t p = mv;
  6660  0077A2  0060  F460  F11C   	movff	GetPressureV_pa@mv,GetPressureV_pa@p
  6661  0077A8  0060  F464  F11D   	movff	GetPressureV_pa@mv+1,GetPressureV_pa@p+1
  6662                           
  6663                           ; BSR set to: 1
  6664                           ;monitor.c: 827:     if (p<0) p=0;
  6665  0077AE  AF1D               	btfss	(GetPressureV_pa@p+1)& (0+255),7,b
  6666  0077B0  D004               	goto	l21111
  6667                           
  6668                           ; BSR set to: 1
  6669  0077B2  0E00               	movlw	0
  6670  0077B4  6F1D               	movwf	(GetPressureV_pa@p+1)& (0+255),b
  6671  0077B6  0E00               	movlw	0
  6672  0077B8  6F1C               	movwf	GetPressureV_pa@p& (0+255),b
  6673  0077BA                     l21111:
  6674                           
  6675                           ; BSR set to: 1
  6676                           ;monitor.c: 828:     return p;
  6677  0077BA  0060  F470  F112   	movff	GetPressureV_pa@p,?_GetPressureV_pa
  6678  0077C0  0060  F474  F113   	movff	GetPressureV_pa@p+1,?_GetPressureV_pa+1
  6679                           
  6680                           ; BSR set to: 1
  6681  0077C6  0012               	return		;funcret
  6682  0077C8                     __end_of_GetPressureV_pa:
  6683                           	opt callstack 0
  6684                           
  6685 ;; *************** function _SeePressure_pa *****************
  6686 ;; Defined at:
  6687 ;;		line 803 in file "monitor.c"
  6688 ;; Parameters:    Size  Location     Type
  6689 ;;		None
  6690 ;; Auto vars:     Size  Location     Type
  6691 ;;  mv              4   42[BANK1 ] long 
  6692 ;;  p32             4   34[BANK1 ] long 
  6693 ;;  p               2   40[BANK1 ] short 
  6694 ;;  adc             2   38[BANK1 ] unsigned short 
  6695 ;; Return value:  Size  Location     Type
  6696 ;;                  2   30[BANK1 ] short 
  6697 ;; Registers used:
  6698 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6699 ;; Tracked objects:
  6700 ;;		On entry : 3F/1
  6701 ;;		On exit  : 3F/1
  6702 ;;		Unchanged: 0/0
  6703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6704 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6705 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6706 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6707 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6708 ;;Total ram usage:       16 bytes
  6709 ;; Hardware stack levels used:    1
  6710 ;; Hardware stack levels required when called:   18
  6711 ;; This function calls:
  6712 ;;		_AdcSeeData
  6713 ;;		___aldiv
  6714 ;;		___awdiv
  6715 ;;		___lmul
  6716 ;; This function is called by:
  6717 ;;		_main
  6718 ;; This function uses a non-reentrant model
  6719 ;;
  6720                           
  6721                           	psect	text13
  6722  00587A                     __ptext13:
  6723                           	opt callstack 0
  6724  00587A                     _SeePressure_pa:
  6725                           	opt callstack 12
  6726                           
  6727                           ; BSR set to: 1
  6728                           ;monitor.c: 804:     adc_result_t adc = AdcSeeData(0);
  6729                           
  6730                           ; BSR set to: 1
  6731                           ;incstack = 0
  6732  00587A  0E00               	movlw	0
  6733  00587C  6F0B               	movwf	(AdcSeeData@id+1)& (0+255),b
  6734  00587E  0E00               	movlw	0
  6735  005880  6F0A               	movwf	AdcSeeData@id& (0+255),b
  6736  005882  EC94  F049         	call	_AdcSeeData	;wreg free
  6737  005886  0060  F428  F126   	movff	?_AdcSeeData,SeePressure_pa@adc
  6738  00588C  0060  F42C  F127   	movff	?_AdcSeeData+1,SeePressure_pa@adc+1
  6739                           
  6740                           ; BSR set to: 1
  6741                           ;monitor.c: 805:     int32_t mv = adc - adcOffset/8;
  6742  005892  0060  F7D8  F10A   	movff	_adcOffset,___awdiv@dividend
  6743  005898  0060  F7DC  F10B   	movff	_adcOffset+1,___awdiv@dividend+1
  6744  00589E  0E00               	movlw	0
  6745  0058A0  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
  6746  0058A2  0E08               	movlw	8
  6747  0058A4  6F0C               	movwf	___awdiv@divisor& (0+255),b
  6748  0058A6  ECB9  F03F         	call	___awdiv	;wreg free
  6749  0058AA  0060  F498  F120   	movff	SeePressure_pa@adc,??_SeePressure_pa
  6750  0058B0  0060  F49C  F121   	movff	SeePressure_pa@adc+1,??_SeePressure_pa+1
  6751  0058B6  510A               	movf	?___awdiv& (0+255),w,b
  6752  0058B8  5F20               	subwf	??_SeePressure_pa& (0+255),f,b
  6753  0058BA  510B               	movf	(?___awdiv+1)& (0+255),w,b
  6754  0058BC  5B21               	subwfb	(??_SeePressure_pa+1)& (0+255),f,b
  6755  0058BE  0060  F480  F12A   	movff	??_SeePressure_pa,SeePressure_pa@mv
  6756  0058C4  0060  F484  F12B   	movff	??_SeePressure_pa+1,SeePressure_pa@mv+1
  6757  0058CA  6B2C               	clrf	(SeePressure_pa@mv+2)& (0+255),b
  6758  0058CC  6B2D               	clrf	(SeePressure_pa@mv+3)& (0+255),b
  6759                           
  6760                           ; BSR set to: 1
  6761                           ;monitor.c: 806:     mv = (mv < 0) ? 0 : mv;
  6762  0058CE  AF2D               	btfss	(SeePressure_pa@mv+3)& (0+255),7,b
  6763  0058D0  D008               	goto	l22231
  6764                           
  6765                           ; BSR set to: 1
  6766  0058D2  0E00               	movlw	0
  6767  0058D4  6F2A               	movwf	SeePressure_pa@mv& (0+255),b
  6768  0058D6  0E00               	movlw	0
  6769  0058D8  6F2B               	movwf	(SeePressure_pa@mv+1)& (0+255),b
  6770  0058DA  0E00               	movlw	0
  6771  0058DC  6F2C               	movwf	(SeePressure_pa@mv+2)& (0+255),b
  6772  0058DE  0E00               	movlw	0
  6773  0058E0  6F2D               	movwf	(SeePressure_pa@mv+3)& (0+255),b
  6774  0058E2                     l22231:
  6775                           
  6776                           ; BSR set to: 1
  6777                           ;monitor.c: 807:     mv = ( mv * 625 )/ 512;
  6778  0058E2  0060  F4A8  F104   	movff	SeePressure_pa@mv,___lmul@multiplier
  6779  0058E8  0060  F4AC  F105   	movff	SeePressure_pa@mv+1,___lmul@multiplier+1
  6780  0058EE  0060  F4B0  F106   	movff	SeePressure_pa@mv+2,___lmul@multiplier+2
  6781  0058F4  0060  F4B4  F107   	movff	SeePressure_pa@mv+3,___lmul@multiplier+3
  6782  0058FA  0E71               	movlw	113
  6783  0058FC  6F08               	movwf	___lmul@multiplicand& (0+255),b
  6784  0058FE  0E02               	movlw	2
  6785  005900  6F09               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6786  005902  0E00               	movlw	0
  6787  005904  6F0A               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6788  005906  0E00               	movlw	0
  6789  005908  6F0B               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6790  00590A  ECAF  F045         	call	___lmul	;wreg free
  6791  00590E  0060  F410  F110   	movff	?___lmul,___aldiv@dividend
  6792  005914  0060  F414  F111   	movff	?___lmul+1,___aldiv@dividend+1
  6793  00591A  0060  F418  F112   	movff	?___lmul+2,___aldiv@dividend+2
  6794  005920  0060  F41C  F113   	movff	?___lmul+3,___aldiv@dividend+3
  6795  005926  0E00               	movlw	0
  6796  005928  6F14               	movwf	___aldiv@divisor& (0+255),b
  6797  00592A  0E02               	movlw	2
  6798  00592C  6F15               	movwf	(___aldiv@divisor+1)& (0+255),b
  6799  00592E  0E00               	movlw	0
  6800  005930  6F16               	movwf	(___aldiv@divisor+2)& (0+255),b
  6801  005932  0E00               	movlw	0
  6802  005934  6F17               	movwf	(___aldiv@divisor+3)& (0+255),b
  6803  005936  ECD0  F035         	call	___aldiv	;wreg free
  6804  00593A  0060  F440  F12A   	movff	?___aldiv,SeePressure_pa@mv
  6805  005940  0060  F444  F12B   	movff	?___aldiv+1,SeePressure_pa@mv+1
  6806  005946  0060  F448  F12C   	movff	?___aldiv+2,SeePressure_pa@mv+2
  6807  00594C  0060  F44C  F12D   	movff	?___aldiv+3,SeePressure_pa@mv+3
  6808                           
  6809                           ; BSR set to: 1
  6810                           ;monitor.c: 808:     int32_t p32 = (mv*20)/9;
  6811  005952  0060  F4A8  F104   	movff	SeePressure_pa@mv,___lmul@multiplier
  6812  005958  0060  F4AC  F105   	movff	SeePressure_pa@mv+1,___lmul@multiplier+1
  6813  00595E  0060  F4B0  F106   	movff	SeePressure_pa@mv+2,___lmul@multiplier+2
  6814  005964  0060  F4B4  F107   	movff	SeePressure_pa@mv+3,___lmul@multiplier+3
  6815  00596A  0E14               	movlw	20
  6816  00596C  6F08               	movwf	___lmul@multiplicand& (0+255),b
  6817  00596E  0E00               	movlw	0
  6818  005970  6F09               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6819  005972  0E00               	movlw	0
  6820  005974  6F0A               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6821  005976  0E00               	movlw	0
  6822  005978  6F0B               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6823  00597A  ECAF  F045         	call	___lmul	;wreg free
  6824  00597E  0060  F410  F110   	movff	?___lmul,___aldiv@dividend
  6825  005984  0060  F414  F111   	movff	?___lmul+1,___aldiv@dividend+1
  6826  00598A  0060  F418  F112   	movff	?___lmul+2,___aldiv@dividend+2
  6827  005990  0060  F41C  F113   	movff	?___lmul+3,___aldiv@dividend+3
  6828  005996  0E09               	movlw	9
  6829  005998  6F14               	movwf	___aldiv@divisor& (0+255),b
  6830  00599A  0E00               	movlw	0
  6831  00599C  6F15               	movwf	(___aldiv@divisor+1)& (0+255),b
  6832  00599E  0E00               	movlw	0
  6833  0059A0  6F16               	movwf	(___aldiv@divisor+2)& (0+255),b
  6834  0059A2  0E00               	movlw	0
  6835  0059A4  6F17               	movwf	(___aldiv@divisor+3)& (0+255),b
  6836  0059A6  ECD0  F035         	call	___aldiv	;wreg free
  6837  0059AA  0060  F440  F122   	movff	?___aldiv,SeePressure_pa@p32
  6838  0059B0  0060  F444  F123   	movff	?___aldiv+1,SeePressure_pa@p32+1
  6839  0059B6  0060  F448  F124   	movff	?___aldiv+2,SeePressure_pa@p32+2
  6840  0059BC  0060  F44C  F125   	movff	?___aldiv+3,SeePressure_pa@p32+3
  6841                           
  6842                           ; BSR set to: 1
  6843                           ;monitor.c: 809:     int16_t p = ((int16_t) p32);
  6844  0059C2  0060  F488  F128   	movff	SeePressure_pa@p32,SeePressure_pa@p
  6845  0059C8  0060  F48C  F129   	movff	SeePressure_pa@p32+1,SeePressure_pa@p+1
  6846                           
  6847                           ; BSR set to: 1
  6848                           ;monitor.c: 810:     if (p<0) p=0;
  6849  0059CE  AF29               	btfss	(SeePressure_pa@p+1)& (0+255),7,b
  6850  0059D0  D004               	goto	l22241
  6851                           
  6852                           ; BSR set to: 1
  6853  0059D2  0E00               	movlw	0
  6854  0059D4  6F29               	movwf	(SeePressure_pa@p+1)& (0+255),b
  6855  0059D6  0E00               	movlw	0
  6856  0059D8  6F28               	movwf	SeePressure_pa@p& (0+255),b
  6857  0059DA                     l22241:
  6858                           
  6859                           ; BSR set to: 1
  6860                           ;monitor.c: 811:     return p;
  6861  0059DA  0060  F4A0  F11E   	movff	SeePressure_pa@p,?_SeePressure_pa
  6862  0059E0  0060  F4A4  F11F   	movff	SeePressure_pa@p+1,?_SeePressure_pa+1
  6863                           
  6864                           ; BSR set to: 1
  6865  0059E6  0012               	return		;funcret
  6866  0059E8                     __end_of_SeePressure_pa:
  6867                           	opt callstack 0
  6868                           
  6869 ;; *************** function _SeePressureV_pa *****************
  6870 ;; Defined at:
  6871 ;;		line 831 in file "monitor.c"
  6872 ;; Parameters:    Size  Location     Type
  6873 ;;		None
  6874 ;; Auto vars:     Size  Location     Type
  6875 ;;  mv              4   26[BANK1 ] long 
  6876 ;;  p               2   24[BANK1 ] short 
  6877 ;;  adcv            2   22[BANK1 ] unsigned short 
  6878 ;; Return value:  Size  Location     Type
  6879 ;;                  2   18[BANK1 ] short 
  6880 ;; Registers used:
  6881 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6882 ;; Tracked objects:
  6883 ;;		On entry : 3F/1
  6884 ;;		On exit  : 3F/1
  6885 ;;		Unchanged: 0/0
  6886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6887 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6888 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6889 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6890 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6891 ;;Total ram usage:       12 bytes
  6892 ;; Hardware stack levels used:    1
  6893 ;; Hardware stack levels required when called:   18
  6894 ;; This function calls:
  6895 ;;		_AdcSeeData
  6896 ;;		___awdiv
  6897 ;; This function is called by:
  6898 ;;		_main
  6899 ;; This function uses a non-reentrant model
  6900 ;;
  6901                           
  6902                           	psect	text14
  6903  008108                     __ptext14:
  6904                           	opt callstack 0
  6905  008108                     _SeePressureV_pa:
  6906                           	opt callstack 12
  6907                           
  6908                           ; BSR set to: 1
  6909                           ;monitor.c: 832:     adc_result_t adcv = AdcSeeData(2);
  6910                           
  6911                           ; BSR set to: 1
  6912                           ;incstack = 0
  6913  008108  0E00               	movlw	0
  6914  00810A  6F0B               	movwf	(AdcSeeData@id+1)& (0+255),b
  6915  00810C  0E02               	movlw	2
  6916  00810E  6F0A               	movwf	AdcSeeData@id& (0+255),b
  6917  008110  EC94  F049         	call	_AdcSeeData	;wreg free
  6918  008114  0060  F428  F116   	movff	?_AdcSeeData,SeePressureV_pa@adcv
  6919  00811A  0060  F42C  F117   	movff	?_AdcSeeData+1,SeePressureV_pa@adcv+1
  6920                           
  6921                           ; BSR set to: 1
  6922                           ;monitor.c: 833:     int32_t mv = adcv - adcVOffset/8;
  6923  008120  0060  F7D0  F10A   	movff	_adcVOffset,___awdiv@dividend
  6924  008126  0060  F7D4  F10B   	movff	_adcVOffset+1,___awdiv@dividend+1
  6925  00812C  0E00               	movlw	0
  6926  00812E  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
  6927  008130  0E08               	movlw	8
  6928  008132  6F0C               	movwf	___awdiv@divisor& (0+255),b
  6929  008134  ECB9  F03F         	call	___awdiv	;wreg free
  6930  008138  0060  F458  F114   	movff	SeePressureV_pa@adcv,??_SeePressureV_pa
  6931  00813E  0060  F45C  F115   	movff	SeePressureV_pa@adcv+1,??_SeePressureV_pa+1
  6932  008144  510A               	movf	?___awdiv& (0+255),w,b
  6933  008146  5F14               	subwf	??_SeePressureV_pa& (0+255),f,b
  6934  008148  510B               	movf	(?___awdiv+1)& (0+255),w,b
  6935  00814A  5B15               	subwfb	(??_SeePressureV_pa+1)& (0+255),f,b
  6936  00814C  0060  F450  F11A   	movff	??_SeePressureV_pa,SeePressureV_pa@mv
  6937  008152  0060  F454  F11B   	movff	??_SeePressureV_pa+1,SeePressureV_pa@mv+1
  6938  008158  6B1C               	clrf	(SeePressureV_pa@mv+2)& (0+255),b
  6939  00815A  6B1D               	clrf	(SeePressureV_pa@mv+3)& (0+255),b
  6940                           
  6941                           ; BSR set to: 1
  6942                           ;monitor.c: 834:     mv = (mv < 0) ? 0 : mv;
  6943  00815C  AF1D               	btfss	(SeePressureV_pa@mv+3)& (0+255),7,b
  6944  00815E  D008               	goto	l22255
  6945                           
  6946                           ; BSR set to: 1
  6947  008160  0E00               	movlw	0
  6948  008162  6F1A               	movwf	SeePressureV_pa@mv& (0+255),b
  6949  008164  0E00               	movlw	0
  6950  008166  6F1B               	movwf	(SeePressureV_pa@mv+1)& (0+255),b
  6951  008168  0E00               	movlw	0
  6952  00816A  6F1C               	movwf	(SeePressureV_pa@mv+2)& (0+255),b
  6953  00816C  0E00               	movlw	0
  6954  00816E  6F1D               	movwf	(SeePressureV_pa@mv+3)& (0+255),b
  6955  008170                     l22255:
  6956                           
  6957                           ; BSR set to: 1
  6958                           ;monitor.c: 836:     int16_t p = mv;
  6959  008170  0060  F468  F118   	movff	SeePressureV_pa@mv,SeePressureV_pa@p
  6960  008176  0060  F46C  F119   	movff	SeePressureV_pa@mv+1,SeePressureV_pa@p+1
  6961                           
  6962                           ; BSR set to: 1
  6963                           ;monitor.c: 837:     return p;
  6964  00817C  0060  F460  F112   	movff	SeePressureV_pa@p,?_SeePressureV_pa
  6965  008182  0060  F464  F113   	movff	SeePressureV_pa@p+1,?_SeePressureV_pa+1
  6966                           
  6967                           ; BSR set to: 1
  6968  008188  0012               	return		;funcret
  6969  00818A                     __end_of_SeePressureV_pa:
  6970                           	opt callstack 0
  6971                           
  6972 ;; *************** function _SYSTEM_Initialize *****************
  6973 ;; Defined at:
  6974 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6975 ;; Parameters:    Size  Location     Type
  6976 ;;		None
  6977 ;; Auto vars:     Size  Location     Type
  6978 ;;		None
  6979 ;; Return value:  Size  Location     Type
  6980 ;;                  1    wreg      void 
  6981 ;; Registers used:
  6982 ;;		wreg, status,2, status,0, cstack
  6983 ;; Tracked objects:
  6984 ;;		On entry : 0/0
  6985 ;;		On exit  : 3F/3D
  6986 ;;		Unchanged: 0/0
  6987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6992 ;;Total ram usage:        0 bytes
  6993 ;; Hardware stack levels used:    1
  6994 ;; Hardware stack levels required when called:   18
  6995 ;; This function calls:
  6996 ;;		_ADCC_Initialize
  6997 ;;		_CMP1_Initialize
  6998 ;;		_FVR_Initialize
  6999 ;;		_I2C2_Initialize
  7000 ;;		_INTERRUPT_Initialize
  7001 ;;		_OSCILLATOR_Initialize
  7002 ;;		_PIN_MANAGER_Initialize
  7003 ;;		_PMD_Initialize
  7004 ;;		_PWM6_Initialize
  7005 ;;		_TMR0_Initialize
  7006 ;;		_TMR1_Initialize
  7007 ;;		_TMR2_Initialize
  7008 ;;		_TMR4_Initialize
  7009 ;;		_TMR5_Initialize
  7010 ;;		_TMR6_Initialize
  7011 ;;		_UART1_Initialize
  7012 ;; This function is called by:
  7013 ;;		_main
  7014 ;; This function uses a non-reentrant model
  7015 ;;
  7016                           
  7017                           	psect	text15
  7018  0092A6                     __ptext15:
  7019                           	opt callstack 0
  7020  0092A6                     _SYSTEM_Initialize:
  7021                           	opt callstack 12
  7022                           
  7023                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  7024                           
  7025                           ; BSR set to: 1
  7026                           ;incstack = 0
  7027  0092A6  EC3F  F053         	call	_INTERRUPT_Initialize	;wreg free
  7028                           
  7029                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  7030  0092AA  EC2C  F04E         	call	_PMD_Initialize	;wreg free
  7031                           
  7032                           ; BSR set to: 57
  7033                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  7034  0092AE  EC86  F038         	call	_PIN_MANAGER_Initialize	;wreg free
  7035                           
  7036                           ; BSR set to: 58
  7037                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  7038  0092B2  ECFF  F04F         	call	_OSCILLATOR_Initialize	;wreg free
  7039                           
  7040                           ; BSR set to: 57
  7041                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
  7042  0092B6  EC59  F052         	call	_FVR_Initialize	;wreg free
  7043                           
  7044                           ; BSR set to: 62
  7045                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
  7046  0092BA  EC79  F043         	call	_ADCC_Initialize	;wreg free
  7047                           
  7048                           ; BSR set to: 1
  7049                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
  7050  0092BE  EC65  F04C         	call	_TMR4_Initialize	;wreg free
  7051                           
  7052                           ; BSR set to: 1
  7053                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
  7054  0092C2  EC6A  F04F         	call	_TMR2_Initialize	;wreg free
  7055                           
  7056                           ; BSR set to: 57
  7057                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
  7058  0092C6  EC1A  F04E         	call	_TMR0_Initialize	;wreg free
  7059                           
  7060                           ; BSR set to: 1
  7061                           ;mcc_generated_files/mcc.c: 61:     PWM6_Initialize();
  7062  0092CA  ECF3  F04F         	call	_PWM6_Initialize	;wreg free
  7063                           
  7064                           ; BSR set to: 63
  7065                           ;mcc_generated_files/mcc.c: 62:     TMR6_Initialize();
  7066  0092CE  EC4E  F04C         	call	_TMR6_Initialize	;wreg free
  7067                           
  7068                           ; BSR set to: 1
  7069                           ;mcc_generated_files/mcc.c: 63:     CMP1_Initialize();
  7070  0092D2  ECCA  F04E         	call	_CMP1_Initialize	;wreg free
  7071                           
  7072                           ; BSR set to: 57
  7073                           ;mcc_generated_files/mcc.c: 64:     TMR5_Initialize();
  7074  0092D6  ECB3  F047         	call	_TMR5_Initialize	;wreg free
  7075                           
  7076                           ; BSR set to: 1
  7077                           ;mcc_generated_files/mcc.c: 65:     TMR1_Initialize();
  7078  0092DA  EC0F  F047         	call	_TMR1_Initialize	;wreg free
  7079                           
  7080                           ; BSR set to: 1
  7081                           ;mcc_generated_files/mcc.c: 66:     UART1_Initialize();
  7082  0092DE  EC6F  F037         	call	_UART1_Initialize	;wreg free
  7083                           
  7084                           ; BSR set to: 57
  7085                           ;mcc_generated_files/mcc.c: 67:     I2C2_Initialize();
  7086  0092E2  EC94  F050         	call	_I2C2_Initialize	;wreg free
  7087                           
  7088                           ; BSR set to: 61
  7089  0092E6  0012               	return		;funcret
  7090  0092E8                     __end_of_SYSTEM_Initialize:
  7091                           	opt callstack 0
  7092                           
  7093 ;; *************** function _UART1_Initialize *****************
  7094 ;; Defined at:
  7095 ;;		line 86 in file "mcc_generated_files/uart1.c"
  7096 ;; Parameters:    Size  Location     Type
  7097 ;;		None
  7098 ;; Auto vars:     Size  Location     Type
  7099 ;;		None
  7100 ;; Return value:  Size  Location     Type
  7101 ;;                  1    wreg      void 
  7102 ;; Registers used:
  7103 ;;		wreg, status,2, status,0, cstack
  7104 ;; Tracked objects:
  7105 ;;		On entry : 3F/1
  7106 ;;		On exit  : 3F/39
  7107 ;;		Unchanged: 0/0
  7108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7113 ;;Total ram usage:        0 bytes
  7114 ;; Hardware stack levels used:    1
  7115 ;; Hardware stack levels required when called:   17
  7116 ;; This function calls:
  7117 ;;		_UART1_SetErrorHandler
  7118 ;;		_UART1_SetFramingErrorHandler
  7119 ;;		_UART1_SetOverrunErrorHandler
  7120 ;;		_UART1_SetRxInterruptHandler
  7121 ;;		_UART1_SetTxInterruptHandler
  7122 ;; This function is called by:
  7123 ;;		_SYSTEM_Initialize
  7124 ;; This function uses a non-reentrant model
  7125 ;;
  7126                           
  7127                           	psect	text16
  7128  006EDE                     __ptext16:
  7129                           	opt callstack 0
  7130  006EDE                     _UART1_Initialize:
  7131                           	opt callstack 12
  7132                           
  7133                           ; BSR set to: 1
  7134                           ;mcc_generated_files/uart1.c: 89:     PIE3bits.U1RXIE = 0;
  7135                           
  7136                           ; BSR set to: 61
  7137                           ;incstack = 0
  7138  006EDE  0139               	movlb	57	; () banked
  7139  006EE0  9793               	bcf	147,3,b	;volatile
  7140                           
  7141                           ; BSR set to: 57
  7142                           ;mcc_generated_files/uart1.c: 90:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
  7143  006EE2  0E6A               	movlw	low _UART1_Receive_ISR
  7144  006EE4  0101               	movlb	1	; () banked
  7145  006EE6  6F04               	movwf	UART1_SetRxInterruptHandler@InterruptHandler& (0+255),b
  7146  006EE8  0E78               	movlw	high _UART1_Receive_ISR
  7147  006EEA  6F05               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)& (0+255),b
  7148  006EEC  EC04  F051         	call	_UART1_SetRxInterruptHandler	;wreg free
  7149                           
  7150                           ; BSR set to: 1
  7151                           ;mcc_generated_files/uart1.c: 91:     PIE3bits.U1TXIE = 0;
  7152  006EF0  0139               	movlb	57	; () banked
  7153  006EF2  9993               	bcf	147,4,b	;volatile
  7154                           
  7155                           ;mcc_generated_files/uart1.c: 92:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
  7156  006EF4  0ED4               	movlw	low _UART1_Transmit_ISR
  7157  006EF6  0101               	movlb	1	; () banked
  7158  006EF8  6F04               	movwf	UART1_SetTxInterruptHandler@InterruptHandler& (0+255),b
  7159  006EFA  0E91               	movlw	high _UART1_Transmit_ISR
  7160  006EFC  6F05               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)& (0+255),b
  7161  006EFE  ECFD  F050         	call	_UART1_SetTxInterruptHandler	;wreg free
  7162                           
  7163                           ; BSR set to: 1
  7164                           ;mcc_generated_files/uart1.c: 97:     U1P1L = 0x00;
  7165  006F02  0E00               	movlw	0
  7166  006F04  013D               	movlb	61	; () banked
  7167  006F06  6FEC               	movwf	236,b	;volatile
  7168                           
  7169                           ; BSR set to: 61
  7170                           ;mcc_generated_files/uart1.c: 100:     U1P1H = 0x00;
  7171  006F08  0E00               	movlw	0
  7172  006F0A  6FED               	movwf	237,b	;volatile
  7173                           
  7174                           ; BSR set to: 61
  7175                           ;mcc_generated_files/uart1.c: 103:     U1P2L = 0x00;
  7176  006F0C  0E00               	movlw	0
  7177  006F0E  6FEE               	movwf	238,b	;volatile
  7178                           
  7179                           ; BSR set to: 61
  7180                           ;mcc_generated_files/uart1.c: 106:     U1P2H = 0x00;
  7181  006F10  0E00               	movlw	0
  7182  006F12  6FEF               	movwf	239,b	;volatile
  7183                           
  7184                           ; BSR set to: 61
  7185                           ;mcc_generated_files/uart1.c: 109:     U1P3L = 0x00;
  7186  006F14  0E00               	movlw	0
  7187  006F16  6FF0               	movwf	240,b	;volatile
  7188                           
  7189                           ; BSR set to: 61
  7190                           ;mcc_generated_files/uart1.c: 112:     U1P3H = 0x00;
  7191  006F18  0E00               	movlw	0
  7192  006F1A  6FF1               	movwf	241,b	;volatile
  7193                           
  7194                           ; BSR set to: 61
  7195                           ;mcc_generated_files/uart1.c: 115:     U1CON0 = 0xB0;
  7196  006F1C  0EB0               	movlw	176
  7197  006F1E  6FF2               	movwf	242,b	;volatile
  7198                           
  7199                           ; BSR set to: 61
  7200                           ;mcc_generated_files/uart1.c: 118:     U1CON1 = 0x80;
  7201  006F20  0E80               	movlw	128
  7202  006F22  6FF3               	movwf	243,b	;volatile
  7203                           
  7204                           ; BSR set to: 61
  7205                           ;mcc_generated_files/uart1.c: 121:     U1CON2 = 0x00;
  7206  006F24  0E00               	movlw	0
  7207  006F26  6FF4               	movwf	244,b	;volatile
  7208                           
  7209                           ; BSR set to: 61
  7210                           ;mcc_generated_files/uart1.c: 124:     U1BRGL = 0x8A;
  7211  006F28  0E8A               	movlw	138
  7212  006F2A  6FF5               	movwf	245,b	;volatile
  7213                           
  7214                           ; BSR set to: 61
  7215                           ;mcc_generated_files/uart1.c: 127:     U1BRGH = 0x00;
  7216  006F2C  0E00               	movlw	0
  7217  006F2E  6FF6               	movwf	246,b	;volatile
  7218                           
  7219                           ; BSR set to: 61
  7220                           ;mcc_generated_files/uart1.c: 130:     U1FIFO = 0x00;
  7221  006F30  0E00               	movlw	0
  7222  006F32  6FF7               	movwf	247,b	;volatile
  7223                           
  7224                           ; BSR set to: 61
  7225                           ;mcc_generated_files/uart1.c: 133:     U1UIR = 0x00;
  7226  006F34  0E00               	movlw	0
  7227  006F36  6FF8               	movwf	248,b	;volatile
  7228                           
  7229                           ; BSR set to: 61
  7230                           ;mcc_generated_files/uart1.c: 136:     U1ERRIR = 0x00;
  7231  006F38  0E00               	movlw	0
  7232  006F3A  6FF9               	movwf	249,b	;volatile
  7233                           
  7234                           ; BSR set to: 61
  7235                           ;mcc_generated_files/uart1.c: 139:     U1ERRIE = 0x00;
  7236  006F3C  0E00               	movlw	0
  7237  006F3E  6FFA               	movwf	250,b	;volatile
  7238                           
  7239                           ; BSR set to: 61
  7240                           ;mcc_generated_files/uart1.c: 142:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
  7241  006F40  0EEE               	movlw	low _UART1_DefaultFramingErrorHandler
  7242  006F42  0101               	movlb	1	; () banked
  7243  006F44  6F04               	movwf	UART1_SetFramingErrorHandler@interruptHandler& (0+255),b
  7244  006F46  0EA6               	movlw	high _UART1_DefaultFramingErrorHandler
  7245  006F48  6F05               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
  7246  006F4A  EC12  F051         	call	_UART1_SetFramingErrorHandler	;wreg free
  7247                           
  7248                           ; BSR set to: 1
  7249                           ;mcc_generated_files/uart1.c: 143:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
  7250  006F4E  0EEC               	movlw	low _UART1_DefaultOverrunErrorHandler
  7251  006F50  6F04               	movwf	UART1_SetOverrunErrorHandler@interruptHandler& (0+255),b
  7252  006F52  0EA6               	movlw	high _UART1_DefaultOverrunErrorHandler
  7253  006F54  6F05               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
  7254  006F56  EC0B  F051         	call	_UART1_SetOverrunErrorHandler	;wreg free
  7255                           
  7256                           ; BSR set to: 1
  7257                           ;mcc_generated_files/uart1.c: 144:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
  7258  006F5A  0E16               	movlw	low _UART1_DefaultErrorHandler
  7259  006F5C  6F04               	movwf	UART1_SetErrorHandler@interruptHandler& (0+255),b
  7260  006F5E  0EA6               	movlw	high _UART1_DefaultErrorHandler
  7261  006F60  6F05               	movwf	(UART1_SetErrorHandler@interruptHandler+1)& (0+255),b
  7262  006F62  EC19  F051         	call	_UART1_SetErrorHandler	;wreg free
  7263                           
  7264                           ;mcc_generated_files/uart1.c: 146:     uart1RxLastError.status = 0;
  7265  006F66  0E00               	movlw	0
  7266  006F68  0102               	movlb	2	; () banked
  7267  006F6A  6FB9               	movwf	_uart1RxLastError& (0+255),b	;volatile
  7268                           
  7269                           ;mcc_generated_files/uart1.c: 149:     uart1TxHead = 0;
  7270  006F6C  0E00               	movlw	0
  7271  006F6E  0101               	movlb	1	; () banked
  7272  006F70  6FEE               	movwf	(_uart1TxHead+1)& (0+255),b	;volatile
  7273  006F72  0E00               	movlw	0
  7274  006F74  6FED               	movwf	_uart1TxHead& (0+255),b	;volatile
  7275                           
  7276                           ;mcc_generated_files/uart1.c: 150:     uart1TxTail = 0;
  7277  006F76  0E00               	movlw	0
  7278  006F78  0100               	movlb	0	; () banked
  7279  006F7A  6FED               	movwf	(_uart1TxTail+1)& (0+255),b	;volatile
  7280  006F7C  0E00               	movlw	0
  7281  006F7E  6FEC               	movwf	_uart1TxTail& (0+255),b	;volatile
  7282                           
  7283                           ;mcc_generated_files/uart1.c: 151:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
  7284  006F80  0E04               	movlw	4
  7285  006F82  0102               	movlb	2	; () banked
  7286  006F84  6FEC               	movwf	(_uart1TxBufferRemaining+1)& (0+255),b	;volatile
  7287  006F86  0EB0               	movlw	176
  7288  006F88  6FEB               	movwf	_uart1TxBufferRemaining& (0+255),b	;volatile
  7289                           
  7290                           ;mcc_generated_files/uart1.c: 152:     uart1RxHead = 0;
  7291  006F8A  0E00               	movlw	0
  7292  006F8C  0101               	movlb	1	; () banked
  7293  006F8E  6FF3               	movwf	_uart1RxHead& (0+255),b	;volatile
  7294                           
  7295                           ;mcc_generated_files/uart1.c: 153:     uart1RxTail = 0;
  7296  006F90  0E00               	movlw	0
  7297  006F92  6FF2               	movwf	_uart1RxTail& (0+255),b	;volatile
  7298                           
  7299                           ;mcc_generated_files/uart1.c: 154:     uart1RxCount = 0;
  7300  006F94  0E00               	movlw	0
  7301  006F96  6FF1               	movwf	_uart1RxCount& (0+255),b	;volatile
  7302                           
  7303                           ; BSR set to: 1
  7304                           ;mcc_generated_files/uart1.c: 157:     PIE3bits.U1RXIE = 1;
  7305  006F98  0139               	movlb	57	; () banked
  7306  006F9A  8793               	bsf	147,3,b	;volatile
  7307                           
  7308                           ; BSR set to: 57
  7309  006F9C  0012               	return		;funcret
  7310  006F9E                     __end_of_UART1_Initialize:
  7311                           	opt callstack 0
  7312                           
  7313 ;; *************** function _UART1_SetTxInterruptHandler *****************
  7314 ;; Defined at:
  7315 ;;		line 318 in file "mcc_generated_files/uart1.c"
  7316 ;; Parameters:    Size  Location     Type
  7317 ;;  InterruptHan    2    4[BANK1 ] PTR FTN()void 
  7318 ;;		 -> UART1_Transmit_ISR(1), 
  7319 ;; Auto vars:     Size  Location     Type
  7320 ;;		None
  7321 ;; Return value:  Size  Location     Type
  7322 ;;                  1    wreg      void 
  7323 ;; Registers used:
  7324 ;;		wreg, status,2, status,0
  7325 ;; Tracked objects:
  7326 ;;		On entry : 3F/1
  7327 ;;		On exit  : 3F/1
  7328 ;;		Unchanged: 3F/0
  7329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7330 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7333 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7334 ;;Total ram usage:        2 bytes
  7335 ;; Hardware stack levels used:    1
  7336 ;; Hardware stack levels required when called:   16
  7337 ;; This function calls:
  7338 ;;		Nothing
  7339 ;; This function is called by:
  7340 ;;		_UART1_Initialize
  7341 ;; This function uses a non-reentrant model
  7342 ;;
  7343                           
  7344                           	psect	text17
  7345  00A1FA                     __ptext17:
  7346                           	opt callstack 0
  7347  00A1FA                     _UART1_SetTxInterruptHandler:
  7348                           	opt callstack 12
  7349                           
  7350                           ; BSR set to: 1
  7351                           ;mcc_generated_files/uart1.c: 319:     UART1_TxInterruptHandler = InterruptHandler;
  7352                           
  7353                           ; BSR set to: 57
  7354                           ;incstack = 0
  7355  00A1FA  0060  F410  F2EF   	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
  7356  00A200  0060  F414  F2F0   	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
  7357                           
  7358                           ; BSR set to: 1
  7359  00A206  0012               	return		;funcret
  7360  00A208                     __end_of_UART1_SetTxInterruptHandler:
  7361                           	opt callstack 0
  7362                           
  7363 ;; *************** function _UART1_SetRxInterruptHandler *****************
  7364 ;; Defined at:
  7365 ;;		line 314 in file "mcc_generated_files/uart1.c"
  7366 ;; Parameters:    Size  Location     Type
  7367 ;;  InterruptHan    2    4[BANK1 ] PTR FTN()void 
  7368 ;;		 -> UART1_Receive_ISR(1), 
  7369 ;; Auto vars:     Size  Location     Type
  7370 ;;		None
  7371 ;; Return value:  Size  Location     Type
  7372 ;;                  1    wreg      void 
  7373 ;; Registers used:
  7374 ;;		wreg, status,2, status,0
  7375 ;; Tracked objects:
  7376 ;;		On entry : 3F/1
  7377 ;;		On exit  : 3F/1
  7378 ;;		Unchanged: 3F/0
  7379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7380 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7383 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7384 ;;Total ram usage:        2 bytes
  7385 ;; Hardware stack levels used:    1
  7386 ;; Hardware stack levels required when called:   16
  7387 ;; This function calls:
  7388 ;;		Nothing
  7389 ;; This function is called by:
  7390 ;;		_UART1_Initialize
  7391 ;; This function uses a non-reentrant model
  7392 ;;
  7393                           
  7394                           	psect	text18
  7395  00A208                     __ptext18:
  7396                           	opt callstack 0
  7397  00A208                     _UART1_SetRxInterruptHandler:
  7398                           	opt callstack 12
  7399                           
  7400                           ; BSR set to: 1
  7401                           ;mcc_generated_files/uart1.c: 315:     UART1_RxInterruptHandler = InterruptHandler;
  7402                           
  7403                           ; BSR set to: 1
  7404                           ;incstack = 0
  7405  00A208  0060  F410  F2F1   	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
  7406  00A20E  0060  F414  F2F2   	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
  7407                           
  7408                           ; BSR set to: 1
  7409  00A214  0012               	return		;funcret
  7410  00A216                     __end_of_UART1_SetRxInterruptHandler:
  7411                           	opt callstack 0
  7412                           
  7413 ;; *************** function _UART1_SetOverrunErrorHandler *****************
  7414 ;; Defined at:
  7415 ;;		line 304 in file "mcc_generated_files/uart1.c"
  7416 ;; Parameters:    Size  Location     Type
  7417 ;;  interruptHan    2    4[BANK1 ] PTR FTN()void 
  7418 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
  7419 ;; Auto vars:     Size  Location     Type
  7420 ;;		None
  7421 ;; Return value:  Size  Location     Type
  7422 ;;                  1    wreg      void 
  7423 ;; Registers used:
  7424 ;;		wreg, status,2, status,0
  7425 ;; Tracked objects:
  7426 ;;		On entry : 3F/1
  7427 ;;		On exit  : 3F/1
  7428 ;;		Unchanged: 3F/0
  7429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7430 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7433 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7434 ;;Total ram usage:        2 bytes
  7435 ;; Hardware stack levels used:    1
  7436 ;; Hardware stack levels required when called:   16
  7437 ;; This function calls:
  7438 ;;		Nothing
  7439 ;; This function is called by:
  7440 ;;		_UART1_Initialize
  7441 ;; This function uses a non-reentrant model
  7442 ;;
  7443                           
  7444                           	psect	text19
  7445  00A216                     __ptext19:
  7446                           	opt callstack 0
  7447  00A216                     _UART1_SetOverrunErrorHandler:
  7448                           	opt callstack 12
  7449                           
  7450                           ; BSR set to: 1
  7451                           ;mcc_generated_files/uart1.c: 305:     UART1_OverrunErrorHandler = interruptHandler;
  7452                           
  7453                           ; BSR set to: 1
  7454                           ;incstack = 0
  7455  00A216  0060  F410  F2E7   	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
  7456  00A21C  0060  F414  F2E8   	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
  7457                           
  7458                           ; BSR set to: 1
  7459  00A222  0012               	return		;funcret
  7460  00A224                     __end_of_UART1_SetOverrunErrorHandler:
  7461                           	opt callstack 0
  7462                           
  7463 ;; *************** function _UART1_SetFramingErrorHandler *****************
  7464 ;; Defined at:
  7465 ;;		line 300 in file "mcc_generated_files/uart1.c"
  7466 ;; Parameters:    Size  Location     Type
  7467 ;;  interruptHan    2    4[BANK1 ] PTR FTN()void 
  7468 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
  7469 ;; Auto vars:     Size  Location     Type
  7470 ;;		None
  7471 ;; Return value:  Size  Location     Type
  7472 ;;                  1    wreg      void 
  7473 ;; Registers used:
  7474 ;;		wreg, status,2, status,0
  7475 ;; Tracked objects:
  7476 ;;		On entry : 3F/1
  7477 ;;		On exit  : 3F/1
  7478 ;;		Unchanged: 3F/0
  7479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7480 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7483 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7484 ;;Total ram usage:        2 bytes
  7485 ;; Hardware stack levels used:    1
  7486 ;; Hardware stack levels required when called:   16
  7487 ;; This function calls:
  7488 ;;		Nothing
  7489 ;; This function is called by:
  7490 ;;		_UART1_Initialize
  7491 ;; This function uses a non-reentrant model
  7492 ;;
  7493                           
  7494                           	psect	text20
  7495  00A224                     __ptext20:
  7496                           	opt callstack 0
  7497  00A224                     _UART1_SetFramingErrorHandler:
  7498                           	opt callstack 12
  7499                           
  7500                           ; BSR set to: 1
  7501                           ;mcc_generated_files/uart1.c: 301:     UART1_FramingErrorHandler = interruptHandler;
  7502                           
  7503                           ; BSR set to: 1
  7504                           ;incstack = 0
  7505  00A224  0060  F410  F2E9   	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
  7506  00A22A  0060  F414  F2EA   	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
  7507                           
  7508                           ; BSR set to: 1
  7509  00A230  0012               	return		;funcret
  7510  00A232                     __end_of_UART1_SetFramingErrorHandler:
  7511                           	opt callstack 0
  7512                           
  7513 ;; *************** function _UART1_SetErrorHandler *****************
  7514 ;; Defined at:
  7515 ;;		line 308 in file "mcc_generated_files/uart1.c"
  7516 ;; Parameters:    Size  Location     Type
  7517 ;;  interruptHan    2    4[BANK1 ] PTR FTN()void 
  7518 ;;		 -> UART1_DefaultErrorHandler(1), 
  7519 ;; Auto vars:     Size  Location     Type
  7520 ;;		None
  7521 ;; Return value:  Size  Location     Type
  7522 ;;                  1    wreg      void 
  7523 ;; Registers used:
  7524 ;;		wreg, status,2, status,0
  7525 ;; Tracked objects:
  7526 ;;		On entry : 3F/1
  7527 ;;		On exit  : 3F/1
  7528 ;;		Unchanged: 3F/0
  7529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7530 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7533 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7534 ;;Total ram usage:        2 bytes
  7535 ;; Hardware stack levels used:    1
  7536 ;; Hardware stack levels required when called:   16
  7537 ;; This function calls:
  7538 ;;		Nothing
  7539 ;; This function is called by:
  7540 ;;		_UART1_Initialize
  7541 ;; This function uses a non-reentrant model
  7542 ;;
  7543                           
  7544                           	psect	text21
  7545  00A232                     __ptext21:
  7546                           	opt callstack 0
  7547  00A232                     _UART1_SetErrorHandler:
  7548                           	opt callstack 12
  7549                           
  7550                           ; BSR set to: 1
  7551                           ;mcc_generated_files/uart1.c: 309:     UART1_ErrorHandler = interruptHandler;
  7552                           
  7553                           ; BSR set to: 1
  7554                           ;incstack = 0
  7555  00A232  0060  F410  F2E5   	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
  7556  00A238  0060  F414  F2E6   	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
  7557                           
  7558                           ; BSR set to: 1
  7559  00A23E  0012               	return		;funcret
  7560  00A240                     __end_of_UART1_SetErrorHandler:
  7561                           	opt callstack 0
  7562                           
  7563 ;; *************** function _TMR6_Initialize *****************
  7564 ;; Defined at:
  7565 ;;		line 64 in file "mcc_generated_files/tmr6.c"
  7566 ;; Parameters:    Size  Location     Type
  7567 ;;		None
  7568 ;; Auto vars:     Size  Location     Type
  7569 ;;		None
  7570 ;; Return value:  Size  Location     Type
  7571 ;;                  1    wreg      void 
  7572 ;; Registers used:
  7573 ;;		wreg, status,2, status,0, cstack
  7574 ;; Tracked objects:
  7575 ;;		On entry : 3F/3F
  7576 ;;		On exit  : 3F/1
  7577 ;;		Unchanged: 0/0
  7578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7583 ;;Total ram usage:        0 bytes
  7584 ;; Hardware stack levels used:    1
  7585 ;; Hardware stack levels required when called:   17
  7586 ;; This function calls:
  7587 ;;		_TMR6_SetInterruptHandler
  7588 ;; This function is called by:
  7589 ;;		_SYSTEM_Initialize
  7590 ;; This function uses a non-reentrant model
  7591 ;;
  7592                           
  7593                           	psect	text22
  7594  00989C                     __ptext22:
  7595                           	opt callstack 0
  7596  00989C                     _TMR6_Initialize:
  7597                           	opt callstack 12
  7598                           
  7599                           ; BSR set to: 63
  7600                           ;mcc_generated_files/tmr6.c: 69:     T6CLKCON = 0x04;
  7601                           
  7602                           ; BSR set to: 1
  7603                           ;incstack = 0
  7604  00989C  0E04               	movlw	4
  7605  00989E  6E96               	movwf	150,c	;volatile
  7606                           
  7607                           ;mcc_generated_files/tmr6.c: 72:     T6HLT = 0x20;
  7608  0098A0  0E20               	movlw	32
  7609  0098A2  6E95               	movwf	149,c	;volatile
  7610                           
  7611                           ;mcc_generated_files/tmr6.c: 75:     T6RST = 0x00;
  7612  0098A4  0E00               	movlw	0
  7613  0098A6  6E97               	movwf	151,c	;volatile
  7614                           
  7615                           ;mcc_generated_files/tmr6.c: 78:     T6PR = 0x90;
  7616  0098A8  0E90               	movlw	144
  7617  0098AA  6E93               	movwf	147,c	;volatile
  7618                           
  7619                           ;mcc_generated_files/tmr6.c: 81:     T6TMR = 0x00;
  7620  0098AC  0E00               	movlw	0
  7621  0098AE  6E92               	movwf	146,c	;volatile
  7622                           
  7623                           ; BSR set to: 63
  7624                           ;mcc_generated_files/tmr6.c: 84:     PIR9bits.TMR6IF = 0;
  7625  0098B0  0139               	movlb	57	; () banked
  7626  0098B2  91A9               	bcf	169,0,b	;volatile
  7627                           
  7628                           ; BSR set to: 57
  7629                           ;mcc_generated_files/tmr6.c: 87:     PIE9bits.TMR6IE = 1;
  7630  0098B4  8199               	bsf	153,0,b	;volatile
  7631                           
  7632                           ; BSR set to: 57
  7633                           ;mcc_generated_files/tmr6.c: 90:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
  7634  0098B6  0EF0               	movlw	low _TMR6_DefaultInterruptHandler
  7635  0098B8  0101               	movlb	1	; () banked
  7636  0098BA  6F04               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
  7637  0098BC  0EA6               	movlw	high _TMR6_DefaultInterruptHandler
  7638  0098BE  6F05               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  7639  0098C0  EC2E  F051         	call	_TMR6_SetInterruptHandler	;wreg free
  7640                           
  7641                           ; BSR set to: 1
  7642                           ;mcc_generated_files/tmr6.c: 93:     T6CON = 0xD0;
  7643  0098C4  0ED0               	movlw	208
  7644  0098C6  6E94               	movwf	148,c	;volatile
  7645                           
  7646                           ; BSR set to: 1
  7647  0098C8  0012               	return		;funcret
  7648  0098CA                     __end_of_TMR6_Initialize:
  7649                           	opt callstack 0
  7650                           
  7651 ;; *************** function _TMR5_Initialize *****************
  7652 ;; Defined at:
  7653 ;;		line 64 in file "mcc_generated_files/tmr5.c"
  7654 ;; Parameters:    Size  Location     Type
  7655 ;;		None
  7656 ;; Auto vars:     Size  Location     Type
  7657 ;;		None
  7658 ;; Return value:  Size  Location     Type
  7659 ;;                  1    wreg      void 
  7660 ;; Registers used:
  7661 ;;		wreg, status,2, status,0, cstack
  7662 ;; Tracked objects:
  7663 ;;		On entry : 3F/39
  7664 ;;		On exit  : 3F/1
  7665 ;;		Unchanged: 0/0
  7666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7669 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7670 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7671 ;;Total ram usage:        2 bytes
  7672 ;; Hardware stack levels used:    1
  7673 ;; Hardware stack levels required when called:   17
  7674 ;; This function calls:
  7675 ;;		_TMR5_SetInterruptHandler
  7676 ;; This function is called by:
  7677 ;;		_SYSTEM_Initialize
  7678 ;; This function uses a non-reentrant model
  7679 ;;
  7680                           
  7681                           	psect	text23
  7682  008F66                     __ptext23:
  7683                           	opt callstack 0
  7684  008F66                     _TMR5_Initialize:
  7685                           	opt callstack 12
  7686                           
  7687                           ; BSR set to: 57
  7688                           ;mcc_generated_files/tmr5.c: 69:     T5GCON = 0x00;
  7689                           
  7690                           ; BSR set to: 1
  7691                           ;incstack = 0
  7692  008F66  0E00               	movlw	0
  7693  008F68  6E9B               	movwf	155,c	;volatile
  7694                           
  7695                           ;mcc_generated_files/tmr5.c: 72:     T5GATE = 0x00;
  7696  008F6A  0E00               	movlw	0
  7697  008F6C  6E9C               	movwf	156,c	;volatile
  7698                           
  7699                           ;mcc_generated_files/tmr5.c: 75:     T5CLK = 0x04;
  7700  008F6E  0E04               	movlw	4
  7701  008F70  6E9D               	movwf	157,c	;volatile
  7702                           
  7703                           ;mcc_generated_files/tmr5.c: 78:     TMR5H = 0xF0;
  7704  008F72  0EF0               	movlw	240
  7705  008F74  6E99               	movwf	153,c	;volatile
  7706                           
  7707                           ;mcc_generated_files/tmr5.c: 81:     TMR5L = 0xDD;
  7708  008F76  0EDD               	movlw	221
  7709  008F78  6E98               	movwf	152,c	;volatile
  7710                           
  7711                           ; BSR set to: 57
  7712                           ;mcc_generated_files/tmr5.c: 84:     PIR8bits.TMR5IF = 0;
  7713  008F7A  9DA8               	bcf	168,6,b	;volatile
  7714                           
  7715                           ; BSR set to: 57
  7716                           ;mcc_generated_files/tmr5.c: 87:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
  7717  008F7C  5098               	movf	152,w,c	;volatile
  7718  008F7E  006F FE64  F106    	movff	16281,??_TMR5_Initialize	;volatile
  7719  008F84  0101               	movlb	1	; () banked
  7720  008F86  6B07               	clrf	(??_TMR5_Initialize+1)& (0+255),b
  7721  008F88  0060  F418  F107   	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
  7722  008F8E  6B06               	clrf	??_TMR5_Initialize& (0+255),b
  7723  008F90  1106               	iorwf	??_TMR5_Initialize& (0+255),w,b
  7724  008F92  0102               	movlb	2	; () banked
  7725  008F94  6FE3               	movwf	_timer5ReloadVal& (0+255),b	;volatile
  7726  008F96  0101               	movlb	1	; () banked
  7727  008F98  5107               	movf	(??_TMR5_Initialize+1)& (0+255),w,b
  7728  008F9A  0102               	movlb	2	; () banked
  7729  008F9C  6FE4               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
  7730                           
  7731                           ; BSR set to: 2
  7732                           ;mcc_generated_files/tmr5.c: 90:     PIE8bits.TMR5IE = 1;
  7733  008F9E  0139               	movlb	57	; () banked
  7734  008FA0  8D98               	bsf	152,6,b	;volatile
  7735                           
  7736                           ; BSR set to: 57
  7737                           ;mcc_generated_files/tmr5.c: 93:     TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandl
      +                          er);
  7738  008FA2  0EF2               	movlw	low _TMR5_DefaultInterruptHandler
  7739  008FA4  0101               	movlb	1	; () banked
  7740  008FA6  6F04               	movwf	TMR5_SetInterruptHandler@InterruptHandler& (0+255),b
  7741  008FA8  0EA6               	movlw	high _TMR5_DefaultInterruptHandler
  7742  008FAA  6F05               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  7743  008FAC  EC6D  F051         	call	_TMR5_SetInterruptHandler	;wreg free
  7744                           
  7745                           ; BSR set to: 1
  7746                           ;mcc_generated_files/tmr5.c: 96:     T5CON = 0x31;
  7747  008FB0  0E31               	movlw	49
  7748  008FB2  6E9A               	movwf	154,c	;volatile
  7749                           
  7750                           ; BSR set to: 1
  7751  008FB4  0012               	return		;funcret
  7752  008FB6                     __end_of_TMR5_Initialize:
  7753                           	opt callstack 0
  7754                           
  7755 ;; *************** function _TMR4_Initialize *****************
  7756 ;; Defined at:
  7757 ;;		line 64 in file "mcc_generated_files/tmr4.c"
  7758 ;; Parameters:    Size  Location     Type
  7759 ;;		None
  7760 ;; Auto vars:     Size  Location     Type
  7761 ;;		None
  7762 ;; Return value:  Size  Location     Type
  7763 ;;                  1    wreg      void 
  7764 ;; Registers used:
  7765 ;;		wreg, status,2, status,0, cstack
  7766 ;; Tracked objects:
  7767 ;;		On entry : 3F/1
  7768 ;;		On exit  : 3F/1
  7769 ;;		Unchanged: 0/0
  7770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7775 ;;Total ram usage:        0 bytes
  7776 ;; Hardware stack levels used:    1
  7777 ;; Hardware stack levels required when called:   17
  7778 ;; This function calls:
  7779 ;;		_TMR4_SetInterruptHandler
  7780 ;; This function is called by:
  7781 ;;		_SYSTEM_Initialize
  7782 ;; This function uses a non-reentrant model
  7783 ;;
  7784                           
  7785                           	psect	text24
  7786  0098CA                     __ptext24:
  7787                           	opt callstack 0
  7788  0098CA                     _TMR4_Initialize:
  7789                           	opt callstack 12
  7790                           
  7791                           ; BSR set to: 1
  7792                           ;mcc_generated_files/tmr4.c: 69:     T4CLKCON = 0x04;
  7793                           
  7794                           ; BSR set to: 1
  7795                           ;incstack = 0
  7796  0098CA  0E04               	movlw	4
  7797  0098CC  6EA2               	movwf	162,c	;volatile
  7798                           
  7799                           ;mcc_generated_files/tmr4.c: 72:     T4HLT = 0x08;
  7800  0098CE  0E08               	movlw	8
  7801  0098D0  6EA1               	movwf	161,c	;volatile
  7802                           
  7803                           ;mcc_generated_files/tmr4.c: 75:     T4RST = 0x00;
  7804  0098D2  0E00               	movlw	0
  7805  0098D4  6EA3               	movwf	163,c	;volatile
  7806                           
  7807                           ;mcc_generated_files/tmr4.c: 78:     T4PR = 0x17;
  7808  0098D6  0E17               	movlw	23
  7809  0098D8  6E9F               	movwf	159,c	;volatile
  7810                           
  7811                           ;mcc_generated_files/tmr4.c: 81:     T4TMR = 0x00;
  7812  0098DA  0E00               	movlw	0
  7813  0098DC  6E9E               	movwf	158,c	;volatile
  7814                           
  7815                           ; BSR set to: 1
  7816                           ;mcc_generated_files/tmr4.c: 84:     PIR7bits.TMR4IF = 0;
  7817  0098DE  0139               	movlb	57	; () banked
  7818  0098E0  91A7               	bcf	167,0,b	;volatile
  7819                           
  7820                           ; BSR set to: 57
  7821                           ;mcc_generated_files/tmr4.c: 87:     PIE7bits.TMR4IE = 1;
  7822  0098E2  8197               	bsf	151,0,b	;volatile
  7823                           
  7824                           ; BSR set to: 57
  7825                           ;mcc_generated_files/tmr4.c: 90:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
  7826  0098E4  0EF4               	movlw	low _TMR4_DefaultInterruptHandler
  7827  0098E6  0101               	movlb	1	; () banked
  7828  0098E8  6F04               	movwf	TMR4_SetInterruptHandler@InterruptHandler& (0+255),b
  7829  0098EA  0EA6               	movlw	high _TMR4_DefaultInterruptHandler
  7830  0098EC  6F05               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  7831  0098EE  EC82  F051         	call	_TMR4_SetInterruptHandler	;wreg free
  7832                           
  7833                           ; BSR set to: 1
  7834                           ;mcc_generated_files/tmr4.c: 93:     T4CON = 0xF0;
  7835  0098F2  0EF0               	movlw	240
  7836  0098F4  6EA0               	movwf	160,c	;volatile
  7837                           
  7838                           ; BSR set to: 1
  7839  0098F6  0012               	return		;funcret
  7840  0098F8                     __end_of_TMR4_Initialize:
  7841                           	opt callstack 0
  7842                           
  7843 ;; *************** function _TMR2_Initialize *****************
  7844 ;; Defined at:
  7845 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  7846 ;; Parameters:    Size  Location     Type
  7847 ;;		None
  7848 ;; Auto vars:     Size  Location     Type
  7849 ;;		None
  7850 ;; Return value:  Size  Location     Type
  7851 ;;                  1    wreg      void 
  7852 ;; Registers used:
  7853 ;;		wreg, status,2
  7854 ;; Tracked objects:
  7855 ;;		On entry : 3F/1
  7856 ;;		On exit  : 3F/39
  7857 ;;		Unchanged: 0/0
  7858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7863 ;;Total ram usage:        0 bytes
  7864 ;; Hardware stack levels used:    1
  7865 ;; Hardware stack levels required when called:   16
  7866 ;; This function calls:
  7867 ;;		Nothing
  7868 ;; This function is called by:
  7869 ;;		_SYSTEM_Initialize
  7870 ;; This function uses a non-reentrant model
  7871 ;;
  7872                           
  7873                           	psect	text25
  7874  009ED4                     __ptext25:
  7875                           	opt callstack 0
  7876  009ED4                     _TMR2_Initialize:
  7877                           	opt callstack 13
  7878                           
  7879                           ; BSR set to: 1
  7880                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
  7881                           
  7882                           ; BSR set to: 1
  7883                           ;incstack = 0
  7884  009ED4  0E01               	movlw	1
  7885  009ED6  6EAE               	movwf	174,c	;volatile
  7886                           
  7887                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
  7888  009ED8  0E00               	movlw	0
  7889  009EDA  6EAD               	movwf	173,c	;volatile
  7890                           
  7891                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
  7892  009EDC  0E00               	movlw	0
  7893  009EDE  6EAF               	movwf	175,c	;volatile
  7894                           
  7895                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xF9;
  7896  009EE0  0EF9               	movlw	249
  7897  009EE2  6EAB               	movwf	171,c	;volatile
  7898                           
  7899                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
  7900  009EE4  0E00               	movlw	0
  7901  009EE6  6EAA               	movwf	170,c	;volatile
  7902                           
  7903                           ; BSR set to: 1
  7904                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
  7905  009EE8  0139               	movlb	57	; () banked
  7906  009EEA  95A4               	bcf	164,2,b	;volatile
  7907                           
  7908                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xF0;
  7909  009EEC  0EF0               	movlw	240
  7910  009EEE  6EAC               	movwf	172,c	;volatile
  7911                           
  7912                           ; BSR set to: 57
  7913  009EF0  0012               	return		;funcret
  7914  009EF2                     __end_of_TMR2_Initialize:
  7915                           	opt callstack 0
  7916                           
  7917 ;; *************** function _TMR1_Initialize *****************
  7918 ;; Defined at:
  7919 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  7920 ;; Parameters:    Size  Location     Type
  7921 ;;		None
  7922 ;; Auto vars:     Size  Location     Type
  7923 ;;		None
  7924 ;; Return value:  Size  Location     Type
  7925 ;;                  1    wreg      void 
  7926 ;; Registers used:
  7927 ;;		wreg, status,2, status,0, cstack
  7928 ;; Tracked objects:
  7929 ;;		On entry : 3F/1
  7930 ;;		On exit  : 3F/1
  7931 ;;		Unchanged: 0/0
  7932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7935 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7936 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7937 ;;Total ram usage:        2 bytes
  7938 ;; Hardware stack levels used:    1
  7939 ;; Hardware stack levels required when called:   17
  7940 ;; This function calls:
  7941 ;;		_TMR1_SetInterruptHandler
  7942 ;; This function is called by:
  7943 ;;		_SYSTEM_Initialize
  7944 ;; This function uses a non-reentrant model
  7945 ;;
  7946                           
  7947                           	psect	text26
  7948  008E1E                     __ptext26:
  7949                           	opt callstack 0
  7950  008E1E                     _TMR1_Initialize:
  7951                           	opt callstack 12
  7952                           
  7953                           ; BSR set to: 1
  7954                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  7955                           
  7956                           ; BSR set to: 57
  7957                           ;incstack = 0
  7958  008E1E  0E00               	movlw	0
  7959  008E20  6EB3               	movwf	179,c	;volatile
  7960                           
  7961                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
  7962  008E22  0E00               	movlw	0
  7963  008E24  6EB4               	movwf	180,c	;volatile
  7964                           
  7965                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x01;
  7966  008E26  0E01               	movlw	1
  7967  008E28  6EB5               	movwf	181,c	;volatile
  7968                           
  7969                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0x63;
  7970  008E2A  0E63               	movlw	99
  7971  008E2C  6EB1               	movwf	177,c	;volatile
  7972                           
  7973                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0xC0;
  7974  008E2E  0EC0               	movlw	192
  7975  008E30  6EB0               	movwf	176,c	;volatile
  7976                           
  7977                           ; BSR set to: 1
  7978                           ;mcc_generated_files/tmr1.c: 84:     PIR4bits.TMR1IF = 0;
  7979  008E32  0139               	movlb	57	; () banked
  7980  008E34  91A4               	bcf	164,0,b	;volatile
  7981                           
  7982                           ; BSR set to: 57
  7983                           ;mcc_generated_files/tmr1.c: 87:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  7984  008E36  50B0               	movf	176,w,c	;volatile
  7985  008E38  006F FEC4  F106    	movff	16305,??_TMR1_Initialize	;volatile
  7986  008E3E  0101               	movlb	1	; () banked
  7987  008E40  6B07               	clrf	(??_TMR1_Initialize+1)& (0+255),b
  7988  008E42  0060  F418  F107   	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
  7989  008E48  6B06               	clrf	??_TMR1_Initialize& (0+255),b
  7990  008E4A  1106               	iorwf	??_TMR1_Initialize& (0+255),w,b
  7991  008E4C  0102               	movlb	2	; () banked
  7992  008E4E  6FDD               	movwf	_timer1ReloadVal& (0+255),b	;volatile
  7993  008E50  0101               	movlb	1	; () banked
  7994  008E52  5107               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
  7995  008E54  0102               	movlb	2	; () banked
  7996  008E56  6FDE               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
  7997                           
  7998                           ; BSR set to: 2
  7999                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
  8000  008E58  0139               	movlb	57	; () banked
  8001  008E5A  8194               	bsf	148,0,b	;volatile
  8002                           
  8003                           ; BSR set to: 57
  8004                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  8005  008E5C  0EF6               	movlw	low _TMR1_DefaultInterruptHandler
  8006  008E5E  0101               	movlb	1	; () banked
  8007  008E60  6F04               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  8008  008E62  0EA6               	movlw	high _TMR1_DefaultInterruptHandler
  8009  008E64  6F05               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  8010  008E66  EC66  F051         	call	_TMR1_SetInterruptHandler	;wreg free
  8011                           
  8012                           ; BSR set to: 1
  8013                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x31;
  8014  008E6A  0E31               	movlw	49
  8015  008E6C  6EB2               	movwf	178,c	;volatile
  8016                           
  8017                           ; BSR set to: 1
  8018  008E6E  0012               	return		;funcret
  8019  008E70                     __end_of_TMR1_Initialize:
  8020                           	opt callstack 0
  8021                           
  8022 ;; *************** function _TMR0_Initialize *****************
  8023 ;; Defined at:
  8024 ;;		line 61 in file "mcc_generated_files/tmr0.c"
  8025 ;; Parameters:    Size  Location     Type
  8026 ;;		None
  8027 ;; Auto vars:     Size  Location     Type
  8028 ;;		None
  8029 ;; Return value:  Size  Location     Type
  8030 ;;                  1    wreg      void 
  8031 ;; Registers used:
  8032 ;;		wreg, status,2, status,0, cstack
  8033 ;; Tracked objects:
  8034 ;;		On entry : 3F/39
  8035 ;;		On exit  : 3F/1
  8036 ;;		Unchanged: 0/0
  8037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8042 ;;Total ram usage:        0 bytes
  8043 ;; Hardware stack levels used:    1
  8044 ;; Hardware stack levels required when called:   17
  8045 ;; This function calls:
  8046 ;;		_TMR0_SetInterruptHandler
  8047 ;; This function is called by:
  8048 ;;		_SYSTEM_Initialize
  8049 ;; This function uses a non-reentrant model
  8050 ;;
  8051                           
  8052                           	psect	text27
  8053  009C34                     __ptext27:
  8054                           	opt callstack 0
  8055  009C34                     _TMR0_Initialize:
  8056                           	opt callstack 12
  8057                           
  8058                           ; BSR set to: 57
  8059                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x65;
  8060                           
  8061                           ; BSR set to: 1
  8062                           ;incstack = 0
  8063  009C34  0E65               	movlw	101
  8064  009C36  6EB9               	movwf	185,c	;volatile
  8065                           
  8066                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xF9;
  8067  009C38  0EF9               	movlw	249
  8068  009C3A  6EB7               	movwf	183,c	;volatile
  8069                           
  8070                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
  8071  009C3C  0E00               	movlw	0
  8072  009C3E  6EB6               	movwf	182,c	;volatile
  8073                           
  8074                           ; BSR set to: 57
  8075                           ;mcc_generated_files/tmr0.c: 75:     PIR3bits.TMR0IF = 0;
  8076  009C40  9FA3               	bcf	163,7,b	;volatile
  8077                           
  8078                           ; BSR set to: 57
  8079                           ;mcc_generated_files/tmr0.c: 78:     PIE3bits.TMR0IE = 1;
  8080  009C42  8F93               	bsf	147,7,b	;volatile
  8081                           
  8082                           ; BSR set to: 57
  8083                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  8084  009C44  0EF8               	movlw	low _TMR0_DefaultInterruptHandler
  8085  009C46  0101               	movlb	1	; () banked
  8086  009C48  6F04               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
  8087  009C4A  0EA6               	movlw	high _TMR0_DefaultInterruptHandler
  8088  009C4C  6F05               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  8089  009C4E  EC20  F051         	call	_TMR0_SetInterruptHandler	;wreg free
  8090                           
  8091                           ; BSR set to: 1
  8092                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x8F;
  8093  009C52  0E8F               	movlw	143
  8094  009C54  6EB8               	movwf	184,c	;volatile
  8095                           
  8096                           ; BSR set to: 1
  8097  009C56  0012               	return		;funcret
  8098  009C58                     __end_of_TMR0_Initialize:
  8099                           	opt callstack 0
  8100                           
  8101 ;; *************** function _PWM6_Initialize *****************
  8102 ;; Defined at:
  8103 ;;		line 58 in file "mcc_generated_files/pwm6.c"
  8104 ;; Parameters:    Size  Location     Type
  8105 ;;		None
  8106 ;; Auto vars:     Size  Location     Type
  8107 ;;		None
  8108 ;; Return value:  Size  Location     Type
  8109 ;;                  1    wreg      void 
  8110 ;; Registers used:
  8111 ;;		wreg, status,2
  8112 ;; Tracked objects:
  8113 ;;		On entry : 3F/1
  8114 ;;		On exit  : 3F/3F
  8115 ;;		Unchanged: 0/0
  8116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8121 ;;Total ram usage:        0 bytes
  8122 ;; Hardware stack levels used:    1
  8123 ;; Hardware stack levels required when called:   16
  8124 ;; This function calls:
  8125 ;;		Nothing
  8126 ;; This function is called by:
  8127 ;;		_SYSTEM_Initialize
  8128 ;; This function uses a non-reentrant model
  8129 ;;
  8130                           
  8131                           	psect	text28
  8132  009FE6                     __ptext28:
  8133                           	opt callstack 0
  8134  009FE6                     _PWM6_Initialize:
  8135                           	opt callstack 13
  8136                           
  8137                           ; BSR set to: 1
  8138                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
  8139                           
  8140                           ; BSR set to: 1
  8141                           ;incstack = 0
  8142  009FE6  0E80               	movlw	128
  8143  009FE8  6E6A               	movwf	106,c	;volatile
  8144                           
  8145                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x7C;
  8146  009FEA  0E7C               	movlw	124
  8147  009FEC  6E69               	movwf	105,c	;volatile
  8148                           
  8149                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0xC0;
  8150  009FEE  0EC0               	movlw	192
  8151  009FF0  6E68               	movwf	104,c	;volatile
  8152                           
  8153                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
  8154  009FF2  013F               	movlb	63	; () banked
  8155  009FF4  515F               	movf	95,w,b	;volatile
  8156  009FF6  0BF3               	andlw	-13
  8157  009FF8  0904               	iorlw	4
  8158  009FFA  6F5F               	movwf	95,b	;volatile
  8159                           
  8160                           ; BSR set to: 63
  8161  009FFC  0012               	return		;funcret
  8162  009FFE                     __end_of_PWM6_Initialize:
  8163                           	opt callstack 0
  8164                           
  8165 ;; *************** function _PMD_Initialize *****************
  8166 ;; Defined at:
  8167 ;;		line 84 in file "mcc_generated_files/mcc.c"
  8168 ;; Parameters:    Size  Location     Type
  8169 ;;		None
  8170 ;; Auto vars:     Size  Location     Type
  8171 ;;		None
  8172 ;; Return value:  Size  Location     Type
  8173 ;;                  1    wreg      void 
  8174 ;; Registers used:
  8175 ;;		wreg, status,2
  8176 ;; Tracked objects:
  8177 ;;		On entry : 0/0
  8178 ;;		On exit  : 3F/39
  8179 ;;		Unchanged: 0/0
  8180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8185 ;;Total ram usage:        0 bytes
  8186 ;; Hardware stack levels used:    1
  8187 ;; Hardware stack levels required when called:   16
  8188 ;; This function calls:
  8189 ;;		Nothing
  8190 ;; This function is called by:
  8191 ;;		_SYSTEM_Initialize
  8192 ;; This function uses a non-reentrant model
  8193 ;;
  8194                           
  8195                           	psect	text29
  8196  009C58                     __ptext29:
  8197                           	opt callstack 0
  8198  009C58                     _PMD_Initialize:
  8199                           	opt callstack 13
  8200                           
  8201                           ;mcc_generated_files/mcc.c: 87:     PMD0 = 0x00;
  8202                           
  8203                           ; BSR set to: 63
  8204                           ;incstack = 0
  8205  009C58  0E00               	movlw	0
  8206  009C5A  0139               	movlb	57	; () banked
  8207  009C5C  6FC0               	movwf	192,b	;volatile
  8208                           
  8209                           ;mcc_generated_files/mcc.c: 89:     PMD1 = 0x00;
  8210  009C5E  0E00               	movlw	0
  8211  009C60  6FC1               	movwf	193,b	;volatile
  8212                           
  8213                           ;mcc_generated_files/mcc.c: 91:     PMD2 = 0x00;
  8214  009C62  0E00               	movlw	0
  8215  009C64  6FC2               	movwf	194,b	;volatile
  8216                           
  8217                           ;mcc_generated_files/mcc.c: 93:     PMD3 = 0x00;
  8218  009C66  0E00               	movlw	0
  8219  009C68  6FC3               	movwf	195,b	;volatile
  8220                           
  8221                           ;mcc_generated_files/mcc.c: 95:     PMD4 = 0x00;
  8222  009C6A  0E00               	movlw	0
  8223  009C6C  6FC4               	movwf	196,b	;volatile
  8224                           
  8225                           ;mcc_generated_files/mcc.c: 97:     PMD5 = 0x00;
  8226  009C6E  0E00               	movlw	0
  8227  009C70  6FC5               	movwf	197,b	;volatile
  8228                           
  8229                           ;mcc_generated_files/mcc.c: 99:     PMD6 = 0x00;
  8230  009C72  0E00               	movlw	0
  8231  009C74  6FC6               	movwf	198,b	;volatile
  8232                           
  8233                           ;mcc_generated_files/mcc.c: 101:     PMD7 = 0x00;
  8234  009C76  0E00               	movlw	0
  8235  009C78  6FC7               	movwf	199,b	;volatile
  8236                           
  8237                           ; BSR set to: 57
  8238  009C7A  0012               	return		;funcret
  8239  009C7C                     __end_of_PMD_Initialize:
  8240                           	opt callstack 0
  8241                           
  8242 ;; *************** function _PIN_MANAGER_Initialize *****************
  8243 ;; Defined at:
  8244 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8245 ;; Parameters:    Size  Location     Type
  8246 ;;		None
  8247 ;; Auto vars:     Size  Location     Type
  8248 ;;		None
  8249 ;; Return value:  Size  Location     Type
  8250 ;;                  1    wreg      void 
  8251 ;; Registers used:
  8252 ;;		wreg, status,2
  8253 ;; Tracked objects:
  8254 ;;		On entry : 3F/39
  8255 ;;		On exit  : 3F/3A
  8256 ;;		Unchanged: 0/0
  8257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8262 ;;Total ram usage:        0 bytes
  8263 ;; Hardware stack levels used:    1
  8264 ;; Hardware stack levels required when called:   16
  8265 ;; This function calls:
  8266 ;;		Nothing
  8267 ;; This function is called by:
  8268 ;;		_SYSTEM_Initialize
  8269 ;; This function uses a non-reentrant model
  8270 ;;
  8271                           
  8272                           	psect	text30
  8273  00710C                     __ptext30:
  8274                           	opt callstack 0
  8275  00710C                     _PIN_MANAGER_Initialize:
  8276                           	opt callstack 13
  8277                           
  8278                           ; BSR set to: 57
  8279                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  8280                           
  8281                           ; BSR set to: 57
  8282                           ;incstack = 0
  8283  00710C  0E00               	movlw	0
  8284  00710E  6EBE               	movwf	190,c	;volatile
  8285                           
  8286                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  8287  007110  0E00               	movlw	0
  8288  007112  6EBD               	movwf	189,c	;volatile
  8289                           
  8290                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x08;
  8291  007114  0E08               	movlw	8
  8292  007116  6EBA               	movwf	186,c	;volatile
  8293                           
  8294                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  8295  007118  0E00               	movlw	0
  8296  00711A  6EBB               	movwf	187,c	;volatile
  8297                           
  8298                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  8299  00711C  0E00               	movlw	0
  8300  00711E  6EBC               	movwf	188,c	;volatile
  8301                           
  8302                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  8303  007120  0E07               	movlw	7
  8304  007122  6EC6               	movwf	198,c	;volatile
  8305                           
  8306                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFD;
  8307  007124  0EFD               	movlw	253
  8308  007126  6EC2               	movwf	194,c	;volatile
  8309                           
  8310                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xCF;
  8311  007128  0ECF               	movlw	207
  8312  00712A  6EC3               	movwf	195,c	;volatile
  8313                           
  8314                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x1D;
  8315  00712C  0E1D               	movlw	29
  8316  00712E  6EC4               	movwf	196,c	;volatile
  8317                           
  8318                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0x06;
  8319  007130  0E06               	movlw	6
  8320  007132  6EC5               	movwf	197,c	;volatile
  8321                           
  8322                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xF9;
  8323  007134  0EF9               	movlw	249
  8324  007136  013A               	movlb	58	; () banked
  8325  007138  6F70               	movwf	112,b	;volatile
  8326                           
  8327                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xFE;
  8328  00713A  0EFE               	movlw	254
  8329  00713C  6F60               	movwf	96,b	;volatile
  8330                           
  8331                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xCF;
  8332  00713E  0ECF               	movlw	207
  8333  007140  6F50               	movwf	80,b	;volatile
  8334                           
  8335                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  8336  007142  0E07               	movlw	7
  8337  007144  6F80               	movwf	128,b	;volatile
  8338                           
  8339                           ; BSR set to: 58
  8340                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  8341  007146  6940               	setf	64,b	;volatile
  8342                           
  8343                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  8344  007148  0E00               	movlw	0
  8345  00714A  6F71               	movwf	113,b	;volatile
  8346                           
  8347                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  8348  00714C  0E00               	movlw	0
  8349  00714E  6F81               	movwf	129,b	;volatile
  8350                           
  8351                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x3C;
  8352  007150  0E3C               	movlw	60
  8353  007152  6F51               	movwf	81,b	;volatile
  8354                           
  8355                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  8356  007154  0E00               	movlw	0
  8357  007156  6F41               	movwf	65,b	;volatile
  8358                           
  8359                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x18;
  8360  007158  0E18               	movlw	24
  8361  00715A  6F61               	movwf	97,b	;volatile
  8362                           
  8363                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
  8364  00715C  0E00               	movlw	0
  8365  00715E  6F5A               	movwf	90,b	;volatile
  8366                           
  8367                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
  8368  007160  0E00               	movlw	0
  8369  007162  6F5B               	movwf	91,b	;volatile
  8370                           
  8371                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
  8372  007164  0E00               	movlw	0
  8373  007166  6F6A               	movwf	106,b	;volatile
  8374                           
  8375                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
  8376  007168  0E00               	movlw	0
  8377  00716A  6F6B               	movwf	107,b	;volatile
  8378                           
  8379                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
  8380  00716C  0E00               	movlw	0
  8381  00716E  6F7A               	movwf	122,b	;volatile
  8382                           
  8383                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
  8384  007170  0E00               	movlw	0
  8385  007172  6F7B               	movwf	123,b	;volatile
  8386                           
  8387                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
  8388  007174  0E00               	movlw	0
  8389  007176  6F82               	movwf	130,b	;volatile
  8390                           
  8391                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
  8392  007178  0E00               	movlw	0
  8393  00717A  6F42               	movwf	66,b	;volatile
  8394                           
  8395                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x7F;
  8396  00717C  0E7F               	movlw	127
  8397  00717E  6F52               	movwf	82,b	;volatile
  8398                           
  8399                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x18;
  8400  007180  0E18               	movlw	24
  8401  007182  6F62               	movwf	98,b	;volatile
  8402                           
  8403                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
  8404  007184  0E00               	movlw	0
  8405  007186  6F72               	movwf	114,b	;volatile
  8406                           
  8407                           ; BSR set to: 58
  8408                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
  8409  007188  6943               	setf	67,b	;volatile
  8410                           
  8411                           ; BSR set to: 58
  8412                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
  8413  00718A  6953               	setf	83,b	;volatile
  8414                           
  8415                           ; BSR set to: 58
  8416                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
  8417  00718C  6963               	setf	99,b	;volatile
  8418                           
  8419                           ; BSR set to: 58
  8420                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
  8421  00718E  6973               	setf	115,b	;volatile
  8422                           
  8423                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
  8424  007190  0E07               	movlw	7
  8425  007192  6F83               	movwf	131,b	;volatile
  8426                           
  8427                           ; BSR set to: 58
  8428                           ;mcc_generated_files/pin_manager.c: 124:     INLVLA = 0xFF;
  8429  007194  6944               	setf	68,b	;volatile
  8430                           
  8431                           ; BSR set to: 58
  8432                           ;mcc_generated_files/pin_manager.c: 125:     INLVLB = 0xFF;
  8433  007196  6954               	setf	84,b	;volatile
  8434                           
  8435                           ; BSR set to: 58
  8436                           ;mcc_generated_files/pin_manager.c: 126:     INLVLC = 0xFF;
  8437  007198  6964               	setf	100,b	;volatile
  8438                           
  8439                           ; BSR set to: 58
  8440                           ;mcc_generated_files/pin_manager.c: 127:     INLVLD = 0xFF;
  8441  00719A  6974               	setf	116,b	;volatile
  8442                           
  8443                           ;mcc_generated_files/pin_manager.c: 128:     INLVLE = 0x0F;
  8444  00719C  0E0F               	movlw	15
  8445  00719E  6F84               	movwf	132,b	;volatile
  8446                           
  8447                           ;mcc_generated_files/pin_manager.c: 137:     I2C2SCLPPS = 0x0D;
  8448  0071A0  0E0D               	movlw	13
  8449  0071A2  6FE3               	movwf	227,b	;volatile
  8450                           
  8451                           ;mcc_generated_files/pin_manager.c: 138:     RB5PPS = 0x23;
  8452  0071A4  0E23               	movlw	35
  8453  0071A6  6F0D               	movwf	13,b	;volatile
  8454                           
  8455                           ;mcc_generated_files/pin_manager.c: 139:     RC1PPS = 0x13;
  8456  0071A8  0E13               	movlw	19
  8457  0071AA  6F11               	movwf	17,b	;volatile
  8458                           
  8459                           ;mcc_generated_files/pin_manager.c: 140:     RB4PPS = 0x24;
  8460  0071AC  0E24               	movlw	36
  8461  0071AE  6F0C               	movwf	12,b	;volatile
  8462                           
  8463                           ;mcc_generated_files/pin_manager.c: 141:     RD0PPS = 0x0E;
  8464  0071B0  0E0E               	movlw	14
  8465  0071B2  6F18               	movwf	24,b	;volatile
  8466                           
  8467                           ;mcc_generated_files/pin_manager.c: 142:     U1RXPPS = 0x10;
  8468  0071B4  0E10               	movlw	16
  8469  0071B6  6FE5               	movwf	229,b	;volatile
  8470                           
  8471                           ;mcc_generated_files/pin_manager.c: 143:     I2C2SDAPPS = 0x0C;
  8472  0071B8  0E0C               	movlw	12
  8473  0071BA  6FE4               	movwf	228,b	;volatile
  8474                           
  8475                           ; BSR set to: 58
  8476  0071BC  0012               	return		;funcret
  8477  0071BE                     __end_of_PIN_MANAGER_Initialize:
  8478                           	opt callstack 0
  8479                           
  8480 ;; *************** function _OSCILLATOR_Initialize *****************
  8481 ;; Defined at:
  8482 ;;		line 70 in file "mcc_generated_files/mcc.c"
  8483 ;; Parameters:    Size  Location     Type
  8484 ;;		None
  8485 ;; Auto vars:     Size  Location     Type
  8486 ;;		None
  8487 ;; Return value:  Size  Location     Type
  8488 ;;                  1    wreg      void 
  8489 ;; Registers used:
  8490 ;;		wreg, status,2
  8491 ;; Tracked objects:
  8492 ;;		On entry : 3F/3A
  8493 ;;		On exit  : 3F/39
  8494 ;;		Unchanged: 0/0
  8495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8500 ;;Total ram usage:        0 bytes
  8501 ;; Hardware stack levels used:    1
  8502 ;; Hardware stack levels required when called:   16
  8503 ;; This function calls:
  8504 ;;		Nothing
  8505 ;; This function is called by:
  8506 ;;		_SYSTEM_Initialize
  8507 ;; This function uses a non-reentrant model
  8508 ;;
  8509                           
  8510                           	psect	text31
  8511  009FFE                     __ptext31:
  8512                           	opt callstack 0
  8513  009FFE                     _OSCILLATOR_Initialize:
  8514                           	opt callstack 13
  8515                           
  8516                           ; BSR set to: 58
  8517                           ;mcc_generated_files/mcc.c: 73:     OSCCON1 = 0x60;
  8518                           
  8519                           ; BSR set to: 58
  8520                           ;incstack = 0
  8521  009FFE  0E60               	movlw	96
  8522  00A000  0139               	movlb	57	; () banked
  8523  00A002  6FD9               	movwf	217,b	;volatile
  8524                           
  8525                           ;mcc_generated_files/mcc.c: 75:     OSCCON3 = 0x00;
  8526  00A004  0E00               	movlw	0
  8527  00A006  6FDB               	movwf	219,b	;volatile
  8528                           
  8529                           ;mcc_generated_files/mcc.c: 77:     OSCEN = 0x00;
  8530  00A008  0E00               	movlw	0
  8531  00A00A  6FDD               	movwf	221,b	;volatile
  8532                           
  8533                           ;mcc_generated_files/mcc.c: 79:     OSCFRQ = 0x08;
  8534  00A00C  0E08               	movlw	8
  8535  00A00E  6FDF               	movwf	223,b	;volatile
  8536                           
  8537                           ;mcc_generated_files/mcc.c: 81:     OSCTUNE = 0x00;
  8538  00A010  0E00               	movlw	0
  8539  00A012  6FDE               	movwf	222,b	;volatile
  8540                           
  8541                           ; BSR set to: 57
  8542  00A014  0012               	return		;funcret
  8543  00A016                     __end_of_OSCILLATOR_Initialize:
  8544                           	opt callstack 0
  8545                           
  8546 ;; *************** function _INTERRUPT_Initialize *****************
  8547 ;; Defined at:
  8548 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8549 ;; Parameters:    Size  Location     Type
  8550 ;;		None
  8551 ;; Auto vars:     Size  Location     Type
  8552 ;;		None
  8553 ;; Return value:  Size  Location     Type
  8554 ;;                  1    wreg      void 
  8555 ;; Registers used:
  8556 ;;		None
  8557 ;; Tracked objects:
  8558 ;;		On entry : 0/0
  8559 ;;		On exit  : 0/0
  8560 ;;		Unchanged: 0/0
  8561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8566 ;;Total ram usage:        0 bytes
  8567 ;; Hardware stack levels used:    1
  8568 ;; Hardware stack levels required when called:   16
  8569 ;; This function calls:
  8570 ;;		Nothing
  8571 ;; This function is called by:
  8572 ;;		_SYSTEM_Initialize
  8573 ;; This function uses a non-reentrant model
  8574 ;;
  8575                           
  8576                           	psect	text32
  8577  00A67E                     __ptext32:
  8578                           	opt callstack 0
  8579  00A67E                     _INTERRUPT_Initialize:
  8580                           	opt callstack 13
  8581                           
  8582                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCON0bits.IPEN = 0;
  8583                           
  8584                           ; BSR set to: 57
  8585                           ;incstack = 0
  8586  00A67E  9AD2               	bcf	210,5,c	;volatile
  8587  00A680  0012               	return		;funcret
  8588  00A682                     __end_of_INTERRUPT_Initialize:
  8589                           	opt callstack 0
  8590                           
  8591 ;; *************** function _I2C2_Initialize *****************
  8592 ;; Defined at:
  8593 ;;		line 115 in file "mcc_generated_files/i2c2_slave.c"
  8594 ;; Parameters:    Size  Location     Type
  8595 ;;		None
  8596 ;; Auto vars:     Size  Location     Type
  8597 ;;		None
  8598 ;; Return value:  Size  Location     Type
  8599 ;;                  1    wreg      void 
  8600 ;; Registers used:
  8601 ;;		wreg, status,2
  8602 ;; Tracked objects:
  8603 ;;		On entry : 3F/39
  8604 ;;		On exit  : 3F/3D
  8605 ;;		Unchanged: 0/0
  8606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8611 ;;Total ram usage:        0 bytes
  8612 ;; Hardware stack levels used:    1
  8613 ;; Hardware stack levels required when called:   16
  8614 ;; This function calls:
  8615 ;;		Nothing
  8616 ;; This function is called by:
  8617 ;;		_SYSTEM_Initialize
  8618 ;; This function uses a non-reentrant model
  8619 ;;
  8620                           
  8621                           	psect	text33
  8622  00A128                     __ptext33:
  8623                           	opt callstack 0
  8624  00A128                     _I2C2_Initialize:
  8625                           	opt callstack 13
  8626                           
  8627                           ; BSR set to: 57
  8628                           ;mcc_generated_files/i2c2_slave.c: 118:     I2C2CON0 = 0x00;
  8629                           
  8630                           ;incstack = 0
  8631  00A128  0E00               	movlw	0
  8632  00A12A  013D               	movlb	61	; () banked
  8633  00A12C  6F5D               	movwf	93,b	;volatile
  8634                           
  8635                           ;mcc_generated_files/i2c2_slave.c: 120:     I2C2CON1 = 0x00;
  8636  00A12E  0E00               	movlw	0
  8637  00A130  6F5E               	movwf	94,b	;volatile
  8638                           
  8639                           ;mcc_generated_files/i2c2_slave.c: 122:     I2C2CON2 = 0x00;
  8640  00A132  0E00               	movlw	0
  8641  00A134  6F5F               	movwf	95,b	;volatile
  8642                           
  8643                           ; BSR set to: 61
  8644                           ;mcc_generated_files/i2c2_slave.c: 124:     I2C2CNT = 0xFF;
  8645  00A136  6956               	setf	86,b	;volatile
  8646                           
  8647                           ; BSR set to: 61
  8648  00A138  0012               	return		;funcret
  8649  00A13A                     __end_of_I2C2_Initialize:
  8650                           	opt callstack 0
  8651                           
  8652 ;; *************** function _FVR_Initialize *****************
  8653 ;; Defined at:
  8654 ;;		line 58 in file "mcc_generated_files/fvr.c"
  8655 ;; Parameters:    Size  Location     Type
  8656 ;;		None
  8657 ;; Auto vars:     Size  Location     Type
  8658 ;;		None
  8659 ;; Return value:  Size  Location     Type
  8660 ;;                  1    wreg      void 
  8661 ;; Registers used:
  8662 ;;		wreg, status,2
  8663 ;; Tracked objects:
  8664 ;;		On entry : 3F/39
  8665 ;;		On exit  : 3F/3E
  8666 ;;		Unchanged: 0/0
  8667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8672 ;;Total ram usage:        0 bytes
  8673 ;; Hardware stack levels used:    1
  8674 ;; Hardware stack levels required when called:   16
  8675 ;; This function calls:
  8676 ;;		Nothing
  8677 ;; This function is called by:
  8678 ;;		_SYSTEM_Initialize
  8679 ;; This function uses a non-reentrant model
  8680 ;;
  8681                           
  8682                           	psect	text34
  8683  00A4B2                     __ptext34:
  8684                           	opt callstack 0
  8685  00A4B2                     _FVR_Initialize:
  8686                           	opt callstack 13
  8687                           
  8688                           ; BSR set to: 57
  8689                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x87;
  8690                           
  8691                           ; BSR set to: 61
  8692                           ;incstack = 0
  8693  00A4B2  0E87               	movlw	135
  8694  00A4B4  013E               	movlb	62	; () banked
  8695  00A4B6  6FC1               	movwf	193,b	;volatile
  8696                           
  8697                           ; BSR set to: 62
  8698  00A4B8  0012               	return		;funcret
  8699  00A4BA                     __end_of_FVR_Initialize:
  8700                           	opt callstack 0
  8701                           
  8702 ;; *************** function _CMP1_Initialize *****************
  8703 ;; Defined at:
  8704 ;;		line 60 in file "mcc_generated_files/cmp1.c"
  8705 ;; Parameters:    Size  Location     Type
  8706 ;;		None
  8707 ;; Auto vars:     Size  Location     Type
  8708 ;;		None
  8709 ;; Return value:  Size  Location     Type
  8710 ;;                  1    wreg      void 
  8711 ;; Registers used:
  8712 ;;		wreg, status,2, cstack
  8713 ;; Tracked objects:
  8714 ;;		On entry : 3F/1
  8715 ;;		On exit  : 3F/39
  8716 ;;		Unchanged: 0/0
  8717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8722 ;;Total ram usage:        0 bytes
  8723 ;; Hardware stack levels used:    1
  8724 ;; Hardware stack levels required when called:   17
  8725 ;; This function calls:
  8726 ;;		_CMP1_Disable
  8727 ;;		_CMP1_Enable
  8728 ;; This function is called by:
  8729 ;;		_SYSTEM_Initialize
  8730 ;; This function uses a non-reentrant model
  8731 ;;
  8732                           
  8733                           	psect	text35
  8734  009D94                     __ptext35:
  8735                           	opt callstack 0
  8736  009D94                     _CMP1_Initialize:
  8737                           	opt callstack 12
  8738                           
  8739                           ; BSR set to: 1
  8740                           ;mcc_generated_files/cmp1.c: 67:     CMP1_Disable();
  8741                           
  8742                           ; BSR set to: 62
  8743                           ;incstack = 0
  8744  009D94  EC91  F052         	call	_CMP1_Disable	;wreg free
  8745                           
  8746                           ; BSR set to: 57
  8747                           ;mcc_generated_files/cmp1.c: 70:     CM1CON0 = 0x80;
  8748  009D98  0E80               	movlw	128
  8749  009D9A  013E               	movlb	62	; () banked
  8750  009D9C  6FBC               	movwf	188,b	;volatile
  8751                           
  8752                           ; BSR set to: 62
  8753                           ;mcc_generated_files/cmp1.c: 73:     CM1CON1 = 0x02;
  8754  009D9E  0E02               	movlw	2
  8755  009DA0  6FBD               	movwf	189,b	;volatile
  8756                           
  8757                           ; BSR set to: 62
  8758                           ;mcc_generated_files/cmp1.c: 76:     CM1NCH = 0x06;
  8759  009DA2  0E06               	movlw	6
  8760  009DA4  6FBE               	movwf	190,b	;volatile
  8761                           
  8762                           ; BSR set to: 62
  8763                           ;mcc_generated_files/cmp1.c: 79:     CM1PCH = 0x01;
  8764  009DA6  0E01               	movlw	1
  8765  009DA8  6FBF               	movwf	191,b	;volatile
  8766                           
  8767                           ; BSR set to: 62
  8768                           ;mcc_generated_files/cmp1.c: 82:     PIR1bits.C1IF = 0;
  8769  009DAA  0139               	movlb	57	; () banked
  8770  009DAC  99A1               	bcf	161,4,b	;volatile
  8771                           
  8772                           ;mcc_generated_files/cmp1.c: 85:     CMP1_Enable();
  8773  009DAE  EC8D  F052         	call	_CMP1_Enable	;wreg free
  8774                           
  8775                           ; BSR set to: 57
  8776  009DB2  0012               	return		;funcret
  8777  009DB4                     __end_of_CMP1_Initialize:
  8778                           	opt callstack 0
  8779                           
  8780 ;; *************** function _ADCC_Initialize *****************
  8781 ;; Defined at:
  8782 ;;		line 63 in file "mcc_generated_files/adcc.c"
  8783 ;; Parameters:    Size  Location     Type
  8784 ;;		None
  8785 ;; Auto vars:     Size  Location     Type
  8786 ;;		None
  8787 ;; Return value:  Size  Location     Type
  8788 ;;                  1    wreg      void 
  8789 ;; Registers used:
  8790 ;;		wreg, status,2, status,0, cstack
  8791 ;; Tracked objects:
  8792 ;;		On entry : 3F/3E
  8793 ;;		On exit  : 3F/1
  8794 ;;		Unchanged: 0/0
  8795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8800 ;;Total ram usage:        0 bytes
  8801 ;; Hardware stack levels used:    1
  8802 ;; Hardware stack levels required when called:   17
  8803 ;; This function calls:
  8804 ;;		_ADCC_SetADTIInterruptHandler
  8805 ;; This function is called by:
  8806 ;;		_SYSTEM_Initialize
  8807 ;; This function uses a non-reentrant model
  8808 ;;
  8809                           
  8810                           	psect	text36
  8811  0086F2                     __ptext36:
  8812                           	opt callstack 0
  8813  0086F2                     _ADCC_Initialize:
  8814                           	opt callstack 12
  8815                           
  8816                           ; BSR set to: 62
  8817                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0xFF;
  8818                           
  8819                           ; BSR set to: 57
  8820                           ;incstack = 0
  8821  0086F2  69DE               	setf	222,b	;volatile
  8822                           
  8823                           ; BSR set to: 62
  8824                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x7F;
  8825  0086F4  0E7F               	movlw	127
  8826  0086F6  6FDF               	movwf	223,b	;volatile
  8827                           
  8828                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
  8829  0086F8  0E00               	movlw	0
  8830  0086FA  6FE0               	movwf	224,b	;volatile
  8831                           
  8832                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x80;
  8833  0086FC  0E80               	movlw	128
  8834  0086FE  6FE1               	movwf	225,b	;volatile
  8835                           
  8836                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
  8837  008700  0E00               	movlw	0
  8838  008702  6FE4               	movwf	228,b	;volatile
  8839                           
  8840                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
  8841  008704  0E00               	movlw	0
  8842  008706  6FE5               	movwf	229,b	;volatile
  8843                           
  8844                           ;mcc_generated_files/adcc.c: 79:     ADACCU = 0x00;
  8845  008708  0E00               	movlw	0
  8846  00870A  6FEA               	movwf	234,b	;volatile
  8847                           
  8848                           ;mcc_generated_files/adcc.c: 81:     ADRPT = 0x10;
  8849  00870C  0E10               	movlw	16
  8850  00870E  6FEC               	movwf	236,b	;volatile
  8851                           
  8852                           ;mcc_generated_files/adcc.c: 83:     ADPCH = 0x00;
  8853  008710  0E00               	movlw	0
  8854  008712  6FF1               	movwf	241,b	;volatile
  8855                           
  8856                           ;mcc_generated_files/adcc.c: 85:     ADACQL = 0x80;
  8857  008714  0E80               	movlw	128
  8858  008716  6FF3               	movwf	243,b	;volatile
  8859                           
  8860                           ;mcc_generated_files/adcc.c: 87:     ADACQH = 0x00;
  8861  008718  0E00               	movlw	0
  8862  00871A  6FF4               	movwf	244,b	;volatile
  8863                           
  8864                           ;mcc_generated_files/adcc.c: 89:     ADCAP = 0x00;
  8865  00871C  0E00               	movlw	0
  8866  00871E  6FF5               	movwf	245,b	;volatile
  8867                           
  8868                           ;mcc_generated_files/adcc.c: 91:     ADPREL = 0x00;
  8869  008720  0E00               	movlw	0
  8870  008722  6FF6               	movwf	246,b	;volatile
  8871                           
  8872                           ;mcc_generated_files/adcc.c: 93:     ADPREH = 0x00;
  8873  008724  0E00               	movlw	0
  8874  008726  6FF7               	movwf	247,b	;volatile
  8875                           
  8876                           ;mcc_generated_files/adcc.c: 95:     ADCON1 = 0x00;
  8877  008728  0E00               	movlw	0
  8878  00872A  6FF9               	movwf	249,b	;volatile
  8879                           
  8880                           ;mcc_generated_files/adcc.c: 97:     ADCON2 = 0x43;
  8881  00872C  0E43               	movlw	67
  8882  00872E  6FFA               	movwf	250,b	;volatile
  8883                           
  8884                           ;mcc_generated_files/adcc.c: 99:     ADCON3 = 0x27;
  8885  008730  0E27               	movlw	39
  8886  008732  6FFB               	movwf	251,b	;volatile
  8887                           
  8888                           ;mcc_generated_files/adcc.c: 101:     ADSTAT = 0x00;
  8889  008734  0E00               	movlw	0
  8890  008736  6FFC               	movwf	252,b	;volatile
  8891                           
  8892                           ;mcc_generated_files/adcc.c: 103:     ADREF = 0x03;
  8893  008738  0E03               	movlw	3
  8894  00873A  6FFD               	movwf	253,b	;volatile
  8895                           
  8896                           ;mcc_generated_files/adcc.c: 105:     ADACT = 0x00;
  8897  00873C  0E00               	movlw	0
  8898  00873E  6FFE               	movwf	254,b	;volatile
  8899                           
  8900                           ;mcc_generated_files/adcc.c: 107:     ADCLK = 0x27;
  8901  008740  0E27               	movlw	39
  8902  008742  6FFF               	movwf	255,b	;volatile
  8903                           
  8904                           ;mcc_generated_files/adcc.c: 109:     ADCON0 = 0x84;
  8905  008744  0E84               	movlw	132
  8906  008746  6FF8               	movwf	248,b	;volatile
  8907                           
  8908                           ; BSR set to: 62
  8909                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADTIF = 0;
  8910  008748  0139               	movlb	57	; () banked
  8911  00874A  97A1               	bcf	161,3,b	;volatile
  8912                           
  8913                           ; BSR set to: 57
  8914                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADTIE = 1;
  8915  00874C  8791               	bsf	145,3,b	;volatile
  8916                           
  8917                           ; BSR set to: 57
  8918                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
  8919  00874E  0EFA               	movlw	low _ADCC_DefaultInterruptHandler
  8920  008750  0101               	movlb	1	; () banked
  8921  008752  6F04               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler& (0+255),b
  8922  008754  0EA6               	movlw	high _ADCC_DefaultInterruptHandler
  8923  008756  6F05               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)& (0+255),b
  8924  008758  EC27  F051         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  8925                           
  8926                           ; BSR set to: 1
  8927  00875C  0012               	return		;funcret
  8928  00875E                     __end_of_ADCC_Initialize:
  8929                           	opt callstack 0
  8930                           
  8931 ;; *************** function _MuteAlarm *****************
  8932 ;; Defined at:
  8933 ;;		line 377 in file "alarm.c"
  8934 ;; Parameters:    Size  Location     Type
  8935 ;;		None
  8936 ;; Auto vars:     Size  Location     Type
  8937 ;;  high            2  135[BANK1 ] int 
  8938 ;; Return value:  Size  Location     Type
  8939 ;;                  1    wreg      void 
  8940 ;; Registers used:
  8941 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8942 ;; Tracked objects:
  8943 ;;		On entry : 3F/3
  8944 ;;		On exit  : 3D/0
  8945 ;;		Unchanged: 0/0
  8946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8948 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8949 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8950 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8951 ;;Total ram usage:        5 bytes
  8952 ;; Hardware stack levels used:    1
  8953 ;; Hardware stack levels required when called:   26
  8954 ;; This function calls:
  8955 ;;		_AnyAlarm
  8956 ;;		_BuzzerClear
  8957 ;;		_ClearCircuitFailureAlarm
  8958 ;;		_ClearControlFailAlarm
  8959 ;;		_ClearGasFailureAlarm
  8960 ;;		_ClearHighPressureAlarmHigh
  8961 ;;		_ClearMonitorFailAlarm
  8962 ;;		_ClearVeryHighPressureAlarmHigh
  8963 ;;		_HigherAlarm
  8964 ;;		_SetAlarmSV1
  8965 ;;		___wmul
  8966 ;;		_printf
  8967 ;; This function is called by:
  8968 ;;		_main
  8969 ;; This function uses a non-reentrant model
  8970 ;;
  8971                           
  8972                           	psect	text37
  8973  0045B4                     __ptext37:
  8974                           	opt callstack 0
  8975  0045B4                     _MuteAlarm:
  8976                           	opt callstack 4
  8977                           
  8978                           ; BSR set to: 3
  8979                           ;alarm.c: 378:     printf("MUTE");
  8980                           
  8981                           ; BSR set to: 1
  8982                           ;incstack = 0
  8983  0045B4  0EC1               	movlw	low STR_25
  8984  0045B6  0101               	movlb	1	; () banked
  8985  0045B8  6F71               	movwf	printf@fmt& (0+255),b
  8986  0045BA  0EFF               	movlw	high STR_25
  8987  0045BC  6F72               	movwf	(printf@fmt+1)& (0+255),b
  8988  0045BE  EC32  F04D         	call	_printf	;wreg free
  8989                           
  8990                           ; BSR set to: 2
  8991                           ;alarm.c: 380:     if (muteSec && muteSec<115) {
  8992  0045C2  0101               	movlb	1	; () banked
  8993  0045C4  51EB               	movf	_muteSec& (0+255),w,b
  8994  0045C6  11EC               	iorwf	(_muteSec+1)& (0+255),w,b
  8995  0045C8  B4D8               	btfsc	status,2,c
  8996  0045CA  D00C               	goto	l22139
  8997                           
  8998                           ; BSR set to: 1
  8999  0045CC  BFEC               	btfsc	(_muteSec+1)& (0+255),7,b
  9000  0045CE  D006               	goto	u21800
  9001  0045D0  51EC               	movf	(_muteSec+1)& (0+255),w,b
  9002  0045D2  E108               	bnz	l22139
  9003  0045D4  0E73               	movlw	115
  9004  0045D6  5DEB               	subwf	_muteSec& (0+255),w,b
  9005  0045D8  B0D8               	btfsc	status,0,c
  9006  0045DA  D004               	goto	l22139
  9007  0045DC                     u21800:
  9008                           
  9009                           ; BSR set to: 1
  9010                           ;alarm.c: 381:         muteSec = 0;
  9011  0045DC  0E00               	movlw	0
  9012  0045DE  6FEC               	movwf	(_muteSec+1)& (0+255),b
  9013  0045E0  0E00               	movlw	0
  9014  0045E2  6FEB               	movwf	_muteSec& (0+255),b
  9015  0045E4                     l22139:
  9016                           
  9017                           ; BSR set to: 1
  9018                           ;alarm.c: 384:     if (AnyAlarm()) {
  9019  0045E4  EC8C  F04A         	call	_AnyAlarm	;wreg free
  9020  0045E8  0900               	iorlw	0
  9021  0045EA  B4D8               	btfsc	status,2,c
  9022  0045EC  D0B0               	goto	l2632
  9023                           
  9024                           ; BSR set to: 1
  9025                           ;alarm.c: 386:         BuzzerClear();
  9026  0045EE  ECBF  F050         	call	_BuzzerClear	;wreg free
  9027                           
  9028                           ; BSR set to: 57
  9029                           ;alarm.c: 387:         muteSec = 120;
  9030  0045F2  0E00               	movlw	0
  9031  0045F4  0101               	movlb	1	; () banked
  9032  0045F6  6FEC               	movwf	(_muteSec+1)& (0+255),b
  9033  0045F8  0E78               	movlw	120
  9034  0045FA  6FEB               	movwf	_muteSec& (0+255),b
  9035                           
  9036                           ; BSR set to: 1
  9037                           ;alarm.c: 389:         int high = HigherAlarm();
  9038  0045FC  ECDF  F038         	call	_HigherAlarm	;wreg free
  9039  004600  0060  F428  F187   	movff	?_HigherAlarm,MuteAlarm@high
  9040  004606  0060  F42C  F188   	movff	?_HigherAlarm+1,MuteAlarm@high+1
  9041                           
  9042                           ; BSR set to: 1
  9043                           ;alarm.c: 390:         if (alarmData[high].func==HighPressureAlarmHigh) {
  9044  00460C  0060  F61C  F104   	movff	MuteAlarm@high,___wmul@multiplier
  9045  004612  0060  F620  F105   	movff	MuteAlarm@high+1,___wmul@multiplier+1
  9046  004618  0E00               	movlw	0
  9047  00461A  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9048  00461C  0E15               	movlw	21
  9049  00461E  6F06               	movwf	___wmul@multiplicand& (0+255),b
  9050  004620  EC7C  F04C         	call	___wmul	;wreg free
  9051  004624  0E27               	movlw	low (_alarmData+19)
  9052  004626  2504               	addwf	?___wmul& (0+255),w,b
  9053  004628  6ED9               	movwf	fsr2l,c
  9054  00462A  0E09               	movlw	high (_alarmData+19)
  9055  00462C  2105               	addwfc	(?___wmul+1)& (0+255),w,b
  9056  00462E  6EDA               	movwf	fsr2h,c
  9057  004630  0EB6               	movlw	low _HighPressureAlarmHigh
  9058  004632  18DE               	xorwf	postinc2,w,c
  9059  004634  E105               	bnz	l22151
  9060  004636  0EA6               	movlw	high _HighPressureAlarmHigh
  9061  004638  18DE               	xorwf	postinc2,w,c
  9062  00463A  B4D8               	btfsc	status,2,c
  9063                           
  9064                           ; BSR set to: 1
  9065                           ;alarm.c: 392:             ClearHighPressureAlarmHigh();
  9066  00463C  EC61  F052         	call	_ClearHighPressureAlarmHigh	;wreg free
  9067  004640                     l22151:
  9068                           
  9069                           ;alarm.c: 394:         if (alarmData[high].func==VeryHighPressureAlarmHigh) {
  9070  004640  0060  F61C  F104   	movff	MuteAlarm@high,___wmul@multiplier
  9071  004646  0060  F620  F105   	movff	MuteAlarm@high+1,___wmul@multiplier+1
  9072  00464C  0E00               	movlw	0
  9073  00464E  0101               	movlb	1	; () banked
  9074  004650  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9075  004652  0E15               	movlw	21
  9076  004654  6F06               	movwf	___wmul@multiplicand& (0+255),b
  9077  004656  EC7C  F04C         	call	___wmul	;wreg free
  9078  00465A  0E27               	movlw	low (_alarmData+19)
  9079  00465C  2504               	addwf	?___wmul& (0+255),w,b
  9080  00465E  6ED9               	movwf	fsr2l,c
  9081  004660  0E09               	movlw	high (_alarmData+19)
  9082  004662  2105               	addwfc	(?___wmul+1)& (0+255),w,b
  9083  004664  6EDA               	movwf	fsr2h,c
  9084  004666  0EBE               	movlw	low _VeryHighPressureAlarmHigh
  9085  004668  18DE               	xorwf	postinc2,w,c
  9086  00466A  E105               	bnz	l22155
  9087  00466C  0EA6               	movlw	high _VeryHighPressureAlarmHigh
  9088  00466E  18DE               	xorwf	postinc2,w,c
  9089  004670  B4D8               	btfsc	status,2,c
  9090                           
  9091                           ; BSR set to: 1
  9092                           ;alarm.c: 396:             ClearVeryHighPressureAlarmHigh();
  9093  004672  EC5D  F052         	call	_ClearVeryHighPressureAlarmHigh	;wreg free
  9094  004676                     l22155:
  9095                           
  9096                           ;alarm.c: 398:         if (alarmData[high].func==MonitorFailAlarm) {
  9097  004676  0060  F61C  F104   	movff	MuteAlarm@high,___wmul@multiplier
  9098  00467C  0060  F620  F105   	movff	MuteAlarm@high+1,___wmul@multiplier+1
  9099  004682  0E00               	movlw	0
  9100  004684  0101               	movlb	1	; () banked
  9101  004686  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9102  004688  0E15               	movlw	21
  9103  00468A  6F06               	movwf	___wmul@multiplicand& (0+255),b
  9104  00468C  EC7C  F04C         	call	___wmul	;wreg free
  9105  004690  0E27               	movlw	low (_alarmData+19)
  9106  004692  2504               	addwf	?___wmul& (0+255),w,b
  9107  004694  6ED9               	movwf	fsr2l,c
  9108  004696  0E09               	movlw	high (_alarmData+19)
  9109  004698  2105               	addwfc	(?___wmul+1)& (0+255),w,b
  9110  00469A  6EDA               	movwf	fsr2h,c
  9111  00469C  0EC8               	movlw	low _MonitorFailAlarm
  9112  00469E  18DE               	xorwf	postinc2,w,c
  9113  0046A0  E105               	bnz	l22159
  9114  0046A2  0E6A               	movlw	high _MonitorFailAlarm
  9115  0046A4  18DE               	xorwf	postinc2,w,c
  9116  0046A6  B4D8               	btfsc	status,2,c
  9117                           
  9118                           ; BSR set to: 1
  9119                           ;alarm.c: 400:             ClearMonitorFailAlarm();
  9120  0046A8  EC89  F052         	call	_ClearMonitorFailAlarm	;wreg free
  9121  0046AC                     l22159:
  9122                           
  9123                           ;alarm.c: 402:         if (alarmData[high].func==ControlFailAlarm) {
  9124  0046AC  0060  F61C  F104   	movff	MuteAlarm@high,___wmul@multiplier
  9125  0046B2  0060  F620  F105   	movff	MuteAlarm@high+1,___wmul@multiplier+1
  9126  0046B8  0E00               	movlw	0
  9127  0046BA  0101               	movlb	1	; () banked
  9128  0046BC  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9129  0046BE  0E15               	movlw	21
  9130  0046C0  6F06               	movwf	___wmul@multiplicand& (0+255),b
  9131  0046C2  EC7C  F04C         	call	___wmul	;wreg free
  9132  0046C6  0E27               	movlw	low (_alarmData+19)
  9133  0046C8  2504               	addwf	?___wmul& (0+255),w,b
  9134  0046CA  6ED9               	movwf	fsr2l,c
  9135  0046CC  0E09               	movlw	high (_alarmData+19)
  9136  0046CE  2105               	addwfc	(?___wmul+1)& (0+255),w,b
  9137  0046D0  6EDA               	movwf	fsr2h,c
  9138  0046D2  0EEC               	movlw	low _ControlFailAlarm
  9139  0046D4  18DE               	xorwf	postinc2,w,c
  9140  0046D6  E105               	bnz	l22163
  9141  0046D8  0EA0               	movlw	high _ControlFailAlarm
  9142  0046DA  18DE               	xorwf	postinc2,w,c
  9143  0046DC  B4D8               	btfsc	status,2,c
  9144                           
  9145                           ; BSR set to: 1
  9146                           ;alarm.c: 404:             ClearControlFailAlarm();
  9147  0046DE  EC69  F052         	call	_ClearControlFailAlarm	;wreg free
  9148  0046E2                     l22163:
  9149                           
  9150                           ;alarm.c: 406:         if (alarmData[high].func==GasFailureAlarm) {
  9151  0046E2  0060  F61C  F104   	movff	MuteAlarm@high,___wmul@multiplier
  9152  0046E8  0060  F620  F105   	movff	MuteAlarm@high+1,___wmul@multiplier+1
  9153  0046EE  0E00               	movlw	0
  9154  0046F0  0101               	movlb	1	; () banked
  9155  0046F2  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9156  0046F4  0E15               	movlw	21
  9157  0046F6  6F06               	movwf	___wmul@multiplicand& (0+255),b
  9158  0046F8  EC7C  F04C         	call	___wmul	;wreg free
  9159  0046FC  0E27               	movlw	low (_alarmData+19)
  9160  0046FE  2504               	addwf	?___wmul& (0+255),w,b
  9161  004700  6ED9               	movwf	fsr2l,c
  9162  004702  0E09               	movlw	high (_alarmData+19)
  9163  004704  2105               	addwfc	(?___wmul+1)& (0+255),w,b
  9164  004706  6EDA               	movwf	fsr2h,c
  9165  004708  0EBA               	movlw	low _GasFailureAlarm
  9166  00470A  18DE               	xorwf	postinc2,w,c
  9167  00470C  E105               	bnz	l22167
  9168  00470E  0EA6               	movlw	high _GasFailureAlarm
  9169  004710  18DE               	xorwf	postinc2,w,c
  9170  004712  B4D8               	btfsc	status,2,c
  9171                           
  9172                           ; BSR set to: 1
  9173                           ;alarm.c: 408:             ClearGasFailureAlarm();
  9174  004714  EC65  F052         	call	_ClearGasFailureAlarm	;wreg free
  9175  004718                     l22167:
  9176                           
  9177                           ;alarm.c: 410:         if (alarmData[high].func==CircuitFailureAlarm) {
  9178  004718  0060  F61C  F104   	movff	MuteAlarm@high,___wmul@multiplier
  9179  00471E  0060  F620  F105   	movff	MuteAlarm@high+1,___wmul@multiplier+1
  9180  004724  0E00               	movlw	0
  9181  004726  0101               	movlb	1	; () banked
  9182  004728  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9183  00472A  0E15               	movlw	21
  9184  00472C  6F06               	movwf	___wmul@multiplicand& (0+255),b
  9185  00472E  EC7C  F04C         	call	___wmul	;wreg free
  9186  004732  0E27               	movlw	low (_alarmData+19)
  9187  004734  2504               	addwf	?___wmul& (0+255),w,b
  9188  004736  6ED9               	movwf	fsr2l,c
  9189  004738  0E09               	movlw	high (_alarmData+19)
  9190  00473A  2105               	addwfc	(?___wmul+1)& (0+255),w,b
  9191  00473C  6EDA               	movwf	fsr2h,c
  9192  00473E  0EB2               	movlw	low _CircuitFailureAlarm
  9193  004740  18DE               	xorwf	postinc2,w,c
  9194  004742  E105               	bnz	l2632
  9195  004744  0EA6               	movlw	high _CircuitFailureAlarm
  9196  004746  18DE               	xorwf	postinc2,w,c
  9197  004748  B4D8               	btfsc	status,2,c
  9198                           
  9199                           ; BSR set to: 1
  9200                           ;alarm.c: 412:             ClearCircuitFailureAlarm();
  9201  00474A  EC6D  F052         	call	_ClearCircuitFailureAlarm	;wreg free
  9202  00474E                     l2632:
  9203                           
  9204                           ;alarm.c: 417:     ClearVeryHighPressureAlarmHigh();
  9205  00474E  EC5D  F052         	call	_ClearVeryHighPressureAlarmHigh	;wreg free
  9206                           
  9207                           ;alarm.c: 418:     ClearHighPressureAlarmHigh();
  9208  004752  EC61  F052         	call	_ClearHighPressureAlarmHigh	;wreg free
  9209                           
  9210                           ;alarm.c: 419:     ClearCircuitFailureAlarm();
  9211  004756  EC6D  F052         	call	_ClearCircuitFailureAlarm	;wreg free
  9212                           
  9213                           ;alarm.c: 420:     ClearGasFailureAlarm();
  9214  00475A  EC65  F052         	call	_ClearGasFailureAlarm	;wreg free
  9215                           
  9216                           ;alarm.c: 421:     ClearControlFailAlarm();
  9217  00475E  EC69  F052         	call	_ClearControlFailAlarm	;wreg free
  9218                           
  9219                           ;alarm.c: 422:     ClearMonitorFailAlarm();
  9220  004762  EC89  F052         	call	_ClearMonitorFailAlarm	;wreg free
  9221                           
  9222                           ; BSR set to: 2
  9223                           ;alarm.c: 424:     controlSV1 = 1;
  9224  004766  0E01               	movlw	1
  9225  004768  0101               	movlb	1	; () banked
  9226  00476A  6FF9               	movwf	_controlSV1& (0+255),b
  9227                           
  9228                           ; BSR set to: 1
  9229                           ;alarm.c: 425:     monitorSV1 = 1;
  9230  00476C  0E01               	movlw	1
  9231  00476E  6FF8               	movwf	_monitorSV1& (0+255),b
  9232                           
  9233                           ; BSR set to: 1
  9234                           ;alarm.c: 426:     veryHighSV1 = 1;
  9235  004770  0E01               	movlw	1
  9236  004772  6FFB               	movwf	_veryHighSV1& (0+255),b
  9237                           
  9238                           ; BSR set to: 1
  9239                           ;alarm.c: 428:     SetAlarmSV1(controlSV1 && monitorSV1 && veryHighSV1 && batterySV1);
  9240  004774  0E00               	movlw	0
  9241  004776  6F86               	movwf	_MuteAlarm$4543& (0+255),b
  9242                           
  9243                           ; BSR set to: 1
  9244  004778  51F9               	movf	_controlSV1& (0+255),w,b
  9245  00477A  B4D8               	btfsc	status,2,c
  9246  00477C  D00B               	goto	l22189
  9247                           
  9248                           ; BSR set to: 1
  9249  00477E  51F8               	movf	_monitorSV1& (0+255),w,b
  9250  004780  B4D8               	btfsc	status,2,c
  9251  004782  D008               	goto	l22189
  9252                           
  9253                           ; BSR set to: 1
  9254  004784  51FB               	movf	_veryHighSV1& (0+255),w,b
  9255  004786  B4D8               	btfsc	status,2,c
  9256  004788  D005               	goto	l22189
  9257                           
  9258                           ; BSR set to: 1
  9259  00478A  51FA               	movf	_batterySV1& (0+255),w,b
  9260  00478C  B4D8               	btfsc	status,2,c
  9261  00478E  D002               	goto	l22189
  9262                           
  9263                           ; BSR set to: 1
  9264  004790  0E01               	movlw	1
  9265  004792  6F86               	movwf	_MuteAlarm$4543& (0+255),b
  9266  004794                     l22189:
  9267                           
  9268                           ; BSR set to: 1
  9269  004794  5186               	movf	_MuteAlarm$4543& (0+255),w,b
  9270  004796  B4D8               	btfsc	status,2,c
  9271  004798  D002               	goto	u21920
  9272  00479A  0E01               	movlw	1
  9273  00479C  D001               	goto	u21930
  9274  00479E                     u21920:
  9275  00479E  0E00               	movlw	0
  9276  0047A0                     u21930:
  9277  0047A0  EC68  F04B         	call	_SetAlarmSV1
  9278  0047A4  0012               	return		;funcret
  9279  0047A6                     __end_of_MuteAlarm:
  9280                           	opt callstack 0
  9281                           
  9282 ;; *************** function _ClearVeryHighPressureAlarmHigh *****************
  9283 ;; Defined at:
  9284 ;;		line 278 in file "alarm.c"
  9285 ;; Parameters:    Size  Location     Type
  9286 ;;		None
  9287 ;; Auto vars:     Size  Location     Type
  9288 ;;		None
  9289 ;; Return value:  Size  Location     Type
  9290 ;;                  1    wreg      void 
  9291 ;; Registers used:
  9292 ;;		wreg, status,2
  9293 ;; Tracked objects:
  9294 ;;		On entry : 3C/1
  9295 ;;		On exit  : 3F/2
  9296 ;;		Unchanged: 0/0
  9297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9302 ;;Total ram usage:        0 bytes
  9303 ;; Hardware stack levels used:    1
  9304 ;; Hardware stack levels required when called:   16
  9305 ;; This function calls:
  9306 ;;		Nothing
  9307 ;; This function is called by:
  9308 ;;		_MuteAlarm
  9309 ;; This function uses a non-reentrant model
  9310 ;;
  9311                           
  9312                           	psect	text38
  9313  00A4BA                     __ptext38:
  9314                           	opt callstack 0
  9315  00A4BA                     _ClearVeryHighPressureAlarmHigh:
  9316                           	opt callstack 13
  9317                           
  9318                           ;incstack = 0
  9319  00A4BA  0E00               	movlw	0
  9320  00A4BC  0102               	movlb	2	; () banked
  9321  00A4BE  6FAC               	movwf	_veryHighPressureAlarmHigh& (0+255),b
  9322                           
  9323                           ; BSR set to: 2
  9324  00A4C0  0012               	return		;funcret
  9325  00A4C2                     __end_of_ClearVeryHighPressureAlarmHigh:
  9326                           	opt callstack 0
  9327                           
  9328 ;; *************** function _ClearHighPressureAlarmHigh *****************
  9329 ;; Defined at:
  9330 ;;		line 277 in file "alarm.c"
  9331 ;; Parameters:    Size  Location     Type
  9332 ;;		None
  9333 ;; Auto vars:     Size  Location     Type
  9334 ;;		None
  9335 ;; Return value:  Size  Location     Type
  9336 ;;                  1    wreg      void 
  9337 ;; Registers used:
  9338 ;;		wreg, status,2
  9339 ;; Tracked objects:
  9340 ;;		On entry : 3C/1
  9341 ;;		On exit  : 3F/2
  9342 ;;		Unchanged: 0/0
  9343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9348 ;;Total ram usage:        0 bytes
  9349 ;; Hardware stack levels used:    1
  9350 ;; Hardware stack levels required when called:   16
  9351 ;; This function calls:
  9352 ;;		Nothing
  9353 ;; This function is called by:
  9354 ;;		_MuteAlarm
  9355 ;; This function uses a non-reentrant model
  9356 ;;
  9357                           
  9358                           	psect	text39
  9359  00A4C2                     __ptext39:
  9360                           	opt callstack 0
  9361  00A4C2                     _ClearHighPressureAlarmHigh:
  9362                           	opt callstack 13
  9363                           
  9364                           ; BSR set to: 2
  9365                           ;incstack = 0
  9366  00A4C2  0E00               	movlw	0
  9367  00A4C4  0102               	movlb	2	; () banked
  9368  00A4C6  6FAD               	movwf	_highPressureAlarmHigh& (0+255),b
  9369                           
  9370                           ; BSR set to: 2
  9371  00A4C8  0012               	return		;funcret
  9372  00A4CA                     __end_of_ClearHighPressureAlarmHigh:
  9373                           	opt callstack 0
  9374                           
  9375 ;; *************** function _ClearGasFailureAlarm *****************
  9376 ;; Defined at:
  9377 ;;		line 275 in file "alarm.c"
  9378 ;; Parameters:    Size  Location     Type
  9379 ;;		None
  9380 ;; Auto vars:     Size  Location     Type
  9381 ;;		None
  9382 ;; Return value:  Size  Location     Type
  9383 ;;                  1    wreg      void 
  9384 ;; Registers used:
  9385 ;;		wreg, status,2
  9386 ;; Tracked objects:
  9387 ;;		On entry : 3C/1
  9388 ;;		On exit  : 3F/2
  9389 ;;		Unchanged: 0/0
  9390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9395 ;;Total ram usage:        0 bytes
  9396 ;; Hardware stack levels used:    1
  9397 ;; Hardware stack levels required when called:   16
  9398 ;; This function calls:
  9399 ;;		Nothing
  9400 ;; This function is called by:
  9401 ;;		_MuteAlarm
  9402 ;; This function uses a non-reentrant model
  9403 ;;
  9404                           
  9405                           	psect	text40
  9406  00A4CA                     __ptext40:
  9407                           	opt callstack 0
  9408  00A4CA                     _ClearGasFailureAlarm:
  9409                           	opt callstack 13
  9410                           
  9411                           ; BSR set to: 2
  9412                           ;incstack = 0
  9413  00A4CA  0E00               	movlw	0
  9414  00A4CC  0102               	movlb	2	; () banked
  9415  00A4CE  6FAF               	movwf	_gasFailureAlarm& (0+255),b
  9416                           
  9417                           ; BSR set to: 2
  9418  00A4D0  0012               	return		;funcret
  9419  00A4D2                     __end_of_ClearGasFailureAlarm:
  9420                           	opt callstack 0
  9421                           
  9422 ;; *************** function _ClearControlFailAlarm *****************
  9423 ;; Defined at:
  9424 ;;		line 274 in file "alarm.c"
  9425 ;; Parameters:    Size  Location     Type
  9426 ;;		None
  9427 ;; Auto vars:     Size  Location     Type
  9428 ;;		None
  9429 ;; Return value:  Size  Location     Type
  9430 ;;                  1    wreg      void 
  9431 ;; Registers used:
  9432 ;;		wreg, status,2
  9433 ;; Tracked objects:
  9434 ;;		On entry : 3C/1
  9435 ;;		On exit  : 3F/0
  9436 ;;		Unchanged: 0/0
  9437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9442 ;;Total ram usage:        0 bytes
  9443 ;; Hardware stack levels used:    1
  9444 ;; Hardware stack levels required when called:   16
  9445 ;; This function calls:
  9446 ;;		Nothing
  9447 ;; This function is called by:
  9448 ;;		_MuteAlarm
  9449 ;; This function uses a non-reentrant model
  9450 ;;
  9451                           
  9452                           	psect	text41
  9453  00A4D2                     __ptext41:
  9454                           	opt callstack 0
  9455  00A4D2                     _ClearControlFailAlarm:
  9456                           	opt callstack 13
  9457                           
  9458                           ; BSR set to: 2
  9459                           ;incstack = 0
  9460  00A4D2  0E00               	movlw	0
  9461  00A4D4  0100               	movlb	0	; () banked
  9462  00A4D6  6FF6               	movwf	_controlFailAlarm& (0+255),b
  9463                           
  9464                           ; BSR set to: 0
  9465  00A4D8  0012               	return		;funcret
  9466  00A4DA                     __end_of_ClearControlFailAlarm:
  9467                           	opt callstack 0
  9468                           
  9469 ;; *************** function _MonitorInit *****************
  9470 ;; Defined at:
  9471 ;;		line 752 in file "monitor.c"
  9472 ;; Parameters:    Size  Location     Type
  9473 ;;		None
  9474 ;; Auto vars:     Size  Location     Type
  9475 ;;		None
  9476 ;; Return value:  Size  Location     Type
  9477 ;;                  1    wreg      void 
  9478 ;; Registers used:
  9479 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9480 ;; Tracked objects:
  9481 ;;		On entry : 3C/0
  9482 ;;		On exit  : 3C/0
  9483 ;;		Unchanged: 0/0
  9484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9489 ;;Total ram usage:        0 bytes
  9490 ;; Hardware stack levels used:    1
  9491 ;; Hardware stack levels required when called:   18
  9492 ;; This function calls:
  9493 ;;		_AdcInit
  9494 ;;		_ClearVars
  9495 ;;		_TMR0_SetInterruptHandler
  9496 ;;		_TMR0_StartTimer
  9497 ;; This function is called by:
  9498 ;;		_main
  9499 ;; This function uses a non-reentrant model
  9500 ;;
  9501                           
  9502                           	psect	text42
  9503  0083E6                     __ptext42:
  9504                           	opt callstack 0
  9505  0083E6                     _MonitorInit:
  9506                           	opt callstack 12
  9507                           
  9508                           ;monitor.c: 754:     AdcInit();
  9509                           
  9510                           ; BSR set to: 0
  9511                           ;incstack = 0
  9512  0083E6  EC45  F041         	call	_AdcInit	;wreg free
  9513                           
  9514                           ; BSR set to: 62
  9515                           ;monitor.c: 757:     targetHigh = 20*5;
  9516  0083EA  0E00               	movlw	0
  9517  0083EC  0101               	movlb	1	; () banked
  9518  0083EE  6FE4               	movwf	(_targetHigh+1)& (0+255),b
  9519  0083F0  0E64               	movlw	100
  9520  0083F2  6FE3               	movwf	_targetHigh& (0+255),b
  9521                           
  9522                           ; BSR set to: 1
  9523                           ;monitor.c: 758:     targetLow = 7*5;
  9524  0083F4  0E00               	movlw	0
  9525  0083F6  6FE2               	movwf	(_targetLow+1)& (0+255),b
  9526  0083F8  0E23               	movlw	35
  9527  0083FA  6FE1               	movwf	_targetLow& (0+255),b
  9528                           
  9529                           ; BSR set to: 1
  9530                           ;monitor.c: 759:     targetPmax = 25*5;
  9531  0083FC  0E00               	movlw	0
  9532  0083FE  0102               	movlb	2	; () banked
  9533  008400  6F6F               	movwf	(_targetPmax+1)& (0+255),b
  9534  008402  0E7D               	movlw	125
  9535  008404  6F6E               	movwf	_targetPmax& (0+255),b
  9536                           
  9537                           ; BSR set to: 2
  9538                           ;monitor.c: 760:     adcVOffset = 162*8;
  9539  008406  0E05               	movlw	5
  9540  008408  0101               	movlb	1	; () banked
  9541  00840A  6FF5               	movwf	(_adcVOffset+1)& (0+255),b
  9542  00840C  0E10               	movlw	16
  9543  00840E  6FF4               	movwf	_adcVOffset& (0+255),b
  9544                           
  9545                           ; BSR set to: 1
  9546                           ;monitor.c: 761:     adcOffset = 174*8;
  9547  008410  0E05               	movlw	5
  9548  008412  6FF7               	movwf	(_adcOffset+1)& (0+255),b
  9549  008414  0E70               	movlw	112
  9550  008416  6FF6               	movwf	_adcOffset& (0+255),b
  9551                           
  9552                           ; BSR set to: 1
  9553                           ;monitor.c: 762:     volumeMax = 500;
  9554  008418  0E01               	movlw	1
  9555  00841A  0102               	movlb	2	; () banked
  9556  00841C  6F6B               	movwf	(_volumeMax+1)& (0+255),b
  9557  00841E  0EF4               	movlw	244
  9558  008420  6F6A               	movwf	_volumeMax& (0+255),b
  9559                           
  9560                           ; BSR set to: 2
  9561                           ;monitor.c: 763:     volumeMin = 100;
  9562  008422  0E00               	movlw	0
  9563  008424  6F69               	movwf	(_volumeMin+1)& (0+255),b
  9564  008426  0E64               	movlw	100
  9565  008428  6F68               	movwf	_volumeMin& (0+255),b
  9566                           
  9567                           ; BSR set to: 2
  9568                           ;monitor.c: 764:     disableAlarmSV1=0;
  9569  00842A  0E00               	movlw	0
  9570  00842C  0100               	movlb	0	; () banked
  9571  00842E  6FF3               	movwf	_disableAlarmSV1& (0+255),b
  9572                           
  9573                           ; BSR set to: 0
  9574                           ;monitor.c: 765:     state = 0;
  9575  008430  0E00               	movlw	0
  9576  008432  0101               	movlb	1	; () banked
  9577  008434  6FE0               	movwf	(_state+1)& (0+255),b
  9578  008436  0E00               	movlw	0
  9579  008438  6FDF               	movwf	_state& (0+255),b
  9580                           
  9581                           ; BSR set to: 1
  9582                           ;monitor.c: 766:     enable = 0;
  9583  00843A  0E00               	movlw	0
  9584  00843C  0102               	movlb	2	; () banked
  9585  00843E  6FA2               	movwf	monitor@enable& (0+255),b
  9586                           
  9587                           ; BSR set to: 2
  9588                           ;monitor.c: 767:     ClearVars();
  9589  008440  EC8F  F020         	call	_ClearVars	;wreg free
  9590                           
  9591                           ; BSR set to: 2
  9592                           ;monitor.c: 768:     TMR0_SetInterruptHandler(MonitorPressureTask);
  9593  008444  0E1E               	movlw	low _MonitorPressureTask
  9594  008446  0101               	movlb	1	; () banked
  9595  008448  6F04               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
  9596  00844A  0E00               	movlw	high _MonitorPressureTask
  9597  00844C  6F05               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9598  00844E  EC20  F051         	call	_TMR0_SetInterruptHandler	;wreg free
  9599                           
  9600                           ; BSR set to: 1
  9601                           ;monitor.c: 769:     TMR0_StartTimer();
  9602  008452  EC41  F053         	call	_TMR0_StartTimer	;wreg free
  9603  008456  0012               	return		;funcret
  9604  008458                     __end_of_MonitorInit:
  9605                           	opt callstack 0
  9606                           
  9607 ;; *************** function _TMR0_StartTimer *****************
  9608 ;; Defined at:
  9609 ;;		line 87 in file "mcc_generated_files/tmr0.c"
  9610 ;; Parameters:    Size  Location     Type
  9611 ;;		None
  9612 ;; Auto vars:     Size  Location     Type
  9613 ;;		None
  9614 ;; Return value:  Size  Location     Type
  9615 ;;                  1    wreg      void 
  9616 ;; Registers used:
  9617 ;;		None
  9618 ;; Tracked objects:
  9619 ;;		On entry : 3C/2
  9620 ;;		On exit  : 3C/0
  9621 ;;		Unchanged: 3C/0
  9622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9627 ;;Total ram usage:        0 bytes
  9628 ;; Hardware stack levels used:    1
  9629 ;; Hardware stack levels required when called:   16
  9630 ;; This function calls:
  9631 ;;		Nothing
  9632 ;; This function is called by:
  9633 ;;		_SetCalibrateState
  9634 ;;		_MonitorInit
  9635 ;; This function uses a non-reentrant model
  9636 ;;
  9637                           
  9638                           	psect	text43
  9639  00A682                     __ptext43:
  9640                           	opt callstack 0
  9641  00A682                     _TMR0_StartTimer:
  9642                           	opt callstack 13
  9643                           
  9644                           ;mcc_generated_files/tmr0.c: 90:     T0CON0bits.T0EN = 1;
  9645                           
  9646                           ;incstack = 0
  9647  00A682  8EB8               	bsf	184,7,c	;volatile
  9648  00A684  0012               	return		;funcret
  9649  00A686                     __end_of_TMR0_StartTimer:
  9650                           	opt callstack 0
  9651                           
  9652 ;; *************** function _TMR0_SetInterruptHandler *****************
  9653 ;; Defined at:
  9654 ;;		line 134 in file "mcc_generated_files/tmr0.c"
  9655 ;; Parameters:    Size  Location     Type
  9656 ;;  InterruptHan    2    4[BANK1 ] PTR FTN()void 
  9657 ;;		 -> MonitorPressureTask(1), TMR0_DefaultInterruptHandler(1), 
  9658 ;; Auto vars:     Size  Location     Type
  9659 ;;		None
  9660 ;; Return value:  Size  Location     Type
  9661 ;;                  1    wreg      void 
  9662 ;; Registers used:
  9663 ;;		wreg, status,2, status,0
  9664 ;; Tracked objects:
  9665 ;;		On entry : 3F/1
  9666 ;;		On exit  : 3F/1
  9667 ;;		Unchanged: 3F/0
  9668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9669 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9672 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9673 ;;Total ram usage:        2 bytes
  9674 ;; Hardware stack levels used:    1
  9675 ;; Hardware stack levels required when called:   16
  9676 ;; This function calls:
  9677 ;;		Nothing
  9678 ;; This function is called by:
  9679 ;;		_TMR0_Initialize
  9680 ;;		_MonitorInit
  9681 ;; This function uses a non-reentrant model
  9682 ;;
  9683                           
  9684                           	psect	text44
  9685  00A240                     __ptext44:
  9686                           	opt callstack 0
  9687  00A240                     _TMR0_SetInterruptHandler:
  9688                           	opt callstack 12
  9689                           
  9690                           ; BSR set to: 1
  9691                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
  9692                           
  9693                           ;incstack = 0
  9694  00A240  0060  F410  F2DF   	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  9695  00A246  0060  F414  F2E0   	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  9696                           
  9697                           ; BSR set to: 1
  9698  00A24C  0012               	return		;funcret
  9699  00A24E                     __end_of_TMR0_SetInterruptHandler:
  9700                           	opt callstack 0
  9701                           
  9702 ;; *************** function _ClearVars *****************
  9703 ;; Defined at:
  9704 ;;		line 692 in file "monitor.c"
  9705 ;; Parameters:    Size  Location     Type
  9706 ;;		None
  9707 ;; Auto vars:     Size  Location     Type
  9708 ;;  i               2    6[BANK1 ] int 
  9709 ;;  i               2    4[BANK1 ] int 
  9710 ;; Return value:  Size  Location     Type
  9711 ;;                  1    wreg      void 
  9712 ;; Registers used:
  9713 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9714 ;; Tracked objects:
  9715 ;;		On entry : 3C/1
  9716 ;;		On exit  : 3F/2
  9717 ;;		Unchanged: 0/0
  9718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9720 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9722 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9723 ;;Total ram usage:        4 bytes
  9724 ;; Hardware stack levels used:    1
  9725 ;; Hardware stack levels required when called:   17
  9726 ;; This function calls:
  9727 ;;		_ClearCircuitFailureAlarm
  9728 ;;		_ClearEPAboveSetAlarm
  9729 ;;		_ClearEPBelowSetAlarm
  9730 ;;		_ClearIPAboveSetAlarm
  9731 ;;		_ClearIPBelowSetAlarm
  9732 ;; This function is called by:
  9733 ;;		_SetCalibrateState
  9734 ;;		_MonitorInit
  9735 ;; This function uses a non-reentrant model
  9736 ;;
  9737                           
  9738                           	psect	text45
  9739  00411E                     __ptext45:
  9740                           	opt callstack 0
  9741  00411E                     _ClearVars:
  9742                           	opt callstack 12
  9743                           
  9744                           ;monitor.c: 693:     count = 0;
  9745                           
  9746                           ; BSR set to: 1
  9747                           ;incstack = 0
  9748  00411E  0E00               	movlw	0
  9749  004120  0102               	movlb	2	; () banked
  9750  004122  6F45               	movwf	(_count+1)& (0+255),b
  9751  004124  0E00               	movlw	0
  9752  004126  6F44               	movwf	_count& (0+255),b
  9753                           
  9754                           ;monitor.c: 694:     tt = 0;
  9755  004128  0E00               	movlw	0
  9756  00412A  0100               	movlb	0	; () banked
  9757  00412C  6FC8               	movwf	_tt& (0+255),b
  9758  00412E  0E00               	movlw	0
  9759  004130  6FC9               	movwf	(_tt+1)& (0+255),b
  9760  004132  0E00               	movlw	0
  9761  004134  6FCA               	movwf	(_tt+2)& (0+255),b
  9762  004136  0E00               	movlw	0
  9763  004138  6FCB               	movwf	(_tt+3)& (0+255),b
  9764                           
  9765                           ;monitor.c: 695:     for (int i=0; i<25; i++) {
  9766  00413A  0E00               	movlw	0
  9767  00413C  0101               	movlb	1	; () banked
  9768  00413E  6F05               	movwf	(ClearVars@i+1)& (0+255),b
  9769  004140  0E00               	movlw	0
  9770  004142  6F04               	movwf	ClearVars@i& (0+255),b
  9771  004144                     l21121:
  9772                           
  9773                           ; BSR set to: 1
  9774                           ;monitor.c: 696:         prFastBuffer[i] = 0;
  9775  004144  90D8               	bcf	status,0,c
  9776  004146  3504               	rlcf	ClearVars@i& (0+255),w,b
  9777  004148  6ED9               	movwf	fsr2l,c
  9778  00414A  3505               	rlcf	(ClearVars@i+1)& (0+255),w,b
  9779  00414C  6EDA               	movwf	fsr2h,c
  9780  00414E  0E00               	movlw	low _prFastBuffer
  9781  004150  26D9               	addwf	fsr2l,f,c
  9782  004152  0E04               	movlw	high _prFastBuffer
  9783  004154  22DA               	addwfc	fsr2h,f,c
  9784  004156  0E00               	movlw	0
  9785  004158  6EDE               	movwf	postinc2,c
  9786  00415A  0E00               	movlw	0
  9787  00415C  6EDD               	movwf	postdec2,c
  9788                           
  9789                           ;monitor.c: 697:         prSlowBuffer[i] = 0;
  9790  00415E  90D8               	bcf	status,0,c
  9791  004160  3504               	rlcf	ClearVars@i& (0+255),w,b
  9792  004162  6ED9               	movwf	fsr2l,c
  9793  004164  3505               	rlcf	(ClearVars@i+1)& (0+255),w,b
  9794  004166  6EDA               	movwf	fsr2h,c
  9795  004168  0E32               	movlw	low _prSlowBuffer
  9796  00416A  26D9               	addwf	fsr2l,f,c
  9797  00416C  0E04               	movlw	high _prSlowBuffer
  9798  00416E  22DA               	addwfc	fsr2h,f,c
  9799  004170  0E00               	movlw	0
  9800  004172  6EDE               	movwf	postinc2,c
  9801  004174  0E00               	movlw	0
  9802  004176  6EDD               	movwf	postdec2,c
  9803                           
  9804                           ; BSR set to: 1
  9805                           ;monitor.c: 698:     }
  9806  004178  4B04               	infsnz	ClearVars@i& (0+255),f,b
  9807  00417A  2B05               	incf	(ClearVars@i+1)& (0+255),f,b
  9808                           
  9809                           ; BSR set to: 1
  9810  00417C  BF05               	btfsc	(ClearVars@i+1)& (0+255),7,b
  9811  00417E  D7E2               	goto	l21121
  9812  004180  5105               	movf	(ClearVars@i+1)& (0+255),w,b
  9813  004182  E104               	bnz	u20250
  9814  004184  0E19               	movlw	25
  9815  004186  5D04               	subwf	ClearVars@i& (0+255),w,b
  9816  004188  A0D8               	btfss	status,0,c
  9817  00418A  D7DC               	goto	l21121
  9818  00418C                     u20250:
  9819                           
  9820                           ; BSR set to: 1
  9821                           ;monitor.c: 699:     for (int i=0; i<10; i++) {
  9822  00418C  0E00               	movlw	0
  9823  00418E  6F07               	movwf	(ClearVars@i_4906+1)& (0+255),b
  9824  004190  0E00               	movlw	0
  9825  004192  6F06               	movwf	ClearVars@i_4906& (0+255),b
  9826  004194                     l21133:
  9827                           
  9828                           ; BSR set to: 1
  9829                           ;monitor.c: 700:         tdiBuffer[i] = 0;
  9830  004194  90D8               	bcf	status,0,c
  9831  004196  3506               	rlcf	ClearVars@i_4906& (0+255),w,b
  9832  004198  6ED9               	movwf	fsr2l,c
  9833  00419A  3507               	rlcf	(ClearVars@i_4906+1)& (0+255),w,b
  9834  00419C  6EDA               	movwf	fsr2h,c
  9835  00419E  0E61               	movlw	low _tdiBuffer
  9836  0041A0  26D9               	addwf	fsr2l,f,c
  9837  0041A2  0E03               	movlw	high _tdiBuffer
  9838  0041A4  22DA               	addwfc	fsr2h,f,c
  9839  0041A6  0E00               	movlw	0
  9840  0041A8  6EDE               	movwf	postinc2,c
  9841  0041AA  0E00               	movlw	0
  9842  0041AC  6EDD               	movwf	postdec2,c
  9843                           
  9844                           ;monitor.c: 701:         tdeBuffer[i] = 0;
  9845  0041AE  90D8               	bcf	status,0,c
  9846  0041B0  3506               	rlcf	ClearVars@i_4906& (0+255),w,b
  9847  0041B2  6ED9               	movwf	fsr2l,c
  9848  0041B4  3507               	rlcf	(ClearVars@i_4906+1)& (0+255),w,b
  9849  0041B6  6EDA               	movwf	fsr2h,c
  9850  0041B8  0E75               	movlw	low _tdeBuffer
  9851  0041BA  26D9               	addwf	fsr2l,f,c
  9852  0041BC  0E03               	movlw	high _tdeBuffer
  9853  0041BE  22DA               	addwfc	fsr2h,f,c
  9854  0041C0  0E00               	movlw	0
  9855  0041C2  6EDE               	movwf	postinc2,c
  9856  0041C4  0E00               	movlw	0
  9857  0041C6  6EDD               	movwf	postdec2,c
  9858                           
  9859                           ; BSR set to: 1
  9860                           ;monitor.c: 702:     }
  9861  0041C8  4B06               	infsnz	ClearVars@i_4906& (0+255),f,b
  9862  0041CA  2B07               	incf	(ClearVars@i_4906+1)& (0+255),f,b
  9863                           
  9864                           ; BSR set to: 1
  9865  0041CC  BF07               	btfsc	(ClearVars@i_4906+1)& (0+255),7,b
  9866  0041CE  D7E2               	goto	l21133
  9867  0041D0  5107               	movf	(ClearVars@i_4906+1)& (0+255),w,b
  9868  0041D2  E104               	bnz	u20260
  9869  0041D4  0E0A               	movlw	10
  9870  0041D6  5D06               	subwf	ClearVars@i_4906& (0+255),w,b
  9871  0041D8  A0D8               	btfss	status,0,c
  9872  0041DA  D7DC               	goto	l21133
  9873  0041DC                     u20260:
  9874                           
  9875                           ; BSR set to: 1
  9876                           ;monitor.c: 703:     numtdi = 0;
  9877  0041DC  0E00               	movlw	0
  9878  0041DE  0100               	movlb	0	; () banked
  9879  0041E0  6FD3               	movwf	(_numtdi+1)& (0+255),b
  9880  0041E2  0E00               	movlw	0
  9881  0041E4  6FD2               	movwf	_numtdi& (0+255),b
  9882                           
  9883                           ;monitor.c: 704:     numtde = 0;
  9884  0041E6  0E00               	movlw	0
  9885  0041E8  6FD1               	movwf	(_numtde+1)& (0+255),b
  9886  0041EA  0E00               	movlw	0
  9887  0041EC  6FD0               	movwf	_numtde& (0+255),b
  9888                           
  9889                           ;monitor.c: 705:     ti = 0;
  9890  0041EE  0E00               	movlw	0
  9891  0041F0  0102               	movlb	2	; () banked
  9892  0041F2  6F5B               	movwf	(_ti+1)& (0+255),b
  9893  0041F4  0E00               	movlw	0
  9894  0041F6  6F5A               	movwf	_ti& (0+255),b
  9895                           
  9896                           ;monitor.c: 706:     te = 0;
  9897  0041F8  0E00               	movlw	0
  9898  0041FA  6F59               	movwf	(_te+1)& (0+255),b
  9899  0041FC  0E00               	movlw	0
  9900  0041FE  6F58               	movwf	_te& (0+255),b
  9901                           
  9902                           ;monitor.c: 707:     tdi = 0;
  9903  004200  0E00               	movlw	0
  9904  004202  0101               	movlb	1	; () banked
  9905  004204  6FDC               	movwf	(_tdi+1)& (0+255),b
  9906  004206  0E00               	movlw	0
  9907  004208  6FDB               	movwf	_tdi& (0+255),b
  9908                           
  9909                           ;monitor.c: 708:     tde = 0;
  9910  00420A  0E00               	movlw	0
  9911  00420C  6FDA               	movwf	(_tde+1)& (0+255),b
  9912  00420E  0E00               	movlw	0
  9913  004210  6FD9               	movwf	_tde& (0+255),b
  9914                           
  9915                           ;monitor.c: 709:     tt = 0;
  9916  004212  0E00               	movlw	0
  9917  004214  0100               	movlb	0	; () banked
  9918  004216  6FC8               	movwf	_tt& (0+255),b
  9919  004218  0E00               	movlw	0
  9920  00421A  6FC9               	movwf	(_tt+1)& (0+255),b
  9921  00421C  0E00               	movlw	0
  9922  00421E  6FCA               	movwf	(_tt+2)& (0+255),b
  9923  004220  0E00               	movlw	0
  9924  004222  6FCB               	movwf	(_tt+3)& (0+255),b
  9925                           
  9926                           ;monitor.c: 710:     ttExt = 0;
  9927  004224  0E00               	movlw	0
  9928  004226  0102               	movlb	2	; () banked
  9929  004228  6F65               	movwf	(_ttExt+1)& (0+255),b
  9930  00422A  0E00               	movlw	0
  9931  00422C  6F64               	movwf	_ttExt& (0+255),b
  9932                           
  9933                           ;monitor.c: 711:     ttNoAlarm = 0;
  9934  00422E  0E00               	movlw	0
  9935  004230  6F5F               	movwf	(_ttNoAlarm+1)& (0+255),b
  9936  004232  0E00               	movlw	0
  9937  004234  6F5E               	movwf	_ttNoAlarm& (0+255),b
  9938                           
  9939                           ;monitor.c: 712:     ttAlarm = 0;
  9940  004236  0E00               	movlw	0
  9941  004238  6F5D               	movwf	(_ttAlarm+1)& (0+255),b
  9942  00423A  0E00               	movlw	0
  9943  00423C  6F5C               	movwf	_ttAlarm& (0+255),b
  9944                           
  9945                           ;monitor.c: 713:     enableAlarms = 0;
  9946  00423E  0E00               	movlw	0
  9947  004240  0100               	movlb	0	; () banked
  9948  004242  6FF4               	movwf	_enableAlarms& (0+255),b
  9949                           
  9950                           ;monitor.c: 714:     tt1 = 0;
  9951  004244  0E00               	movlw	0
  9952  004246  0102               	movlb	2	; () banked
  9953  004248  6F67               	movwf	(_tt1+1)& (0+255),b
  9954  00424A  0E00               	movlw	0
  9955  00424C  6F66               	movwf	_tt1& (0+255),b
  9956                           
  9957                           ;monitor.c: 715:     tt2 = 0;
  9958  00424E  0E00               	movlw	0
  9959  004250  0100               	movlb	0	; () banked
  9960  004252  6FDD               	movwf	(_tt2+1)& (0+255),b
  9961  004254  0E00               	movlw	0
  9962  004256  6FDC               	movwf	_tt2& (0+255),b
  9963                           
  9964                           ;monitor.c: 716:     tt3 = 0;
  9965  004258  0E00               	movlw	0
  9966  00425A  0101               	movlb	1	; () banked
  9967  00425C  6FDE               	movwf	(_tt3+1)& (0+255),b
  9968  00425E  0E00               	movlw	0
  9969  004260  6FDD               	movwf	_tt3& (0+255),b
  9970                           
  9971                           ;monitor.c: 717:     tt4 = 0;
  9972  004262  0E00               	movlw	0
  9973  004264  0100               	movlb	0	; () banked
  9974  004266  6FDB               	movwf	(_tt4+1)& (0+255),b
  9975  004268  0E00               	movlw	0
  9976  00426A  6FDA               	movwf	_tt4& (0+255),b
  9977                           
  9978                           ;monitor.c: 718:     tt12 = 0;
  9979  00426C  0E00               	movlw	0
  9980  00426E  0102               	movlb	2	; () banked
  9981  004270  6F63               	movwf	(_tt12+1)& (0+255),b
  9982  004272  0E00               	movlw	0
  9983  004274  6F62               	movwf	_tt12& (0+255),b
  9984                           
  9985                           ;monitor.c: 719:     tt34 = 0;
  9986  004276  0E00               	movlw	0
  9987  004278  6F61               	movwf	(_tt34+1)& (0+255),b
  9988  00427A  0E00               	movlw	0
  9989  00427C  6F60               	movwf	_tt34& (0+255),b
  9990                           
  9991                           ;monitor.c: 720:     bpm = 0;
  9992  00427E  0E00               	movlw	0
  9993  004280  6F57               	movwf	(_bpm+1)& (0+255),b
  9994  004282  0E00               	movlw	0
  9995  004284  6F56               	movwf	_bpm& (0+255),b
  9996                           
  9997                           ;monitor.c: 721:     bp = 0;
  9998  004286  0E00               	movlw	0
  9999  004288  6FBB               	movwf	(_bp+1)& (0+255),b
 10000  00428A  0E00               	movlw	0
 10001  00428C  6FBA               	movwf	_bp& (0+255),b
 10002                           
 10003                           ;monitor.c: 723:     pi = 0;
 10004  00428E  0E00               	movlw	0
 10005  004290  0101               	movlb	1	; () banked
 10006  004292  6FD8               	movwf	(_pi+1)& (0+255),b
 10007  004294  0E00               	movlw	0
 10008  004296  6FD7               	movwf	_pi& (0+255),b
 10009                           
 10010                           ;monitor.c: 724:     pe = 0;
 10011  004298  0E00               	movlw	0
 10012  00429A  6FD6               	movwf	(_pe+1)& (0+255),b
 10013  00429C  0E00               	movlw	0
 10014  00429E  6FD5               	movwf	_pe& (0+255),b
 10015                           
 10016                           ;monitor.c: 725:     rpi = 0;
 10017  0042A0  0E00               	movlw	0
 10018  0042A2  0102               	movlb	2	; () banked
 10019  0042A4  6F49               	movwf	(_rpi+1)& (0+255),b
 10020  0042A6  0E00               	movlw	0
 10021  0042A8  6F48               	movwf	_rpi& (0+255),b
 10022                           
 10023                           ;monitor.c: 726:     rpe = 0;
 10024  0042AA  0E00               	movlw	0
 10025  0042AC  6F47               	movwf	(_rpe+1)& (0+255),b
 10026  0042AE  0E00               	movlw	0
 10027  0042B0  6F46               	movwf	_rpe& (0+255),b
 10028                           
 10029                           ;monitor.c: 727:     lrpi = 0;
 10030  0042B2  0E00               	movlw	0
 10031  0042B4  0101               	movlb	1	; () banked
 10032  0042B6  6FD2               	movwf	(_lrpi+1)& (0+255),b
 10033  0042B8  0E00               	movlw	0
 10034  0042BA  6FD1               	movwf	_lrpi& (0+255),b
 10035                           
 10036                           ;monitor.c: 728:     lrpe = 0;
 10037  0042BC  0E00               	movlw	0
 10038  0042BE  0100               	movlb	0	; () banked
 10039  0042C0  6FD5               	movwf	(_lrpe+1)& (0+255),b
 10040  0042C2  0E00               	movlw	0
 10041  0042C4  6FD4               	movwf	_lrpe& (0+255),b
 10042                           
 10043                           ;monitor.c: 729:     maxPressure = 0;
 10044  0042C6  0E00               	movlw	0
 10045  0042C8  0102               	movlb	2	; () banked
 10046  0042CA  6F53               	movwf	(_maxPressure+1)& (0+255),b
 10047  0042CC  0E00               	movlw	0
 10048  0042CE  6F52               	movwf	_maxPressure& (0+255),b
 10049                           
 10050                           ;monitor.c: 730:     minPressure = 40*5;
 10051  0042D0  0E00               	movlw	0
 10052  0042D2  0100               	movlb	0	; () banked
 10053  0042D4  6FD7               	movwf	(_minPressure+1)& (0+255),b
 10054  0042D6  0EC8               	movlw	200
 10055  0042D8  6FD6               	movwf	_minPressure& (0+255),b
 10056                           
 10057                           ;monitor.c: 731:     pHighAcc = 0;
 10058  0042DA  0E00               	movlw	0
 10059  0042DC  0102               	movlb	2	; () banked
 10060  0042DE  6F1E               	movwf	_pHighAcc& (0+255),b
 10061  0042E0  0E00               	movlw	0
 10062  0042E2  6F1F               	movwf	(_pHighAcc+1)& (0+255),b
 10063  0042E4  0E00               	movlw	0
 10064  0042E6  6F20               	movwf	(_pHighAcc+2)& (0+255),b
 10065  0042E8  0E00               	movlw	0
 10066  0042EA  6F21               	movwf	(_pHighAcc+3)& (0+255),b
 10067                           
 10068                           ;monitor.c: 732:     pLowAcc = 0;
 10069  0042EC  0E00               	movlw	0
 10070  0042EE  6F1A               	movwf	_pLowAcc& (0+255),b
 10071  0042F0  0E00               	movlw	0
 10072  0042F2  6F1B               	movwf	(_pLowAcc+1)& (0+255),b
 10073  0042F4  0E00               	movlw	0
 10074  0042F6  6F1C               	movwf	(_pLowAcc+2)& (0+255),b
 10075  0042F8  0E00               	movlw	0
 10076  0042FA  6F1D               	movwf	(_pLowAcc+3)& (0+255),b
 10077                           
 10078                           ;monitor.c: 734:     alarmMaxPressure = 0;
 10079  0042FC  0E00               	movlw	0
 10080  0042FE  6F51               	movwf	(_alarmMaxPressure+1)& (0+255),b
 10081  004300  0E00               	movlw	0
 10082  004302  6F50               	movwf	_alarmMaxPressure& (0+255),b
 10083                           
 10084                           ;monitor.c: 735:     prSlow = 0;
 10085  004304  0E00               	movlw	0
 10086  004306  0100               	movlb	0	; () banked
 10087  004308  6FCF               	movwf	(_prSlow+1)& (0+255),b
 10088  00430A  0E00               	movlw	0
 10089  00430C  6FCE               	movwf	_prSlow& (0+255),b
 10090                           
 10091                           ;monitor.c: 736:     prSlowDev = 0;
 10092  00430E  0E00               	movlw	0
 10093  004310  0102               	movlb	2	; () banked
 10094  004312  6F43               	movwf	(_prSlowDev+1)& (0+255),b
 10095  004314  0E00               	movlw	0
 10096  004316  6F42               	movwf	_prSlowDev& (0+255),b
 10097                           
 10098                           ;monitor.c: 737:     prSlowNumStable = 0;
 10099  004318  0E00               	movlw	0
 10100  00431A  6F41               	movwf	(_prSlowNumStable+1)& (0+255),b
 10101  00431C  0E00               	movlw	0
 10102  00431E  6F40               	movwf	_prSlowNumStable& (0+255),b
 10103                           
 10104                           ;monitor.c: 738:     hiLimit = 40*5;
 10105  004320  0E00               	movlw	0
 10106  004322  0101               	movlb	1	; () banked
 10107  004324  6FD0               	movwf	(_hiLimit+1)& (0+255),b
 10108  004326  0EC8               	movlw	200
 10109  004328  6FCF               	movwf	_hiLimit& (0+255),b
 10110                           
 10111                           ;monitor.c: 739:     loLimit = 0;
 10112  00432A  0E00               	movlw	0
 10113  00432C  6FCE               	movwf	(_loLimit+1)& (0+255),b
 10114  00432E  0E00               	movlw	0
 10115  004330  6FCD               	movwf	_loLimit& (0+255),b
 10116                           
 10117                           ;monitor.c: 740:     volumeAcc = 0;
 10118  004332  0E00               	movlw	0
 10119  004334  0102               	movlb	2	; () banked
 10120  004336  6F22               	movwf	_volumeAcc& (0+255),b
 10121  004338  0E00               	movlw	0
 10122  00433A  6F23               	movwf	(_volumeAcc+1)& (0+255),b
 10123  00433C  0E00               	movlw	0
 10124  00433E  6F24               	movwf	(_volumeAcc+2)& (0+255),b
 10125  004340  0E00               	movlw	0
 10126  004342  6F25               	movwf	(_volumeAcc+3)& (0+255),b
 10127                           
 10128                           ;monitor.c: 741:     volume = 0;
 10129  004344  0E00               	movlw	0
 10130  004346  0100               	movlb	0	; () banked
 10131  004348  6FDF               	movwf	(_volume+1)& (0+255),b
 10132  00434A  0E00               	movlw	0
 10133  00434C  6FDE               	movwf	_volume& (0+255),b
 10134                           
 10135                           ;monitor.c: 743:     alarmSV1=1;
 10136  00434E  0E01               	movlw	1
 10137  004350  0102               	movlb	2	; () banked
 10138  004352  6FA0               	movwf	_alarmSV1& (0+255),b
 10139                           
 10140                           ; BSR set to: 2
 10141                           ;monitor.c: 745:     ClearEPAboveSetAlarm();
 10142  004354  EC0B  F050         	call	_ClearEPAboveSetAlarm	;wreg free
 10143                           
 10144                           ; BSR set to: 0
 10145                           ;monitor.c: 746:     ClearEPBelowSetAlarm();
 10146  004358  EC6C  F050         	call	_ClearEPBelowSetAlarm	;wreg free
 10147                           
 10148                           ; BSR set to: 0
 10149                           ;monitor.c: 747:     ClearIPAboveSetAlarm();
 10150  00435C  EC62  F050         	call	_ClearIPAboveSetAlarm	;wreg free
 10151                           
 10152                           ; BSR set to: 0
 10153                           ;monitor.c: 748:     ClearIPBelowSetAlarm();
 10154  004360  EC58  F050         	call	_ClearIPBelowSetAlarm	;wreg free
 10155                           
 10156                           ; BSR set to: 0
 10157                           ;monitor.c: 749:     ClearCircuitFailureAlarm();
 10158  004364  EC6D  F052         	call	_ClearCircuitFailureAlarm	;wreg free
 10159                           
 10160                           ; BSR set to: 2
 10161  004368  0012               	return		;funcret
 10162  00436A                     __end_of_ClearVars:
 10163                           	opt callstack 0
 10164                           
 10165 ;; *************** function _ClearIPBelowSetAlarm *****************
 10166 ;; Defined at:
 10167 ;;		line 284 in file "alarm.c"
 10168 ;; Parameters:    Size  Location     Type
 10169 ;;		None
 10170 ;; Auto vars:     Size  Location     Type
 10171 ;;		None
 10172 ;; Return value:  Size  Location     Type
 10173 ;;                  1    wreg      void 
 10174 ;; Registers used:
 10175 ;;		wreg, status,2, status,0
 10176 ;; Tracked objects:
 10177 ;;		On entry : 3F/0
 10178 ;;		On exit  : 3F/0
 10179 ;;		Unchanged: 0/0
 10180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10185 ;;Total ram usage:        0 bytes
 10186 ;; Hardware stack levels used:    1
 10187 ;; Hardware stack levels required when called:   16
 10188 ;; This function calls:
 10189 ;;		Nothing
 10190 ;; This function is called by:
 10191 ;;		_ClearVars
 10192 ;; This function uses a non-reentrant model
 10193 ;;
 10194                           
 10195                           	psect	text46
 10196  00A0B0                     __ptext46:
 10197                           	opt callstack 0
 10198  00A0B0                     _ClearIPBelowSetAlarm:
 10199                           	opt callstack 12
 10200                           
 10201                           ; BSR set to: 0
 10202                           
 10203                           ; BSR set to: 2
 10204                           ;incstack = 0
 10205  00A0B0  07E4               	decf	_ipBelowSetAlarm& (0+255),f,b
 10206  00A0B2  A0D8               	btfss	status,0,c
 10207  00A0B4  07E5               	decf	(_ipBelowSetAlarm+1)& (0+255),f,b
 10208                           
 10209                           ; BSR set to: 0
 10210  00A0B6  AFE5               	btfss	(_ipBelowSetAlarm+1)& (0+255),7,b
 10211  00A0B8  0012               	return	
 10212                           
 10213                           ; BSR set to: 0
 10214  00A0BA  0E00               	movlw	0
 10215  00A0BC  6FE5               	movwf	(_ipBelowSetAlarm+1)& (0+255),b
 10216  00A0BE  0E00               	movlw	0
 10217  00A0C0  6FE4               	movwf	_ipBelowSetAlarm& (0+255),b
 10218                           
 10219                           ; BSR set to: 0
 10220  00A0C2  0012               	return		;funcret
 10221  00A0C4                     __end_of_ClearIPBelowSetAlarm:
 10222                           	opt callstack 0
 10223                           
 10224 ;; *************** function _ClearIPAboveSetAlarm *****************
 10225 ;; Defined at:
 10226 ;;		line 285 in file "alarm.c"
 10227 ;; Parameters:    Size  Location     Type
 10228 ;;		None
 10229 ;; Auto vars:     Size  Location     Type
 10230 ;;		None
 10231 ;; Return value:  Size  Location     Type
 10232 ;;                  1    wreg      void 
 10233 ;; Registers used:
 10234 ;;		wreg, status,2, status,0
 10235 ;; Tracked objects:
 10236 ;;		On entry : 3F/0
 10237 ;;		On exit  : 3F/0
 10238 ;;		Unchanged: 0/0
 10239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10244 ;;Total ram usage:        0 bytes
 10245 ;; Hardware stack levels used:    1
 10246 ;; Hardware stack levels required when called:   16
 10247 ;; This function calls:
 10248 ;;		Nothing
 10249 ;; This function is called by:
 10250 ;;		_ClearVars
 10251 ;; This function uses a non-reentrant model
 10252 ;;
 10253                           
 10254                           	psect	text47
 10255  00A0C4                     __ptext47:
 10256                           	opt callstack 0
 10257  00A0C4                     _ClearIPAboveSetAlarm:
 10258                           	opt callstack 12
 10259                           
 10260                           ; BSR set to: 0
 10261                           
 10262                           ; BSR set to: 0
 10263                           ;incstack = 0
 10264  00A0C4  07E2               	decf	_ipAboveSetAlarm& (0+255),f,b
 10265  00A0C6  A0D8               	btfss	status,0,c
 10266  00A0C8  07E3               	decf	(_ipAboveSetAlarm+1)& (0+255),f,b
 10267                           
 10268                           ; BSR set to: 0
 10269  00A0CA  AFE3               	btfss	(_ipAboveSetAlarm+1)& (0+255),7,b
 10270  00A0CC  0012               	return	
 10271                           
 10272                           ; BSR set to: 0
 10273  00A0CE  0E00               	movlw	0
 10274  00A0D0  6FE3               	movwf	(_ipAboveSetAlarm+1)& (0+255),b
 10275  00A0D2  0E00               	movlw	0
 10276  00A0D4  6FE2               	movwf	_ipAboveSetAlarm& (0+255),b
 10277                           
 10278                           ; BSR set to: 0
 10279  00A0D6  0012               	return		;funcret
 10280  00A0D8                     __end_of_ClearIPAboveSetAlarm:
 10281                           	opt callstack 0
 10282                           
 10283 ;; *************** function _ClearEPBelowSetAlarm *****************
 10284 ;; Defined at:
 10285 ;;		line 282 in file "alarm.c"
 10286 ;; Parameters:    Size  Location     Type
 10287 ;;		None
 10288 ;; Auto vars:     Size  Location     Type
 10289 ;;		None
 10290 ;; Return value:  Size  Location     Type
 10291 ;;                  1    wreg      void 
 10292 ;; Registers used:
 10293 ;;		wreg, status,2, status,0
 10294 ;; Tracked objects:
 10295 ;;		On entry : 3F/0
 10296 ;;		On exit  : 3F/0
 10297 ;;		Unchanged: 0/0
 10298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10303 ;;Total ram usage:        0 bytes
 10304 ;; Hardware stack levels used:    1
 10305 ;; Hardware stack levels required when called:   16
 10306 ;; This function calls:
 10307 ;;		Nothing
 10308 ;; This function is called by:
 10309 ;;		_ClearVars
 10310 ;; This function uses a non-reentrant model
 10311 ;;
 10312                           
 10313                           	psect	text48
 10314  00A0D8                     __ptext48:
 10315                           	opt callstack 0
 10316  00A0D8                     _ClearEPBelowSetAlarm:
 10317                           	opt callstack 12
 10318                           
 10319                           ; BSR set to: 0
 10320                           
 10321                           ; BSR set to: 0
 10322                           ;incstack = 0
 10323  00A0D8  07E8               	decf	_epBelowSetAlarm& (0+255),f,b
 10324  00A0DA  A0D8               	btfss	status,0,c
 10325  00A0DC  07E9               	decf	(_epBelowSetAlarm+1)& (0+255),f,b
 10326                           
 10327                           ; BSR set to: 0
 10328  00A0DE  AFE9               	btfss	(_epBelowSetAlarm+1)& (0+255),7,b
 10329  00A0E0  0012               	return	
 10330                           
 10331                           ; BSR set to: 0
 10332  00A0E2  0E00               	movlw	0
 10333  00A0E4  6FE9               	movwf	(_epBelowSetAlarm+1)& (0+255),b
 10334  00A0E6  0E00               	movlw	0
 10335  00A0E8  6FE8               	movwf	_epBelowSetAlarm& (0+255),b
 10336                           
 10337                           ; BSR set to: 0
 10338  00A0EA  0012               	return		;funcret
 10339  00A0EC                     __end_of_ClearEPBelowSetAlarm:
 10340                           	opt callstack 0
 10341                           
 10342 ;; *************** function _ClearEPAboveSetAlarm *****************
 10343 ;; Defined at:
 10344 ;;		line 283 in file "alarm.c"
 10345 ;; Parameters:    Size  Location     Type
 10346 ;;		None
 10347 ;; Auto vars:     Size  Location     Type
 10348 ;;		None
 10349 ;; Return value:  Size  Location     Type
 10350 ;;                  1    wreg      void 
 10351 ;; Registers used:
 10352 ;;		wreg, status,2, status,0
 10353 ;; Tracked objects:
 10354 ;;		On entry : 3F/2
 10355 ;;		On exit  : 3F/0
 10356 ;;		Unchanged: 0/0
 10357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10362 ;;Total ram usage:        0 bytes
 10363 ;; Hardware stack levels used:    1
 10364 ;; Hardware stack levels required when called:   16
 10365 ;; This function calls:
 10366 ;;		Nothing
 10367 ;; This function is called by:
 10368 ;;		_ClearVars
 10369 ;; This function uses a non-reentrant model
 10370 ;;
 10371                           
 10372                           	psect	text49
 10373  00A016                     __ptext49:
 10374                           	opt callstack 0
 10375  00A016                     _ClearEPAboveSetAlarm:
 10376                           	opt callstack 12
 10377                           
 10378                           ; BSR set to: 2
 10379                           
 10380                           ; BSR set to: 0
 10381                           ;incstack = 0
 10382  00A016  0100               	movlb	0	; () banked
 10383  00A018  07E6               	decf	_epAboveSetAlarm& (0+255),f,b
 10384  00A01A  A0D8               	btfss	status,0,c
 10385  00A01C  07E7               	decf	(_epAboveSetAlarm+1)& (0+255),f,b
 10386                           
 10387                           ; BSR set to: 0
 10388  00A01E  AFE7               	btfss	(_epAboveSetAlarm+1)& (0+255),7,b
 10389  00A020  0012               	return	
 10390                           
 10391                           ; BSR set to: 0
 10392  00A022  0E00               	movlw	0
 10393  00A024  6FE7               	movwf	(_epAboveSetAlarm+1)& (0+255),b
 10394  00A026  0E00               	movlw	0
 10395  00A028  6FE6               	movwf	_epAboveSetAlarm& (0+255),b
 10396                           
 10397                           ; BSR set to: 0
 10398  00A02A  0012               	return		;funcret
 10399  00A02C                     __end_of_ClearEPAboveSetAlarm:
 10400                           	opt callstack 0
 10401                           
 10402 ;; *************** function _ClearCircuitFailureAlarm *****************
 10403 ;; Defined at:
 10404 ;;		line 279 in file "alarm.c"
 10405 ;; Parameters:    Size  Location     Type
 10406 ;;		None
 10407 ;; Auto vars:     Size  Location     Type
 10408 ;;		None
 10409 ;; Return value:  Size  Location     Type
 10410 ;;                  1    wreg      void 
 10411 ;; Registers used:
 10412 ;;		wreg, status,2
 10413 ;; Tracked objects:
 10414 ;;		On entry : 3C/1
 10415 ;;		On exit  : 3F/2
 10416 ;;		Unchanged: 0/0
 10417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10422 ;;Total ram usage:        0 bytes
 10423 ;; Hardware stack levels used:    1
 10424 ;; Hardware stack levels required when called:   16
 10425 ;; This function calls:
 10426 ;;		Nothing
 10427 ;; This function is called by:
 10428 ;;		_MuteAlarm
 10429 ;;		_ClearVars
 10430 ;; This function uses a non-reentrant model
 10431 ;;
 10432                           
 10433                           	psect	text50
 10434  00A4DA                     __ptext50:
 10435                           	opt callstack 0
 10436  00A4DA                     _ClearCircuitFailureAlarm:
 10437                           	opt callstack 12
 10438                           
 10439                           ; BSR set to: 0
 10440                           ;incstack = 0
 10441  00A4DA  0E00               	movlw	0
 10442  00A4DC  0102               	movlb	2	; () banked
 10443  00A4DE  6FAB               	movwf	_circuitFailureAlarm& (0+255),b
 10444                           
 10445                           ; BSR set to: 2
 10446  00A4E0  0012               	return		;funcret
 10447  00A4E2                     __end_of_ClearCircuitFailureAlarm:
 10448                           	opt callstack 0
 10449                           
 10450 ;; *************** function _AdcInit *****************
 10451 ;; Defined at:
 10452 ;;		line 57 in file "monitor.c"
 10453 ;; Parameters:    Size  Location     Type
 10454 ;;		None
 10455 ;; Auto vars:     Size  Location     Type
 10456 ;;		None
 10457 ;; Return value:  Size  Location     Type
 10458 ;;                  1    wreg      void 
 10459 ;; Registers used:
 10460 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10461 ;; Tracked objects:
 10462 ;;		On entry : 3C/0
 10463 ;;		On exit  : 3F/3E
 10464 ;;		Unchanged: 0/0
 10465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10470 ;;Total ram usage:        0 bytes
 10471 ;; Hardware stack levels used:    1
 10472 ;; Hardware stack levels required when called:   17
 10473 ;; This function calls:
 10474 ;;		_ADCC_SetADTIInterruptHandler
 10475 ;;		_ADCC_StartConversion
 10476 ;;		___wmul
 10477 ;; This function is called by:
 10478 ;;		_MonitorInit
 10479 ;; This function uses a non-reentrant model
 10480 ;;
 10481                           
 10482                           	psect	text51
 10483  00828A                     __ptext51:
 10484                           	opt callstack 0
 10485  00828A                     _AdcInit:
 10486                           	opt callstack 12
 10487                           
 10488                           ;monitor.c: 58:     currentChannel = 0;
 10489                           
 10490                           ; BSR set to: 2
 10491                           ;incstack = 0
 10492  00828A  0E00               	movlw	0
 10493  00828C  0101               	movlb	1	; () banked
 10494  00828E  6FE6               	movwf	(_currentChannel+1)& (0+255),b
 10495  008290  0E00               	movlw	0
 10496  008292  6FE5               	movwf	_currentChannel& (0+255),b
 10497                           
 10498                           ; BSR set to: 1
 10499                           ;monitor.c: 59:     ADCC_SetADTIInterruptHandler(AdcHandler);
 10500  008294  0E50               	movlw	low _AdcHandler
 10501  008296  6F04               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler& (0+255),b
 10502  008298  0E60               	movlw	high _AdcHandler
 10503  00829A  6F05               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)& (0+255),b
 10504  00829C  EC27  F051         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 10505                           
 10506                           ; BSR set to: 1
 10507                           ;monitor.c: 62:     ADCON0bits.ADON = 0;
 10508  0082A0  013E               	movlb	62	; () banked
 10509  0082A2  9FF8               	bcf	248,7,b	;volatile
 10510                           
 10511                           ; BSR set to: 62
 10512                           ;monitor.c: 63:     ADREF = adcChannels[currentChannel].ref;
 10513  0082A4  0060  F794  F104   	movff	_currentChannel,___wmul@multiplier
 10514  0082AA  0060  F798  F105   	movff	_currentChannel+1,___wmul@multiplier+1
 10515  0082B0  0E00               	movlw	0
 10516  0082B2  0101               	movlb	1	; () banked
 10517  0082B4  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10518  0082B6  0E05               	movlw	5
 10519  0082B8  6F06               	movwf	___wmul@multiplicand& (0+255),b
 10520  0082BA  EC7C  F04C         	call	___wmul	;wreg free
 10521  0082BE  0EC0               	movlw	low (_adcChannels+4)
 10522  0082C0  2504               	addwf	?___wmul& (0+255),w,b
 10523  0082C2  6ED9               	movwf	fsr2l,c
 10524  0082C4  0E02               	movlw	high (_adcChannels+4)
 10525  0082C6  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 10526  0082C8  6EDA               	movwf	fsr2h,c
 10527  0082CA  50DF               	movf	indf2,w,c
 10528  0082CC  013E               	movlb	62	; () banked
 10529  0082CE  6FFD               	movwf	253,b	;volatile
 10530                           
 10531                           ; BSR set to: 62
 10532                           ;monitor.c: 64:     ADCC_StartConversion(adcChannels[currentChannel].ch);
 10533  0082D0  0060  F794  F104   	movff	_currentChannel,___wmul@multiplier
 10534  0082D6  0060  F798  F105   	movff	_currentChannel+1,___wmul@multiplier+1
 10535  0082DC  0E00               	movlw	0
 10536  0082DE  0101               	movlb	1	; () banked
 10537  0082E0  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10538  0082E2  0E05               	movlw	5
 10539  0082E4  6F06               	movwf	___wmul@multiplicand& (0+255),b
 10540  0082E6  EC7C  F04C         	call	___wmul	;wreg free
 10541  0082EA  0EBC               	movlw	low _adcChannels
 10542  0082EC  2504               	addwf	?___wmul& (0+255),w,b
 10543  0082EE  6ED9               	movwf	fsr2l,c
 10544  0082F0  0E02               	movlw	high _adcChannels
 10545  0082F2  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 10546  0082F4  6EDA               	movwf	fsr2h,c
 10547  0082F6  50DF               	movf	indf2,w,c
 10548  0082F8  ECAF  F050         	call	_ADCC_StartConversion
 10549                           
 10550                           ; BSR set to: 62
 10551  0082FC  0012               	return		;funcret
 10552  0082FE                     __end_of_AdcInit:
 10553                           	opt callstack 0
 10554                           
 10555 ;; *************** function _ADCC_StartConversion *****************
 10556 ;; Defined at:
 10557 ;;		line 120 in file "mcc_generated_files/adcc.c"
 10558 ;; Parameters:    Size  Location     Type
 10559 ;;  channel         1    wreg     enum E16053
 10560 ;; Auto vars:     Size  Location     Type
 10561 ;;  channel         1    4[BANK1 ] enum E16053
 10562 ;; Return value:  Size  Location     Type
 10563 ;;                  1    wreg      void 
 10564 ;; Registers used:
 10565 ;;		wreg
 10566 ;; Tracked objects:
 10567 ;;		On entry : 3F/1
 10568 ;;		On exit  : 3F/3E
 10569 ;;		Unchanged: 0/0
 10570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10572 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10574 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10575 ;;Total ram usage:        1 bytes
 10576 ;; Hardware stack levels used:    1
 10577 ;; Hardware stack levels required when called:   16
 10578 ;; This function calls:
 10579 ;;		Nothing
 10580 ;; This function is called by:
 10581 ;;		_AdcInit
 10582 ;; This function uses a non-reentrant model
 10583 ;;
 10584                           
 10585                           	psect	text52
 10586  00A15E                     __ptext52:
 10587                           	opt callstack 0
 10588  00A15E                     _ADCC_StartConversion:
 10589                           	opt callstack 12
 10590                           
 10591                           ; BSR set to: 62
 10592                           ;incstack = 0
 10593                           ;ADCC_StartConversion@channel stored from wreg
 10594  00A15E  6F04               	movwf	ADCC_StartConversion@channel& (0+255),b
 10595                           
 10596                           ;mcc_generated_files/adcc.c: 120: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 121: {;mcc_generated_files/adcc.c: 123:     ADPCH = channel;
 10597  00A160  0060  F413  FEF1   	movff	ADCC_StartConversion@channel,16113	;volatile
 10598                           
 10599                           ;mcc_generated_files/adcc.c: 126:     ADCON0bits.ADON = 1;
 10600  00A166  013E               	movlb	62	; () banked
 10601  00A168  8FF8               	bsf	248,7,b	;volatile
 10602                           
 10603                           ; BSR set to: 62
 10604                           ;mcc_generated_files/adcc.c: 129:     ADCON0bits.ADGO = 1;
 10605  00A16A  81F8               	bsf	248,0,b	;volatile
 10606                           
 10607                           ; BSR set to: 62
 10608  00A16C  0012               	return		;funcret
 10609  00A16E                     __end_of_ADCC_StartConversion:
 10610                           	opt callstack 0
 10611                           
 10612 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 10613 ;; Defined at:
 10614 ;;		line 316 in file "mcc_generated_files/adcc.c"
 10615 ;; Parameters:    Size  Location     Type
 10616 ;;  InterruptHan    2    4[BANK1 ] PTR FTN()void 
 10617 ;;		 -> AdcHandler(1), ADCC_DefaultInterruptHandler(1), 
 10618 ;; Auto vars:     Size  Location     Type
 10619 ;;		None
 10620 ;; Return value:  Size  Location     Type
 10621 ;;                  1    wreg      void 
 10622 ;; Registers used:
 10623 ;;		wreg, status,2, status,0
 10624 ;; Tracked objects:
 10625 ;;		On entry : 3F/1
 10626 ;;		On exit  : 3F/1
 10627 ;;		Unchanged: 3F/0
 10628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10629 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10632 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10633 ;;Total ram usage:        2 bytes
 10634 ;; Hardware stack levels used:    1
 10635 ;; Hardware stack levels required when called:   16
 10636 ;; This function calls:
 10637 ;;		Nothing
 10638 ;; This function is called by:
 10639 ;;		_ADCC_Initialize
 10640 ;;		_AdcInit
 10641 ;; This function uses a non-reentrant model
 10642 ;;
 10643                           
 10644                           	psect	text53
 10645  00A24E                     __ptext53:
 10646                           	opt callstack 0
 10647  00A24E                     _ADCC_SetADTIInterruptHandler:
 10648                           	opt callstack 12
 10649                           
 10650                           ; BSR set to: 1
 10651                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 10652                           
 10653                           ; BSR set to: 62
 10654                           ;incstack = 0
 10655  00A24E  0060  F410  F2F3   	movff	ADCC_SetADTIInterruptHandler@InterruptHandler,_ADCC_ADTI_InterruptHandler
 10656  00A254  0060  F414  F2F4   	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+1,_ADCC_ADTI_InterruptHandler+1
 10657                           
 10658                           ; BSR set to: 1
 10659  00A25A  0012               	return		;funcret
 10660  00A25C                     __end_of_ADCC_SetADTIInterruptHandler:
 10661                           	opt callstack 0
 10662                           
 10663 ;; *************** function _MonitorEnable *****************
 10664 ;; Defined at:
 10665 ;;		line 272 in file "monitor.c"
 10666 ;; Parameters:    Size  Location     Type
 10667 ;;		None
 10668 ;; Auto vars:     Size  Location     Type
 10669 ;;		None
 10670 ;; Return value:  Size  Location     Type
 10671 ;;                  1    wreg      void 
 10672 ;; Registers used:
 10673 ;;		wreg, status,2
 10674 ;; Tracked objects:
 10675 ;;		On entry : 3F/3
 10676 ;;		On exit  : 3F/2
 10677 ;;		Unchanged: 0/0
 10678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10683 ;;Total ram usage:        0 bytes
 10684 ;; Hardware stack levels used:    1
 10685 ;; Hardware stack levels required when called:   16
 10686 ;; This function calls:
 10687 ;;		Nothing
 10688 ;; This function is called by:
 10689 ;;		_main
 10690 ;; This function uses a non-reentrant model
 10691 ;;
 10692                           
 10693                           	psect	text54
 10694  00A4E2                     __ptext54:
 10695                           	opt callstack 0
 10696  00A4E2                     _MonitorEnable:
 10697                           	opt callstack 14
 10698                           
 10699                           ; BSR set to: 3
 10700                           
 10701                           ; BSR set to: 1
 10702                           ;incstack = 0
 10703  00A4E2  0E01               	movlw	1
 10704  00A4E4  0102               	movlb	2	; () banked
 10705  00A4E6  6FA2               	movwf	monitor@enable& (0+255),b
 10706                           
 10707                           ; BSR set to: 2
 10708  00A4E8  0012               	return		;funcret
 10709  00A4EA                     __end_of_MonitorEnable:
 10710                           	opt callstack 0
 10711                           
 10712 ;; *************** function _MonitorDump *****************
 10713 ;; Defined at:
 10714 ;;		line 214 in file "monitor.c"
 10715 ;; Parameters:    Size  Location     Type
 10716 ;;		None
 10717 ;; Auto vars:     Size  Location     Type
 10718 ;;		None
 10719 ;; Return value:  Size  Location     Type
 10720 ;;                  1    wreg      void 
 10721 ;; Registers used:
 10722 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10723 ;; Tracked objects:
 10724 ;;		On entry : 3F/3
 10725 ;;		On exit  : 3F/2
 10726 ;;		Unchanged: 0/0
 10727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10732 ;;Total ram usage:        0 bytes
 10733 ;; Hardware stack levels used:    1
 10734 ;; Hardware stack levels required when called:   25
 10735 ;; This function calls:
 10736 ;;		_See12V
 10737 ;;		_See5V
 10738 ;;		___awdiv
 10739 ;;		_printf
 10740 ;; This function is called by:
 10741 ;;		_main
 10742 ;; This function uses a non-reentrant model
 10743 ;;
 10744                           
 10745                           	psect	text55
 10746  003104                     __ptext55:
 10747                           	opt callstack 0
 10748  003104                     _MonitorDump:
 10749                           	opt callstack 5
 10750                           
 10751                           ; BSR set to: 3
 10752                           ;monitor.c: 217:             printf("\r\nNew Breath: TT12: %d TT2: %d TT3: %d TT34: %d T
      +                          T4: %d TT1: %d ", tt12*2, tt2*2, tt3*2, tt34*2, tt4*2, tt1*2);
 10753                           
 10754                           ; BSR set to: 2
 10755                           ;incstack = 0
 10756  003104  0E57               	movlw	low STR_33
 10757  003106  0101               	movlb	1	; () banked
 10758  003108  6F71               	movwf	printf@fmt& (0+255),b
 10759  00310A  0EFC               	movlw	high STR_33
 10760  00310C  6F72               	movwf	(printf@fmt+1)& (0+255),b
 10761  00310E  90D8               	bcf	status,0,c
 10762  003110  0102               	movlb	2	; () banked
 10763  003112  3562               	rlcf	_tt12& (0+255),w,b
 10764  003114  0101               	movlb	1	; () banked
 10765  003116  6F73               	movwf	(?_printf+2)& (0+255),b
 10766  003118  0102               	movlb	2	; () banked
 10767  00311A  3563               	rlcf	(_tt12+1)& (0+255),w,b
 10768  00311C  0101               	movlb	1	; () banked
 10769  00311E  6F74               	movwf	(?_printf+3)& (0+255),b
 10770  003120  90D8               	bcf	status,0,c
 10771  003122  0100               	movlb	0	; () banked
 10772  003124  35DC               	rlcf	_tt2& (0+255),w,b
 10773  003126  0101               	movlb	1	; () banked
 10774  003128  6F75               	movwf	(?_printf+4)& (0+255),b
 10775  00312A  0100               	movlb	0	; () banked
 10776  00312C  35DD               	rlcf	(_tt2+1)& (0+255),w,b
 10777  00312E  0101               	movlb	1	; () banked
 10778  003130  6F76               	movwf	(?_printf+5)& (0+255),b
 10779  003132  90D8               	bcf	status,0,c
 10780  003134  35DD               	rlcf	_tt3& (0+255),w,b
 10781  003136  6F77               	movwf	(?_printf+6)& (0+255),b
 10782  003138  35DE               	rlcf	(_tt3+1)& (0+255),w,b
 10783  00313A  6F78               	movwf	(?_printf+7)& (0+255),b
 10784  00313C  90D8               	bcf	status,0,c
 10785  00313E  0102               	movlb	2	; () banked
 10786  003140  3560               	rlcf	_tt34& (0+255),w,b
 10787  003142  0101               	movlb	1	; () banked
 10788  003144  6F79               	movwf	(?_printf+8)& (0+255),b
 10789  003146  0102               	movlb	2	; () banked
 10790  003148  3561               	rlcf	(_tt34+1)& (0+255),w,b
 10791  00314A  0101               	movlb	1	; () banked
 10792  00314C  6F7A               	movwf	(?_printf+9)& (0+255),b
 10793  00314E  90D8               	bcf	status,0,c
 10794  003150  0100               	movlb	0	; () banked
 10795  003152  35DA               	rlcf	_tt4& (0+255),w,b
 10796  003154  0101               	movlb	1	; () banked
 10797  003156  6F7B               	movwf	(?_printf+10)& (0+255),b
 10798  003158  0100               	movlb	0	; () banked
 10799  00315A  35DB               	rlcf	(_tt4+1)& (0+255),w,b
 10800  00315C  0101               	movlb	1	; () banked
 10801  00315E  6F7C               	movwf	(?_printf+11)& (0+255),b
 10802  003160  90D8               	bcf	status,0,c
 10803  003162  0102               	movlb	2	; () banked
 10804  003164  3566               	rlcf	_tt1& (0+255),w,b
 10805  003166  0101               	movlb	1	; () banked
 10806  003168  6F7D               	movwf	(?_printf+12)& (0+255),b
 10807  00316A  0102               	movlb	2	; () banked
 10808  00316C  3567               	rlcf	(_tt1+1)& (0+255),w,b
 10809  00316E  0101               	movlb	1	; () banked
 10810  003170  6F7E               	movwf	(?_printf+13)& (0+255),b
 10811  003172  EC32  F04D         	call	_printf	;wreg free
 10812                           
 10813                           ;monitor.c: 218:             printf("TI: %d TE: %d TDI: %d TDE: %d\r\n", ti*2, te*2, tdi
      +                          *2, tde*2);
 10814  003176  0E47               	movlw	low STR_34
 10815  003178  0101               	movlb	1	; () banked
 10816  00317A  6F71               	movwf	printf@fmt& (0+255),b
 10817  00317C  0EFE               	movlw	high STR_34
 10818  00317E  6F72               	movwf	(printf@fmt+1)& (0+255),b
 10819  003180  90D8               	bcf	status,0,c
 10820  003182  0102               	movlb	2	; () banked
 10821  003184  355A               	rlcf	_ti& (0+255),w,b
 10822  003186  0101               	movlb	1	; () banked
 10823  003188  6F73               	movwf	(?_printf+2)& (0+255),b
 10824  00318A  0102               	movlb	2	; () banked
 10825  00318C  355B               	rlcf	(_ti+1)& (0+255),w,b
 10826  00318E  0101               	movlb	1	; () banked
 10827  003190  6F74               	movwf	(?_printf+3)& (0+255),b
 10828  003192  90D8               	bcf	status,0,c
 10829  003194  0102               	movlb	2	; () banked
 10830  003196  3558               	rlcf	_te& (0+255),w,b
 10831  003198  0101               	movlb	1	; () banked
 10832  00319A  6F75               	movwf	(?_printf+4)& (0+255),b
 10833  00319C  0102               	movlb	2	; () banked
 10834  00319E  3559               	rlcf	(_te+1)& (0+255),w,b
 10835  0031A0  0101               	movlb	1	; () banked
 10836  0031A2  6F76               	movwf	(?_printf+5)& (0+255),b
 10837  0031A4  90D8               	bcf	status,0,c
 10838  0031A6  35DB               	rlcf	_tdi& (0+255),w,b
 10839  0031A8  6F77               	movwf	(?_printf+6)& (0+255),b
 10840  0031AA  35DC               	rlcf	(_tdi+1)& (0+255),w,b
 10841  0031AC  6F78               	movwf	(?_printf+7)& (0+255),b
 10842  0031AE  90D8               	bcf	status,0,c
 10843  0031B0  35D9               	rlcf	_tde& (0+255),w,b
 10844  0031B2  6F79               	movwf	(?_printf+8)& (0+255),b
 10845  0031B4  35DA               	rlcf	(_tde+1)& (0+255),w,b
 10846  0031B6  6F7A               	movwf	(?_printf+9)& (0+255),b
 10847  0031B8  EC32  F04D         	call	_printf	;wreg free
 10848                           
 10849                           ;monitor.c: 219:             printf("   Pmax: %d lIP: %d IP: %d Phigh: %d -- ", pmax/5, 
      +                          lrpi/5, pi/5, pHigh/5);
 10850  0031BC  0E92               	movlw	low STR_35
 10851  0031BE  0101               	movlb	1	; () banked
 10852  0031C0  6F71               	movwf	printf@fmt& (0+255),b
 10853  0031C2  0EFD               	movlw	high STR_35
 10854  0031C4  6F72               	movwf	(printf@fmt+1)& (0+255),b
 10855  0031C6  0060  F360  F10A   	movff	_pmax,___awdiv@dividend
 10856  0031CC  0060  F364  F10B   	movff	_pmax+1,___awdiv@dividend+1
 10857  0031D2  0E00               	movlw	0
 10858  0031D4  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 10859  0031D6  0E05               	movlw	5
 10860  0031D8  6F0C               	movwf	___awdiv@divisor& (0+255),b
 10861  0031DA  ECB9  F03F         	call	___awdiv	;wreg free
 10862  0031DE  0060  F428  F173   	movff	?___awdiv,?_printf+2
 10863  0031E4  0060  F42C  F174   	movff	?___awdiv+1,?_printf+3
 10864  0031EA  0060  F744  F10A   	movff	_lrpi,___awdiv@dividend
 10865  0031F0  0060  F748  F10B   	movff	_lrpi+1,___awdiv@dividend+1
 10866  0031F6  0E00               	movlw	0
 10867  0031F8  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 10868  0031FA  0E05               	movlw	5
 10869  0031FC  6F0C               	movwf	___awdiv@divisor& (0+255),b
 10870  0031FE  ECB9  F03F         	call	___awdiv	;wreg free
 10871  003202  0060  F428  F175   	movff	?___awdiv,?_printf+4
 10872  003208  0060  F42C  F176   	movff	?___awdiv+1,?_printf+5
 10873  00320E  0060  F75C  F10A   	movff	_pi,___awdiv@dividend
 10874  003214  0060  F760  F10B   	movff	_pi+1,___awdiv@dividend+1
 10875  00321A  0E00               	movlw	0
 10876  00321C  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 10877  00321E  0E05               	movlw	5
 10878  003220  6F0C               	movwf	___awdiv@divisor& (0+255),b
 10879  003222  ECB9  F03F         	call	___awdiv	;wreg free
 10880  003226  0060  F428  F177   	movff	?___awdiv,?_printf+6
 10881  00322C  0060  F42C  F178   	movff	?___awdiv+1,?_printf+7
 10882  003232  0060  F74C  F10A   	movff	_pHigh,___awdiv@dividend
 10883  003238  0060  F750  F10B   	movff	_pHigh+1,___awdiv@dividend+1
 10884  00323E  0E00               	movlw	0
 10885  003240  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 10886  003242  0E05               	movlw	5
 10887  003244  6F0C               	movwf	___awdiv@divisor& (0+255),b
 10888  003246  ECB9  F03F         	call	___awdiv	;wreg free
 10889  00324A  0060  F428  F179   	movff	?___awdiv,?_printf+8
 10890  003250  0060  F42C  F17A   	movff	?___awdiv+1,?_printf+9
 10891  003256  EC32  F04D         	call	_printf	;wreg free
 10892                           
 10893                           ;monitor.c: 220:             printf("Pmin: %d lEP: %d EP: %d Plow:%d -- ", pmin/5, lrpe/
      +                          5, pe/5, pLow/5 );
 10894  00325A  0EE3               	movlw	low STR_36
 10895  00325C  0101               	movlb	1	; () banked
 10896  00325E  6F71               	movwf	printf@fmt& (0+255),b
 10897  003260  0EFD               	movlw	high STR_36
 10898  003262  6F72               	movwf	(printf@fmt+1)& (0+255),b
 10899  003264  0060  F950  F10A   	movff	_pmin,___awdiv@dividend
 10900  00326A  0060  F954  F10B   	movff	_pmin+1,___awdiv@dividend+1
 10901  003270  0E00               	movlw	0
 10902  003272  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 10903  003274  0E05               	movlw	5
 10904  003276  6F0C               	movwf	___awdiv@divisor& (0+255),b
 10905  003278  ECB9  F03F         	call	___awdiv	;wreg free
 10906  00327C  0060  F428  F173   	movff	?___awdiv,?_printf+2
 10907  003282  0060  F42C  F174   	movff	?___awdiv+1,?_printf+3
 10908  003288  0060  F350  F10A   	movff	_lrpe,___awdiv@dividend
 10909  00328E  0060  F354  F10B   	movff	_lrpe+1,___awdiv@dividend+1
 10910  003294  0E00               	movlw	0
 10911  003296  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 10912  003298  0E05               	movlw	5
 10913  00329A  6F0C               	movwf	___awdiv@divisor& (0+255),b
 10914  00329C  ECB9  F03F         	call	___awdiv	;wreg free
 10915  0032A0  0060  F428  F175   	movff	?___awdiv,?_printf+4
 10916  0032A6  0060  F42C  F176   	movff	?___awdiv+1,?_printf+5
 10917  0032AC  0060  F754  F10A   	movff	_pe,___awdiv@dividend
 10918  0032B2  0060  F758  F10B   	movff	_pe+1,___awdiv@dividend+1
 10919  0032B8  0E00               	movlw	0
 10920  0032BA  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 10921  0032BC  0E05               	movlw	5
 10922  0032BE  6F0C               	movwf	___awdiv@divisor& (0+255),b
 10923  0032C0  ECB9  F03F         	call	___awdiv	;wreg free
 10924  0032C4  0060  F428  F177   	movff	?___awdiv,?_printf+6
 10925  0032CA  0060  F42C  F178   	movff	?___awdiv+1,?_printf+7
 10926  0032D0  0060  F938  F10A   	movff	_pLow,___awdiv@dividend
 10927  0032D6  0060  F93C  F10B   	movff	_pLow+1,___awdiv@dividend+1
 10928  0032DC  0E00               	movlw	0
 10929  0032DE  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 10930  0032E0  0E05               	movlw	5
 10931  0032E2  6F0C               	movwf	___awdiv@divisor& (0+255),b
 10932  0032E4  ECB9  F03F         	call	___awdiv	;wreg free
 10933  0032E8  0060  F428  F179   	movff	?___awdiv,?_printf+8
 10934  0032EE  0060  F42C  F17A   	movff	?___awdiv+1,?_printf+9
 10935  0032F4  EC32  F04D         	call	_printf	;wreg free
 10936                           
 10937                           ;monitor.c: 221:             printf("HiLimit: %d LoLimit: %d -- Volume: %d\r\n", hiLimit
      +                          /5, loLimit/5, volume);
 10938  0032F8  0EBB               	movlw	low STR_37
 10939  0032FA  0101               	movlb	1	; () banked
 10940  0032FC  6F71               	movwf	printf@fmt& (0+255),b
 10941  0032FE  0EFD               	movlw	high STR_37
 10942  003300  6F72               	movwf	(printf@fmt+1)& (0+255),b
 10943  003302  0060  F73C  F10A   	movff	_hiLimit,___awdiv@dividend
 10944  003308  0060  F740  F10B   	movff	_hiLimit+1,___awdiv@dividend+1
 10945  00330E  0E00               	movlw	0
 10946  003310  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 10947  003312  0E05               	movlw	5
 10948  003314  6F0C               	movwf	___awdiv@divisor& (0+255),b
 10949  003316  ECB9  F03F         	call	___awdiv	;wreg free
 10950  00331A  0060  F428  F173   	movff	?___awdiv,?_printf+2
 10951  003320  0060  F42C  F174   	movff	?___awdiv+1,?_printf+3
 10952  003326  0060  F734  F10A   	movff	_loLimit,___awdiv@dividend
 10953  00332C  0060  F738  F10B   	movff	_loLimit+1,___awdiv@dividend+1
 10954  003332  0E00               	movlw	0
 10955  003334  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 10956  003336  0E05               	movlw	5
 10957  003338  6F0C               	movwf	___awdiv@divisor& (0+255),b
 10958  00333A  ECB9  F03F         	call	___awdiv	;wreg free
 10959  00333E  0060  F428  F175   	movff	?___awdiv,?_printf+4
 10960  003344  0060  F42C  F176   	movff	?___awdiv+1,?_printf+5
 10961  00334A  0060  F378  F177   	movff	_volume,?_printf+6
 10962  003350  0060  F37C  F178   	movff	_volume+1,?_printf+7
 10963  003356  EC32  F04D         	call	_printf	;wreg free
 10964                           
 10965                           ;monitor.c: 222:             printf("ADCoffset: %d ADCVoffset: %d 12V: %d mV 5V: %d mV -
      +                          - ", adcOffset/8, adcVOffset/8, See12V(), See5V());
 10966  00335A  0ECF               	movlw	low STR_38
 10967  00335C  0101               	movlb	1	; () banked
 10968  00335E  6F71               	movwf	printf@fmt& (0+255),b
 10969  003360  0EFC               	movlw	high STR_38
 10970  003362  6F72               	movwf	(printf@fmt+1)& (0+255),b
 10971  003364  0060  F7D8  F10A   	movff	_adcOffset,___awdiv@dividend
 10972  00336A  0060  F7DC  F10B   	movff	_adcOffset+1,___awdiv@dividend+1
 10973  003370  0E00               	movlw	0
 10974  003372  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 10975  003374  0E08               	movlw	8
 10976  003376  6F0C               	movwf	___awdiv@divisor& (0+255),b
 10977  003378  ECB9  F03F         	call	___awdiv	;wreg free
 10978  00337C  0060  F428  F173   	movff	?___awdiv,?_printf+2
 10979  003382  0060  F42C  F174   	movff	?___awdiv+1,?_printf+3
 10980  003388  0060  F7D0  F10A   	movff	_adcVOffset,___awdiv@dividend
 10981  00338E  0060  F7D4  F10B   	movff	_adcVOffset+1,___awdiv@dividend+1
 10982  003394  0E00               	movlw	0
 10983  003396  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 10984  003398  0E08               	movlw	8
 10985  00339A  6F0C               	movwf	___awdiv@divisor& (0+255),b
 10986  00339C  ECB9  F03F         	call	___awdiv	;wreg free
 10987  0033A0  0060  F428  F175   	movff	?___awdiv,?_printf+4
 10988  0033A6  0060  F42C  F176   	movff	?___awdiv+1,?_printf+5
 10989  0033AC  EC85  F03C         	call	_See12V	;wreg free
 10990  0033B0  0060  F478  F177   	movff	?_See12V,?_printf+6
 10991  0033B6  0060  F47C  F178   	movff	?_See12V+1,?_printf+7
 10992  0033BC  ECD4  F042         	call	_See5V	;wreg free
 10993  0033C0  0060  F478  F179   	movff	?_See5V,?_printf+8
 10994  0033C6  0060  F47C  F17A   	movff	?_See5V+1,?_printf+9
 10995  0033CC  EC32  F04D         	call	_printf	;wreg free
 10996                           
 10997                           ;monitor.c: 223:             printf("Targets: Pmax: %d IP: %d EP: %d V: %d/%d\r\n", targ
      +                          etPmax/5, targetHigh/5, targetLow/5, volumeMax, volumeMin);
 10998  0033D0  0E67               	movlw	low STR_39
 10999  0033D2  0101               	movlb	1	; () banked
 11000  0033D4  6F71               	movwf	printf@fmt& (0+255),b
 11001  0033D6  0EFD               	movlw	high STR_39
 11002  0033D8  6F72               	movwf	(printf@fmt+1)& (0+255),b
 11003  0033DA  0060  F9B8  F10A   	movff	_targetPmax,___awdiv@dividend
 11004  0033E0  0060  F9BC  F10B   	movff	_targetPmax+1,___awdiv@dividend+1
 11005  0033E6  0E00               	movlw	0
 11006  0033E8  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 11007  0033EA  0E05               	movlw	5
 11008  0033EC  6F0C               	movwf	___awdiv@divisor& (0+255),b
 11009  0033EE  ECB9  F03F         	call	___awdiv	;wreg free
 11010  0033F2  0060  F428  F173   	movff	?___awdiv,?_printf+2
 11011  0033F8  0060  F42C  F174   	movff	?___awdiv+1,?_printf+3
 11012  0033FE  0060  F78C  F10A   	movff	_targetHigh,___awdiv@dividend
 11013  003404  0060  F790  F10B   	movff	_targetHigh+1,___awdiv@dividend+1
 11014  00340A  0E00               	movlw	0
 11015  00340C  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 11016  00340E  0E05               	movlw	5
 11017  003410  6F0C               	movwf	___awdiv@divisor& (0+255),b
 11018  003412  ECB9  F03F         	call	___awdiv	;wreg free
 11019  003416  0060  F428  F175   	movff	?___awdiv,?_printf+4
 11020  00341C  0060  F42C  F176   	movff	?___awdiv+1,?_printf+5
 11021  003422  0060  F784  F10A   	movff	_targetLow,___awdiv@dividend
 11022  003428  0060  F788  F10B   	movff	_targetLow+1,___awdiv@dividend+1
 11023  00342E  0E00               	movlw	0
 11024  003430  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 11025  003432  0E05               	movlw	5
 11026  003434  6F0C               	movwf	___awdiv@divisor& (0+255),b
 11027  003436  ECB9  F03F         	call	___awdiv	;wreg free
 11028  00343A  0060  F428  F177   	movff	?___awdiv,?_printf+6
 11029  003440  0060  F42C  F178   	movff	?___awdiv+1,?_printf+7
 11030  003446  0060  F9A8  F179   	movff	_volumeMax,?_printf+8
 11031  00344C  0060  F9AC  F17A   	movff	_volumeMax+1,?_printf+9
 11032  003452  0060  F9A0  F17B   	movff	_volumeMin,?_printf+10
 11033  003458  0060  F9A4  F17C   	movff	_volumeMin+1,?_printf+11
 11034  00345E  EC32  F04D         	call	_printf	;wreg free
 11035                           
 11036                           ; BSR set to: 2
 11037  003462  0012               	return		;funcret
 11038  003464                     __end_of_MonitorDump:
 11039                           	opt callstack 0
 11040                           
 11041 ;; *************** function _See5V *****************
 11042 ;; Defined at:
 11043 ;;		line 840 in file "monitor.c"
 11044 ;; Parameters:    Size  Location     Type
 11045 ;;		None
 11046 ;; Auto vars:     Size  Location     Type
 11047 ;;  mv              4   32[BANK1 ] long 
 11048 ;;  v12             2   38[BANK1 ] short 
 11049 ;;  adc             2   36[BANK1 ] unsigned short 
 11050 ;; Return value:  Size  Location     Type
 11051 ;;                  2   30[BANK1 ] short 
 11052 ;; Registers used:
 11053 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11054 ;; Tracked objects:
 11055 ;;		On entry : 3F/1
 11056 ;;		On exit  : 3F/1
 11057 ;;		Unchanged: 0/0
 11058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11059 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11060 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11062 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11063 ;;Total ram usage:       10 bytes
 11064 ;; Hardware stack levels used:    1
 11065 ;; Hardware stack levels required when called:   18
 11066 ;; This function calls:
 11067 ;;		_AdcSeeData
 11068 ;;		___aldiv
 11069 ;; This function is called by:
 11070 ;;		_main
 11071 ;;		_MonitorDump
 11072 ;; This function uses a non-reentrant model
 11073 ;;
 11074                           
 11075                           	psect	text56
 11076  0085A8                     __ptext56:
 11077                           	opt callstack 0
 11078  0085A8                     _See5V:
 11079                           	opt callstack 12
 11080                           
 11081                           ; BSR set to: 1
 11082                           ;monitor.c: 841:     adc_result_t adc = AdcSeeData(1);
 11083                           
 11084                           ; BSR set to: 2
 11085                           ;incstack = 0
 11086  0085A8  0E00               	movlw	0
 11087  0085AA  6F0B               	movwf	(AdcSeeData@id+1)& (0+255),b
 11088  0085AC  0E01               	movlw	1
 11089  0085AE  6F0A               	movwf	AdcSeeData@id& (0+255),b
 11090  0085B0  EC94  F049         	call	_AdcSeeData	;wreg free
 11091  0085B4  0060  F428  F124   	movff	?_AdcSeeData,See5V@adc
 11092  0085BA  0060  F42C  F125   	movff	?_AdcSeeData+1,See5V@adc+1
 11093                           
 11094                           ; BSR set to: 1
 11095                           ;monitor.c: 842:     int32_t mv = adc;
 11096  0085C0  0060  F490  F120   	movff	See5V@adc,See5V@mv
 11097  0085C6  0060  F494  F121   	movff	See5V@adc+1,See5V@mv+1
 11098  0085CC  6B22               	clrf	(See5V@mv+2)& (0+255),b
 11099  0085CE  6B23               	clrf	(See5V@mv+3)& (0+255),b
 11100                           
 11101                           ; BSR set to: 1
 11102                           ;monitor.c: 845:     int16_t v12 = mv/2;
 11103  0085D0  0060  F480  F110   	movff	See5V@mv,___aldiv@dividend
 11104  0085D6  0060  F484  F111   	movff	See5V@mv+1,___aldiv@dividend+1
 11105  0085DC  0060  F488  F112   	movff	See5V@mv+2,___aldiv@dividend+2
 11106  0085E2  0060  F48C  F113   	movff	See5V@mv+3,___aldiv@dividend+3
 11107  0085E8  0E02               	movlw	2
 11108  0085EA  6F14               	movwf	___aldiv@divisor& (0+255),b
 11109  0085EC  0E00               	movlw	0
 11110  0085EE  6F15               	movwf	(___aldiv@divisor+1)& (0+255),b
 11111  0085F0  0E00               	movlw	0
 11112  0085F2  6F16               	movwf	(___aldiv@divisor+2)& (0+255),b
 11113  0085F4  0E00               	movlw	0
 11114  0085F6  6F17               	movwf	(___aldiv@divisor+3)& (0+255),b
 11115  0085F8  ECD0  F035         	call	___aldiv	;wreg free
 11116  0085FC  0060  F440  F126   	movff	?___aldiv,See5V@v12
 11117  008602  0060  F444  F127   	movff	?___aldiv+1,See5V@v12+1
 11118                           
 11119                           ; BSR set to: 1
 11120                           ;monitor.c: 846:     return v12;
 11121  008608  0060  F498  F11E   	movff	See5V@v12,?_See5V
 11122  00860E  0060  F49C  F11F   	movff	See5V@v12+1,?_See5V+1
 11123                           
 11124                           ; BSR set to: 1
 11125  008614  0012               	return		;funcret
 11126  008616                     __end_of_See5V:
 11127                           	opt callstack 0
 11128                           
 11129 ;; *************** function _See12V *****************
 11130 ;; Defined at:
 11131 ;;		line 857 in file "monitor.c"
 11132 ;; Parameters:    Size  Location     Type
 11133 ;;		None
 11134 ;; Auto vars:     Size  Location     Type
 11135 ;;  mv              4   32[BANK1 ] long 
 11136 ;;  v12             2   38[BANK1 ] short 
 11137 ;;  adc             2   36[BANK1 ] unsigned short 
 11138 ;; Return value:  Size  Location     Type
 11139 ;;                  2   30[BANK1 ] short 
 11140 ;; Registers used:
 11141 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11142 ;; Tracked objects:
 11143 ;;		On entry : 3F/1
 11144 ;;		On exit  : 3F/1
 11145 ;;		Unchanged: 0/0
 11146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11147 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11148 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11150 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11151 ;;Total ram usage:       10 bytes
 11152 ;; Hardware stack levels used:    1
 11153 ;; Hardware stack levels required when called:   18
 11154 ;; This function calls:
 11155 ;;		_AdcSeeData
 11156 ;;		___aldiv
 11157 ;;		___lmul
 11158 ;; This function is called by:
 11159 ;;		_main
 11160 ;;		_MonitorDump
 11161 ;; This function uses a non-reentrant model
 11162 ;;
 11163                           
 11164                           	psect	text57
 11165  00790A                     __ptext57:
 11166                           	opt callstack 0
 11167  00790A                     _See12V:
 11168                           	opt callstack 12
 11169                           
 11170                           ; BSR set to: 1
 11171                           ;monitor.c: 858:     adc_result_t adc = AdcSeeData(3);
 11172                           
 11173                           ; BSR set to: 1
 11174                           ;incstack = 0
 11175  00790A  0E00               	movlw	0
 11176  00790C  6F0B               	movwf	(AdcSeeData@id+1)& (0+255),b
 11177  00790E  0E03               	movlw	3
 11178  007910  6F0A               	movwf	AdcSeeData@id& (0+255),b
 11179  007912  EC94  F049         	call	_AdcSeeData	;wreg free
 11180  007916  0060  F428  F124   	movff	?_AdcSeeData,See12V@adc
 11181  00791C  0060  F42C  F125   	movff	?_AdcSeeData+1,See12V@adc+1
 11182                           
 11183                           ; BSR set to: 1
 11184                           ;monitor.c: 859:     int32_t mv = adc;
 11185  007922  0060  F490  F120   	movff	See12V@adc,See12V@mv
 11186  007928  0060  F494  F121   	movff	See12V@adc+1,See12V@mv+1
 11187  00792E  6B22               	clrf	(See12V@mv+2)& (0+255),b
 11188  007930  6B23               	clrf	(See12V@mv+3)& (0+255),b
 11189                           
 11190                           ; BSR set to: 1
 11191                           ;monitor.c: 861:     int16_t v12 = (mv*33)/10;
 11192  007932  0060  F480  F104   	movff	See12V@mv,___lmul@multiplier
 11193  007938  0060  F484  F105   	movff	See12V@mv+1,___lmul@multiplier+1
 11194  00793E  0060  F488  F106   	movff	See12V@mv+2,___lmul@multiplier+2
 11195  007944  0060  F48C  F107   	movff	See12V@mv+3,___lmul@multiplier+3
 11196  00794A  0E21               	movlw	33
 11197  00794C  6F08               	movwf	___lmul@multiplicand& (0+255),b
 11198  00794E  0E00               	movlw	0
 11199  007950  6F09               	movwf	(___lmul@multiplicand+1)& (0+255),b
 11200  007952  0E00               	movlw	0
 11201  007954  6F0A               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11202  007956  0E00               	movlw	0
 11203  007958  6F0B               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11204  00795A  ECAF  F045         	call	___lmul	;wreg free
 11205  00795E  0060  F410  F110   	movff	?___lmul,___aldiv@dividend
 11206  007964  0060  F414  F111   	movff	?___lmul+1,___aldiv@dividend+1
 11207  00796A  0060  F418  F112   	movff	?___lmul+2,___aldiv@dividend+2
 11208  007970  0060  F41C  F113   	movff	?___lmul+3,___aldiv@dividend+3
 11209  007976  0E0A               	movlw	10
 11210  007978  6F14               	movwf	___aldiv@divisor& (0+255),b
 11211  00797A  0E00               	movlw	0
 11212  00797C  6F15               	movwf	(___aldiv@divisor+1)& (0+255),b
 11213  00797E  0E00               	movlw	0
 11214  007980  6F16               	movwf	(___aldiv@divisor+2)& (0+255),b
 11215  007982  0E00               	movlw	0
 11216  007984  6F17               	movwf	(___aldiv@divisor+3)& (0+255),b
 11217  007986  ECD0  F035         	call	___aldiv	;wreg free
 11218  00798A  0060  F440  F126   	movff	?___aldiv,See12V@v12
 11219  007990  0060  F444  F127   	movff	?___aldiv+1,See12V@v12+1
 11220                           
 11221                           ; BSR set to: 1
 11222                           ;monitor.c: 862:     return v12;
 11223  007996  0060  F498  F11E   	movff	See12V@v12,?_See12V
 11224  00799C  0060  F49C  F11F   	movff	See12V@v12+1,?_See12V+1
 11225                           
 11226                           ; BSR set to: 1
 11227  0079A2  0012               	return		;funcret
 11228  0079A4                     __end_of_See12V:
 11229                           	opt callstack 0
 11230                           
 11231 ;; *************** function _AdcSeeData *****************
 11232 ;; Defined at:
 11233 ;;		line 82 in file "monitor.c"
 11234 ;; Parameters:    Size  Location     Type
 11235 ;;  id              2   10[BANK1 ] int 
 11236 ;; Auto vars:     Size  Location     Type
 11237 ;;  data            2   12[BANK1 ] unsigned short 
 11238 ;; Return value:  Size  Location     Type
 11239 ;;                  2   10[BANK1 ] unsigned short 
 11240 ;; Registers used:
 11241 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11242 ;; Tracked objects:
 11243 ;;		On entry : 3F/1
 11244 ;;		On exit  : 3F/1
 11245 ;;		Unchanged: 0/0
 11246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11247 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11248 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11250 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11251 ;;Total ram usage:        4 bytes
 11252 ;; Hardware stack levels used:    1
 11253 ;; Hardware stack levels required when called:   17
 11254 ;; This function calls:
 11255 ;;		___wmul
 11256 ;; This function is called by:
 11257 ;;		_SeePressure_pa
 11258 ;;		_SeePressureV_pa
 11259 ;;		_See5V
 11260 ;;		_See12V
 11261 ;; This function uses a non-reentrant model
 11262 ;;
 11263                           
 11264                           	psect	text58
 11265  009328                     __ptext58:
 11266                           	opt callstack 0
 11267  009328                     _AdcSeeData:
 11268                           	opt callstack 12
 11269                           
 11270                           ; BSR set to: 1
 11271                           ;monitor.c: 83:     adc_result_t data;;monitor.c: 84:     data = adcChannels[id].data;
 11272                           
 11273                           ; BSR set to: 1
 11274                           ;incstack = 0
 11275  009328  0060  F428  F104   	movff	AdcSeeData@id,___wmul@multiplier
 11276  00932E  0060  F42C  F105   	movff	AdcSeeData@id+1,___wmul@multiplier+1
 11277  009334  0E00               	movlw	0
 11278  009336  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11279  009338  0E05               	movlw	5
 11280  00933A  6F06               	movwf	___wmul@multiplicand& (0+255),b
 11281  00933C  EC7C  F04C         	call	___wmul	;wreg free
 11282  009340  0EBE               	movlw	low (_adcChannels+2)
 11283  009342  2504               	addwf	?___wmul& (0+255),w,b
 11284  009344  6ED9               	movwf	fsr2l,c
 11285  009346  0E02               	movlw	high (_adcChannels+2)
 11286  009348  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 11287  00934A  6EDA               	movwf	fsr2h,c
 11288  00934C  006F FF78  F10C    	movff	postinc2,AdcSeeData@data
 11289  009352  006F FF74  F10D    	movff	postdec2,AdcSeeData@data+1
 11290                           
 11291                           ; BSR set to: 1
 11292                           ;monitor.c: 86:     return data;
 11293  009358  0060  F430  F10A   	movff	AdcSeeData@data,?_AdcSeeData
 11294  00935E  0060  F434  F10B   	movff	AdcSeeData@data+1,?_AdcSeeData+1
 11295                           
 11296                           ; BSR set to: 1
 11297  009364  0012               	return		;funcret
 11298  009366                     __end_of_AdcSeeData:
 11299                           	opt callstack 0
 11300                           
 11301 ;; *************** function _MonitorDisable *****************
 11302 ;; Defined at:
 11303 ;;		line 273 in file "monitor.c"
 11304 ;; Parameters:    Size  Location     Type
 11305 ;;		None
 11306 ;; Auto vars:     Size  Location     Type
 11307 ;;		None
 11308 ;; Return value:  Size  Location     Type
 11309 ;;                  1    wreg      void 
 11310 ;; Registers used:
 11311 ;;		wreg, status,2
 11312 ;; Tracked objects:
 11313 ;;		On entry : 3F/3
 11314 ;;		On exit  : 3F/2
 11315 ;;		Unchanged: 0/0
 11316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11321 ;;Total ram usage:        0 bytes
 11322 ;; Hardware stack levels used:    1
 11323 ;; Hardware stack levels required when called:   16
 11324 ;; This function calls:
 11325 ;;		Nothing
 11326 ;; This function is called by:
 11327 ;;		_main
 11328 ;; This function uses a non-reentrant model
 11329 ;;
 11330                           
 11331                           	psect	text59
 11332  00A4EA                     __ptext59:
 11333                           	opt callstack 0
 11334  00A4EA                     _MonitorDisable:
 11335                           	opt callstack 14
 11336                           
 11337                           ; BSR set to: 3
 11338                           
 11339                           ; BSR set to: 1
 11340                           ;incstack = 0
 11341  00A4EA  0E00               	movlw	0
 11342  00A4EC  0102               	movlb	2	; () banked
 11343  00A4EE  6FA2               	movwf	monitor@enable& (0+255),b
 11344                           
 11345                           ; BSR set to: 2
 11346  00A4F0  0012               	return		;funcret
 11347  00A4F2                     __end_of_MonitorDisable:
 11348                           	opt callstack 0
 11349                           
 11350 ;; *************** function _LCDOn *****************
 11351 ;; Defined at:
 11352 ;;		line 119 in file "lcd.c"
 11353 ;; Parameters:    Size  Location     Type
 11354 ;;		None
 11355 ;; Auto vars:     Size  Location     Type
 11356 ;;		None
 11357 ;; Return value:  Size  Location     Type
 11358 ;;                  1    wreg      void 
 11359 ;; Registers used:
 11360 ;;		wreg, status,2
 11361 ;; Tracked objects:
 11362 ;;		On entry : 3E/2
 11363 ;;		On exit  : 3F/1
 11364 ;;		Unchanged: 0/0
 11365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11370 ;;Total ram usage:        0 bytes
 11371 ;; Hardware stack levels used:    1
 11372 ;; Hardware stack levels required when called:   16
 11373 ;; This function calls:
 11374 ;;		Nothing
 11375 ;; This function is called by:
 11376 ;;		_main
 11377 ;; This function uses a non-reentrant model
 11378 ;;
 11379                           
 11380                           	psect	text60
 11381  00A444                     __ptext60:
 11382                           	opt callstack 0
 11383  00A444                     _LCDOn:
 11384                           	opt callstack 14
 11385                           
 11386                           ;lcd.c: 120:     LED = 1;
 11387                           
 11388                           ; BSR set to: 2
 11389                           ;incstack = 0
 11390  00A444  0E01               	movlw	1
 11391  00A446  0101               	movlb	1	; () banked
 11392  00A448  6FF0               	movwf	_LED& (0+255),b
 11393                           
 11394                           ; BSR set to: 1
 11395  00A44A  8ABC               	bsf	188,5,c	;volatile
 11396                           
 11397                           ; BSR set to: 1
 11398  00A44C  0012               	return		;funcret
 11399  00A44E                     __end_of_LCDOn:
 11400                           	opt callstack 0
 11401                           
 11402 ;; *************** function _LCDOff *****************
 11403 ;; Defined at:
 11404 ;;		line 112 in file "lcd.c"
 11405 ;; Parameters:    Size  Location     Type
 11406 ;;		None
 11407 ;; Auto vars:     Size  Location     Type
 11408 ;;		None
 11409 ;; Return value:  Size  Location     Type
 11410 ;;                  1    wreg      void 
 11411 ;; Registers used:
 11412 ;;		wreg, status,2
 11413 ;; Tracked objects:
 11414 ;;		On entry : 3F/3
 11415 ;;		On exit  : 3F/1
 11416 ;;		Unchanged: 0/0
 11417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11422 ;;Total ram usage:        0 bytes
 11423 ;; Hardware stack levels used:    1
 11424 ;; Hardware stack levels required when called:   16
 11425 ;; This function calls:
 11426 ;;		Nothing
 11427 ;; This function is called by:
 11428 ;;		_main
 11429 ;; This function uses a non-reentrant model
 11430 ;;
 11431                           
 11432                           	psect	text61
 11433  00A44E                     __ptext61:
 11434                           	opt callstack 0
 11435  00A44E                     _LCDOff:
 11436                           	opt callstack 14
 11437                           
 11438                           ; BSR set to: 3
 11439                           ;lcd.c: 113:     LED = 0;
 11440                           
 11441                           ; BSR set to: 1
 11442                           ;incstack = 0
 11443  00A44E  0E00               	movlw	0
 11444  00A450  0101               	movlb	1	; () banked
 11445  00A452  6FF0               	movwf	_LED& (0+255),b
 11446                           
 11447                           ; BSR set to: 1
 11448  00A454  9ABC               	bcf	188,5,c	;volatile
 11449                           
 11450                           ; BSR set to: 1
 11451  00A456  0012               	return		;funcret
 11452  00A458                     __end_of_LCDOff:
 11453                           	opt callstack 0
 11454                           
 11455 ;; *************** function _InitDisplay *****************
 11456 ;; Defined at:
 11457 ;;		line 40 in file "display.c"
 11458 ;; Parameters:    Size  Location     Type
 11459 ;;		None
 11460 ;; Auto vars:     Size  Location     Type
 11461 ;;		None
 11462 ;; Return value:  Size  Location     Type
 11463 ;;                  1    wreg      void 
 11464 ;; Registers used:
 11465 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11466 ;; Tracked objects:
 11467 ;;		On entry : 3F/1
 11468 ;;		On exit  : 3F/0
 11469 ;;		Unchanged: 0/0
 11470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11475 ;;Total ram usage:        0 bytes
 11476 ;; Hardware stack levels used:    1
 11477 ;; Hardware stack levels required when called:   21
 11478 ;; This function calls:
 11479 ;;		_LCDInit
 11480 ;; This function is called by:
 11481 ;;		_main
 11482 ;; This function uses a non-reentrant model
 11483 ;;
 11484                           
 11485                           	psect	text62
 11486  00A3E4                     __ptext62:
 11487                           	opt callstack 0
 11488  00A3E4                     _InitDisplay:
 11489                           	opt callstack 9
 11490                           
 11491                           ; BSR set to: 1
 11492                           ;display.c: 41:     LCDInit();
 11493                           
 11494                           ; BSR set to: 1
 11495                           ;incstack = 0
 11496  00A3E4  EC80  F034         	call	_LCDInit	;wreg free
 11497                           
 11498                           ; BSR set to: 1
 11499                           ;display.c: 42:     calibrate=0;
 11500  00A3E8  0E00               	movlw	0
 11501  00A3EA  0100               	movlb	0	; () banked
 11502  00A3EC  6FFF               	movwf	_calibrate& (0+255),b
 11503                           
 11504                           ; BSR set to: 0
 11505  00A3EE  0012               	return		;funcret
 11506  00A3F0                     __end_of_InitDisplay:
 11507                           	opt callstack 0
 11508                           
 11509 ;; *************** function _LCDInit *****************
 11510 ;; Defined at:
 11511 ;;		line 38 in file "lcd.c"
 11512 ;; Parameters:    Size  Location     Type
 11513 ;;		None
 11514 ;; Auto vars:     Size  Location     Type
 11515 ;;		None
 11516 ;; Return value:  Size  Location     Type
 11517 ;;                  1    wreg      void 
 11518 ;; Registers used:
 11519 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11520 ;; Tracked objects:
 11521 ;;		On entry : 3F/1
 11522 ;;		On exit  : 3F/1
 11523 ;;		Unchanged: 0/0
 11524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11527 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11528 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11529 ;;Total ram usage:        2 bytes
 11530 ;; Hardware stack levels used:    1
 11531 ;; Hardware stack levels required when called:   20
 11532 ;; This function calls:
 11533 ;;		_LCDMessage
 11534 ;;		_LCDTest
 11535 ;;		_LCDWrite4
 11536 ;;		_LCDWriteCmd
 11537 ;; This function is called by:
 11538 ;;		_InitDisplay
 11539 ;; This function uses a non-reentrant model
 11540 ;;
 11541                           
 11542                           	psect	text63
 11543  006900                     __ptext63:
 11544                           	opt callstack 0
 11545  006900                     _LCDInit:
 11546                           	opt callstack 9
 11547                           
 11548                           ; BSR set to: 1
 11549                           ;lcd.c: 40:     _delay((unsigned long)((50)*(64000000/4000.0)));
 11550                           
 11551                           ; BSR set to: 0
 11552                           ;incstack = 0
 11553  006900  0E05               	movlw	5
 11554  006902  0101               	movlb	1	; () banked
 11555  006904  6F3D               	movwf	(??_LCDInit+1)& (0+255),b
 11556  006906  0E0F               	movlw	15
 11557  006908  6F3C               	movwf	??_LCDInit& (0+255),b
 11558  00690A  0EF1               	movlw	241
 11559  00690C                     u22757:
 11560  00690C  2EE8               	decfsz	wreg,f,c
 11561  00690E  D7FE               	bra	u22757
 11562  006910  2F3C               	decfsz	??_LCDInit& (0+255),f,b
 11563  006912  D7FC               	bra	u22757
 11564  006914  2F3D               	decfsz	(??_LCDInit+1)& (0+255),f,b
 11565  006916  D7FA               	bra	u22757
 11566                           
 11567                           ;lcd.c: 42:     LCDWrite4(0x30);
 11568  006918  0E30               	movlw	48
 11569  00691A  EC53  F048         	call	_LCDWrite4
 11570                           
 11571                           ;lcd.c: 43:     _delay((unsigned long)((5)*(64000000/4000.0)));
 11572  00691E  0E68               	movlw	104
 11573  006920  0101               	movlb	1	; () banked
 11574  006922  6F3C               	movwf	??_LCDInit& (0+255),b
 11575  006924  0EE4               	movlw	228
 11576  006926                     u22767:
 11577  006926  2EE8               	decfsz	wreg,f,c
 11578  006928  D7FE               	bra	u22767
 11579  00692A  2F3C               	decfsz	??_LCDInit& (0+255),f,b
 11580  00692C  D7FC               	bra	u22767
 11581  00692E  F000               	nop	
 11582                           
 11583                           ;lcd.c: 44:     LCDWrite4(0x30);
 11584  006930  0E30               	movlw	48
 11585  006932  EC53  F048         	call	_LCDWrite4
 11586                           
 11587                           ;lcd.c: 45:     _delay((unsigned long)((5)*(64000000/4000.0)));
 11588  006936  0E68               	movlw	104
 11589  006938  0101               	movlb	1	; () banked
 11590  00693A  6F3C               	movwf	??_LCDInit& (0+255),b
 11591  00693C  0EE4               	movlw	228
 11592  00693E                     u22777:
 11593  00693E  2EE8               	decfsz	wreg,f,c
 11594  006940  D7FE               	bra	u22777
 11595  006942  2F3C               	decfsz	??_LCDInit& (0+255),f,b
 11596  006944  D7FC               	bra	u22777
 11597  006946  F000               	nop	
 11598                           
 11599                           ;lcd.c: 46:     LCDWrite4(0x30);
 11600  006948  0E30               	movlw	48
 11601  00694A  EC53  F048         	call	_LCDWrite4
 11602                           
 11603                           ;lcd.c: 47:     _delay((unsigned long)((1)*(64000000/4000.0)));
 11604  00694E  0E15               	movlw	21
 11605  006950  0101               	movlb	1	; () banked
 11606  006952  6F3C               	movwf	??_LCDInit& (0+255),b
 11607  006954  0EC6               	movlw	198
 11608  006956                     u22787:
 11609  006956  2EE8               	decfsz	wreg,f,c
 11610  006958  D7FE               	bra	u22787
 11611  00695A  2F3C               	decfsz	??_LCDInit& (0+255),f,b
 11612  00695C  D7FC               	bra	u22787
 11613  00695E  F000               	nop	
 11614                           
 11615                           ;lcd.c: 48:     LCDWrite4(0x20);
 11616  006960  0E20               	movlw	32
 11617  006962  EC53  F048         	call	_LCDWrite4
 11618                           
 11619                           ;lcd.c: 50:     LCDWriteCmd(0x28);
 11620  006966  0E28               	movlw	40
 11621  006968  EC05  F03E         	call	_LCDWriteCmd
 11622                           
 11623                           ;lcd.c: 51:     LCDWriteCmd(0x08);
 11624  00696C  0E08               	movlw	8
 11625  00696E  EC05  F03E         	call	_LCDWriteCmd
 11626                           
 11627                           ;lcd.c: 52:     LCDWriteCmd(0x01);
 11628  006972  0E01               	movlw	1
 11629  006974  EC05  F03E         	call	_LCDWriteCmd
 11630                           
 11631                           ;lcd.c: 53:     _delay((unsigned long)((2)*(64000000/4000.0)));
 11632  006978  0E2A               	movlw	42
 11633  00697A  0101               	movlb	1	; () banked
 11634  00697C  6F3C               	movwf	??_LCDInit& (0+255),b
 11635  00697E  0E8D               	movlw	141
 11636  006980                     u22797:
 11637  006980  2EE8               	decfsz	wreg,f,c
 11638  006982  D7FE               	bra	u22797
 11639  006984  2F3C               	decfsz	??_LCDInit& (0+255),f,b
 11640  006986  D7FC               	bra	u22797
 11641  006988  D000               	nop2	
 11642                           
 11643                           ;lcd.c: 54:     LCDWriteCmd(0x06);
 11644  00698A  0E06               	movlw	6
 11645  00698C  EC05  F03E         	call	_LCDWriteCmd
 11646                           
 11647                           ;lcd.c: 56:     LCDWriteCmd(0x0C);
 11648  006990  0E0C               	movlw	12
 11649  006992  EC05  F03E         	call	_LCDWriteCmd
 11650                           
 11651                           ;lcd.c: 57:     LCDWriteCmd(0x02);
 11652  006996  0E02               	movlw	2
 11653  006998  EC05  F03E         	call	_LCDWriteCmd
 11654                           
 11655                           ;lcd.c: 59:     LCDMessage("Emerg Respirator");
 11656  00699C  0EF0               	movlw	low STR_5
 11657  00699E  0101               	movlb	1	; () banked
 11658  0069A0  6F08               	movwf	LCDMessage@str& (0+255),b
 11659  0069A2  0EFE               	movlw	high STR_5
 11660  0069A4  6F09               	movwf	(LCDMessage@str+1)& (0+255),b
 11661  0069A6  ECE4  F03B         	call	_LCDMessage	;wreg free
 11662                           
 11663                           ; BSR set to: 1
 11664                           ;lcd.c: 60:     LCDWriteCmd(0xC0);
 11665  0069AA  0EC0               	movlw	192
 11666  0069AC  EC05  F03E         	call	_LCDWriteCmd
 11667                           
 11668                           ;lcd.c: 61:     LCDMessage("    OxyVita     ");
 11669  0069B0  0EDF               	movlw	low STR_6
 11670  0069B2  0101               	movlb	1	; () banked
 11671  0069B4  6F08               	movwf	LCDMessage@str& (0+255),b
 11672  0069B6  0EFE               	movlw	high STR_6
 11673  0069B8  6F09               	movwf	(LCDMessage@str+1)& (0+255),b
 11674  0069BA  ECE4  F03B         	call	_LCDMessage	;wreg free
 11675                           
 11676                           ; BSR set to: 1
 11677                           ;lcd.c: 62:     LCDWriteCmd(0x02);
 11678  0069BE  0E02               	movlw	2
 11679  0069C0  EC05  F03E         	call	_LCDWriteCmd
 11680                           
 11681                           ;lcd.c: 63:     _delay((unsigned long)((750)*(64000000/4000.0)));
 11682  0069C4  0E3D               	movlw	61
 11683  0069C6  0101               	movlb	1	; () banked
 11684  0069C8  6F3D               	movwf	(??_LCDInit+1)& (0+255),b
 11685  0069CA  0EE1               	movlw	225
 11686  0069CC  6F3C               	movwf	??_LCDInit& (0+255),b
 11687  0069CE  0E3F               	movlw	63
 11688  0069D0                     u22807:
 11689  0069D0  2EE8               	decfsz	wreg,f,c
 11690  0069D2  D7FE               	bra	u22807
 11691  0069D4  2F3C               	decfsz	??_LCDInit& (0+255),f,b
 11692  0069D6  D7FC               	bra	u22807
 11693  0069D8  2F3D               	decfsz	(??_LCDInit+1)& (0+255),f,b
 11694  0069DA  D7FA               	bra	u22807
 11695  0069DC  D000               	nop2	
 11696                           
 11697                           ;lcd.c: 65:     LCDTest();
 11698  0069DE  ECE6  F03E         	call	_LCDTest	;wreg free
 11699                           
 11700                           ; BSR set to: 1
 11701  0069E2  0012               	return		;funcret
 11702  0069E4                     __end_of_LCDInit:
 11703                           	opt callstack 0
 11704                           
 11705 ;; *************** function _LCDWrite4 *****************
 11706 ;; Defined at:
 11707 ;;		line 196 in file "lcd.c"
 11708 ;; Parameters:    Size  Location     Type
 11709 ;;  chr             1    wreg     unsigned char 
 11710 ;; Auto vars:     Size  Location     Type
 11711 ;;  chr             1    4[BANK1 ] unsigned char 
 11712 ;; Return value:  Size  Location     Type
 11713 ;;                  1    wreg      void 
 11714 ;; Registers used:
 11715 ;;		wreg, status,2, cstack
 11716 ;; Tracked objects:
 11717 ;;		On entry : 0/1
 11718 ;;		On exit  : 0/0
 11719 ;;		Unchanged: 0/0
 11720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11722 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11724 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11725 ;;Total ram usage:        1 bytes
 11726 ;; Hardware stack levels used:    1
 11727 ;; Hardware stack levels required when called:   16
 11728 ;; This function calls:
 11729 ;;		Nothing
 11730 ;; This function is called by:
 11731 ;;		_LCDInit
 11732 ;; This function uses a non-reentrant model
 11733 ;;
 11734                           
 11735                           	psect	text64
 11736  0090A6                     __ptext64:
 11737                           	opt callstack 0
 11738  0090A6                     _LCDWrite4:
 11739                           	opt callstack 12
 11740                           
 11741                           ; BSR set to: 1
 11742                           ;incstack = 0
 11743                           ;LCDWrite4@chr stored from wreg
 11744  0090A6  0101               	movlb	1	; () banked
 11745  0090A8  6F04               	movwf	LCDWrite4@chr& (0+255),b
 11746                           
 11747                           ;lcd.c: 196: void LCDWrite4(uint8_t chr);lcd.c: 197: {;lcd.c: 208:     if (chr&0x80) do 
      +                          { LATDbits.LATD7 = 1; } while(0); else do { LATDbits.LATD7 = 0; } while(0);
 11748  0090AA  0101               	movlb	1	; () banked
 11749  0090AC  AF04               	btfss	LCDWrite4@chr& (0+255),7,b
 11750  0090AE  D002               	goto	l1710
 11751                           
 11752                           ; BSR set to: 1
 11753  0090B0  8EBD               	bsf	189,7,c	;volatile
 11754  0090B2  D001               	goto	l19341
 11755  0090B4                     l1710:
 11756                           
 11757                           ; BSR set to: 1
 11758  0090B4  9EBD               	bcf	189,7,c	;volatile
 11759  0090B6                     l19341:
 11760                           
 11761                           ; BSR set to: 1
 11762                           ;lcd.c: 209:     if (chr&0x40) do { LATDbits.LATD6 = 1; } while(0); else do { LATDbits.L
      +                          ATD6 = 0; } while(0);
 11763  0090B6  AD04               	btfss	LCDWrite4@chr& (0+255),6,b
 11764  0090B8  D002               	goto	l1716
 11765                           
 11766                           ; BSR set to: 1
 11767  0090BA  8CBD               	bsf	189,6,c	;volatile
 11768  0090BC  D001               	goto	l19343
 11769  0090BE                     l1716:
 11770                           
 11771                           ; BSR set to: 1
 11772  0090BE  9CBD               	bcf	189,6,c	;volatile
 11773  0090C0                     l19343:
 11774                           
 11775                           ; BSR set to: 1
 11776                           ;lcd.c: 210:     if (chr&0x20) do { LATDbits.LATD5 = 1; } while(0); else do { LATDbits.L
      +                          ATD5 = 0; } while(0);
 11777  0090C0  AB04               	btfss	LCDWrite4@chr& (0+255),5,b
 11778  0090C2  D002               	goto	l1722
 11779                           
 11780                           ; BSR set to: 1
 11781  0090C4  8ABD               	bsf	189,5,c	;volatile
 11782  0090C6  D001               	goto	l19345
 11783  0090C8                     l1722:
 11784                           
 11785                           ; BSR set to: 1
 11786  0090C8  9ABD               	bcf	189,5,c	;volatile
 11787  0090CA                     l19345:
 11788                           
 11789                           ; BSR set to: 1
 11790                           ;lcd.c: 211:     if (chr&0x10) do { LATDbits.LATD4 = 1; } while(0); else do { LATDbits.L
      +                          ATD4 = 0; } while(0);
 11791  0090CA  A904               	btfss	LCDWrite4@chr& (0+255),4,b
 11792  0090CC  D002               	goto	l1728
 11793                           
 11794                           ; BSR set to: 1
 11795  0090CE  88BD               	bsf	189,4,c	;volatile
 11796  0090D0  D001               	goto	l1730
 11797  0090D2                     l1728:
 11798                           
 11799                           ; BSR set to: 1
 11800  0090D2  98BD               	bcf	189,4,c	;volatile
 11801  0090D4                     l1730:
 11802                           
 11803                           ; BSR set to: 1
 11804  0090D4  9CBC               	bcf	188,6,c	;volatile
 11805                           
 11806                           ; BSR set to: 1
 11807                           ;lcd.c: 214:     _delay((unsigned long)((5)*(64000000/4000000.0)));
 11808  0090D6  0E1A               	movlw	26
 11809  0090D8                     u22817:
 11810  0090D8  2EE8               	decfsz	wreg,f,c
 11811  0090DA  D7FE               	bra	u22817
 11812  0090DC  D000               	nop2	
 11813  0090DE  8EBC               	bsf	188,7,c	;volatile
 11814                           
 11815                           ;lcd.c: 216:  _delay((unsigned long)((10)*(64000000/4000000.0)));
 11816  0090E0  0E35               	movlw	53
 11817  0090E2                     u22827:
 11818  0090E2  2EE8               	decfsz	wreg,f,c
 11819  0090E4  D7FE               	bra	u22827
 11820  0090E6  F000               	nop	
 11821  0090E8  9EBC               	bcf	188,7,c	;volatile
 11822                           
 11823                           ;lcd.c: 218:  _delay((unsigned long)((38)*(64000000/4000000.0)));
 11824  0090EA  0ECA               	movlw	202
 11825  0090EC                     u22837:
 11826  0090EC  2EE8               	decfsz	wreg,f,c
 11827  0090EE  D7FE               	bra	u22837
 11828  0090F0  D000               	nop2	
 11829  0090F2  0012               	return		;funcret
 11830  0090F4                     __end_of_LCDWrite4:
 11831                           	opt callstack 0
 11832                           
 11833 ;; *************** function _LCDTest *****************
 11834 ;; Defined at:
 11835 ;;		line 77 in file "lcd.c"
 11836 ;; Parameters:    Size  Location     Type
 11837 ;;		None
 11838 ;; Auto vars:     Size  Location     Type
 11839 ;;  j               2   58[BANK1 ] int 
 11840 ;;  i               2   56[BANK1 ] int 
 11841 ;;  msg2           17   39[BANK1 ] unsigned char [17]
 11842 ;;  msg1           17   22[BANK1 ] unsigned char [17]
 11843 ;; Return value:  Size  Location     Type
 11844 ;;                  1    wreg      void 
 11845 ;; Registers used:
 11846 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11847 ;; Tracked objects:
 11848 ;;		On entry : 0/1
 11849 ;;		On exit  : 3F/1
 11850 ;;		Unchanged: 0/0
 11851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11853 ;;      Locals:         0       0      38       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11854 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11855 ;;      Totals:         0       0      40       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11856 ;;Total ram usage:       40 bytes
 11857 ;; Hardware stack levels used:    1
 11858 ;; Hardware stack levels required when called:   19
 11859 ;; This function calls:
 11860 ;;		_LCDMessage12
 11861 ;; This function is called by:
 11862 ;;		_LCDInit
 11863 ;; This function uses a non-reentrant model
 11864 ;;
 11865                           
 11866                           	psect	text65
 11867  007DCC                     __ptext65:
 11868                           	opt callstack 0
 11869  007DCC                     _LCDTest:
 11870                           	opt callstack 9
 11871                           
 11872                           ;lcd.c: 78:     char msg1[17];;lcd.c: 79:     char msg2[17];;lcd.c: 81:     for (int i=0
      +                          ; i<9; i++) {
 11873                           
 11874                           ;incstack = 0
 11875  007DCC  0E00               	movlw	0
 11876  007DCE  0101               	movlb	1	; () banked
 11877  007DD0  6F39               	movwf	(LCDTest@i+1)& (0+255),b
 11878  007DD2  0E00               	movlw	0
 11879  007DD4  6F38               	movwf	LCDTest@i& (0+255),b
 11880  007DD6                     l19359:
 11881                           
 11882                           ; BSR set to: 1
 11883                           ;lcd.c: 82:         for (int j=0; j<17; j++) {
 11884  007DD6  0E00               	movlw	0
 11885  007DD8  6F3B               	movwf	(LCDTest@j+1)& (0+255),b
 11886  007DDA  0E00               	movlw	0
 11887  007DDC  6F3A               	movwf	LCDTest@j& (0+255),b
 11888  007DDE                     l19365:
 11889                           
 11890                           ; BSR set to: 1
 11891                           ;lcd.c: 83:             msg1[j] = '0' + i; msg2[j] = '0' + i + 1;
 11892  007DDE  0E16               	movlw	low LCDTest@msg1
 11893  007DE0  253A               	addwf	LCDTest@j& (0+255),w,b
 11894  007DE2  6ED9               	movwf	fsr2l,c
 11895  007DE4  0E01               	movlw	high LCDTest@msg1
 11896  007DE6  213B               	addwfc	(LCDTest@j+1)& (0+255),w,b
 11897  007DE8  6EDA               	movwf	fsr2h,c
 11898  007DEA  5138               	movf	LCDTest@i& (0+255),w,b
 11899  007DEC  0F30               	addlw	48
 11900  007DEE  6EDF               	movwf	indf2,c
 11901  007DF0  0E27               	movlw	low LCDTest@msg2
 11902  007DF2  253A               	addwf	LCDTest@j& (0+255),w,b
 11903  007DF4  6ED9               	movwf	fsr2l,c
 11904  007DF6  0E01               	movlw	high LCDTest@msg2
 11905  007DF8  213B               	addwfc	(LCDTest@j+1)& (0+255),w,b
 11906  007DFA  6EDA               	movwf	fsr2h,c
 11907  007DFC  5138               	movf	LCDTest@i& (0+255),w,b
 11908  007DFE  0F31               	addlw	49
 11909  007E00  6EDF               	movwf	indf2,c
 11910                           
 11911                           ; BSR set to: 1
 11912                           ;lcd.c: 84:         }
 11913  007E02  4B3A               	infsnz	LCDTest@j& (0+255),f,b
 11914  007E04  2B3B               	incf	(LCDTest@j+1)& (0+255),f,b
 11915                           
 11916                           ; BSR set to: 1
 11917  007E06  BF3B               	btfsc	(LCDTest@j+1)& (0+255),7,b
 11918  007E08  D7EA               	goto	l19365
 11919  007E0A  513B               	movf	(LCDTest@j+1)& (0+255),w,b
 11920  007E0C  E104               	bnz	u19030
 11921  007E0E  0E11               	movlw	17
 11922  007E10  5D3A               	subwf	LCDTest@j& (0+255),w,b
 11923  007E12  A0D8               	btfss	status,0,c
 11924  007E14  D7E4               	goto	l19365
 11925  007E16                     u19030:
 11926                           
 11927                           ; BSR set to: 1
 11928                           ;lcd.c: 85:         LCDMessage12(msg1,msg2);
 11929  007E16  0E16               	movlw	low LCDTest@msg1
 11930  007E18  6F10               	movwf	LCDMessage12@str1& (0+255),b
 11931  007E1A  0E01               	movlw	high LCDTest@msg1
 11932  007E1C  6F11               	movwf	(LCDMessage12@str1+1)& (0+255),b
 11933  007E1E  0E27               	movlw	low LCDTest@msg2
 11934  007E20  6F12               	movwf	LCDMessage12@str2& (0+255),b
 11935  007E22  0E01               	movlw	high LCDTest@msg2
 11936  007E24  6F13               	movwf	(LCDMessage12@str2+1)& (0+255),b
 11937  007E26  ECB3  F049         	call	_LCDMessage12	;wreg free
 11938                           
 11939                           ; BSR set to: 1
 11940                           ;lcd.c: 86:         _delay((unsigned long)((500)*(64000000/4000.0)));
 11941  007E2A  0E29               	movlw	41
 11942  007E2C  0101               	movlb	1	; () banked
 11943  007E2E  6F15               	movwf	(??_LCDTest+1)& (0+255),b
 11944  007E30  0E96               	movlw	150
 11945  007E32  6F14               	movwf	??_LCDTest& (0+255),b
 11946  007E34  0E7F               	movlw	127
 11947  007E36                     u22847:
 11948  007E36  2EE8               	decfsz	wreg,f,c
 11949  007E38  D7FE               	bra	u22847
 11950  007E3A  2F14               	decfsz	??_LCDTest& (0+255),f,b
 11951  007E3C  D7FC               	bra	u22847
 11952  007E3E  2F15               	decfsz	(??_LCDTest+1)& (0+255),f,b
 11953  007E40  D7FA               	bra	u22847
 11954                           
 11955                           ;lcd.c: 87:     }
 11956  007E42  0101               	movlb	1	; () banked
 11957  007E44  4B38               	infsnz	LCDTest@i& (0+255),f,b
 11958  007E46  2B39               	incf	(LCDTest@i+1)& (0+255),f,b
 11959                           
 11960                           ; BSR set to: 1
 11961  007E48  BF39               	btfsc	(LCDTest@i+1)& (0+255),7,b
 11962  007E4A  D7C5               	goto	l19359
 11963  007E4C  5139               	movf	(LCDTest@i+1)& (0+255),w,b
 11964  007E4E  E105               	bnz	u19040
 11965  007E50  0E09               	movlw	9
 11966  007E52  5D38               	subwf	LCDTest@i& (0+255),w,b
 11967  007E54  B0D8               	btfsc	status,0,c
 11968  007E56  0012               	return	
 11969  007E58  D7BE               	goto	l19359
 11970  007E5A                     u19040:
 11971                           
 11972                           ; BSR set to: 1
 11973  007E5A  0012               	return		;funcret
 11974  007E5C                     __end_of_LCDTest:
 11975                           	opt callstack 0
 11976                           
 11977 ;; *************** function _HistAlarm *****************
 11978 ;; Defined at:
 11979 ;;		line 465 in file "alarm.c"
 11980 ;; Parameters:    Size  Location     Type
 11981 ;;		None
 11982 ;; Auto vars:     Size  Location     Type
 11983 ;;  i               2    2[BANK2 ] int 
 11984 ;; Return value:  Size  Location     Type
 11985 ;;                  1    wreg      void 
 11986 ;; Registers used:
 11987 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11988 ;; Tracked objects:
 11989 ;;		On entry : 3F/3
 11990 ;;		On exit  : 3C/0
 11991 ;;		Unchanged: 0/0
 11992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11994 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11995 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11996 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11997 ;;Total ram usage:        4 bytes
 11998 ;; Hardware stack levels used:    1
 11999 ;; Hardware stack levels required when called:   28
 12000 ;; This function calls:
 12001 ;;		_AlarmUpdateLCD
 12002 ;;		_TMR5_StartTimer
 12003 ;;		_TMR5_StopTimer
 12004 ;; This function is called by:
 12005 ;;		_main
 12006 ;; This function uses a non-reentrant model
 12007 ;;
 12008                           
 12009                           	psect	text66
 12010  006500                     __ptext66:
 12011                           	opt callstack 0
 12012  006500                     _HistAlarm:
 12013                           	opt callstack 2
 12014                           
 12015                           ; BSR set to: 3
 12016                           ;alarm.c: 466:     TMR5_StopTimer();
 12017                           
 12018                           ; BSR set to: 1
 12019                           ;incstack = 0
 12020  006500  EC43  F053         	call	_TMR5_StopTimer	;wreg free
 12021                           
 12022                           ; BSR set to: 3
 12023                           ;alarm.c: 467:     int i;;alarm.c: 469:     if (histSec == 0 ) {
 12024  006504  0101               	movlb	1	; () banked
 12025  006506  51E9               	movf	_histSec& (0+255),w,b
 12026  006508  11EA               	iorwf	(_histSec+1)& (0+255),w,b
 12027  00650A  A4D8               	btfss	status,2,c
 12028  00650C  D02E               	goto	l22087
 12029                           
 12030                           ; BSR set to: 1
 12031                           ;alarm.c: 471:         for (i=0; i<sizeof(alarmData)/sizeof(a); i++) {
 12032  00650E  0E00               	movlw	0
 12033  006510  0102               	movlb	2	; () banked
 12034  006512  6FF8               	movwf	(HistAlarm@i+1)& (0+255),b
 12035  006514  0E00               	movlw	0
 12036  006516  6FF7               	movwf	HistAlarm@i& (0+255),b
 12037  006518                     l22069:
 12038                           
 12039                           ; BSR set to: 2
 12040                           ;alarm.c: 472:             if (alarms[i]) break;
 12041  006518  90D8               	bcf	status,0,c
 12042  00651A  35F7               	rlcf	HistAlarm@i& (0+255),w,b
 12043  00651C  6ED9               	movwf	fsr2l,c
 12044  00651E  35F8               	rlcf	(HistAlarm@i+1)& (0+255),w,b
 12045  006520  6EDA               	movwf	fsr2h,c
 12046  006522  0E00               	movlw	low _alarms
 12047  006524  26D9               	addwf	fsr2l,f,c
 12048  006526  0E03               	movlw	high _alarms
 12049  006528  22DA               	addwfc	fsr2h,f,c
 12050  00652A  50DE               	movf	postinc2,w,c
 12051  00652C  10DE               	iorwf	postinc2,w,c
 12052  00652E  A4D8               	btfss	status,2,c
 12053  006530  D008               	goto	u21700
 12054                           
 12055                           ; BSR set to: 2
 12056                           ;alarm.c: 473:         }
 12057  006532  4BF7               	infsnz	HistAlarm@i& (0+255),f,b
 12058  006534  2BF8               	incf	(HistAlarm@i+1)& (0+255),f,b
 12059                           
 12060                           ; BSR set to: 2
 12061  006536  51F8               	movf	(HistAlarm@i+1)& (0+255),w,b
 12062  006538  E104               	bnz	u21700
 12063  00653A  0E13               	movlw	19
 12064  00653C  5DF7               	subwf	HistAlarm@i& (0+255),w,b
 12065  00653E  A0D8               	btfss	status,0,c
 12066  006540  D7EB               	goto	l22069
 12067  006542                     u21700:
 12068                           
 12069                           ; BSR set to: 2
 12070                           ;alarm.c: 475:         if (i == sizeof(alarmData)/sizeof(a)) {
 12071  006542  0E13               	movlw	19
 12072  006544  19F7               	xorwf	HistAlarm@i& (0+255),w,b
 12073  006546  11F8               	iorwf	(HistAlarm@i+1)& (0+255),w,b
 12074  006548  A4D8               	btfss	status,2,c
 12075  00654A  D003               	goto	l22083
 12076  00654C                     u21710:
 12077                           
 12078                           ;alarm.c: 476:             TMR5_StartTimer();
 12079  00654C  EC49  F053         	call	_TMR5_StartTimer	;wreg free
 12080  006550  0012               	return	
 12081  006552                     l22083:
 12082                           
 12083                           ; BSR set to: 2
 12084                           ;alarm.c: 479:         histSec = 5;
 12085  006552  0E00               	movlw	0
 12086  006554  0101               	movlb	1	; () banked
 12087  006556  6FEA               	movwf	(_histSec+1)& (0+255),b
 12088  006558  0E05               	movlw	5
 12089  00655A  6FE9               	movwf	_histSec& (0+255),b
 12090                           
 12091                           ; BSR set to: 1
 12092                           ;alarm.c: 480:         hist=i;
 12093  00655C  0060  FBDC  F1E7   	movff	HistAlarm@i,_hist
 12094  006562  0060  FBE0  F1E8   	movff	HistAlarm@i+1,_hist+1
 12095                           
 12096                           ;alarm.c: 481:     } else {
 12097  006568  D04C               	goto	l22127
 12098  00656A                     l22087:
 12099                           
 12100                           ; BSR set to: 1
 12101                           ;alarm.c: 484:         for (i=hist+1; i<sizeof(alarmData)/sizeof(a); i++) {
 12102  00656A  0E01               	movlw	1
 12103  00656C  25E7               	addwf	_hist& (0+255),w,b
 12104  00656E  0102               	movlb	2	; () banked
 12105  006570  6FF7               	movwf	HistAlarm@i& (0+255),b
 12106  006572  0E00               	movlw	0
 12107  006574  0101               	movlb	1	; () banked
 12108  006576  21E8               	addwfc	(_hist+1)& (0+255),w,b
 12109  006578  0102               	movlb	2	; () banked
 12110  00657A  6FF8               	movwf	(HistAlarm@i+1)& (0+255),b
 12111  00657C  51F8               	movf	(HistAlarm@i+1)& (0+255),w,b
 12112  00657E  E116               	bnz	l22099
 12113  006580  D011               	goto	L1
 12114  006582                     l22091:
 12115                           
 12116                           ; BSR set to: 2
 12117                           ;alarm.c: 485:             if (alarms[i]) break;
 12118  006582  90D8               	bcf	status,0,c
 12119  006584  35F7               	rlcf	HistAlarm@i& (0+255),w,b
 12120  006586  6ED9               	movwf	fsr2l,c
 12121  006588  35F8               	rlcf	(HistAlarm@i+1)& (0+255),w,b
 12122  00658A  6EDA               	movwf	fsr2h,c
 12123  00658C  0E00               	movlw	low _alarms
 12124  00658E  26D9               	addwf	fsr2l,f,c
 12125  006590  0E03               	movlw	high _alarms
 12126  006592  22DA               	addwfc	fsr2h,f,c
 12127  006594  50DE               	movf	postinc2,w,c
 12128  006596  10DE               	iorwf	postinc2,w,c
 12129  006598  A4D8               	btfss	status,2,c
 12130  00659A  D008               	goto	u21740
 12131                           
 12132                           ; BSR set to: 2
 12133                           ;alarm.c: 486:         }
 12134  00659C  4BF7               	infsnz	HistAlarm@i& (0+255),f,b
 12135  00659E  2BF8               	incf	(HistAlarm@i+1)& (0+255),f,b
 12136                           
 12137                           ; BSR set to: 2
 12138  0065A0  51F8               	movf	(HistAlarm@i+1)& (0+255),w,b
 12139  0065A2  E104               	bnz	u21740
 12140  0065A4                     L1:
 12141  0065A4  0E13               	movlw	19
 12142  0065A6  5DF7               	subwf	HistAlarm@i& (0+255),w,b
 12143  0065A8  A0D8               	btfss	status,0,c
 12144  0065AA  D7EB               	goto	l22091
 12145  0065AC                     u21740:
 12146  0065AC                     l22099:
 12147                           
 12148                           ; BSR set to: 2
 12149                           ;alarm.c: 488:         if (i>=sizeof(alarmData)/sizeof(a)) {
 12150  0065AC  51F8               	movf	(HistAlarm@i+1)& (0+255),w,b
 12151  0065AE  E104               	bnz	u21750
 12152  0065B0  0E13               	movlw	19
 12153  0065B2  5DF7               	subwf	HistAlarm@i& (0+255),w,b
 12154  0065B4  A0D8               	btfss	status,0,c
 12155  0065B6  D7CD               	goto	l22083
 12156  0065B8                     u21750:
 12157                           
 12158                           ; BSR set to: 2
 12159                           ;alarm.c: 490:             for (i=0; i<sizeof(alarmData)/sizeof(a); i++) {
 12160  0065B8  0E00               	movlw	0
 12161  0065BA  6FF8               	movwf	(HistAlarm@i+1)& (0+255),b
 12162  0065BC  0E00               	movlw	0
 12163  0065BE  6FF7               	movwf	HistAlarm@i& (0+255),b
 12164  0065C0                     l22107:
 12165                           
 12166                           ; BSR set to: 2
 12167                           ;alarm.c: 491:                 if (alarms[i]) break;
 12168  0065C0  90D8               	bcf	status,0,c
 12169  0065C2  35F7               	rlcf	HistAlarm@i& (0+255),w,b
 12170  0065C4  6ED9               	movwf	fsr2l,c
 12171  0065C6  35F8               	rlcf	(HistAlarm@i+1)& (0+255),w,b
 12172  0065C8  6EDA               	movwf	fsr2h,c
 12173  0065CA  0E00               	movlw	low _alarms
 12174  0065CC  26D9               	addwf	fsr2l,f,c
 12175  0065CE  0E03               	movlw	high _alarms
 12176  0065D0  22DA               	addwfc	fsr2h,f,c
 12177  0065D2  50DE               	movf	postinc2,w,c
 12178  0065D4  10DE               	iorwf	postinc2,w,c
 12179  0065D6  A4D8               	btfss	status,2,c
 12180  0065D8  D008               	goto	u21770
 12181                           
 12182                           ; BSR set to: 2
 12183                           ;alarm.c: 492:             }
 12184  0065DA  4BF7               	infsnz	HistAlarm@i& (0+255),f,b
 12185  0065DC  2BF8               	incf	(HistAlarm@i+1)& (0+255),f,b
 12186                           
 12187                           ; BSR set to: 2
 12188  0065DE  51F8               	movf	(HistAlarm@i+1)& (0+255),w,b
 12189  0065E0  E104               	bnz	u21770
 12190  0065E2  0E13               	movlw	19
 12191  0065E4  5DF7               	subwf	HistAlarm@i& (0+255),w,b
 12192  0065E6  A0D8               	btfss	status,0,c
 12193  0065E8  D7EB               	goto	l22107
 12194  0065EA                     u21770:
 12195                           
 12196                           ; BSR set to: 2
 12197                           ;alarm.c: 494:             if (i >= sizeof(alarmData)/sizeof(a)) {
 12198  0065EA  51F8               	movf	(HistAlarm@i+1)& (0+255),w,b
 12199  0065EC  E104               	bnz	u21780
 12200  0065EE  0E13               	movlw	19
 12201  0065F0  5DF7               	subwf	HistAlarm@i& (0+255),w,b
 12202  0065F2  A0D8               	btfss	status,0,c
 12203  0065F4  D7AE               	goto	l22083
 12204  0065F6                     u21780:
 12205                           
 12206                           ; BSR set to: 2
 12207                           ;alarm.c: 495:                 histSec = 0;
 12208  0065F6  0E00               	movlw	0
 12209  0065F8  0101               	movlb	1	; () banked
 12210  0065FA  6FEA               	movwf	(_histSec+1)& (0+255),b
 12211  0065FC  0E00               	movlw	0
 12212  0065FE  6FE9               	movwf	_histSec& (0+255),b
 12213  006600  D7A5               	goto	u21710
 12214  006602                     l22127:
 12215                           
 12216                           ; BSR set to: 1
 12217                           ;alarm.c: 505:     AlarmUpdateLCD();
 12218  006602  EC4C  F02E         	call	_AlarmUpdateLCD	;wreg free
 12219  006606  D7A2               	goto	u21710
 12220  006608                     __end_of_HistAlarm:
 12221                           	opt callstack 0
 12222                           
 12223 ;; *************** function _TMR5_StopTimer *****************
 12224 ;; Defined at:
 12225 ;;		line 105 in file "mcc_generated_files/tmr5.c"
 12226 ;; Parameters:    Size  Location     Type
 12227 ;;		None
 12228 ;; Auto vars:     Size  Location     Type
 12229 ;;		None
 12230 ;; Return value:  Size  Location     Type
 12231 ;;                  1    wreg      void 
 12232 ;; Registers used:
 12233 ;;		None
 12234 ;; Tracked objects:
 12235 ;;		On entry : 3F/3
 12236 ;;		On exit  : 3F/3
 12237 ;;		Unchanged: 3E/0
 12238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12243 ;;Total ram usage:        0 bytes
 12244 ;; Hardware stack levels used:    1
 12245 ;; Hardware stack levels required when called:   16
 12246 ;; This function calls:
 12247 ;;		Nothing
 12248 ;; This function is called by:
 12249 ;;		_HistAlarm
 12250 ;; This function uses a non-reentrant model
 12251 ;;
 12252                           
 12253                           	psect	text67
 12254  00A686                     __ptext67:
 12255                           	opt callstack 0
 12256  00A686                     _TMR5_StopTimer:
 12257                           	opt callstack 13
 12258                           
 12259                           ; BSR set to: 3
 12260                           ;mcc_generated_files/tmr5.c: 108:     T5CONbits.TMR5ON = 0;
 12261                           
 12262                           ;incstack = 0
 12263  00A686  909A               	bcf	154,0,c	;volatile
 12264                           
 12265                           ; BSR set to: 3
 12266  00A688  0012               	return		;funcret
 12267  00A68A                     __end_of_TMR5_StopTimer:
 12268                           	opt callstack 0
 12269                           
 12270 ;; *************** function _EnableAlarmSV1 *****************
 12271 ;; Defined at:
 12272 ;;		line 877 in file "monitor.c"
 12273 ;; Parameters:    Size  Location     Type
 12274 ;;		None
 12275 ;; Auto vars:     Size  Location     Type
 12276 ;;		None
 12277 ;; Return value:  Size  Location     Type
 12278 ;;                  1    wreg      void 
 12279 ;; Registers used:
 12280 ;;		wreg, status,2
 12281 ;; Tracked objects:
 12282 ;;		On entry : 3F/3
 12283 ;;		On exit  : 3F/0
 12284 ;;		Unchanged: 0/0
 12285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12290 ;;Total ram usage:        0 bytes
 12291 ;; Hardware stack levels used:    1
 12292 ;; Hardware stack levels required when called:   16
 12293 ;; This function calls:
 12294 ;;		Nothing
 12295 ;; This function is called by:
 12296 ;;		_main
 12297 ;; This function uses a non-reentrant model
 12298 ;;
 12299                           
 12300                           	psect	text68
 12301  00A4F2                     __ptext68:
 12302                           	opt callstack 0
 12303  00A4F2                     _EnableAlarmSV1:
 12304                           	opt callstack 14
 12305                           
 12306                           ; BSR set to: 3
 12307                           ;monitor.c: 878:     disableAlarmSV1=0;
 12308                           
 12309                           ; BSR set to: 3
 12310                           ;incstack = 0
 12311  00A4F2  0E00               	movlw	0
 12312  00A4F4  0100               	movlb	0	; () banked
 12313  00A4F6  6FF3               	movwf	_disableAlarmSV1& (0+255),b
 12314                           
 12315                           ; BSR set to: 0
 12316  00A4F8  0012               	return		;funcret
 12317  00A4FA                     __end_of_EnableAlarmSV1:
 12318                           	opt callstack 0
 12319                           
 12320 ;; *************** function _DumpI2C *****************
 12321 ;; Defined at:
 12322 ;;		line 232 in file "controller.c"
 12323 ;; Parameters:    Size  Location     Type
 12324 ;;		None
 12325 ;; Auto vars:     Size  Location     Type
 12326 ;;		None
 12327 ;; Return value:  Size  Location     Type
 12328 ;;                  1    wreg      void 
 12329 ;; Registers used:
 12330 ;;		None
 12331 ;; Tracked objects:
 12332 ;;		On entry : 3F/3
 12333 ;;		On exit  : 3F/3
 12334 ;;		Unchanged: 3E/0
 12335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12340 ;;Total ram usage:        0 bytes
 12341 ;; Hardware stack levels used:    1
 12342 ;; Hardware stack levels required when called:   16
 12343 ;; This function calls:
 12344 ;;		Nothing
 12345 ;; This function is called by:
 12346 ;;		_main
 12347 ;; This function uses a non-reentrant model
 12348 ;;
 12349                           
 12350                           	psect	text69
 12351  00A6EA                     __ptext69:
 12352                           	opt callstack 0
 12353  00A6EA                     _DumpI2C:
 12354                           	opt callstack 14
 12355                           
 12356                           ; BSR set to: 3
 12357                           
 12358                           ; BSR set to: 0
 12359                           ;incstack = 0
 12360  00A6EA  0012               	return		;funcret
 12361  00A6EC                     __end_of_DumpI2C:
 12362                           	opt callstack 0
 12363                           
 12364 ;; *************** function _DisplayTask *****************
 12365 ;; Defined at:
 12366 ;;		line 122 in file "display.c"
 12367 ;; Parameters:    Size  Location     Type
 12368 ;;		None
 12369 ;; Auto vars:     Size  Location     Type
 12370 ;;		None
 12371 ;; Return value:  Size  Location     Type
 12372 ;;                  1    wreg      void 
 12373 ;; Registers used:
 12374 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12375 ;; Tracked objects:
 12376 ;;		On entry : 0/2
 12377 ;;		On exit  : 3D/1
 12378 ;;		Unchanged: 0/0
 12379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12384 ;;Total ram usage:        0 bytes
 12385 ;; Hardware stack levels used:    1
 12386 ;; Hardware stack levels required when called:   19
 12387 ;; This function calls:
 12388 ;;		_LCDMessage1
 12389 ;;		_LCDMessage12
 12390 ;;		_LCDMessage2
 12391 ;; This function is called by:
 12392 ;;		_main
 12393 ;; This function uses a non-reentrant model
 12394 ;;
 12395                           
 12396                           	psect	text70
 12397  007530                     __ptext70:
 12398                           	opt callstack 0
 12399  007530                     _DisplayTask:
 12400                           	opt callstack 11
 12401                           
 12402                           ;display.c: 124:     if (msg1[0] && msg2[0]) {
 12403                           
 12404                           ; BSR set to: 3
 12405                           ;incstack = 0
 12406  007530  0103               	movlb	3	; () banked
 12407  007532  51E5               	movf	_msg1& (0+255),w,b
 12408  007534  B4D8               	btfsc	status,2,c
 12409  007536  D015               	goto	l21933
 12410                           
 12411                           ; BSR set to: 3
 12412  007538  51D1               	movf	_msg2& (0+255),w,b
 12413  00753A  B4D8               	btfsc	status,2,c
 12414  00753C  D012               	goto	l21933
 12415                           
 12416                           ; BSR set to: 3
 12417                           ;display.c: 126:         LCDMessage12(msg1,msg2);
 12418  00753E  0EE5               	movlw	low _msg1
 12419  007540  0101               	movlb	1	; () banked
 12420  007542  6F10               	movwf	LCDMessage12@str1& (0+255),b
 12421  007544  0E03               	movlw	high _msg1
 12422  007546  6F11               	movwf	(LCDMessage12@str1+1)& (0+255),b
 12423  007548  0ED1               	movlw	low _msg2
 12424  00754A  6F12               	movwf	LCDMessage12@str2& (0+255),b
 12425  00754C  0E03               	movlw	high _msg2
 12426  00754E  6F13               	movwf	(LCDMessage12@str2+1)& (0+255),b
 12427  007550  ECB3  F049         	call	_LCDMessage12	;wreg free
 12428                           
 12429                           ; BSR set to: 1
 12430                           ;display.c: 127:         msg2[0]=0;
 12431  007554  0E00               	movlw	0
 12432  007556  0103               	movlb	3	; () banked
 12433  007558  6FD1               	movwf	_msg2& (0+255),b
 12434  00755A                     l21929:
 12435                           
 12436                           ;display.c: 128:         msg1[0]=0;
 12437  00755A  0E00               	movlw	0
 12438  00755C  0103               	movlb	3	; () banked
 12439  00755E  6FE5               	movwf	_msg1& (0+255),b
 12440  007560  0012               	return	
 12441  007562                     l21933:
 12442                           
 12443                           ; BSR set to: 3
 12444                           ;display.c: 132:     if (msg4[0]) {
 12445  007562  51A9               	movf	_msg4& (0+255),w,b
 12446  007564  B4D8               	btfsc	status,2,c
 12447  007566  D008               	goto	l21939
 12448                           
 12449                           ; BSR set to: 3
 12450                           ;display.c: 134:         LCDMessage2(msg4);
 12451  007568  0EA9               	movlw	low _msg4
 12452  00756A  0101               	movlb	1	; () banked
 12453  00756C  6F10               	movwf	LCDMessage2@str& (0+255),b
 12454  00756E  0E03               	movlw	high _msg4
 12455  007570  6F11               	movwf	(LCDMessage2@str+1)& (0+255),b
 12456  007572  EC6F  F04D         	call	_LCDMessage2	;wreg free
 12457  007576  0012               	return	
 12458  007578                     l21939:
 12459                           
 12460                           ; BSR set to: 3
 12461                           ;display.c: 138:     if (msg2[0]) {
 12462  007578  51D1               	movf	_msg2& (0+255),w,b
 12463  00757A  B4D8               	btfsc	status,2,c
 12464  00757C  D00B               	goto	l21947
 12465                           
 12466                           ; BSR set to: 3
 12467                           ;display.c: 140:         LCDMessage2(msg2);
 12468  00757E  0ED1               	movlw	low _msg2
 12469  007580  0101               	movlb	1	; () banked
 12470  007582  6F10               	movwf	LCDMessage2@str& (0+255),b
 12471  007584  0E03               	movlw	high _msg2
 12472  007586  6F11               	movwf	(LCDMessage2@str+1)& (0+255),b
 12473  007588  EC6F  F04D         	call	_LCDMessage2	;wreg free
 12474                           
 12475                           ; BSR set to: 1
 12476                           ;display.c: 141:         msg2[0]=0;
 12477  00758C  0E00               	movlw	0
 12478  00758E  0103               	movlb	3	; () banked
 12479  007590  6FD1               	movwf	_msg2& (0+255),b
 12480  007592  0012               	return	
 12481  007594                     l21947:
 12482                           
 12483                           ; BSR set to: 3
 12484                           ;display.c: 145:     if (msg1[0] && msg3[0]) {
 12485  007594  51E5               	movf	_msg1& (0+255),w,b
 12486  007596  B4D8               	btfsc	status,2,c
 12487  007598  D014               	goto	l21959
 12488                           
 12489                           ; BSR set to: 3
 12490  00759A  51BD               	movf	_msg3& (0+255),w,b
 12491  00759C  B4D8               	btfsc	status,2,c
 12492  00759E  D011               	goto	l21959
 12493                           
 12494                           ; BSR set to: 3
 12495                           ;display.c: 147:         LCDMessage12(msg1,msg3);
 12496  0075A0  0EE5               	movlw	low _msg1
 12497  0075A2  0101               	movlb	1	; () banked
 12498  0075A4  6F10               	movwf	LCDMessage12@str1& (0+255),b
 12499  0075A6  0E03               	movlw	high _msg1
 12500  0075A8  6F11               	movwf	(LCDMessage12@str1+1)& (0+255),b
 12501  0075AA  0EBD               	movlw	low _msg3
 12502  0075AC  6F12               	movwf	LCDMessage12@str2& (0+255),b
 12503  0075AE  0E03               	movlw	high _msg3
 12504  0075B0  6F13               	movwf	(LCDMessage12@str2+1)& (0+255),b
 12505  0075B2  ECB3  F049         	call	_LCDMessage12	;wreg free
 12506                           
 12507                           ; BSR set to: 1
 12508                           ;display.c: 148:         msg1[0]=0;
 12509  0075B6  0E00               	movlw	0
 12510  0075B8  0103               	movlb	3	; () banked
 12511  0075BA  6FE5               	movwf	_msg1& (0+255),b
 12512                           
 12513                           ; BSR set to: 3
 12514                           ;display.c: 149:         msg3[0]=0;
 12515  0075BC  0E00               	movlw	0
 12516  0075BE  6FBD               	movwf	_msg3& (0+255),b
 12517  0075C0  0012               	return	
 12518  0075C2                     l21959:
 12519                           
 12520                           ; BSR set to: 3
 12521                           ;display.c: 154:     if (msg1[0]) {
 12522  0075C2  51E5               	movf	_msg1& (0+255),w,b
 12523  0075C4  B4D8               	btfsc	status,2,c
 12524  0075C6  0012               	return	
 12525                           
 12526                           ; BSR set to: 3
 12527                           ;display.c: 157:         LCDMessage1(msg1);
 12528  0075C8  0EE5               	movlw	low _msg1
 12529  0075CA  0101               	movlb	1	; () banked
 12530  0075CC  6F10               	movwf	LCDMessage1@str& (0+255),b
 12531  0075CE  0E03               	movlw	high _msg1
 12532  0075D0  6F11               	movwf	(LCDMessage1@str+1)& (0+255),b
 12533  0075D2  ECDA  F04E         	call	_LCDMessage1	;wreg free
 12534  0075D6  D7C1               	goto	l21929
 12535  0075D8                     __end_of_DisplayTask:
 12536                           	opt callstack 0
 12537                           
 12538 ;; *************** function _LCDMessage2 *****************
 12539 ;; Defined at:
 12540 ;;		line 148 in file "lcd.c"
 12541 ;; Parameters:    Size  Location     Type
 12542 ;;  str             2   16[BANK1 ] PTR unsigned char 
 12543 ;;		 -> msg2(20), msg4(20), 
 12544 ;; Auto vars:     Size  Location     Type
 12545 ;;		None
 12546 ;; Return value:  Size  Location     Type
 12547 ;;                  1    wreg      void 
 12548 ;; Registers used:
 12549 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12550 ;; Tracked objects:
 12551 ;;		On entry : 3F/1
 12552 ;;		On exit  : 3F/1
 12553 ;;		Unchanged: 0/0
 12554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12555 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12558 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12559 ;;Total ram usage:        2 bytes
 12560 ;; Hardware stack levels used:    1
 12561 ;; Hardware stack levels required when called:   18
 12562 ;; This function calls:
 12563 ;;		_LCDMessage
 12564 ;;		_LCDWriteCmd
 12565 ;; This function is called by:
 12566 ;;		_DisplayTask
 12567 ;; This function uses a non-reentrant model
 12568 ;;
 12569                           
 12570                           	psect	text71
 12571  009ADE                     __ptext71:
 12572                           	opt callstack 0
 12573  009ADE                     _LCDMessage2:
 12574                           	opt callstack 11
 12575                           
 12576                           ; BSR set to: 1
 12577                           ;lcd.c: 149:     LCDWriteCmd(0x02);
 12578                           
 12579                           ;incstack = 0
 12580  009ADE  0E02               	movlw	2
 12581  009AE0  EC05  F03E         	call	_LCDWriteCmd
 12582                           
 12583                           ;lcd.c: 150:     LCDWriteCmd(0xC0);
 12584  009AE4  0EC0               	movlw	192
 12585  009AE6  EC05  F03E         	call	_LCDWriteCmd
 12586                           
 12587                           ;lcd.c: 151:     if (LED) LCDMessage(str);
 12588  009AEA  0101               	movlb	1	; () banked
 12589  009AEC  51F0               	movf	_LED& (0+255),w,b
 12590  009AEE  B4D8               	btfsc	status,2,c
 12591  009AF0  0012               	return	
 12592                           
 12593                           ; BSR set to: 1
 12594  009AF2  0060  F440  F108   	movff	LCDMessage2@str,LCDMessage@str
 12595  009AF8  0060  F444  F109   	movff	LCDMessage2@str+1,LCDMessage@str+1
 12596  009AFE  ECE4  F03B         	call	_LCDMessage	;wreg free
 12597                           
 12598                           ; BSR set to: 1
 12599  009B02  0012               	return		;funcret
 12600  009B04                     __end_of_LCDMessage2:
 12601                           	opt callstack 0
 12602                           
 12603 ;; *************** function _LCDMessage12 *****************
 12604 ;; Defined at:
 12605 ;;		line 141 in file "lcd.c"
 12606 ;; Parameters:    Size  Location     Type
 12607 ;;  str1            2   16[BANK1 ] PTR unsigned char 
 12608 ;;		 -> msg1(20), LCDTest@msg1(17), 
 12609 ;;  str2            2   18[BANK1 ] PTR unsigned char 
 12610 ;;		 -> msg3(20), msg2(20), LCDTest@msg2(17), 
 12611 ;; Auto vars:     Size  Location     Type
 12612 ;;		None
 12613 ;; Return value:  Size  Location     Type
 12614 ;;                  1    wreg      void 
 12615 ;; Registers used:
 12616 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12617 ;; Tracked objects:
 12618 ;;		On entry : 3F/1
 12619 ;;		On exit  : 3F/1
 12620 ;;		Unchanged: 0/0
 12621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12622 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12625 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12626 ;;Total ram usage:        4 bytes
 12627 ;; Hardware stack levels used:    1
 12628 ;; Hardware stack levels required when called:   18
 12629 ;; This function calls:
 12630 ;;		_LCDMessage
 12631 ;;		_LCDWriteCmd
 12632 ;; This function is called by:
 12633 ;;		_LCDTest
 12634 ;;		_DisplayTask
 12635 ;; This function uses a non-reentrant model
 12636 ;;
 12637                           
 12638                           	psect	text72
 12639  009366                     __ptext72:
 12640                           	opt callstack 0
 12641  009366                     _LCDMessage12:
 12642                           	opt callstack 9
 12643                           
 12644                           ; BSR set to: 1
 12645                           ;lcd.c: 142:     LCDWriteCmd(0x02);
 12646                           
 12647                           ; BSR set to: 1
 12648                           ;incstack = 0
 12649  009366  0E02               	movlw	2
 12650  009368  EC05  F03E         	call	_LCDWriteCmd
 12651                           
 12652                           ;lcd.c: 143:     if (LED) LCDMessage(str1);
 12653  00936C  0101               	movlb	1	; () banked
 12654  00936E  51F0               	movf	_LED& (0+255),w,b
 12655  009370  B4D8               	btfsc	status,2,c
 12656  009372  D008               	goto	l18941
 12657                           
 12658                           ; BSR set to: 1
 12659  009374  0060  F440  F108   	movff	LCDMessage12@str1,LCDMessage@str
 12660  00937A  0060  F444  F109   	movff	LCDMessage12@str1+1,LCDMessage@str+1
 12661  009380  ECE4  F03B         	call	_LCDMessage	;wreg free
 12662  009384                     l18941:
 12663                           
 12664                           ; BSR set to: 1
 12665                           ;lcd.c: 144:     LCDWriteCmd(0xC0);
 12666  009384  0EC0               	movlw	192
 12667  009386  EC05  F03E         	call	_LCDWriteCmd
 12668                           
 12669                           ;lcd.c: 145:     if (LED) LCDMessage(str2);
 12670  00938A  0101               	movlb	1	; () banked
 12671  00938C  51F0               	movf	_LED& (0+255),w,b
 12672  00938E  B4D8               	btfsc	status,2,c
 12673  009390  0012               	return	
 12674                           
 12675                           ; BSR set to: 1
 12676  009392  0060  F448  F108   	movff	LCDMessage12@str2,LCDMessage@str
 12677  009398  0060  F44C  F109   	movff	LCDMessage12@str2+1,LCDMessage@str+1
 12678  00939E  ECE4  F03B         	call	_LCDMessage	;wreg free
 12679                           
 12680                           ; BSR set to: 1
 12681  0093A2  0012               	return		;funcret
 12682  0093A4                     __end_of_LCDMessage12:
 12683                           	opt callstack 0
 12684                           
 12685 ;; *************** function _LCDMessage1 *****************
 12686 ;; Defined at:
 12687 ;;		line 136 in file "lcd.c"
 12688 ;; Parameters:    Size  Location     Type
 12689 ;;  str             2   16[BANK1 ] PTR unsigned char 
 12690 ;;		 -> msg1(20), 
 12691 ;; Auto vars:     Size  Location     Type
 12692 ;;		None
 12693 ;; Return value:  Size  Location     Type
 12694 ;;                  1    wreg      void 
 12695 ;; Registers used:
 12696 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12697 ;; Tracked objects:
 12698 ;;		On entry : 3F/1
 12699 ;;		On exit  : 3F/1
 12700 ;;		Unchanged: 0/0
 12701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12702 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12705 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12706 ;;Total ram usage:        2 bytes
 12707 ;; Hardware stack levels used:    1
 12708 ;; Hardware stack levels required when called:   18
 12709 ;; This function calls:
 12710 ;;		_LCDMessage
 12711 ;;		_LCDWriteCmd
 12712 ;; This function is called by:
 12713 ;;		_DisplayTask
 12714 ;; This function uses a non-reentrant model
 12715 ;;
 12716                           
 12717                           	psect	text73
 12718  009DB4                     __ptext73:
 12719                           	opt callstack 0
 12720  009DB4                     _LCDMessage1:
 12721                           	opt callstack 11
 12722                           
 12723                           ; BSR set to: 1
 12724                           ;lcd.c: 137:     LCDWriteCmd(0x02);
 12725                           
 12726                           ; BSR set to: 1
 12727                           ;incstack = 0
 12728  009DB4  0E02               	movlw	2
 12729  009DB6  EC05  F03E         	call	_LCDWriteCmd
 12730                           
 12731                           ;lcd.c: 138:     if (LED) LCDMessage(str);
 12732  009DBA  0101               	movlb	1	; () banked
 12733  009DBC  51F0               	movf	_LED& (0+255),w,b
 12734  009DBE  B4D8               	btfsc	status,2,c
 12735  009DC0  0012               	return	
 12736                           
 12737                           ; BSR set to: 1
 12738  009DC2  0060  F440  F108   	movff	LCDMessage1@str,LCDMessage@str
 12739  009DC8  0060  F444  F109   	movff	LCDMessage1@str+1,LCDMessage@str+1
 12740  009DCE  ECE4  F03B         	call	_LCDMessage	;wreg free
 12741                           
 12742                           ; BSR set to: 1
 12743  009DD2  0012               	return		;funcret
 12744  009DD4                     __end_of_LCDMessage1:
 12745                           	opt callstack 0
 12746                           
 12747 ;; *************** function _LCDWriteCmd *****************
 12748 ;; Defined at:
 12749 ;;		line 222 in file "lcd.c"
 12750 ;; Parameters:    Size  Location     Type
 12751 ;;  data            1    wreg     unsigned char 
 12752 ;; Auto vars:     Size  Location     Type
 12753 ;;  data            1    4[BANK1 ] unsigned char 
 12754 ;; Return value:  Size  Location     Type
 12755 ;;                  1    wreg      void 
 12756 ;; Registers used:
 12757 ;;		wreg, status,2, cstack
 12758 ;; Tracked objects:
 12759 ;;		On entry : 0/1
 12760 ;;		On exit  : 0/0
 12761 ;;		Unchanged: 0/0
 12762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12764 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12766 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12767 ;;Total ram usage:        1 bytes
 12768 ;; Hardware stack levels used:    1
 12769 ;; Hardware stack levels required when called:   16
 12770 ;; This function calls:
 12771 ;;		Nothing
 12772 ;; This function is called by:
 12773 ;;		_LCDInit
 12774 ;;		_LCDMessage1
 12775 ;;		_LCDMessage12
 12776 ;;		_LCDMessage2
 12777 ;; This function uses a non-reentrant model
 12778 ;;
 12779                           
 12780                           	psect	text74
 12781  007C0A                     __ptext74:
 12782                           	opt callstack 0
 12783  007C0A                     _LCDWriteCmd:
 12784                           	opt callstack 12
 12785                           
 12786                           ; BSR set to: 1
 12787                           ;incstack = 0
 12788                           ;LCDWriteCmd@data stored from wreg
 12789  007C0A  0101               	movlb	1	; () banked
 12790  007C0C  6F04               	movwf	LCDWriteCmd@data& (0+255),b
 12791                           
 12792                           ;lcd.c: 222: void LCDWriteCmd(uint8_t data);lcd.c: 223: {;lcd.c: 239:  if (data&0x80) do
      +                           { LATDbits.LATD7 = 1; } while(0); else do { LATDbits.LATD7 = 0; } while(0);
 12793  007C0E  0101               	movlb	1	; () banked
 12794  007C10  AF04               	btfss	LCDWriteCmd@data& (0+255),7,b
 12795  007C12  D002               	goto	l1743
 12796                           
 12797                           ; BSR set to: 1
 12798  007C14  8EBD               	bsf	189,7,c	;volatile
 12799  007C16  D001               	goto	l18603
 12800  007C18                     l1743:
 12801                           
 12802                           ; BSR set to: 1
 12803  007C18  9EBD               	bcf	189,7,c	;volatile
 12804  007C1A                     l18603:
 12805                           
 12806                           ; BSR set to: 1
 12807                           ;lcd.c: 240:     if (data&0x40) do { LATDbits.LATD6 = 1; } while(0); else do { LATDbits.
      +                          LATD6 = 0; } while(0);
 12808  007C1A  AD04               	btfss	LCDWriteCmd@data& (0+255),6,b
 12809  007C1C  D002               	goto	l1749
 12810                           
 12811                           ; BSR set to: 1
 12812  007C1E  8CBD               	bsf	189,6,c	;volatile
 12813  007C20  D001               	goto	l18605
 12814  007C22                     l1749:
 12815                           
 12816                           ; BSR set to: 1
 12817  007C22  9CBD               	bcf	189,6,c	;volatile
 12818  007C24                     l18605:
 12819                           
 12820                           ; BSR set to: 1
 12821                           ;lcd.c: 241:     if (data&0x20) do { LATDbits.LATD5 = 1; } while(0); else do { LATDbits.
      +                          LATD5 = 0; } while(0);
 12822  007C24  AB04               	btfss	LCDWriteCmd@data& (0+255),5,b
 12823  007C26  D002               	goto	l1755
 12824                           
 12825                           ; BSR set to: 1
 12826  007C28  8ABD               	bsf	189,5,c	;volatile
 12827  007C2A  D001               	goto	l18607
 12828  007C2C                     l1755:
 12829                           
 12830                           ; BSR set to: 1
 12831  007C2C  9ABD               	bcf	189,5,c	;volatile
 12832  007C2E                     l18607:
 12833                           
 12834                           ; BSR set to: 1
 12835                           ;lcd.c: 242:     if (data&0x10) do { LATDbits.LATD4 = 1; } while(0); else do { LATDbits.
      +                          LATD4 = 0; } while(0);
 12836  007C2E  A904               	btfss	LCDWriteCmd@data& (0+255),4,b
 12837  007C30  D002               	goto	l1761
 12838                           
 12839                           ; BSR set to: 1
 12840  007C32  88BD               	bsf	189,4,c	;volatile
 12841  007C34  D001               	goto	l1763
 12842  007C36                     l1761:
 12843                           
 12844                           ; BSR set to: 1
 12845  007C36  98BD               	bcf	189,4,c	;volatile
 12846  007C38                     l1763:
 12847                           
 12848                           ; BSR set to: 1
 12849  007C38  9CBC               	bcf	188,6,c	;volatile
 12850                           
 12851                           ; BSR set to: 1
 12852                           ;lcd.c: 245:     _delay((unsigned long)((5)*(64000000/4000000.0)));
 12853  007C3A  0E1A               	movlw	26
 12854  007C3C                     u22857:
 12855  007C3C  2EE8               	decfsz	wreg,f,c
 12856  007C3E  D7FE               	bra	u22857
 12857  007C40  D000               	nop2	
 12858  007C42  8EBC               	bsf	188,7,c	;volatile
 12859                           
 12860                           ;lcd.c: 247:  _delay((unsigned long)((10)*(64000000/4000000.0)));
 12861  007C44  0E35               	movlw	53
 12862  007C46                     u22867:
 12863  007C46  2EE8               	decfsz	wreg,f,c
 12864  007C48  D7FE               	bra	u22867
 12865  007C4A  F000               	nop	
 12866  007C4C  9EBC               	bcf	188,7,c	;volatile
 12867                           
 12868                           ;lcd.c: 249:  _delay((unsigned long)((5)*(64000000/4000000.0)));
 12869  007C4E  0E1A               	movlw	26
 12870  007C50                     u22877:
 12871  007C50  2EE8               	decfsz	wreg,f,c
 12872  007C52  D7FE               	bra	u22877
 12873  007C54  D000               	nop2	
 12874                           
 12875                           ;lcd.c: 250:     if (data&0x8) do { LATDbits.LATD7 = 1; } while(0); else do { LATDbits.L
      +                          ATD7 = 0; } while(0);
 12876  007C56  0101               	movlb	1	; () banked
 12877  007C58  A704               	btfss	LCDWriteCmd@data& (0+255),3,b
 12878  007C5A  D002               	goto	l1773
 12879                           
 12880                           ; BSR set to: 1
 12881  007C5C  8EBD               	bsf	189,7,c	;volatile
 12882  007C5E  D001               	goto	l18617
 12883  007C60                     l1773:
 12884                           
 12885                           ; BSR set to: 1
 12886  007C60  9EBD               	bcf	189,7,c	;volatile
 12887  007C62                     l18617:
 12888                           
 12889                           ; BSR set to: 1
 12890                           ;lcd.c: 251:     if (data&0x4) do { LATDbits.LATD6 = 1; } while(0); else do { LATDbits.L
      +                          ATD6 = 0; } while(0);
 12891  007C62  A504               	btfss	LCDWriteCmd@data& (0+255),2,b
 12892  007C64  D002               	goto	l1779
 12893                           
 12894                           ; BSR set to: 1
 12895  007C66  8CBD               	bsf	189,6,c	;volatile
 12896  007C68  D001               	goto	l18619
 12897  007C6A                     l1779:
 12898                           
 12899                           ; BSR set to: 1
 12900  007C6A  9CBD               	bcf	189,6,c	;volatile
 12901  007C6C                     l18619:
 12902                           
 12903                           ; BSR set to: 1
 12904                           ;lcd.c: 252:     if (data&0x2) do { LATDbits.LATD5 = 1; } while(0); else do { LATDbits.L
      +                          ATD5 = 0; } while(0);
 12905  007C6C  A304               	btfss	LCDWriteCmd@data& (0+255),1,b
 12906  007C6E  D002               	goto	l1785
 12907                           
 12908                           ; BSR set to: 1
 12909  007C70  8ABD               	bsf	189,5,c	;volatile
 12910  007C72  D001               	goto	l18621
 12911  007C74                     l1785:
 12912                           
 12913                           ; BSR set to: 1
 12914  007C74  9ABD               	bcf	189,5,c	;volatile
 12915  007C76                     l18621:
 12916                           
 12917                           ; BSR set to: 1
 12918                           ;lcd.c: 253:     if (data&0x1) do { LATDbits.LATD4 = 1; } while(0); else do { LATDbits.L
      +                          ATD4 = 0; } while(0);
 12919  007C76  A104               	btfss	LCDWriteCmd@data& (0+255),0,b
 12920  007C78  D002               	goto	l1791
 12921                           
 12922                           ; BSR set to: 1
 12923  007C7A  88BD               	bsf	189,4,c	;volatile
 12924  007C7C  D001               	goto	l1793
 12925  007C7E                     l1791:
 12926                           
 12927                           ; BSR set to: 1
 12928  007C7E  98BD               	bcf	189,4,c	;volatile
 12929  007C80                     l1793:
 12930                           
 12931                           ; BSR set to: 1
 12932  007C80  9CBC               	bcf	188,6,c	;volatile
 12933                           
 12934                           ; BSR set to: 1
 12935                           ;lcd.c: 256:     _delay((unsigned long)((5)*(64000000/4000000.0)));
 12936  007C82  0E1A               	movlw	26
 12937  007C84                     u22887:
 12938  007C84  2EE8               	decfsz	wreg,f,c
 12939  007C86  D7FE               	bra	u22887
 12940  007C88  D000               	nop2	
 12941  007C8A  8EBC               	bsf	188,7,c	;volatile
 12942                           
 12943                           ;lcd.c: 258:  _delay((unsigned long)((10)*(64000000/4000000.0)));
 12944  007C8C  0E35               	movlw	53
 12945  007C8E                     u22897:
 12946  007C8E  2EE8               	decfsz	wreg,f,c
 12947  007C90  D7FE               	bra	u22897
 12948  007C92  F000               	nop	
 12949  007C94  9EBC               	bcf	188,7,c	;volatile
 12950                           
 12951                           ;lcd.c: 260:     _delay((unsigned long)((38)*(64000000/4000000.0)));
 12952  007C96  0ECA               	movlw	202
 12953  007C98                     u22907:
 12954  007C98  2EE8               	decfsz	wreg,f,c
 12955  007C9A  D7FE               	bra	u22907
 12956  007C9C  D000               	nop2	
 12957  007C9E  0012               	return		;funcret
 12958  007CA0                     __end_of_LCDWriteCmd:
 12959                           	opt callstack 0
 12960                           
 12961 ;; *************** function _LCDMessage *****************
 12962 ;; Defined at:
 12963 ;;		line 125 in file "lcd.c"
 12964 ;; Parameters:    Size  Location     Type
 12965 ;;  str             2    8[BANK1 ] PTR unsigned char 
 12966 ;;		 -> msg3(20), msg2(20), msg1(20), msg4(20), 
 12967 ;;		 -> LCDTest@msg2(17), LCDTest@msg1(17), STR_6(17), STR_5(17), 
 12968 ;; Auto vars:     Size  Location     Type
 12969 ;;  i               2   14[BANK1 ] int 
 12970 ;;  length          2   12[BANK1 ] int 
 12971 ;; Return value:  Size  Location     Type
 12972 ;;                  1    wreg      void 
 12973 ;; Registers used:
 12974 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12975 ;; Tracked objects:
 12976 ;;		On entry : 3F/1
 12977 ;;		On exit  : 3F/1
 12978 ;;		Unchanged: 0/0
 12979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12980 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12981 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12982 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12983 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12984 ;;Total ram usage:        8 bytes
 12985 ;; Hardware stack levels used:    1
 12986 ;; Hardware stack levels required when called:   17
 12987 ;; This function calls:
 12988 ;;		_LCDWriteChar
 12989 ;;		_strlen
 12990 ;; This function is called by:
 12991 ;;		_LCDInit
 12992 ;;		_LCDMessage1
 12993 ;;		_LCDMessage12
 12994 ;;		_LCDMessage2
 12995 ;; This function uses a non-reentrant model
 12996 ;;
 12997                           
 12998                           	psect	text75
 12999  0077C8                     __ptext75:
 13000                           	opt callstack 0
 13001  0077C8                     _LCDMessage:
 13002                           	opt callstack 9
 13003                           
 13004                           ; BSR set to: 1
 13005                           ;lcd.c: 127:     int length = (strlen(str))>(16)?(16):(strlen(str));
 13006                           
 13007                           ;incstack = 0
 13008  0077C8  0060  F420  F104   	movff	LCDMessage@str,strlen@s
 13009  0077CE  0060  F424  F105   	movff	LCDMessage@str+1,strlen@s+1
 13010  0077D4  ECE5  F046         	call	_strlen	;wreg free
 13011  0077D8  5105               	movf	(?_strlen+1)& (0+255),w,b
 13012  0077DA  E113               	bnz	l18633
 13013  0077DC  0E11               	movlw	17
 13014  0077DE  5D04               	subwf	?_strlen& (0+255),w,b
 13015  0077E0  B0D8               	btfsc	status,0,c
 13016  0077E2  D00F               	goto	l18633
 13017                           
 13018                           ; BSR set to: 1
 13019  0077E4  0060  F420  F104   	movff	LCDMessage@str,strlen@s
 13020  0077EA  0060  F424  F105   	movff	LCDMessage@str+1,strlen@s+1
 13021  0077F0  ECE5  F046         	call	_strlen	;wreg free
 13022  0077F4  0060  F410  F10C   	movff	?_strlen,LCDMessage@length
 13023  0077FA  0060  F414  F10D   	movff	?_strlen+1,LCDMessage@length+1
 13024  007800  D004               	goto	l1623
 13025  007802                     l18633:
 13026                           
 13027                           ; BSR set to: 1
 13028  007802  0E00               	movlw	0
 13029  007804  6F0D               	movwf	(LCDMessage@length+1)& (0+255),b
 13030  007806  0E10               	movlw	16
 13031  007808  6F0C               	movwf	LCDMessage@length& (0+255),b
 13032  00780A                     l1623:
 13033                           
 13034                           ; BSR set to: 1
 13035                           ;lcd.c: 129:     for (int i= 0; i<length; i++) {
 13036  00780A  0E00               	movlw	0
 13037  00780C  6F0F               	movwf	(LCDMessage@i+1)& (0+255),b
 13038  00780E  0E00               	movlw	0
 13039  007810  6F0E               	movwf	LCDMessage@i& (0+255),b
 13040  007812  D020               	goto	l18639
 13041  007814                     l18635:
 13042                           
 13043                           ; BSR set to: 1
 13044                           ;lcd.c: 130:         LCDWriteChar(str[i]);
 13045  007814  510E               	movf	LCDMessage@i& (0+255),w,b
 13046  007816  2508               	addwf	LCDMessage@str& (0+255),w,b
 13047  007818  6F0A               	movwf	??_LCDMessage& (0+255),b
 13048  00781A  510F               	movf	(LCDMessage@i+1)& (0+255),w,b
 13049  00781C  2109               	addwfc	(LCDMessage@str+1)& (0+255),w,b
 13050  00781E  6F0B               	movwf	(??_LCDMessage+1)& (0+255),b
 13051  007820  0060  F42B  FFF6   	movff	??_LCDMessage,tblptrl
 13052  007826  0060  F42F  FFF7   	movff	??_LCDMessage+1,tblptrh
 13053  00782C  0E00               	movlw	low (__mediumconst shr (0+16))
 13054  00782E  6EF8               	movwf	tblptru,c
 13055  007830  0E0F               	movlw	(high __ramtop+-1)
 13056  007832  64F7               	cpfsgt	tblptrh,c
 13057  007834  D003               	bra	u18217
 13058  007836  0008               	tblrd		*
 13059  007838  50F5               	movf	tablat,w,c
 13060  00783A  D007               	bra	u18210
 13061  00783C                     u18217:
 13062  00783C  006F FFDB FFE1     	movff	tblptrl,fsr1l
 13063  007842  006F FFDF FFE2     	movff	tblptrh,fsr1h
 13064  007848  50E7               	movf	indf1,w,c
 13065  00784A                     u18210:
 13066  00784A  EC50  F03E         	call	_LCDWriteChar
 13067                           
 13068                           ;lcd.c: 131:     }
 13069  00784E  0101               	movlb	1	; () banked
 13070  007850  4B0E               	infsnz	LCDMessage@i& (0+255),f,b
 13071  007852  2B0F               	incf	(LCDMessage@i+1)& (0+255),f,b
 13072  007854                     l18639:
 13073                           
 13074                           ; BSR set to: 1
 13075  007854  510C               	movf	LCDMessage@length& (0+255),w,b
 13076  007856  5D0E               	subwf	LCDMessage@i& (0+255),w,b
 13077  007858  510F               	movf	(LCDMessage@i+1)& (0+255),w,b
 13078  00785A  0A80               	xorlw	128
 13079  00785C  6F0A               	movwf	??_LCDMessage& (0+255),b
 13080  00785E  510D               	movf	(LCDMessage@length+1)& (0+255),w,b
 13081  007860  0A80               	xorlw	128
 13082  007862  590A               	subwfb	??_LCDMessage& (0+255),w,b
 13083  007864  B0D8               	btfsc	status,0,c
 13084  007866  0012               	return	
 13085  007868  D7D5               	goto	l18635
 13086  00786A                     __end_of_LCDMessage:
 13087                           	opt callstack 0
 13088                           
 13089 ;; *************** function _LCDWriteChar *****************
 13090 ;; Defined at:
 13091 ;;		line 154 in file "lcd.c"
 13092 ;; Parameters:    Size  Location     Type
 13093 ;;  chr             1    wreg     unsigned char 
 13094 ;; Auto vars:     Size  Location     Type
 13095 ;;  chr             1    4[BANK1 ] unsigned char 
 13096 ;; Return value:  Size  Location     Type
 13097 ;;                  1    wreg      void 
 13098 ;; Registers used:
 13099 ;;		wreg, status,2, cstack
 13100 ;; Tracked objects:
 13101 ;;		On entry : 0/1
 13102 ;;		On exit  : 0/0
 13103 ;;		Unchanged: 0/0
 13104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13106 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13108 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13109 ;;Total ram usage:        1 bytes
 13110 ;; Hardware stack levels used:    1
 13111 ;; Hardware stack levels required when called:   16
 13112 ;; This function calls:
 13113 ;;		Nothing
 13114 ;; This function is called by:
 13115 ;;		_LCDMessage
 13116 ;; This function uses a non-reentrant model
 13117 ;;
 13118                           
 13119                           	psect	text76
 13120  007CA0                     __ptext76:
 13121                           	opt callstack 0
 13122  007CA0                     _LCDWriteChar:
 13123                           	opt callstack 9
 13124                           
 13125                           ; BSR set to: 1
 13126                           ;incstack = 0
 13127                           ;LCDWriteChar@chr stored from wreg
 13128  007CA0  0101               	movlb	1	; () banked
 13129  007CA2  6F04               	movwf	LCDWriteChar@chr& (0+255),b
 13130                           
 13131                           ;lcd.c: 154: void LCDWriteChar(char chr);lcd.c: 155: {;lcd.c: 171:     if (chr&0x80) do 
      +                          { LATDbits.LATD7 = 1; } while(0); else do { LATDbits.LATD7 = 0; } while(0);
 13132  007CA4  0101               	movlb	1	; () banked
 13133  007CA6  AF04               	btfss	LCDWriteChar@chr& (0+255),7,b
 13134  007CA8  D002               	goto	l1647
 13135                           
 13136                           ; BSR set to: 1
 13137  007CAA  8EBD               	bsf	189,7,c	;volatile
 13138  007CAC  D001               	goto	l18291
 13139  007CAE                     l1647:
 13140                           
 13141                           ; BSR set to: 1
 13142  007CAE  9EBD               	bcf	189,7,c	;volatile
 13143  007CB0                     l18291:
 13144                           
 13145                           ; BSR set to: 1
 13146                           ;lcd.c: 172:     if (chr&0x40) do { LATDbits.LATD6 = 1; } while(0); else do { LATDbits.L
      +                          ATD6 = 0; } while(0);
 13147  007CB0  AD04               	btfss	LCDWriteChar@chr& (0+255),6,b
 13148  007CB2  D002               	goto	l1653
 13149                           
 13150                           ; BSR set to: 1
 13151  007CB4  8CBD               	bsf	189,6,c	;volatile
 13152  007CB6  D001               	goto	l18293
 13153  007CB8                     l1653:
 13154                           
 13155                           ; BSR set to: 1
 13156  007CB8  9CBD               	bcf	189,6,c	;volatile
 13157  007CBA                     l18293:
 13158                           
 13159                           ; BSR set to: 1
 13160                           ;lcd.c: 173:     if (chr&0x20) do { LATDbits.LATD5 = 1; } while(0); else do { LATDbits.L
      +                          ATD5 = 0; } while(0);
 13161  007CBA  AB04               	btfss	LCDWriteChar@chr& (0+255),5,b
 13162  007CBC  D002               	goto	l1659
 13163                           
 13164                           ; BSR set to: 1
 13165  007CBE  8ABD               	bsf	189,5,c	;volatile
 13166  007CC0  D001               	goto	l18295
 13167  007CC2                     l1659:
 13168                           
 13169                           ; BSR set to: 1
 13170  007CC2  9ABD               	bcf	189,5,c	;volatile
 13171  007CC4                     l18295:
 13172                           
 13173                           ; BSR set to: 1
 13174                           ;lcd.c: 174:     if (chr&0x10) do { LATDbits.LATD4 = 1; } while(0); else do { LATDbits.L
      +                          ATD4 = 0; } while(0);
 13175  007CC4  A904               	btfss	LCDWriteChar@chr& (0+255),4,b
 13176  007CC6  D002               	goto	l1665
 13177                           
 13178                           ; BSR set to: 1
 13179  007CC8  88BD               	bsf	189,4,c	;volatile
 13180  007CCA  D001               	goto	l1667
 13181  007CCC                     l1665:
 13182                           
 13183                           ; BSR set to: 1
 13184  007CCC  98BD               	bcf	189,4,c	;volatile
 13185  007CCE                     l1667:
 13186                           
 13187                           ; BSR set to: 1
 13188  007CCE  8CBC               	bsf	188,6,c	;volatile
 13189                           
 13190                           ; BSR set to: 1
 13191                           ;lcd.c: 177:     _delay((unsigned long)((5)*(64000000/4000000.0)));
 13192  007CD0  0E1A               	movlw	26
 13193  007CD2                     u22917:
 13194  007CD2  2EE8               	decfsz	wreg,f,c
 13195  007CD4  D7FE               	bra	u22917
 13196  007CD6  D000               	nop2	
 13197  007CD8  8EBC               	bsf	188,7,c	;volatile
 13198                           
 13199                           ;lcd.c: 179:  _delay((unsigned long)((10)*(64000000/4000000.0)));
 13200  007CDA  0E35               	movlw	53
 13201  007CDC                     u22927:
 13202  007CDC  2EE8               	decfsz	wreg,f,c
 13203  007CDE  D7FE               	bra	u22927
 13204  007CE0  F000               	nop	
 13205  007CE2  9EBC               	bcf	188,7,c	;volatile
 13206                           
 13207                           ;lcd.c: 181:  _delay((unsigned long)((5)*(64000000/4000000.0)));
 13208  007CE4  0E1A               	movlw	26
 13209  007CE6                     u22937:
 13210  007CE6  2EE8               	decfsz	wreg,f,c
 13211  007CE8  D7FE               	bra	u22937
 13212  007CEA  D000               	nop2	
 13213                           
 13214                           ;lcd.c: 182:     if (chr&0x8) do { LATDbits.LATD7 = 1; } while(0); else do { LATDbits.LA
      +                          TD7 = 0; } while(0);
 13215  007CEC  0101               	movlb	1	; () banked
 13216  007CEE  A704               	btfss	LCDWriteChar@chr& (0+255),3,b
 13217  007CF0  D002               	goto	l1677
 13218                           
 13219                           ; BSR set to: 1
 13220  007CF2  8EBD               	bsf	189,7,c	;volatile
 13221  007CF4  D001               	goto	l18305
 13222  007CF6                     l1677:
 13223                           
 13224                           ; BSR set to: 1
 13225  007CF6  9EBD               	bcf	189,7,c	;volatile
 13226  007CF8                     l18305:
 13227                           
 13228                           ; BSR set to: 1
 13229                           ;lcd.c: 183:     if (chr&0x4) do { LATDbits.LATD6 = 1; } while(0); else do { LATDbits.LA
      +                          TD6 = 0; } while(0);
 13230  007CF8  A504               	btfss	LCDWriteChar@chr& (0+255),2,b
 13231  007CFA  D002               	goto	l1683
 13232                           
 13233                           ; BSR set to: 1
 13234  007CFC  8CBD               	bsf	189,6,c	;volatile
 13235  007CFE  D001               	goto	l18307
 13236  007D00                     l1683:
 13237                           
 13238                           ; BSR set to: 1
 13239  007D00  9CBD               	bcf	189,6,c	;volatile
 13240  007D02                     l18307:
 13241                           
 13242                           ; BSR set to: 1
 13243                           ;lcd.c: 184:     if (chr&0x2) do { LATDbits.LATD5 = 1; } while(0); else do { LATDbits.LA
      +                          TD5 = 0; } while(0);
 13244  007D02  A304               	btfss	LCDWriteChar@chr& (0+255),1,b
 13245  007D04  D002               	goto	l1689
 13246                           
 13247                           ; BSR set to: 1
 13248  007D06  8ABD               	bsf	189,5,c	;volatile
 13249  007D08  D001               	goto	l18309
 13250  007D0A                     l1689:
 13251                           
 13252                           ; BSR set to: 1
 13253  007D0A  9ABD               	bcf	189,5,c	;volatile
 13254  007D0C                     l18309:
 13255                           
 13256                           ; BSR set to: 1
 13257                           ;lcd.c: 185:     if (chr&0x1) do { LATDbits.LATD4 = 1; } while(0); else do { LATDbits.LA
      +                          TD4 = 0; } while(0);
 13258  007D0C  A104               	btfss	LCDWriteChar@chr& (0+255),0,b
 13259  007D0E  D002               	goto	l1695
 13260                           
 13261                           ; BSR set to: 1
 13262  007D10  88BD               	bsf	189,4,c	;volatile
 13263  007D12  D001               	goto	l1697
 13264  007D14                     l1695:
 13265                           
 13266                           ; BSR set to: 1
 13267  007D14  98BD               	bcf	189,4,c	;volatile
 13268  007D16                     l1697:
 13269                           
 13270                           ; BSR set to: 1
 13271  007D16  8CBC               	bsf	188,6,c	;volatile
 13272                           
 13273                           ; BSR set to: 1
 13274                           ;lcd.c: 188:     _delay((unsigned long)((5)*(64000000/4000000.0)));
 13275  007D18  0E1A               	movlw	26
 13276  007D1A                     u22947:
 13277  007D1A  2EE8               	decfsz	wreg,f,c
 13278  007D1C  D7FE               	bra	u22947
 13279  007D1E  D000               	nop2	
 13280  007D20  8EBC               	bsf	188,7,c	;volatile
 13281                           
 13282                           ;lcd.c: 190:  _delay((unsigned long)((10)*(64000000/4000000.0)));
 13283  007D22  0E35               	movlw	53
 13284  007D24                     u22957:
 13285  007D24  2EE8               	decfsz	wreg,f,c
 13286  007D26  D7FE               	bra	u22957
 13287  007D28  F000               	nop	
 13288  007D2A  9EBC               	bcf	188,7,c	;volatile
 13289                           
 13290                           ;lcd.c: 192:     _delay((unsigned long)((38)*(64000000/4000000.0)));
 13291  007D2C  0ECA               	movlw	202
 13292  007D2E                     u22967:
 13293  007D2E  2EE8               	decfsz	wreg,f,c
 13294  007D30  D7FE               	bra	u22967
 13295  007D32  D000               	nop2	
 13296  007D34  0012               	return		;funcret
 13297  007D36                     __end_of_LCDWriteChar:
 13298                           	opt callstack 0
 13299                           
 13300 ;; *************** function _DisableAlarmSV1 *****************
 13301 ;; Defined at:
 13302 ;;		line 873 in file "monitor.c"
 13303 ;; Parameters:    Size  Location     Type
 13304 ;;		None
 13305 ;; Auto vars:     Size  Location     Type
 13306 ;;		None
 13307 ;; Return value:  Size  Location     Type
 13308 ;;                  1    wreg      void 
 13309 ;; Registers used:
 13310 ;;		wreg, status,2
 13311 ;; Tracked objects:
 13312 ;;		On entry : 3F/3
 13313 ;;		On exit  : 3F/0
 13314 ;;		Unchanged: 0/0
 13315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13320 ;;Total ram usage:        0 bytes
 13321 ;; Hardware stack levels used:    1
 13322 ;; Hardware stack levels required when called:   16
 13323 ;; This function calls:
 13324 ;;		Nothing
 13325 ;; This function is called by:
 13326 ;;		_main
 13327 ;; This function uses a non-reentrant model
 13328 ;;
 13329                           
 13330                           	psect	text77
 13331  00A4FA                     __ptext77:
 13332                           	opt callstack 0
 13333  00A4FA                     _DisableAlarmSV1:
 13334                           	opt callstack 14
 13335                           
 13336                           ; BSR set to: 3
 13337                           ;monitor.c: 874:     disableAlarmSV1=1;
 13338                           
 13339                           ;incstack = 0
 13340  00A4FA  0E01               	movlw	1
 13341  00A4FC  0100               	movlb	0	; () banked
 13342  00A4FE  6FF3               	movwf	_disableAlarmSV1& (0+255),b
 13343                           
 13344                           ; BSR set to: 0
 13345  00A500  0012               	return		;funcret
 13346  00A502                     __end_of_DisableAlarmSV1:
 13347                           	opt callstack 0
 13348                           
 13349 ;; *************** function _ControllerInit *****************
 13350 ;; Defined at:
 13351 ;;		line 214 in file "controller.c"
 13352 ;; Parameters:    Size  Location     Type
 13353 ;;		None
 13354 ;; Auto vars:     Size  Location     Type
 13355 ;;		None
 13356 ;; Return value:  Size  Location     Type
 13357 ;;                  1    wreg      void 
 13358 ;; Registers used:
 13359 ;;		wreg, status,2, status,0, cstack
 13360 ;; Tracked objects:
 13361 ;;		On entry : 3C/0
 13362 ;;		On exit  : 3F/1
 13363 ;;		Unchanged: 0/0
 13364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13369 ;;Total ram usage:        0 bytes
 13370 ;; Hardware stack levels used:    1
 13371 ;; Hardware stack levels required when called:   18
 13372 ;; This function calls:
 13373 ;;		_I2C2_Open
 13374 ;;		_I2C2_SlaveSetReadIntHandler
 13375 ;;		_I2C2_SlaveSetStopIntHandler
 13376 ;;		_TMR6_SetInterruptHandler
 13377 ;;		_TMR6_StartTimer
 13378 ;; This function is called by:
 13379 ;;		_main
 13380 ;; This function uses a non-reentrant model
 13381 ;;
 13382                           
 13383                           	psect	text78
 13384  0092E8                     __ptext78:
 13385                           	opt callstack 0
 13386  0092E8                     _ControllerInit:
 13387                           	opt callstack 12
 13388                           
 13389                           ;controller.c: 216:     commandReceived = 0;
 13390                           
 13391                           ; BSR set to: 0
 13392                           ;incstack = 0
 13393  0092E8  0E00               	movlw	0
 13394  0092EA  0102               	movlb	2	; () banked
 13395  0092EC  6F9B               	movwf	_commandReceived& (0+255),b
 13396                           
 13397                           ;controller.c: 217:     init = 0;
 13398  0092EE  0E00               	movlw	0
 13399  0092F0  6F9A               	movwf	_init& (0+255),b
 13400                           
 13401                           ;controller.c: 218:     run = 0;
 13402  0092F2  0E00               	movlw	0
 13403  0092F4  0100               	movlb	0	; () banked
 13404  0092F6  6FF0               	movwf	_run& (0+255),b
 13405                           
 13406                           ; BSR set to: 0
 13407                           ;controller.c: 221:     I2C2_Open();
 13408  0092F8  EC82  F044         	call	_I2C2_Open	;wreg free
 13409                           
 13410                           ; BSR set to: 61
 13411                           ;controller.c: 225:     I2C2_SlaveSetReadIntHandler( ReceiveHandler);
 13412  0092FC  0E42               	movlw	low _ReceiveHandler
 13413  0092FE  0101               	movlb	1	; () banked
 13414  009300  6F04               	movwf	I2C2_SlaveSetReadIntHandler@handler& (0+255),b
 13415  009302  0E91               	movlw	high _ReceiveHandler
 13416  009304  6F05               	movwf	(I2C2_SlaveSetReadIntHandler@handler+1)& (0+255),b
 13417  009306  EC4A  F051         	call	_I2C2_SlaveSetReadIntHandler	;wreg free
 13418                           
 13419                           ; BSR set to: 1
 13420                           ;controller.c: 227:     I2C2_SlaveSetStopIntHandler( StopHandler);
 13421  00930A  0E1E               	movlw	low _StopHandler
 13422  00930C  6F04               	movwf	I2C2_SlaveSetStopIntHandler@handler& (0+255),b
 13423  00930E  0E8D               	movlw	high _StopHandler
 13424  009310  6F05               	movwf	(I2C2_SlaveSetStopIntHandler@handler+1)& (0+255),b
 13425  009312  EC35  F051         	call	_I2C2_SlaveSetStopIntHandler	;wreg free
 13426                           
 13427                           ; BSR set to: 1
 13428                           ;controller.c: 228:     TMR6_SetInterruptHandler(ControllerTimerHandler);
 13429  009316  0E82               	movlw	low _ControllerTimerHandler
 13430  009318  6F04               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
 13431  00931A  0E80               	movlw	high _ControllerTimerHandler
 13432  00931C  6F05               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 13433  00931E  EC2E  F051         	call	_TMR6_SetInterruptHandler	;wreg free
 13434                           
 13435                           ; BSR set to: 1
 13436                           ;controller.c: 229:     TMR6_StartTimer();
 13437  009322  ECF0  F052         	call	_TMR6_StartTimer	;wreg free
 13438                           
 13439                           ; BSR set to: 1
 13440  009326  0012               	return		;funcret
 13441  009328                     __end_of_ControllerInit:
 13442                           	opt callstack 0
 13443                           
 13444 ;; *************** function _TMR6_StartTimer *****************
 13445 ;; Defined at:
 13446 ;;		line 114 in file "mcc_generated_files/tmr6.c"
 13447 ;; Parameters:    Size  Location     Type
 13448 ;;		None
 13449 ;; Auto vars:     Size  Location     Type
 13450 ;;		None
 13451 ;; Return value:  Size  Location     Type
 13452 ;;                  1    wreg      void 
 13453 ;; Registers used:
 13454 ;;		cstack
 13455 ;; Tracked objects:
 13456 ;;		On entry : 3F/1
 13457 ;;		On exit  : 3F/1
 13458 ;;		Unchanged: 3F/0
 13459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13464 ;;Total ram usage:        0 bytes
 13465 ;; Hardware stack levels used:    1
 13466 ;; Hardware stack levels required when called:   17
 13467 ;; This function calls:
 13468 ;;		_TMR6_Start
 13469 ;; This function is called by:
 13470 ;;		_ControllerInit
 13471 ;; This function uses a non-reentrant model
 13472 ;;
 13473                           
 13474                           	psect	text79
 13475  00A5E0                     __ptext79:
 13476                           	opt callstack 0
 13477  00A5E0                     _TMR6_StartTimer:
 13478                           	opt callstack 12
 13479                           
 13480                           ; BSR set to: 1
 13481                           ;mcc_generated_files/tmr6.c: 116:     TMR6_Start();
 13482                           
 13483                           ; BSR set to: 1
 13484                           ;incstack = 0
 13485  00A5E0  EC45  F053         	call	_TMR6_Start	;wreg free
 13486                           
 13487                           ; BSR set to: 1
 13488  00A5E4  0012               	return		;funcret
 13489  00A5E6                     __end_of_TMR6_StartTimer:
 13490                           	opt callstack 0
 13491                           
 13492 ;; *************** function _TMR6_Start *****************
 13493 ;; Defined at:
 13494 ;;		line 108 in file "mcc_generated_files/tmr6.c"
 13495 ;; Parameters:    Size  Location     Type
 13496 ;;		None
 13497 ;; Auto vars:     Size  Location     Type
 13498 ;;		None
 13499 ;; Return value:  Size  Location     Type
 13500 ;;                  1    wreg      void 
 13501 ;; Registers used:
 13502 ;;		None
 13503 ;; Tracked objects:
 13504 ;;		On entry : 3F/1
 13505 ;;		On exit  : 3F/1
 13506 ;;		Unchanged: 3F/0
 13507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13512 ;;Total ram usage:        0 bytes
 13513 ;; Hardware stack levels used:    1
 13514 ;; Hardware stack levels required when called:   16
 13515 ;; This function calls:
 13516 ;;		Nothing
 13517 ;; This function is called by:
 13518 ;;		_TMR6_StartTimer
 13519 ;; This function uses a non-reentrant model
 13520 ;;
 13521                           
 13522                           	psect	text80
 13523  00A68A                     __ptext80:
 13524                           	opt callstack 0
 13525  00A68A                     _TMR6_Start:
 13526                           	opt callstack 12
 13527                           
 13528                           ; BSR set to: 1
 13529                           ;mcc_generated_files/tmr6.c: 111:     T6CONbits.TMR6ON = 1;
 13530                           
 13531                           ; BSR set to: 1
 13532                           ;incstack = 0
 13533  00A68A  8E94               	bsf	148,7,c	;volatile
 13534                           
 13535                           ; BSR set to: 1
 13536  00A68C  0012               	return		;funcret
 13537  00A68E                     __end_of_TMR6_Start:
 13538                           	opt callstack 0
 13539                           
 13540 ;; *************** function _TMR6_SetInterruptHandler *****************
 13541 ;; Defined at:
 13542 ;;		line 178 in file "mcc_generated_files/tmr6.c"
 13543 ;; Parameters:    Size  Location     Type
 13544 ;;  InterruptHan    2    4[BANK1 ] PTR FTN()void 
 13545 ;;		 -> ControllerTimerHandler(1), TMR6_DefaultInterruptHandler(1), 
 13546 ;; Auto vars:     Size  Location     Type
 13547 ;;		None
 13548 ;; Return value:  Size  Location     Type
 13549 ;;                  1    wreg      void 
 13550 ;; Registers used:
 13551 ;;		wreg, status,2, status,0
 13552 ;; Tracked objects:
 13553 ;;		On entry : 3F/1
 13554 ;;		On exit  : 3F/1
 13555 ;;		Unchanged: 3F/0
 13556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13557 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13560 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13561 ;;Total ram usage:        2 bytes
 13562 ;; Hardware stack levels used:    1
 13563 ;; Hardware stack levels required when called:   16
 13564 ;; This function calls:
 13565 ;;		Nothing
 13566 ;; This function is called by:
 13567 ;;		_TMR6_Initialize
 13568 ;;		_ControllerInit
 13569 ;; This function uses a non-reentrant model
 13570 ;;
 13571                           
 13572                           	psect	text81
 13573  00A25C                     __ptext81:
 13574                           	opt callstack 0
 13575  00A25C                     _TMR6_SetInterruptHandler:
 13576                           	opt callstack 12
 13577                           
 13578                           ; BSR set to: 1
 13579                           ;mcc_generated_files/tmr6.c: 179:     TMR6_InterruptHandler = InterruptHandler;
 13580                           
 13581                           ; BSR set to: 1
 13582                           ;incstack = 0
 13583  00A25C  0060  F410  F2D9   	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
 13584  00A262  0060  F414  F2DA   	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
 13585                           
 13586                           ; BSR set to: 1
 13587  00A268  0012               	return		;funcret
 13588  00A26A                     __end_of_TMR6_SetInterruptHandler:
 13589                           	opt callstack 0
 13590                           
 13591 ;; *************** function _I2C2_SlaveSetStopIntHandler *****************
 13592 ;; Defined at:
 13593 ;;		line 269 in file "mcc_generated_files/i2c2_slave.c"
 13594 ;; Parameters:    Size  Location     Type
 13595 ;;  handler         2    4[BANK1 ] PTR FTN()void 
 13596 ;;		 -> StopHandler(1), 
 13597 ;; Auto vars:     Size  Location     Type
 13598 ;;		None
 13599 ;; Return value:  Size  Location     Type
 13600 ;;                  1    wreg      void 
 13601 ;; Registers used:
 13602 ;;		wreg, status,2, status,0
 13603 ;; Tracked objects:
 13604 ;;		On entry : 3F/1
 13605 ;;		On exit  : 3F/1
 13606 ;;		Unchanged: 3F/0
 13607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13608 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13611 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13612 ;;Total ram usage:        2 bytes
 13613 ;; Hardware stack levels used:    1
 13614 ;; Hardware stack levels required when called:   16
 13615 ;; This function calls:
 13616 ;;		Nothing
 13617 ;; This function is called by:
 13618 ;;		_ControllerInit
 13619 ;; This function uses a non-reentrant model
 13620 ;;
 13621                           
 13622                           	psect	text82
 13623  00A26A                     __ptext82:
 13624                           	opt callstack 0
 13625  00A26A                     _I2C2_SlaveSetStopIntHandler:
 13626                           	opt callstack 13
 13627                           
 13628                           ; BSR set to: 1
 13629                           ;mcc_generated_files/i2c2_slave.c: 270:     I2C2_SlaveStopInterruptHandler = handler;
 13630                           
 13631                           ; BSR set to: 1
 13632                           ;incstack = 0
 13633  00A26A  0060  F410  F292   	movff	I2C2_SlaveSetStopIntHandler@handler,_I2C2_SlaveStopInterruptHandler
 13634  00A270  0060  F414  F293   	movff	I2C2_SlaveSetStopIntHandler@handler+1,_I2C2_SlaveStopInterruptHandler+1
 13635                           
 13636                           ; BSR set to: 1
 13637  00A276  0012               	return		;funcret
 13638  00A278                     __end_of_I2C2_SlaveSetStopIntHandler:
 13639                           	opt callstack 0
 13640                           
 13641 ;; *************** function _I2C2_Open *****************
 13642 ;; Defined at:
 13643 ;;		line 128 in file "mcc_generated_files/i2c2_slave.c"
 13644 ;; Parameters:    Size  Location     Type
 13645 ;;		None
 13646 ;; Auto vars:     Size  Location     Type
 13647 ;;		None
 13648 ;; Return value:  Size  Location     Type
 13649 ;;                  1    wreg      void 
 13650 ;; Registers used:
 13651 ;;		wreg, status,2, status,0, cstack
 13652 ;; Tracked objects:
 13653 ;;		On entry : 3F/0
 13654 ;;		On exit  : 3F/3D
 13655 ;;		Unchanged: 0/0
 13656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13661 ;;Total ram usage:        0 bytes
 13662 ;; Hardware stack levels used:    1
 13663 ;; Hardware stack levels required when called:   17
 13664 ;; This function calls:
 13665 ;;		_I2C2_SlaveEnableIrq
 13666 ;;		_I2C2_SlaveOpen
 13667 ;;		_I2C2_SlaveSetAddrIntHandler
 13668 ;;		_I2C2_SlaveSetBusColIntHandler
 13669 ;;		_I2C2_SlaveSetIsrHandler
 13670 ;;		_I2C2_SlaveSetReadIntHandler
 13671 ;;		_I2C2_SlaveSetSlaveAddr
 13672 ;;		_I2C2_SlaveSetSlaveMask
 13673 ;;		_I2C2_SlaveSetWrColIntHandler
 13674 ;;		_I2C2_SlaveSetWriteIntHandler
 13675 ;; This function is called by:
 13676 ;;		_ControllerInit
 13677 ;; This function uses a non-reentrant model
 13678 ;;
 13679                           
 13680                           	psect	text83
 13681  008904                     __ptext83:
 13682                           	opt callstack 0
 13683  008904                     _I2C2_Open:
 13684                           	opt callstack 12
 13685                           
 13686                           ; BSR set to: 0
 13687                           ;mcc_generated_files/i2c2_slave.c: 130:     I2C2_on = 1;
 13688                           
 13689                           ; BSR set to: 1
 13690                           ;incstack = 0
 13691  008904  0E01               	movlw	1
 13692  008906  0102               	movlb	2	; () banked
 13693  008908  6FB4               	movwf	_I2C2_on& (0+255),b
 13694                           
 13695                           ; BSR set to: 2
 13696                           ;mcc_generated_files/i2c2_slave.c: 131:     I2C2_SlaveOpen();
 13697  00890A  EC2C  F052         	call	_I2C2_SlaveOpen	;wreg free
 13698                           
 13699                           ; BSR set to: 61
 13700                           ;mcc_generated_files/i2c2_slave.c: 132:     I2C2_SlaveSetSlaveAddr(0x50 << 1);
 13701  00890E  0EA0               	movlw	160
 13702  008910  ECF8  F051         	call	_I2C2_SlaveSetSlaveAddr
 13703                           
 13704                           ;mcc_generated_files/i2c2_slave.c: 134:     I2C2_SlaveSetSlaveMask(0);
 13705  008914  0E00               	movlw	0
 13706  008916  ECB7  F050         	call	_I2C2_SlaveSetSlaveMask
 13707                           
 13708                           ; BSR set to: 61
 13709                           ;mcc_generated_files/i2c2_slave.c: 135:     I2C2_SlaveSetIsrHandler(I2C2_Isr);
 13710  00891A  0E9C               	movlw	low _I2C2_Isr
 13711  00891C  0101               	movlb	1	; () banked
 13712  00891E  6F04               	movwf	I2C2_SlaveSetIsrHandler@handler& (0+255),b
 13713  008920  0E88               	movlw	high _I2C2_Isr
 13714  008922  6F05               	movwf	(I2C2_SlaveSetIsrHandler@handler+1)& (0+255),b
 13715  008924  EC51  F051         	call	_I2C2_SlaveSetIsrHandler	;wreg free
 13716                           
 13717                           ; BSR set to: 1
 13718                           ;mcc_generated_files/i2c2_slave.c: 136:     I2C2_SlaveSetBusColIntHandler(I2C2_SlaveDefB
      +                          usColInterruptHandler);
 13719  008928  0E00               	movlw	0
 13720  00892A  6F04               	movwf	I2C2_SlaveSetBusColIntHandler@handler& (0+255),b
 13721  00892C  0E00               	movlw	0
 13722  00892E  6F05               	movwf	(I2C2_SlaveSetBusColIntHandler@handler+1)& (0+255),b
 13723  008930  EC58  F051         	call	_I2C2_SlaveSetBusColIntHandler	;wreg free
 13724                           
 13725                           ; BSR set to: 1
 13726                           ;mcc_generated_files/i2c2_slave.c: 137:     I2C2_SlaveSetWriteIntHandler(I2C2_SlaveDefWr
      +                          InterruptHandler);
 13727  008934  0E00               	movlw	0
 13728  008936  6F04               	movwf	I2C2_SlaveSetWriteIntHandler@handler& (0+255),b
 13729  008938  0E00               	movlw	0
 13730  00893A  6F05               	movwf	(I2C2_SlaveSetWriteIntHandler@handler+1)& (0+255),b
 13731  00893C  EC3C  F051         	call	_I2C2_SlaveSetWriteIntHandler	;wreg free
 13732                           
 13733                           ; BSR set to: 1
 13734                           ;mcc_generated_files/i2c2_slave.c: 138:     I2C2_SlaveSetReadIntHandler(I2C2_SlaveDefRdI
      +                          nterruptHandler);
 13735  008940  0E9E               	movlw	low _I2C2_SlaveDefRdInterruptHandler
 13736  008942  6F04               	movwf	I2C2_SlaveSetReadIntHandler@handler& (0+255),b
 13737  008944  0EA4               	movlw	high _I2C2_SlaveDefRdInterruptHandler
 13738  008946  6F05               	movwf	(I2C2_SlaveSetReadIntHandler@handler+1)& (0+255),b
 13739  008948  EC4A  F051         	call	_I2C2_SlaveSetReadIntHandler	;wreg free
 13740                           
 13741                           ; BSR set to: 1
 13742                           ;mcc_generated_files/i2c2_slave.c: 139:     I2C2_SlaveSetAddrIntHandler(I2C2_SlaveDefAdd
      +                          rInterruptHandler);
 13743  00894C  0E00               	movlw	0
 13744  00894E  6F04               	movwf	I2C2_SlaveSetAddrIntHandler@handler& (0+255),b
 13745  008950  0E00               	movlw	0
 13746  008952  6F05               	movwf	(I2C2_SlaveSetAddrIntHandler@handler+1)& (0+255),b
 13747  008954  EC5F  F051         	call	_I2C2_SlaveSetAddrIntHandler	;wreg free
 13748                           
 13749                           ; BSR set to: 1
 13750                           ;mcc_generated_files/i2c2_slave.c: 140:     I2C2_SlaveSetWrColIntHandler(I2C2_SlaveDefWr
      +                          ColInterruptHandler);
 13751  008958  0E00               	movlw	0
 13752  00895A  6F04               	movwf	I2C2_SlaveSetWrColIntHandler@handler& (0+255),b
 13753  00895C  0E00               	movlw	0
 13754  00895E  6F05               	movwf	(I2C2_SlaveSetWrColIntHandler@handler+1)& (0+255),b
 13755  008960  EC43  F051         	call	_I2C2_SlaveSetWrColIntHandler	;wreg free
 13756                           
 13757                           ; BSR set to: 1
 13758                           ;mcc_generated_files/i2c2_slave.c: 141:     I2C2_SlaveEnableIrq();
 13759  008964  EC16  F050         	call	_I2C2_SlaveEnableIrq	;wreg free
 13760                           
 13761                           ; BSR set to: 61
 13762  008968  0012               	return		;funcret
 13763  00896A                     __end_of_I2C2_Open:
 13764                           	opt callstack 0
 13765                           
 13766 ;; *************** function _I2C2_SlaveSetWriteIntHandler *****************
 13767 ;; Defined at:
 13768 ;;		line 252 in file "mcc_generated_files/i2c2_slave.c"
 13769 ;; Parameters:    Size  Location     Type
 13770 ;;  handler         2    4[BANK1 ] PTR FTN()void 
 13771 ;;		 -> I2C2_SlaveDefWrInterruptHandler(1), 
 13772 ;; Auto vars:     Size  Location     Type
 13773 ;;		None
 13774 ;; Return value:  Size  Location     Type
 13775 ;;                  1    wreg      void 
 13776 ;; Registers used:
 13777 ;;		wreg, status,2, status,0
 13778 ;; Tracked objects:
 13779 ;;		On entry : 3F/1
 13780 ;;		On exit  : 3F/1
 13781 ;;		Unchanged: 3F/0
 13782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13783 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13786 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13787 ;;Total ram usage:        2 bytes
 13788 ;; Hardware stack levels used:    1
 13789 ;; Hardware stack levels required when called:   16
 13790 ;; This function calls:
 13791 ;;		Nothing
 13792 ;; This function is called by:
 13793 ;;		_I2C2_Open
 13794 ;; This function uses a non-reentrant model
 13795 ;;
 13796                           
 13797                           	psect	text84
 13798  00A278                     __ptext84:
 13799                           	opt callstack 0
 13800  00A278                     _I2C2_SlaveSetWriteIntHandler:
 13801                           	opt callstack 12
 13802                           
 13803                           ; BSR set to: 1
 13804                           ;mcc_generated_files/i2c2_slave.c: 253:     I2C2_SlaveWrInterruptHandler = handler;
 13805                           
 13806                           ; BSR set to: 61
 13807                           ;incstack = 0
 13808  00A278  0060  F410  F294   	movff	I2C2_SlaveSetWriteIntHandler@handler,_I2C2_SlaveWrInterruptHandler
 13809  00A27E  0060  F414  F295   	movff	I2C2_SlaveSetWriteIntHandler@handler+1,_I2C2_SlaveWrInterruptHandler+1
 13810                           
 13811                           ; BSR set to: 1
 13812  00A284  0012               	return		;funcret
 13813  00A286                     __end_of_I2C2_SlaveSetWriteIntHandler:
 13814                           	opt callstack 0
 13815                           
 13816 ;; *************** function _I2C2_SlaveSetWrColIntHandler *****************
 13817 ;; Defined at:
 13818 ;;		line 301 in file "mcc_generated_files/i2c2_slave.c"
 13819 ;; Parameters:    Size  Location     Type
 13820 ;;  handler         2    4[BANK1 ] PTR FTN()void 
 13821 ;;		 -> I2C2_SlaveDefWrColInterruptHandler(1), 
 13822 ;; Auto vars:     Size  Location     Type
 13823 ;;		None
 13824 ;; Return value:  Size  Location     Type
 13825 ;;                  1    wreg      void 
 13826 ;; Registers used:
 13827 ;;		wreg, status,2, status,0
 13828 ;; Tracked objects:
 13829 ;;		On entry : 3F/1
 13830 ;;		On exit  : 3F/1
 13831 ;;		Unchanged: 3F/0
 13832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13833 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13836 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13837 ;;Total ram usage:        2 bytes
 13838 ;; Hardware stack levels used:    1
 13839 ;; Hardware stack levels required when called:   16
 13840 ;; This function calls:
 13841 ;;		Nothing
 13842 ;; This function is called by:
 13843 ;;		_I2C2_Open
 13844 ;; This function uses a non-reentrant model
 13845 ;;
 13846                           
 13847                           	psect	text85
 13848  00A286                     __ptext85:
 13849                           	opt callstack 0
 13850  00A286                     _I2C2_SlaveSetWrColIntHandler:
 13851                           	opt callstack 12
 13852                           
 13853                           ; BSR set to: 1
 13854                           ;mcc_generated_files/i2c2_slave.c: 302:     I2C2_SlaveWrColInterruptHandler = handler;
 13855                           
 13856                           ; BSR set to: 1
 13857                           ;incstack = 0
 13858  00A286  0060  F410  F28C   	movff	I2C2_SlaveSetWrColIntHandler@handler,_I2C2_SlaveWrColInterruptHandler
 13859  00A28C  0060  F414  F28D   	movff	I2C2_SlaveSetWrColIntHandler@handler+1,_I2C2_SlaveWrColInterruptHandler+1
 13860                           
 13861                           ; BSR set to: 1
 13862  00A292  0012               	return		;funcret
 13863  00A294                     __end_of_I2C2_SlaveSetWrColIntHandler:
 13864                           	opt callstack 0
 13865                           
 13866 ;; *************** function _I2C2_SlaveSetSlaveMask *****************
 13867 ;; Defined at:
 13868 ;;		line 354 in file "mcc_generated_files/i2c2_slave.c"
 13869 ;; Parameters:    Size  Location     Type
 13870 ;;  maskAddr        1    wreg     unsigned char 
 13871 ;; Auto vars:     Size  Location     Type
 13872 ;;  maskAddr        1    4[BANK1 ] unsigned char 
 13873 ;; Return value:  Size  Location     Type
 13874 ;;                  1    wreg      void 
 13875 ;; Registers used:
 13876 ;;		wreg, status,2, status,0
 13877 ;; Tracked objects:
 13878 ;;		On entry : 0/3D
 13879 ;;		On exit  : 3F/3D
 13880 ;;		Unchanged: 0/0
 13881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13883 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13885 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13886 ;;Total ram usage:        1 bytes
 13887 ;; Hardware stack levels used:    1
 13888 ;; Hardware stack levels required when called:   16
 13889 ;; This function calls:
 13890 ;;		Nothing
 13891 ;; This function is called by:
 13892 ;;		_I2C2_Open
 13893 ;; This function uses a non-reentrant model
 13894 ;;
 13895                           
 13896                           	psect	text86
 13897  00A16E                     __ptext86:
 13898                           	opt callstack 0
 13899  00A16E                     _I2C2_SlaveSetSlaveMask:
 13900                           	opt callstack 12
 13901                           
 13902                           ; BSR set to: 1
 13903                           ;incstack = 0
 13904                           ;I2C2_SlaveSetSlaveMask@maskAddr stored from wreg
 13905  00A16E  0101               	movlb	1	; () banked
 13906  00A170  6F04               	movwf	I2C2_SlaveSetSlaveMask@maskAddr& (0+255),b
 13907                           
 13908                           ;mcc_generated_files/i2c2_slave.c: 354: static __attribute__((inline)) void I2C2_SlaveSe
      +                          tSlaveMask(uint8_t maskAddr);mcc_generated_files/i2c2_slave.c: 355: {;mcc_generated_file
      +                          s/i2c2_slave.c: 356:     I2C2ADR1 = ~maskAddr;
 13909  00A172  0101               	movlb	1	; () banked
 13910  00A174  5104               	movf	I2C2_SlaveSetSlaveMask@maskAddr& (0+255),w,b
 13911  00A176  0AFF               	xorlw	255
 13912  00A178  013D               	movlb	61	; () banked
 13913  00A17A  6F5A               	movwf	90,b	;volatile
 13914                           
 13915                           ; BSR set to: 61
 13916  00A17C  0012               	return		;funcret
 13917  00A17E                     __end_of_I2C2_SlaveSetSlaveMask:
 13918                           	opt callstack 0
 13919                           
 13920 ;; *************** function _I2C2_SlaveSetSlaveAddr *****************
 13921 ;; Defined at:
 13922 ;;		line 349 in file "mcc_generated_files/i2c2_slave.c"
 13923 ;; Parameters:    Size  Location     Type
 13924 ;;  slaveAddr       1    wreg     unsigned char 
 13925 ;; Auto vars:     Size  Location     Type
 13926 ;;  slaveAddr       1    4[BANK1 ] unsigned char 
 13927 ;; Return value:  Size  Location     Type
 13928 ;;                  1    wreg      void 
 13929 ;; Registers used:
 13930 ;;		wreg
 13931 ;; Tracked objects:
 13932 ;;		On entry : 3F/3D
 13933 ;;		On exit  : 0/0
 13934 ;;		Unchanged: 0/0
 13935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13937 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13939 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13940 ;;Total ram usage:        1 bytes
 13941 ;; Hardware stack levels used:    1
 13942 ;; Hardware stack levels required when called:   16
 13943 ;; This function calls:
 13944 ;;		Nothing
 13945 ;; This function is called by:
 13946 ;;		_I2C2_Open
 13947 ;; This function uses a non-reentrant model
 13948 ;;
 13949                           
 13950                           	psect	text87
 13951  00A3F0                     __ptext87:
 13952                           	opt callstack 0
 13953  00A3F0                     _I2C2_SlaveSetSlaveAddr:
 13954                           	opt callstack 12
 13955                           
 13956                           ; BSR set to: 61
 13957                           ;incstack = 0
 13958                           ;I2C2_SlaveSetSlaveAddr@slaveAddr stored from wreg
 13959  00A3F0  0101               	movlb	1	; () banked
 13960  00A3F2  6F04               	movwf	I2C2_SlaveSetSlaveAddr@slaveAddr& (0+255),b
 13961                           
 13962                           ;mcc_generated_files/i2c2_slave.c: 349: static __attribute__((inline)) void I2C2_SlaveSe
      +                          tSlaveAddr(uint8_t slaveAddr);mcc_generated_files/i2c2_slave.c: 350: {;mcc_generated_fil
      +                          es/i2c2_slave.c: 351:     I2C2ADR0 = slaveAddr;
 13963  00A3F4  0060  F413  FD59   	movff	I2C2_SlaveSetSlaveAddr@slaveAddr,15705	;volatile
 13964  00A3FA  0012               	return		;funcret
 13965  00A3FC                     __end_of_I2C2_SlaveSetSlaveAddr:
 13966                           	opt callstack 0
 13967                           
 13968 ;; *************** function _I2C2_SlaveSetReadIntHandler *****************
 13969 ;; Defined at:
 13970 ;;		line 235 in file "mcc_generated_files/i2c2_slave.c"
 13971 ;; Parameters:    Size  Location     Type
 13972 ;;  handler         2    4[BANK1 ] PTR FTN()void 
 13973 ;;		 -> ReceiveHandler(1), I2C2_SlaveDefRdInterruptHandler(1), 
 13974 ;; Auto vars:     Size  Location     Type
 13975 ;;		None
 13976 ;; Return value:  Size  Location     Type
 13977 ;;                  1    wreg      void 
 13978 ;; Registers used:
 13979 ;;		wreg, status,2, status,0
 13980 ;; Tracked objects:
 13981 ;;		On entry : 3F/1
 13982 ;;		On exit  : 3F/1
 13983 ;;		Unchanged: 3F/0
 13984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13985 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13988 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13989 ;;Total ram usage:        2 bytes
 13990 ;; Hardware stack levels used:    1
 13991 ;; Hardware stack levels required when called:   16
 13992 ;; This function calls:
 13993 ;;		Nothing
 13994 ;; This function is called by:
 13995 ;;		_I2C2_Open
 13996 ;;		_ControllerInit
 13997 ;; This function uses a non-reentrant model
 13998 ;;
 13999                           
 14000                           	psect	text88
 14001  00A294                     __ptext88:
 14002                           	opt callstack 0
 14003  00A294                     _I2C2_SlaveSetReadIntHandler:
 14004                           	opt callstack 13
 14005                           
 14006                           ; BSR set to: 1
 14007                           ;mcc_generated_files/i2c2_slave.c: 236:     I2C2_SlaveRdInterruptHandler = handler;
 14008                           
 14009                           ;incstack = 0
 14010  00A294  0060  F410  F296   	movff	I2C2_SlaveSetReadIntHandler@handler,_I2C2_SlaveRdInterruptHandler
 14011  00A29A  0060  F414  F297   	movff	I2C2_SlaveSetReadIntHandler@handler+1,_I2C2_SlaveRdInterruptHandler+1
 14012                           
 14013                           ; BSR set to: 1
 14014  00A2A0  0012               	return		;funcret
 14015  00A2A2                     __end_of_I2C2_SlaveSetReadIntHandler:
 14016                           	opt callstack 0
 14017                           
 14018 ;; *************** function _I2C2_SlaveSetIsrHandler *****************
 14019 ;; Defined at:
 14020 ;;		line 229 in file "mcc_generated_files/i2c2_slave.c"
 14021 ;; Parameters:    Size  Location     Type
 14022 ;;  handler         2    4[BANK1 ] PTR FTN()void 
 14023 ;;		 -> I2C2_Isr(1), 
 14024 ;; Auto vars:     Size  Location     Type
 14025 ;;		None
 14026 ;; Return value:  Size  Location     Type
 14027 ;;                  1    wreg      void 
 14028 ;; Registers used:
 14029 ;;		wreg, status,2, status,0
 14030 ;; Tracked objects:
 14031 ;;		On entry : 3F/1
 14032 ;;		On exit  : 3F/1
 14033 ;;		Unchanged: 3F/0
 14034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14035 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14038 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14039 ;;Total ram usage:        2 bytes
 14040 ;; Hardware stack levels used:    1
 14041 ;; Hardware stack levels required when called:   16
 14042 ;; This function calls:
 14043 ;;		Nothing
 14044 ;; This function is called by:
 14045 ;;		_I2C2_Open
 14046 ;; This function uses a non-reentrant model
 14047 ;;
 14048                           
 14049                           	psect	text89
 14050  00A2A2                     __ptext89:
 14051                           	opt callstack 0
 14052  00A2A2                     _I2C2_SlaveSetIsrHandler:
 14053                           	opt callstack 12
 14054                           
 14055                           ; BSR set to: 1
 14056                           ;mcc_generated_files/i2c2_slave.c: 229: void I2C2_SlaveSetIsrHandler(interruptHandler ha
      +                          ndler);mcc_generated_files/i2c2_slave.c: 230: {;mcc_generated_files/i2c2_slave.c: 231:  
      +                             I2C2_InterruptHandler = handler;
 14057                           
 14058                           ; BSR set to: 1
 14059                           ;incstack = 0
 14060  00A2A2  0060  F410  F0EE   	movff	I2C2_SlaveSetIsrHandler@handler,_I2C2_InterruptHandler
 14061  00A2A8  0060  F414  F0EF   	movff	I2C2_SlaveSetIsrHandler@handler+1,_I2C2_InterruptHandler+1
 14062                           
 14063                           ; BSR set to: 1
 14064  00A2AE  0012               	return		;funcret
 14065  00A2B0                     __end_of_I2C2_SlaveSetIsrHandler:
 14066                           	opt callstack 0
 14067                           
 14068 ;; *************** function _I2C2_SlaveSetBusColIntHandler *****************
 14069 ;; Defined at:
 14070 ;;		line 317 in file "mcc_generated_files/i2c2_slave.c"
 14071 ;; Parameters:    Size  Location     Type
 14072 ;;  handler         2    4[BANK1 ] PTR FTN()void 
 14073 ;;		 -> I2C2_SlaveDefBusColInterruptHandler(1), 
 14074 ;; Auto vars:     Size  Location     Type
 14075 ;;		None
 14076 ;; Return value:  Size  Location     Type
 14077 ;;                  1    wreg      void 
 14078 ;; Registers used:
 14079 ;;		wreg, status,2, status,0
 14080 ;; Tracked objects:
 14081 ;;		On entry : 3F/1
 14082 ;;		On exit  : 3F/1
 14083 ;;		Unchanged: 3F/0
 14084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14085 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14088 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14089 ;;Total ram usage:        2 bytes
 14090 ;; Hardware stack levels used:    1
 14091 ;; Hardware stack levels required when called:   16
 14092 ;; This function calls:
 14093 ;;		Nothing
 14094 ;; This function is called by:
 14095 ;;		_I2C2_Open
 14096 ;; This function uses a non-reentrant model
 14097 ;;
 14098                           
 14099                           	psect	text90
 14100  00A2B0                     __ptext90:
 14101                           	opt callstack 0
 14102  00A2B0                     _I2C2_SlaveSetBusColIntHandler:
 14103                           	opt callstack 12
 14104                           
 14105                           ; BSR set to: 1
 14106                           ;mcc_generated_files/i2c2_slave.c: 318:     I2C2_SlaveBusColInterruptHandler = handler;
 14107                           
 14108                           ; BSR set to: 1
 14109                           ;incstack = 0
 14110  00A2B0  0060  F410  F28E   	movff	I2C2_SlaveSetBusColIntHandler@handler,_I2C2_SlaveBusColInterruptHandler
 14111  00A2B6  0060  F414  F28F   	movff	I2C2_SlaveSetBusColIntHandler@handler+1,_I2C2_SlaveBusColInterruptHandler+1
 14112                           
 14113                           ; BSR set to: 1
 14114  00A2BC  0012               	return		;funcret
 14115  00A2BE                     __end_of_I2C2_SlaveSetBusColIntHandler:
 14116                           	opt callstack 0
 14117                           
 14118 ;; *************** function _I2C2_SlaveSetAddrIntHandler *****************
 14119 ;; Defined at:
 14120 ;;		line 285 in file "mcc_generated_files/i2c2_slave.c"
 14121 ;; Parameters:    Size  Location     Type
 14122 ;;  handler         2    4[BANK1 ] PTR FTN()void 
 14123 ;;		 -> I2C2_SlaveDefAddrInterruptHandler(1), 
 14124 ;; Auto vars:     Size  Location     Type
 14125 ;;		None
 14126 ;; Return value:  Size  Location     Type
 14127 ;;                  1    wreg      void 
 14128 ;; Registers used:
 14129 ;;		wreg, status,2, status,0
 14130 ;; Tracked objects:
 14131 ;;		On entry : 3F/1
 14132 ;;		On exit  : 3F/1
 14133 ;;		Unchanged: 3F/0
 14134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14135 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14138 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14139 ;;Total ram usage:        2 bytes
 14140 ;; Hardware stack levels used:    1
 14141 ;; Hardware stack levels required when called:   16
 14142 ;; This function calls:
 14143 ;;		Nothing
 14144 ;; This function is called by:
 14145 ;;		_I2C2_Open
 14146 ;; This function uses a non-reentrant model
 14147 ;;
 14148                           
 14149                           	psect	text91
 14150  00A2BE                     __ptext91:
 14151                           	opt callstack 0
 14152  00A2BE                     _I2C2_SlaveSetAddrIntHandler:
 14153                           	opt callstack 12
 14154                           
 14155                           ; BSR set to: 1
 14156                           ;mcc_generated_files/i2c2_slave.c: 286:     I2C2_SlaveAddrInterruptHandler = handler;
 14157                           
 14158                           ; BSR set to: 1
 14159                           ;incstack = 0
 14160  00A2BE  0060  F410  F290   	movff	I2C2_SlaveSetAddrIntHandler@handler,_I2C2_SlaveAddrInterruptHandler
 14161  00A2C4  0060  F414  F291   	movff	I2C2_SlaveSetAddrIntHandler@handler+1,_I2C2_SlaveAddrInterruptHandler+1
 14162                           
 14163                           ; BSR set to: 1
 14164  00A2CA  0012               	return		;funcret
 14165  00A2CC                     __end_of_I2C2_SlaveSetAddrIntHandler:
 14166                           	opt callstack 0
 14167                           
 14168 ;; *************** function _I2C2_SlaveOpen *****************
 14169 ;; Defined at:
 14170 ;;		line 332 in file "mcc_generated_files/i2c2_slave.c"
 14171 ;; Parameters:    Size  Location     Type
 14172 ;;		None
 14173 ;; Auto vars:     Size  Location     Type
 14174 ;;		None
 14175 ;; Return value:  Size  Location     Type
 14176 ;;                  1    wreg      _Bool 
 14177 ;; Registers used:
 14178 ;;		None
 14179 ;; Tracked objects:
 14180 ;;		On entry : 3F/2
 14181 ;;		On exit  : 3F/3D
 14182 ;;		Unchanged: 0/0
 14183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14188 ;;Total ram usage:        0 bytes
 14189 ;; Hardware stack levels used:    1
 14190 ;; Hardware stack levels required when called:   16
 14191 ;; This function calls:
 14192 ;;		Nothing
 14193 ;; This function is called by:
 14194 ;;		_I2C2_Open
 14195 ;; This function uses a non-reentrant model
 14196 ;;
 14197                           
 14198                           	psect	text92
 14199  00A458                     __ptext92:
 14200                           	opt callstack 0
 14201  00A458                     _I2C2_SlaveOpen:
 14202                           	opt callstack 12
 14203                           
 14204                           ; BSR set to: 2
 14205                           ;mcc_generated_files/i2c2_slave.c: 334:     if(!I2C2CON0bits.EN)
 14206                           
 14207                           ; BSR set to: 1
 14208                           ;incstack = 0
 14209  00A458  013D               	movlb	61	; () banked
 14210  00A45A  BF5D               	btfsc	93,7,b	;volatile
 14211  00A45C  0012               	return	
 14212                           
 14213                           ; BSR set to: 61
 14214                           ;mcc_generated_files/i2c2_slave.c: 335:     {;mcc_generated_files/i2c2_slave.c: 336:    
      +                               I2C2CON0bits.EN = 1;
 14215  00A45E  8F5D               	bsf	93,7,b	;volatile
 14216                           
 14217                           ; BSR set to: 61
 14218                           
 14219                           ;mcc_generated_files/i2c2_slave.c: 337:         return 1;;	Return value of _I2C2_SlaveOp
      +                          en is never used
 14220  00A460  0012               	return		;funcret
 14221  00A462                     __end_of_I2C2_SlaveOpen:
 14222                           	opt callstack 0
 14223                           
 14224 ;; *************** function _I2C2_SlaveEnableIrq *****************
 14225 ;; Defined at:
 14226 ;;		line 359 in file "mcc_generated_files/i2c2_slave.c"
 14227 ;; Parameters:    Size  Location     Type
 14228 ;;		None
 14229 ;; Auto vars:     Size  Location     Type
 14230 ;;		None
 14231 ;; Return value:  Size  Location     Type
 14232 ;;                  1    wreg      void 
 14233 ;; Registers used:
 14234 ;;		None
 14235 ;; Tracked objects:
 14236 ;;		On entry : 3F/1
 14237 ;;		On exit  : 3F/3D
 14238 ;;		Unchanged: 0/0
 14239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14244 ;;Total ram usage:        0 bytes
 14245 ;; Hardware stack levels used:    1
 14246 ;; Hardware stack levels required when called:   16
 14247 ;; This function calls:
 14248 ;;		Nothing
 14249 ;; This function is called by:
 14250 ;;		_I2C2_Open
 14251 ;; This function uses a non-reentrant model
 14252 ;;
 14253                           
 14254                           	psect	text93
 14255  00A02C                     __ptext93:
 14256                           	opt callstack 0
 14257  00A02C                     _I2C2_SlaveEnableIrq:
 14258                           	opt callstack 12
 14259                           
 14260                           ; BSR set to: 1
 14261                           ;mcc_generated_files/i2c2_slave.c: 361:     PIE6bits.I2C2IE = 1;
 14262                           
 14263                           ; BSR set to: 61
 14264                           ;incstack = 0
 14265  00A02C  0139               	movlb	57	; () banked
 14266  00A02E  8196               	bsf	150,0,b	;volatile
 14267                           
 14268                           ;mcc_generated_files/i2c2_slave.c: 362:     PIE6bits.I2C2EIE = 0;
 14269  00A030  9396               	bcf	150,1,b	;volatile
 14270                           
 14271                           ;mcc_generated_files/i2c2_slave.c: 363:     PIE5bits.I2C2RXIE = 1;
 14272  00A032  8D95               	bsf	149,6,b	;volatile
 14273                           
 14274                           ;mcc_generated_files/i2c2_slave.c: 364:     PIE5bits.I2C2TXIE = 1;
 14275  00A034  8F95               	bsf	149,7,b	;volatile
 14276                           
 14277                           ;mcc_generated_files/i2c2_slave.c: 365:     I2C2PIEbits.PCIE = 1;
 14278  00A036  013D               	movlb	61	; () banked
 14279  00A038  8564               	bsf	100,2,b	;volatile
 14280                           
 14281                           ;mcc_generated_files/i2c2_slave.c: 366:     I2C2PIEbits.ADRIE = 0;
 14282  00A03A  9764               	bcf	100,3,b	;volatile
 14283                           
 14284                           ;mcc_generated_files/i2c2_slave.c: 367:     I2C2ERRbits.NACKIE = 0;
 14285  00A03C  9160               	bcf	96,0,b	;volatile
 14286                           
 14287                           ;mcc_generated_files/i2c2_slave.c: 369:     I2C2PIEbits.WRIE = 0;
 14288  00A03E  9964               	bcf	100,4,b	;volatile
 14289                           
 14290                           ; BSR set to: 61
 14291  00A040  0012               	return		;funcret
 14292  00A042                     __end_of_I2C2_SlaveEnableIrq:
 14293                           	opt callstack 0
 14294                           
 14295 ;; *************** function _BuzzerTest *****************
 14296 ;; Defined at:
 14297 ;;		line 97 in file "buzzer.c"
 14298 ;; Parameters:    Size  Location     Type
 14299 ;;  note            1    wreg     unsigned char 
 14300 ;; Auto vars:     Size  Location     Type
 14301 ;;  note            1    8[BANK1 ] unsigned char 
 14302 ;; Return value:  Size  Location     Type
 14303 ;;                  1    wreg      void 
 14304 ;; Registers used:
 14305 ;;		wreg, status,2, status,0, cstack
 14306 ;; Tracked objects:
 14307 ;;		On entry : 3F/3
 14308 ;;		On exit  : 0/0
 14309 ;;		Unchanged: 0/0
 14310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14312 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14313 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14314 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14315 ;;Total ram usage:        3 bytes
 14316 ;; Hardware stack levels used:    1
 14317 ;; Hardware stack levels required when called:   18
 14318 ;; This function calls:
 14319 ;;		_BuzzerOff
 14320 ;;		_BuzzerOn
 14321 ;;		_TMR4_Period8BitSet
 14322 ;;		_TMR4_SetInterruptHandler
 14323 ;;		_TMR4_Start
 14324 ;; This function is called by:
 14325 ;;		_main
 14326 ;; This function uses a non-reentrant model
 14327 ;;
 14328                           
 14329                           	psect	text94
 14330  007E5C                     __ptext94:
 14331                           	opt callstack 0
 14332  007E5C                     _BuzzerTest:
 14333                           	opt callstack 12
 14334                           
 14335                           ; BSR set to: 61
 14336                           ;incstack = 0
 14337                           ;BuzzerTest@note stored from wreg
 14338  007E5C  0101               	movlb	1	; () banked
 14339  007E5E  6F08               	movwf	BuzzerTest@note& (0+255),b
 14340                           
 14341                           ;buzzer.c: 98:     TMR4_SetInterruptHandler(BuzzerTestHandler);
 14342  007E60  0E54               	movlw	low _BuzzerTestHandler
 14343  007E62  0101               	movlb	1	; () banked
 14344  007E64  6F04               	movwf	TMR4_SetInterruptHandler@InterruptHandler& (0+255),b
 14345  007E66  0E99               	movlw	high _BuzzerTestHandler
 14346  007E68  6F05               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 14347  007E6A  EC82  F051         	call	_TMR4_SetInterruptHandler	;wreg free
 14348                           
 14349                           ;buzzer.c: 99:     switch (note) {
 14350  007E6E  D01B               	goto	l22049
 14351  007E70                     l22031:
 14352                           
 14353                           ; BSR set to: 1
 14354                           ;buzzer.c: 101:             BuzzerOn(0x8D);
 14355  007E70  0E8D               	movlw	141
 14356  007E72  EC79  F04F         	call	_BuzzerOn
 14357                           
 14358                           ;buzzer.c: 102:             break;
 14359  007E76  D032               	goto	l22051
 14360  007E78                     l22033:
 14361                           
 14362                           ; BSR set to: 1
 14363                           ;buzzer.c: 104:             BuzzerOn(0xFC);
 14364  007E78  0EFC               	movlw	252
 14365  007E7A  EC79  F04F         	call	_BuzzerOn
 14366                           
 14367                           ;buzzer.c: 105:             break;
 14368  007E7E  D02E               	goto	l22051
 14369  007E80                     l22035:
 14370                           
 14371                           ; BSR set to: 1
 14372                           ;buzzer.c: 107:             BuzzerOn(0xEE);
 14373  007E80  0EEE               	movlw	238
 14374  007E82  EC79  F04F         	call	_BuzzerOn
 14375                           
 14376                           ;buzzer.c: 108:             break;
 14377  007E86  D02A               	goto	l22051
 14378  007E88                     l22037:
 14379                           
 14380                           ; BSR set to: 1
 14381                           ;buzzer.c: 110:             BuzzerOn(0xD4);
 14382  007E88  0ED4               	movlw	212
 14383  007E8A  EC79  F04F         	call	_BuzzerOn
 14384                           
 14385                           ;buzzer.c: 111:             break;
 14386  007E8E  D026               	goto	l22051
 14387  007E90                     l22039:
 14388                           
 14389                           ; BSR set to: 1
 14390                           ;buzzer.c: 113:             BuzzerOn(0xBD);
 14391  007E90  0EBD               	movlw	189
 14392  007E92  EC79  F04F         	call	_BuzzerOn
 14393                           
 14394                           ;buzzer.c: 114:             break;
 14395  007E96  D022               	goto	l22051
 14396  007E98                     l22041:
 14397                           
 14398                           ; BSR set to: 1
 14399                           ;buzzer.c: 116:             BuzzerOn(0xB2);
 14400  007E98  0EB2               	movlw	178
 14401  007E9A  EC79  F04F         	call	_BuzzerOn
 14402                           
 14403                           ;buzzer.c: 117:             break;
 14404  007E9E  D01E               	goto	l22051
 14405  007EA0                     l22043:
 14406                           
 14407                           ; BSR set to: 1
 14408                           ;buzzer.c: 119:             BuzzerOff();
 14409  007EA0  ECC7  F050         	call	_BuzzerOff	;wreg free
 14410  007EA4  0012               	return	
 14411  007EA6                     l22049:
 14412                           
 14413                           ; BSR set to: 1
 14414  007EA6  5108               	movf	BuzzerTest@note& (0+255),w,b
 14415  007EA8  6F06               	movwf	??_BuzzerTest& (0+255),b
 14416  007EAA  6B07               	clrf	(??_BuzzerTest+1)& (0+255),b
 14417                           
 14418                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14419                           ; Switch size 1, requested type "simple"
 14420                           ; Number of cases is 1, Range of values is 0 to 0
 14421                           ; switch strategies available:
 14422                           ; Name         Instructions Cycles
 14423                           ; simple_byte            4     3 (average)
 14424                           ;	Chosen strategy is simple_byte
 14425  007EAC  5107               	movf	(??_BuzzerTest+1)& (0+255),w,b
 14426  007EAE  0A00               	xorlw	0	; case 0
 14427  007EB0  A4D8               	btfss	status,2,c
 14428  007EB2  D7F6               	goto	l22043
 14429                           
 14430                           ; BSR set to: 1
 14431                           ; Switch size 1, requested type "simple"
 14432                           ; Number of cases is 6, Range of values is 65 to 70
 14433                           ; switch strategies available:
 14434                           ; Name         Instructions Cycles
 14435                           ; simple_byte           19    10 (average)
 14436                           ;	Chosen strategy is simple_byte
 14437  007EB4  5106               	movf	??_BuzzerTest& (0+255),w,b
 14438  007EB6  0A41               	xorlw	65	; case 65
 14439  007EB8  B4D8               	btfsc	status,2,c
 14440  007EBA  D7DA               	goto	l22031
 14441  007EBC  0A03               	xorlw	3	; case 66
 14442  007EBE  B4D8               	btfsc	status,2,c
 14443  007EC0  D7DB               	goto	l22033
 14444  007EC2  0A01               	xorlw	1	; case 67
 14445  007EC4  B4D8               	btfsc	status,2,c
 14446  007EC6  D7DC               	goto	l22035
 14447  007EC8  0A07               	xorlw	7	; case 68
 14448  007ECA  B4D8               	btfsc	status,2,c
 14449  007ECC  D7DD               	goto	l22037
 14450  007ECE  0A01               	xorlw	1	; case 69
 14451  007ED0  B4D8               	btfsc	status,2,c
 14452  007ED2  D7DE               	goto	l22039
 14453  007ED4  0A03               	xorlw	3	; case 70
 14454  007ED6  B4D8               	btfsc	status,2,c
 14455  007ED8  D7DF               	goto	l22041
 14456  007EDA  D7E2               	goto	l22043
 14457  007EDC                     l22051:
 14458                           
 14459                           ; BSR set to: 57
 14460                           ;buzzer.c: 122:     TMR4_Period8BitSet(51);
 14461  007EDC  0E33               	movlw	51
 14462  007EDE  ECFE  F051         	call	_TMR4_Period8BitSet
 14463                           
 14464                           ;buzzer.c: 123:     TMR4_Start();
 14465  007EE2  EC61  F053         	call	_TMR4_Start	;wreg free
 14466  007EE6  0012               	return		;funcret
 14467  007EE8                     __end_of_BuzzerTest:
 14468                           	opt callstack 0
 14469                           
 14470 ;; *************** function _BuzzerCheck *****************
 14471 ;; Defined at:
 14472 ;;		line 427 in file "buzzer.c"
 14473 ;; Parameters:    Size  Location     Type
 14474 ;;		None
 14475 ;; Auto vars:     Size  Location     Type
 14476 ;;		None
 14477 ;; Return value:  Size  Location     Type
 14478 ;;                  1    wreg      void 
 14479 ;; Registers used:
 14480 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14481 ;; Tracked objects:
 14482 ;;		On entry : 3D/1
 14483 ;;		On exit  : 3F/2
 14484 ;;		Unchanged: 0/0
 14485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14488 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14489 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14490 ;;Total ram usage:        2 bytes
 14491 ;; Hardware stack levels used:    1
 14492 ;; Hardware stack levels required when called:   25
 14493 ;; This function calls:
 14494 ;;		_BuzzerOff
 14495 ;;		_BuzzerOn
 14496 ;;		_SetMonitorFailAlarm
 14497 ;;		_printf
 14498 ;; This function is called by:
 14499 ;;		_main
 14500 ;; This function uses a non-reentrant model
 14501 ;;
 14502                           
 14503                           	psect	text95
 14504  007D36                     __ptext95:
 14505                           	opt callstack 0
 14506  007D36                     _BuzzerCheck:
 14507                           	opt callstack 5
 14508                           
 14509                           ;buzzer.c: 428:     BuzzerOn(0x8D);
 14510                           
 14511                           ;incstack = 0
 14512  007D36  0E8D               	movlw	141
 14513  007D38  EC79  F04F         	call	_BuzzerOn
 14514                           
 14515                           ; BSR set to: 57
 14516                           ;buzzer.c: 429:     _delay((unsigned long)((250)*(64000000/4000.0)));
 14517  007D3C  0E15               	movlw	21
 14518  007D3E  0101               	movlb	1	; () banked
 14519  007D40  6F84               	movwf	(??_BuzzerCheck+1)& (0+255),b
 14520  007D42  0E4B               	movlw	75
 14521  007D44  6F83               	movwf	??_BuzzerCheck& (0+255),b
 14522  007D46  0EBE               	movlw	190
 14523  007D48                     u22977:
 14524  007D48  2EE8               	decfsz	wreg,f,c
 14525  007D4A  D7FE               	bra	u22977
 14526  007D4C  2F83               	decfsz	??_BuzzerCheck& (0+255),f,b
 14527  007D4E  D7FC               	bra	u22977
 14528  007D50  2F84               	decfsz	(??_BuzzerCheck+1)& (0+255),f,b
 14529  007D52  D7FA               	bra	u22977
 14530  007D54  F000               	nop	
 14531                           
 14532                           ;buzzer.c: 430:     BuzzerOff();
 14533  007D56  ECC7  F050         	call	_BuzzerOff	;wreg free
 14534                           
 14535                           ; BSR set to: 57
 14536                           ;buzzer.c: 431:     if (detected==0) {
 14537  007D5A  0100               	movlb	0	; () banked
 14538  007D5C  51F8               	movf	_detected& (0+255),w,b
 14539  007D5E  A4D8               	btfss	status,2,c
 14540  007D60  D02D               	goto	l21919
 14541                           
 14542                           ; BSR set to: 0
 14543                           ;buzzer.c: 432:         _delay((unsigned long)((100)*(64000000/4000.0)));
 14544  007D62  0E09               	movlw	9
 14545  007D64  0101               	movlb	1	; () banked
 14546  007D66  6F84               	movwf	(??_BuzzerCheck+1)& (0+255),b
 14547  007D68  0E1E               	movlw	30
 14548  007D6A  6F83               	movwf	??_BuzzerCheck& (0+255),b
 14549  007D6C  0EE4               	movlw	228
 14550  007D6E                     u22987:
 14551  007D6E  2EE8               	decfsz	wreg,f,c
 14552  007D70  D7FE               	bra	u22987
 14553  007D72  2F83               	decfsz	??_BuzzerCheck& (0+255),f,b
 14554  007D74  D7FC               	bra	u22987
 14555  007D76  2F84               	decfsz	(??_BuzzerCheck+1)& (0+255),f,b
 14556  007D78  D7FA               	bra	u22987
 14557  007D7A  F000               	nop	
 14558                           
 14559                           ;buzzer.c: 433:         BuzzerOn(0x8D);
 14560  007D7C  0E8D               	movlw	141
 14561  007D7E  EC79  F04F         	call	_BuzzerOn
 14562                           
 14563                           ; BSR set to: 57
 14564                           ;buzzer.c: 434:         _delay((unsigned long)((250)*(64000000/4000.0)));
 14565  007D82  0E15               	movlw	21
 14566  007D84  0101               	movlb	1	; () banked
 14567  007D86  6F84               	movwf	(??_BuzzerCheck+1)& (0+255),b
 14568  007D88  0E4B               	movlw	75
 14569  007D8A  6F83               	movwf	??_BuzzerCheck& (0+255),b
 14570  007D8C  0EBE               	movlw	190
 14571  007D8E                     u22997:
 14572  007D8E  2EE8               	decfsz	wreg,f,c
 14573  007D90  D7FE               	bra	u22997
 14574  007D92  2F83               	decfsz	??_BuzzerCheck& (0+255),f,b
 14575  007D94  D7FC               	bra	u22997
 14576  007D96  2F84               	decfsz	(??_BuzzerCheck+1)& (0+255),f,b
 14577  007D98  D7FA               	bra	u22997
 14578  007D9A  F000               	nop	
 14579                           
 14580                           ;buzzer.c: 435:         BuzzerOff();
 14581  007D9C  ECC7  F050         	call	_BuzzerOff	;wreg free
 14582                           
 14583                           ; BSR set to: 57
 14584                           ;buzzer.c: 436:         if (detected==0) {
 14585  007DA0  0100               	movlb	0	; () banked
 14586  007DA2  51F8               	movf	_detected& (0+255),w,b
 14587  007DA4  A4D8               	btfss	status,2,c
 14588  007DA6  D00A               	goto	l21919
 14589                           
 14590                           ; BSR set to: 0
 14591                           ;buzzer.c: 437:             SetMonitorFailAlarm();
 14592  007DA8  EC85  F052         	call	_SetMonitorFailAlarm	;wreg free
 14593                           
 14594                           ; BSR set to: 2
 14595                           ;buzzer.c: 438:             printf("Error Buzzer\r\n");
 14596  007DAC  0E2F               	movlw	low STR_20
 14597  007DAE  0101               	movlb	1	; () banked
 14598  007DB0  6F71               	movwf	printf@fmt& (0+255),b
 14599  007DB2  0EFF               	movlw	high STR_20
 14600  007DB4  6F72               	movwf	(printf@fmt+1)& (0+255),b
 14601  007DB6  EC32  F04D         	call	_printf	;wreg free
 14602  007DBA  0012               	return	
 14603  007DBC                     l21919:
 14604                           
 14605                           ; BSR set to: 0
 14606                           ;buzzer.c: 442:     printf("Found Buzzer\r\n");
 14607  007DBC  0E20               	movlw	low STR_21
 14608  007DBE  0101               	movlb	1	; () banked
 14609  007DC0  6F71               	movwf	printf@fmt& (0+255),b
 14610  007DC2  0EFF               	movlw	high STR_21
 14611  007DC4  6F72               	movwf	(printf@fmt+1)& (0+255),b
 14612  007DC6  EC32  F04D         	call	_printf	;wreg free
 14613                           
 14614                           ; BSR set to: 2
 14615  007DCA  0012               	return		;funcret
 14616  007DCC                     __end_of_BuzzerCheck:
 14617                           	opt callstack 0
 14618                           
 14619 ;; *************** function _ButtonInit *****************
 14620 ;; Defined at:
 14621 ;;		line 34 in file "buttons.c"
 14622 ;; Parameters:    Size  Location     Type
 14623 ;;		None
 14624 ;; Auto vars:     Size  Location     Type
 14625 ;;		None
 14626 ;; Return value:  Size  Location     Type
 14627 ;;                  1    wreg      void 
 14628 ;; Registers used:
 14629 ;;		wreg, status,2, status,0, cstack
 14630 ;; Tracked objects:
 14631 ;;		On entry : 3F/1
 14632 ;;		On exit  : 3F/1
 14633 ;;		Unchanged: 0/0
 14634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14639 ;;Total ram usage:        0 bytes
 14640 ;; Hardware stack levels used:    1
 14641 ;; Hardware stack levels required when called:   17
 14642 ;; This function calls:
 14643 ;;		_TMR1_SetInterruptHandler
 14644 ;;		_TMR1_StartTimer
 14645 ;; This function is called by:
 14646 ;;		_main
 14647 ;; This function uses a non-reentrant model
 14648 ;;
 14649                           
 14650                           	psect	text96
 14651  009A3A                     __ptext96:
 14652                           	opt callstack 0
 14653  009A3A                     _ButtonInit:
 14654                           	opt callstack 13
 14655                           
 14656                           ; BSR set to: 1
 14657                           ;buttons.c: 35:     ledCnt=0;
 14658                           
 14659                           ; BSR set to: 2
 14660                           ;incstack = 0
 14661  009A3A  0E00               	movlw	0
 14662  009A3C  0100               	movlb	0	; () banked
 14663  009A3E  6FEB               	movwf	(_ledCnt+1)& (0+255),b
 14664  009A40  0E00               	movlw	0
 14665  009A42  6FEA               	movwf	_ledCnt& (0+255),b
 14666                           
 14667                           ;buttons.c: 36:     ledType=0;
 14668  009A44  0E00               	movlw	0
 14669  009A46  6FFB               	movwf	_ledType& (0+255),b
 14670                           
 14671                           ;buttons.c: 37:     muteButton=0;
 14672  009A48  0E00               	movlw	0
 14673  009A4A  6FFD               	movwf	_muteButton& (0+255),b
 14674                           
 14675                           ;buttons.c: 38:     histButton=0;
 14676  009A4C  0E00               	movlw	0
 14677  009A4E  6FFC               	movwf	_histButton& (0+255),b
 14678                           
 14679                           ; BSR set to: 0
 14680                           ;buttons.c: 39:     TMR1_SetInterruptHandler(ButtonTask);
 14681  009A50  0E08               	movlw	low _ButtonTask
 14682  009A52  0101               	movlb	1	; () banked
 14683  009A54  6F04               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
 14684  009A56  0E66               	movlw	high _ButtonTask
 14685  009A58  6F05               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 14686  009A5A  EC66  F051         	call	_TMR1_SetInterruptHandler	;wreg free
 14687                           
 14688                           ; BSR set to: 1
 14689                           ;buttons.c: 40:     TMR1_StartTimer();
 14690  009A5E  EC47  F053         	call	_TMR1_StartTimer	;wreg free
 14691                           
 14692                           ; BSR set to: 1
 14693  009A62  0012               	return		;funcret
 14694  009A64                     __end_of_ButtonInit:
 14695                           	opt callstack 0
 14696                           
 14697 ;; *************** function _TMR1_StartTimer *****************
 14698 ;; Defined at:
 14699 ;;		line 99 in file "mcc_generated_files/tmr1.c"
 14700 ;; Parameters:    Size  Location     Type
 14701 ;;		None
 14702 ;; Auto vars:     Size  Location     Type
 14703 ;;		None
 14704 ;; Return value:  Size  Location     Type
 14705 ;;                  1    wreg      void 
 14706 ;; Registers used:
 14707 ;;		None
 14708 ;; Tracked objects:
 14709 ;;		On entry : 3F/1
 14710 ;;		On exit  : 3F/1
 14711 ;;		Unchanged: 3F/0
 14712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14717 ;;Total ram usage:        0 bytes
 14718 ;; Hardware stack levels used:    1
 14719 ;; Hardware stack levels required when called:   16
 14720 ;; This function calls:
 14721 ;;		Nothing
 14722 ;; This function is called by:
 14723 ;;		_ButtonInit
 14724 ;; This function uses a non-reentrant model
 14725 ;;
 14726                           
 14727                           	psect	text97
 14728  00A68E                     __ptext97:
 14729                           	opt callstack 0
 14730  00A68E                     _TMR1_StartTimer:
 14731                           	opt callstack 13
 14732                           
 14733                           ; BSR set to: 1
 14734                           ;mcc_generated_files/tmr1.c: 102:     T1CONbits.TMR1ON = 1;
 14735                           
 14736                           ; BSR set to: 1
 14737                           ;incstack = 0
 14738  00A68E  80B2               	bsf	178,0,c	;volatile
 14739                           
 14740                           ; BSR set to: 1
 14741  00A690  0012               	return		;funcret
 14742  00A692                     __end_of_TMR1_StartTimer:
 14743                           	opt callstack 0
 14744                           
 14745 ;; *************** function _TMR1_SetInterruptHandler *****************
 14746 ;; Defined at:
 14747 ;;		line 178 in file "mcc_generated_files/tmr1.c"
 14748 ;; Parameters:    Size  Location     Type
 14749 ;;  InterruptHan    2    4[BANK1 ] PTR FTN()void 
 14750 ;;		 -> ButtonTask(1), TMR1_DefaultInterruptHandler(1), 
 14751 ;; Auto vars:     Size  Location     Type
 14752 ;;		None
 14753 ;; Return value:  Size  Location     Type
 14754 ;;                  1    wreg      void 
 14755 ;; Registers used:
 14756 ;;		wreg, status,2, status,0
 14757 ;; Tracked objects:
 14758 ;;		On entry : 3F/1
 14759 ;;		On exit  : 3F/1
 14760 ;;		Unchanged: 3F/0
 14761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14762 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14765 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14766 ;;Total ram usage:        2 bytes
 14767 ;; Hardware stack levels used:    1
 14768 ;; Hardware stack levels required when called:   16
 14769 ;; This function calls:
 14770 ;;		Nothing
 14771 ;; This function is called by:
 14772 ;;		_TMR1_Initialize
 14773 ;;		_ButtonInit
 14774 ;; This function uses a non-reentrant model
 14775 ;;
 14776                           
 14777                           	psect	text98
 14778  00A2CC                     __ptext98:
 14779                           	opt callstack 0
 14780  00A2CC                     _TMR1_SetInterruptHandler:
 14781                           	opt callstack 12
 14782                           
 14783                           ; BSR set to: 1
 14784                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
 14785                           
 14786                           ; BSR set to: 1
 14787                           ;incstack = 0
 14788  00A2CC  0060  F410  F2DB   	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
 14789  00A2D2  0060  F414  F2DC   	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
 14790                           
 14791                           ; BSR set to: 1
 14792  00A2D8  0012               	return		;funcret
 14793  00A2DA                     __end_of_TMR1_SetInterruptHandler:
 14794                           	opt callstack 0
 14795                           
 14796 ;; *************** function _AlarmInit *****************
 14797 ;; Defined at:
 14798 ;;		line 571 in file "alarm.c"
 14799 ;; Parameters:    Size  Location     Type
 14800 ;;		None
 14801 ;; Auto vars:     Size  Location     Type
 14802 ;;  i               2    6[BANK1 ] int 
 14803 ;; Return value:  Size  Location     Type
 14804 ;;                  1    wreg      void 
 14805 ;; Registers used:
 14806 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14807 ;; Tracked objects:
 14808 ;;		On entry : 3F/0
 14809 ;;		On exit  : 3C/0
 14810 ;;		Unchanged: 0/0
 14811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14813 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14815 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14816 ;;Total ram usage:        2 bytes
 14817 ;; Hardware stack levels used:    1
 14818 ;; Hardware stack levels required when called:   19
 14819 ;; This function calls:
 14820 ;;		_BuzzerInit
 14821 ;;		_TMR5_SetInterruptHandler
 14822 ;;		_TMR5_StartTimer
 14823 ;; This function is called by:
 14824 ;;		_main
 14825 ;; This function uses a non-reentrant model
 14826 ;;
 14827                           
 14828                           	psect	text99
 14829  00820C                     __ptext99:
 14830                           	opt callstack 0
 14831  00820C                     _AlarmInit:
 14832                           	opt callstack 11
 14833                           
 14834                           ; BSR set to: 0
 14835                           ;alarm.c: 572:     BuzzerInit();
 14836                           
 14837                           ; BSR set to: 1
 14838                           ;incstack = 0
 14839  00820C  EC36  F04C         	call	_BuzzerInit	;wreg free
 14840                           
 14841                           ; BSR set to: 2
 14842                           ;alarm.c: 573:     for (int i=0; i<sizeof(alarmData)/sizeof(a); i++) {
 14843  008210  0E00               	movlw	0
 14844  008212  0101               	movlb	1	; () banked
 14845  008214  6F07               	movwf	(AlarmInit@i+1)& (0+255),b
 14846  008216  0E00               	movlw	0
 14847  008218  6F06               	movwf	AlarmInit@i& (0+255),b
 14848  00821A                     l21839:
 14849                           
 14850                           ; BSR set to: 1
 14851                           ;alarm.c: 574:         alarms[i] = 0;
 14852  00821A  90D8               	bcf	status,0,c
 14853  00821C  3506               	rlcf	AlarmInit@i& (0+255),w,b
 14854  00821E  6ED9               	movwf	fsr2l,c
 14855  008220  3507               	rlcf	(AlarmInit@i+1)& (0+255),w,b
 14856  008222  6EDA               	movwf	fsr2h,c
 14857  008224  0E00               	movlw	low _alarms
 14858  008226  26D9               	addwf	fsr2l,f,c
 14859  008228  0E03               	movlw	high _alarms
 14860  00822A  22DA               	addwfc	fsr2h,f,c
 14861  00822C  0E00               	movlw	0
 14862  00822E  6EDE               	movwf	postinc2,c
 14863  008230  0E00               	movlw	0
 14864  008232  6EDD               	movwf	postdec2,c
 14865                           
 14866                           ;alarm.c: 575:         testAlarm[i] =0;
 14867  008234  90D8               	bcf	status,0,c
 14868  008236  3506               	rlcf	AlarmInit@i& (0+255),w,b
 14869  008238  6ED9               	movwf	fsr2l,c
 14870  00823A  3507               	rlcf	(AlarmInit@i+1)& (0+255),w,b
 14871  00823C  6EDA               	movwf	fsr2h,c
 14872  00823E  0E26               	movlw	low _testAlarm
 14873  008240  26D9               	addwf	fsr2l,f,c
 14874  008242  0E03               	movlw	high _testAlarm
 14875  008244  22DA               	addwfc	fsr2h,f,c
 14876  008246  0E00               	movlw	0
 14877  008248  6EDE               	movwf	postinc2,c
 14878  00824A  0E00               	movlw	0
 14879  00824C  6EDD               	movwf	postdec2,c
 14880                           
 14881                           ; BSR set to: 1
 14882                           ;alarm.c: 576:     }
 14883  00824E  4B06               	infsnz	AlarmInit@i& (0+255),f,b
 14884  008250  2B07               	incf	(AlarmInit@i+1)& (0+255),f,b
 14885                           
 14886                           ; BSR set to: 1
 14887  008252  5107               	movf	(AlarmInit@i+1)& (0+255),w,b
 14888  008254  E104               	bnz	u21440
 14889  008256  0E13               	movlw	19
 14890  008258  5D06               	subwf	AlarmInit@i& (0+255),w,b
 14891  00825A  A0D8               	btfss	status,0,c
 14892  00825C  D7DE               	goto	l21839
 14893  00825E                     u21440:
 14894                           
 14895                           ; BSR set to: 1
 14896                           ;alarm.c: 577:     displayStatus = 0;
 14897  00825E  0E00               	movlw	0
 14898  008260  0100               	movlb	0	; () banked
 14899  008262  6FE1               	movwf	(_displayStatus+1)& (0+255),b
 14900  008264  0E00               	movlw	0
 14901  008266  6FE0               	movwf	_displayStatus& (0+255),b
 14902                           
 14903                           ;alarm.c: 578:     alarmPmax = 40;
 14904  008268  0E00               	movlw	0
 14905  00826A  0102               	movlb	2	; () banked
 14906  00826C  6FD8               	movwf	(_alarmPmax+1)& (0+255),b
 14907  00826E  0E28               	movlw	40
 14908  008270  6FD7               	movwf	_alarmPmax& (0+255),b
 14909                           
 14910                           ;alarm.c: 579:     alarmCheck = 0;
 14911  008272  0E00               	movlw	0
 14912  008274  6FA3               	movwf	_alarmCheck& (0+255),b
 14913                           
 14914                           ; BSR set to: 2
 14915                           ;alarm.c: 581:     TMR5_SetInterruptHandler(AlarmHandler);
 14916  008276  0E34               	movlw	low _AlarmHandler
 14917  008278  0101               	movlb	1	; () banked
 14918  00827A  6F04               	movwf	TMR5_SetInterruptHandler@InterruptHandler& (0+255),b
 14919  00827C  0E88               	movlw	high _AlarmHandler
 14920  00827E  6F05               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 14921  008280  EC6D  F051         	call	_TMR5_SetInterruptHandler	;wreg free
 14922                           
 14923                           ; BSR set to: 1
 14924                           ;alarm.c: 582:     TMR5_StartTimer();
 14925  008284  EC49  F053         	call	_TMR5_StartTimer	;wreg free
 14926  008288  0012               	return		;funcret
 14927  00828A                     __end_of_AlarmInit:
 14928                           	opt callstack 0
 14929                           
 14930 ;; *************** function _TMR5_StartTimer *****************
 14931 ;; Defined at:
 14932 ;;		line 99 in file "mcc_generated_files/tmr5.c"
 14933 ;; Parameters:    Size  Location     Type
 14934 ;;		None
 14935 ;; Auto vars:     Size  Location     Type
 14936 ;;		None
 14937 ;; Return value:  Size  Location     Type
 14938 ;;                  1    wreg      void 
 14939 ;; Registers used:
 14940 ;;		None
 14941 ;; Tracked objects:
 14942 ;;		On entry : 3C/2
 14943 ;;		On exit  : 3C/0
 14944 ;;		Unchanged: 3C/0
 14945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14950 ;;Total ram usage:        0 bytes
 14951 ;; Hardware stack levels used:    1
 14952 ;; Hardware stack levels required when called:   16
 14953 ;; This function calls:
 14954 ;;		Nothing
 14955 ;; This function is called by:
 14956 ;;		_HistAlarm
 14957 ;;		_AlarmInit
 14958 ;; This function uses a non-reentrant model
 14959 ;;
 14960                           
 14961                           	psect	text100
 14962  00A692                     __ptext100:
 14963                           	opt callstack 0
 14964  00A692                     _TMR5_StartTimer:
 14965                           	opt callstack 13
 14966                           
 14967                           ;mcc_generated_files/tmr5.c: 102:     T5CONbits.TMR5ON = 1;
 14968                           
 14969                           ;incstack = 0
 14970  00A692  809A               	bsf	154,0,c	;volatile
 14971  00A694  0012               	return		;funcret
 14972  00A696                     __end_of_TMR5_StartTimer:
 14973                           	opt callstack 0
 14974                           
 14975 ;; *************** function _TMR5_SetInterruptHandler *****************
 14976 ;; Defined at:
 14977 ;;		line 178 in file "mcc_generated_files/tmr5.c"
 14978 ;; Parameters:    Size  Location     Type
 14979 ;;  InterruptHan    2    4[BANK1 ] PTR FTN()void 
 14980 ;;		 -> AlarmHandler(1), TMR5_DefaultInterruptHandler(1), 
 14981 ;; Auto vars:     Size  Location     Type
 14982 ;;		None
 14983 ;; Return value:  Size  Location     Type
 14984 ;;                  1    wreg      void 
 14985 ;; Registers used:
 14986 ;;		wreg, status,2, status,0
 14987 ;; Tracked objects:
 14988 ;;		On entry : 3F/1
 14989 ;;		On exit  : 3F/1
 14990 ;;		Unchanged: 3F/0
 14991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14992 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14995 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14996 ;;Total ram usage:        2 bytes
 14997 ;; Hardware stack levels used:    1
 14998 ;; Hardware stack levels required when called:   16
 14999 ;; This function calls:
 15000 ;;		Nothing
 15001 ;; This function is called by:
 15002 ;;		_TMR5_Initialize
 15003 ;;		_AlarmInit
 15004 ;; This function uses a non-reentrant model
 15005 ;;
 15006                           
 15007                           	psect	text101
 15008  00A2DA                     __ptext101:
 15009                           	opt callstack 0
 15010  00A2DA                     _TMR5_SetInterruptHandler:
 15011                           	opt callstack 12
 15012                           
 15013                           ; BSR set to: 1
 15014                           ;mcc_generated_files/tmr5.c: 179:     TMR5_InterruptHandler = InterruptHandler;
 15015                           
 15016                           ;incstack = 0
 15017  00A2DA  0060  F410  F2E1   	movff	TMR5_SetInterruptHandler@InterruptHandler,_TMR5_InterruptHandler
 15018  00A2E0  0060  F414  F2E2   	movff	TMR5_SetInterruptHandler@InterruptHandler+1,_TMR5_InterruptHandler+1
 15019                           
 15020                           ; BSR set to: 1
 15021  00A2E6  0012               	return		;funcret
 15022  00A2E8                     __end_of_TMR5_SetInterruptHandler:
 15023                           	opt callstack 0
 15024                           
 15025 ;; *************** function _BuzzerInit *****************
 15026 ;; Defined at:
 15027 ;;		line 405 in file "buzzer.c"
 15028 ;; Parameters:    Size  Location     Type
 15029 ;;		None
 15030 ;; Auto vars:     Size  Location     Type
 15031 ;;		None
 15032 ;; Return value:  Size  Location     Type
 15033 ;;                  1    wreg      void 
 15034 ;; Registers used:
 15035 ;;		wreg, status,2, status,0, cstack
 15036 ;; Tracked objects:
 15037 ;;		On entry : 3F/0
 15038 ;;		On exit  : 3F/2
 15039 ;;		Unchanged: 0/0
 15040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15045 ;;Total ram usage:        0 bytes
 15046 ;; Hardware stack levels used:    1
 15047 ;; Hardware stack levels required when called:   18
 15048 ;; This function calls:
 15049 ;;		_BuzzerOff
 15050 ;;		_CMP1_SetIntHandler
 15051 ;;		_TMR4_SetInterruptHandler
 15052 ;; This function is called by:
 15053 ;;		_AlarmInit
 15054 ;; This function uses a non-reentrant model
 15055 ;;
 15056                           
 15057                           	psect	text102
 15058  00986C                     __ptext102:
 15059                           	opt callstack 0
 15060  00986C                     _BuzzerInit:
 15061                           	opt callstack 11
 15062                           
 15063                           ; BSR set to: 0
 15064                           ;buzzer.c: 407:     TMR4_SetInterruptHandler(BuzzerHandler);
 15065                           
 15066                           ; BSR set to: 1
 15067                           ;incstack = 0
 15068  00986C  0E1C               	movlw	low _BuzzerHandler
 15069  00986E  0101               	movlb	1	; () banked
 15070  009870  6F04               	movwf	TMR4_SetInterruptHandler@InterruptHandler& (0+255),b
 15071  009872  0EA6               	movlw	high _BuzzerHandler
 15072  009874  6F05               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 15073  009876  EC82  F051         	call	_TMR4_SetInterruptHandler	;wreg free
 15074                           
 15075                           ;buzzer.c: 408:     CMP1_SetIntHandler(BuzzerCMPHandler);
 15076  00987A  0EE8               	movlw	low _BuzzerCMPHandler
 15077  00987C  6F04               	movwf	CMP1_SetIntHandler@handler& (0+255),b
 15078  00987E  0E9B               	movlw	high _BuzzerCMPHandler
 15079  009880  6F05               	movwf	(CMP1_SetIntHandler@handler+1)& (0+255),b
 15080  009882  EC74  F051         	call	_CMP1_SetIntHandler	;wreg free
 15081                           
 15082                           ; BSR set to: 1
 15083                           ;buzzer.c: 409:     BuzzerOff();
 15084  009886  ECC7  F050         	call	_BuzzerOff	;wreg free
 15085                           
 15086                           ; BSR set to: 57
 15087                           ;buzzer.c: 410:     detected = 1;
 15088  00988A  0E01               	movlw	1
 15089  00988C  0100               	movlb	0	; () banked
 15090  00988E  6FF8               	movwf	_detected& (0+255),b
 15091                           
 15092                           ; BSR set to: 0
 15093                           ;buzzer.c: 411:     checkController = 0;
 15094  009890  0E00               	movlw	0
 15095  009892  0102               	movlb	2	; () banked
 15096  009894  6FB2               	movwf	_checkController& (0+255),b
 15097                           
 15098                           ; BSR set to: 2
 15099                           ;buzzer.c: 412:     controllerDetected = 0;
 15100  009896  0E00               	movlw	0
 15101  009898  6FB1               	movwf	_controllerDetected& (0+255),b
 15102                           
 15103                           ; BSR set to: 2
 15104  00989A  0012               	return		;funcret
 15105  00989C                     __end_of_BuzzerInit:
 15106                           	opt callstack 0
 15107                           
 15108 ;; *************** function _CMP1_SetIntHandler *****************
 15109 ;; Defined at:
 15110 ;;		line 94 in file "mcc_generated_files/cmp1.c"
 15111 ;; Parameters:    Size  Location     Type
 15112 ;;  handler         2    4[BANK1 ] PTR FTN()void 
 15113 ;;		 -> BuzzerCMPHandler(1), 
 15114 ;; Auto vars:     Size  Location     Type
 15115 ;;		None
 15116 ;; Return value:  Size  Location     Type
 15117 ;;                  1    wreg      void 
 15118 ;; Registers used:
 15119 ;;		wreg, status,2, status,0
 15120 ;; Tracked objects:
 15121 ;;		On entry : 3F/1
 15122 ;;		On exit  : 3F/1
 15123 ;;		Unchanged: 3F/0
 15124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15125 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15128 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15129 ;;Total ram usage:        2 bytes
 15130 ;; Hardware stack levels used:    1
 15131 ;; Hardware stack levels required when called:   16
 15132 ;; This function calls:
 15133 ;;		Nothing
 15134 ;; This function is called by:
 15135 ;;		_BuzzerInit
 15136 ;; This function uses a non-reentrant model
 15137 ;;
 15138                           
 15139                           	psect	text103
 15140  00A2E8                     __ptext103:
 15141                           	opt callstack 0
 15142  00A2E8                     _CMP1_SetIntHandler:
 15143                           	opt callstack 12
 15144                           
 15145                           ; BSR set to: 1
 15146                           ;mcc_generated_files/cmp1.c: 95:     CMP1_InterruptHandler = handler;
 15147                           
 15148                           ; BSR set to: 2
 15149                           ;incstack = 0
 15150  00A2E8  0060  F410  F28A   	movff	CMP1_SetIntHandler@handler,_CMP1_InterruptHandler
 15151  00A2EE  0060  F414  F28B   	movff	CMP1_SetIntHandler@handler+1,_CMP1_InterruptHandler+1
 15152                           
 15153                           ; BSR set to: 1
 15154  00A2F4  0012               	return		;funcret
 15155  00A2F6                     __end_of_CMP1_SetIntHandler:
 15156                           	opt callstack 0
 15157                           
 15158 ;; *************** function _AlarmCheckTask *****************
 15159 ;; Defined at:
 15160 ;;		line 510 in file "alarm.c"
 15161 ;; Parameters:    Size  Location     Type
 15162 ;;		None
 15163 ;; Auto vars:     Size  Location     Type
 15164 ;;  type            2    7[BANK2 ] int 
 15165 ;;  id              2    9[BANK2 ] int 
 15166 ;; Return value:  Size  Location     Type
 15167 ;;                  1    wreg      void 
 15168 ;; Registers used:
 15169 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15170 ;; Tracked objects:
 15171 ;;		On entry : 3D/3
 15172 ;;		On exit  : 0/0
 15173 ;;		Unchanged: 0/0
 15174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15176 ;;      Locals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15177 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15178 ;;      Totals:         0       0       0      11       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15179 ;;Total ram usage:       11 bytes
 15180 ;; Hardware stack levels used:    1
 15181 ;; Hardware stack levels required when called:   28
 15182 ;; This function calls:
 15183 ;;		_AlarmClear
 15184 ;;		_AlarmSet
 15185 ;;		_AlarmUpdateLCD
 15186 ;;		_AnyAlarm
 15187 ;;		_BaterryLowAlarmHigh
 15188 ;;		_BaterryLowAlarmMed
 15189 ;;		_BatteryFailAlarm
 15190 ;;		_BuzzerClear
 15191 ;;		_BuzzerSet
 15192 ;;		_CircuitFailureAlarm
 15193 ;;		_ClearAlarmLED
 15194 ;;		_ControlFailAlarm
 15195 ;;		_EPAboveSetAlarm
 15196 ;;		_EPBelowSetAlarm
 15197 ;;		_GasFailureAlarm
 15198 ;;		_HighPressureAlarmHigh
 15199 ;;		_HighPressureAlarmLow
 15200 ;;		_HigherAlarm
 15201 ;;		_IPAboveSetAlarm
 15202 ;;		_IPBelowSetAlarm
 15203 ;;		_MonitorFailAlarm
 15204 ;;		_NoPowerSupplyAlarm
 15205 ;;		_SetAlarmLED
 15206 ;;		_SetAlarmSV1
 15207 ;;		_TdeTooLongAlarm
 15208 ;;		_TdiTooLongAlarm
 15209 ;;		_VAboveMaxAlarm
 15210 ;;		_VBelowMinAlarm
 15211 ;;		_VeryHighPressureAlarmHigh
 15212 ;;		___wmul
 15213 ;; This function is called by:
 15214 ;;		_main
 15215 ;; This function uses a non-reentrant model
 15216 ;;
 15217                           
 15218                           	psect	text104
 15219  004E2E                     __ptext104:
 15220                           	opt callstack 0
 15221  004E2E                     _AlarmCheckTask:
 15222                           	opt callstack 2
 15223                           
 15224                           ;alarm.c: 511:     SetAlarmSV1(controlSV1 && monitorSV1 && veryHighSV1 && batterySV1);
 15225                           
 15226                           ; BSR set to: 1
 15227                           ;incstack = 0
 15228  004E2E  0E00               	movlw	0
 15229  004E30  0102               	movlb	2	; () banked
 15230  004E32  6FFB               	movwf	_AlarmCheckTask$4558& (0+255),b
 15231  004E34  0101               	movlb	1	; () banked
 15232  004E36  51F9               	movf	_controlSV1& (0+255),w,b
 15233  004E38  B4D8               	btfsc	status,2,c
 15234  004E3A  D00C               	goto	l21975
 15235                           
 15236                           ; BSR set to: 1
 15237  004E3C  51F8               	movf	_monitorSV1& (0+255),w,b
 15238  004E3E  B4D8               	btfsc	status,2,c
 15239  004E40  D009               	goto	l21975
 15240                           
 15241                           ; BSR set to: 1
 15242  004E42  51FB               	movf	_veryHighSV1& (0+255),w,b
 15243  004E44  B4D8               	btfsc	status,2,c
 15244  004E46  D006               	goto	l21975
 15245                           
 15246                           ; BSR set to: 1
 15247  004E48  51FA               	movf	_batterySV1& (0+255),w,b
 15248  004E4A  B4D8               	btfsc	status,2,c
 15249  004E4C  D003               	goto	l21975
 15250                           
 15251                           ; BSR set to: 1
 15252  004E4E  0E01               	movlw	1
 15253  004E50  0102               	movlb	2	; () banked
 15254  004E52  6FFB               	movwf	_AlarmCheckTask$4558& (0+255),b
 15255  004E54                     l21975:
 15256  004E54  0102               	movlb	2	; () banked
 15257  004E56  51FB               	movf	_AlarmCheckTask$4558& (0+255),w,b
 15258  004E58  B4D8               	btfsc	status,2,c
 15259  004E5A  D002               	goto	u21580
 15260  004E5C  0E01               	movlw	1
 15261  004E5E  D001               	goto	u21590
 15262  004E60                     u21580:
 15263  004E60  0E00               	movlw	0
 15264  004E62                     u21590:
 15265  004E62  EC68  F04B         	call	_SetAlarmSV1
 15266                           
 15267                           ;alarm.c: 512:     if (alarmCheck == 0) return;
 15268  004E66  0102               	movlb	2	; () banked
 15269  004E68  51A3               	movf	_alarmCheck& (0+255),w,b
 15270  004E6A  B4D8               	btfsc	status,2,c
 15271  004E6C  0012               	return	
 15272                           
 15273                           ; BSR set to: 2
 15274                           ;alarm.c: 513:     alarmCheck = 0;
 15275  004E6E  0E00               	movlw	0
 15276  004E70  6FA3               	movwf	_alarmCheck& (0+255),b
 15277                           
 15278                           ;alarm.c: 515:     static int current = 0;;alarm.c: 518:     for (int id=0; id<sizeof(al
      +                          armData)/sizeof(a); id++) {
 15279  004E72  0E00               	movlw	0
 15280  004E74  6FFF               	movwf	(AlarmCheckTask@id+1)& (0+255),b
 15281  004E76  0E00               	movlw	0
 15282  004E78  6FFE               	movwf	AlarmCheckTask@id& (0+255),b
 15283  004E7A                     l21987:
 15284                           
 15285                           ; BSR set to: 2
 15286                           ;alarm.c: 519:         if (alarmData[id].func() || testAlarm[id]) {
 15287  004E7A  0060  FBF8  F104   	movff	AlarmCheckTask@id,___wmul@multiplier
 15288  004E80  0060  FBFC  F105   	movff	AlarmCheckTask@id+1,___wmul@multiplier+1
 15289  004E86  0E00               	movlw	0
 15290  004E88  0101               	movlb	1	; () banked
 15291  004E8A  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 15292  004E8C  0E15               	movlw	21
 15293  004E8E  6F06               	movwf	___wmul@multiplicand& (0+255),b
 15294  004E90  EC7C  F04C         	call	___wmul	;wreg free
 15295  004E94  0E27               	movlw	low (_alarmData+19)
 15296  004E96  2504               	addwf	?___wmul& (0+255),w,b
 15297  004E98  6ED9               	movwf	fsr2l,c
 15298  004E9A  0E09               	movlw	high (_alarmData+19)
 15299  004E9C  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 15300  004E9E  6EDA               	movwf	fsr2h,c
 15301  004EA0  006F FF78  F2F9    	movff	postinc2,_AlarmCheckTask$6537
 15302  004EA6  006F FF74  F2FA    	movff	postdec2,_AlarmCheckTask$6537+1
 15303                           
 15304                           ; BSR set to: 1
 15305                           ;alarm.c: 519:         if (alarmData[id].func() || testAlarm[id]) {
 15306  004EAC  D801               	call	u21618
 15307  004EAE  D00A               	goto	u21619
 15308  004EB0                     u21618:
 15309  004EB0  0005               	push	
 15310  004EB2  6EFA               	movwf	pclath,c
 15311  004EB4  0102               	movlb	2	; () banked
 15312  004EB6  51F9               	movf	_AlarmCheckTask$6537& (0+255),w,b
 15313  004EB8  6EFD               	movwf	tosl,c
 15314  004EBA  51FA               	movf	(_AlarmCheckTask$6537+1)& (0+255),w,b
 15315  004EBC  6EFE               	movwf	tosh,c
 15316  004EBE  6AFF               	clrf	tosu,c
 15317  004EC0  50FA               	movf	pclath,w,c
 15318  004EC2  0012               	return		;indir
 15319  004EC4                     u21619:
 15320  004EC4  0900               	iorlw	0
 15321  004EC6  A4D8               	btfss	status,2,c
 15322  004EC8  D00E               	goto	u21630
 15323  004ECA  90D8               	bcf	status,0,c
 15324  004ECC  0102               	movlb	2	; () banked
 15325  004ECE  35FE               	rlcf	AlarmCheckTask@id& (0+255),w,b
 15326  004ED0  6ED9               	movwf	fsr2l,c
 15327  004ED2  35FF               	rlcf	(AlarmCheckTask@id+1)& (0+255),w,b
 15328  004ED4  6EDA               	movwf	fsr2h,c
 15329  004ED6  0E26               	movlw	low _testAlarm
 15330  004ED8  26D9               	addwf	fsr2l,f,c
 15331  004EDA  0E03               	movlw	high _testAlarm
 15332  004EDC  22DA               	addwfc	fsr2h,f,c
 15333  004EDE  50DE               	movf	postinc2,w,c
 15334  004EE0  10DE               	iorwf	postinc2,w,c
 15335  004EE2  B4D8               	btfsc	status,2,c
 15336  004EE4  D005               	goto	l21995
 15337  004EE6                     u21630:
 15338                           
 15339                           ;alarm.c: 520:             AlarmSet(id);
 15340  004EE6  0102               	movlb	2	; () banked
 15341  004EE8  51FE               	movf	AlarmCheckTask@id& (0+255),w,b
 15342  004EEA  ECEA  F04E         	call	_AlarmSet
 15343                           
 15344                           ;alarm.c: 521:         } else {
 15345  004EEE  D003               	goto	l21997
 15346  004EF0                     l21995:
 15347                           
 15348                           ; BSR set to: 2
 15349                           ;alarm.c: 522:             AlarmClear(id);
 15350  004EF0  51FE               	movf	AlarmCheckTask@id& (0+255),w,b
 15351  004EF2  ECFA  F04E         	call	_AlarmClear
 15352  004EF6                     l21997:
 15353                           
 15354                           ; BSR set to: 1
 15355                           ;alarm.c: 524:     }
 15356  004EF6  0102               	movlb	2	; () banked
 15357  004EF8  4BFE               	infsnz	AlarmCheckTask@id& (0+255),f,b
 15358  004EFA  2BFF               	incf	(AlarmCheckTask@id+1)& (0+255),f,b
 15359                           
 15360                           ; BSR set to: 2
 15361  004EFC  51FF               	movf	(AlarmCheckTask@id+1)& (0+255),w,b
 15362  004EFE  E104               	bnz	u21640
 15363  004F00  0E13               	movlw	19
 15364  004F02  5DFE               	subwf	AlarmCheckTask@id& (0+255),w,b
 15365  004F04  A0D8               	btfss	status,0,c
 15366  004F06  D7B9               	goto	l21987
 15367  004F08                     u21640:
 15368                           
 15369                           ; BSR set to: 2
 15370                           ;alarm.c: 526:     AlarmUpdateLCD();
 15371  004F08  EC4C  F02E         	call	_AlarmUpdateLCD	;wreg free
 15372                           
 15373                           ;alarm.c: 530:     if (AnyAlarm()) {
 15374  004F0C  EC8C  F04A         	call	_AnyAlarm	;wreg free
 15375  004F10  0900               	iorlw	0
 15376  004F12  B4D8               	btfsc	status,2,c
 15377  004F14  D044               	goto	l22023
 15378                           
 15379                           ; BSR set to: 1
 15380                           ;alarm.c: 532:         int type = alarmData[HigherAlarm()].type;
 15381  004F16  ECDF  F038         	call	_HigherAlarm	;wreg free
 15382  004F1A  0060  F428  F2F7   	movff	?_HigherAlarm,_AlarmCheckTask$6533
 15383  004F20  0060  F42C  F2F8   	movff	?_HigherAlarm+1,_AlarmCheckTask$6533+1
 15384                           
 15385                           ; BSR set to: 1
 15386                           ;alarm.c: 532:         int type = alarmData[HigherAlarm()].type;
 15387  004F26  0060  FBDC  F104   	movff	_AlarmCheckTask$6533,___wmul@multiplier
 15388  004F2C  0060  FBE0  F105   	movff	_AlarmCheckTask$6533+1,___wmul@multiplier+1
 15389  004F32  0E00               	movlw	0
 15390  004F34  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 15391  004F36  0E15               	movlw	21
 15392  004F38  6F06               	movwf	___wmul@multiplicand& (0+255),b
 15393  004F3A  EC7C  F04C         	call	___wmul	;wreg free
 15394  004F3E  0E25               	movlw	low (_alarmData+17)
 15395  004F40  2504               	addwf	?___wmul& (0+255),w,b
 15396  004F42  6ED9               	movwf	fsr2l,c
 15397  004F44  0E09               	movlw	high (_alarmData+17)
 15398  004F46  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 15399  004F48  6EDA               	movwf	fsr2h,c
 15400  004F4A  006F FF78  F2FC    	movff	postinc2,AlarmCheckTask@type
 15401  004F50  006F FF74  F2FD    	movff	postdec2,AlarmCheckTask@type+1
 15402                           
 15403                           ; BSR set to: 1
 15404                           ;alarm.c: 534:         if (type!=current) {
 15405  004F56  0102               	movlb	2	; () banked
 15406  004F58  5174               	movf	AlarmCheckTask@current& (0+255),w,b
 15407  004F5A  19FC               	xorwf	AlarmCheckTask@type& (0+255),w,b
 15408  004F5C  E104               	bnz	u21660
 15409  004F5E  5175               	movf	(AlarmCheckTask@current+1)& (0+255),w,b
 15410  004F60  19FD               	xorwf	(AlarmCheckTask@type+1)& (0+255),w,b
 15411  004F62  B4D8               	btfsc	status,2,c
 15412  004F64  0012               	return	
 15413  004F66                     u21660:
 15414                           
 15415                           ; BSR set to: 2
 15416                           ;alarm.c: 536:             current = type;
 15417  004F66  0060  FBF0  F274   	movff	AlarmCheckTask@type,AlarmCheckTask@current
 15418  004F6C  0060  FBF4  F275   	movff	AlarmCheckTask@type+1,AlarmCheckTask@current+1
 15419                           
 15420                           ; BSR set to: 2
 15421                           ;alarm.c: 537:             if (muteSec == 0) {
 15422  004F72  0101               	movlb	1	; () banked
 15423  004F74  51EB               	movf	_muteSec& (0+255),w,b
 15424  004F76  11EC               	iorwf	(_muteSec+1)& (0+255),w,b
 15425  004F78  A4D8               	btfss	status,2,c
 15426  004F7A  D005               	goto	l22017
 15427                           
 15428                           ; BSR set to: 1
 15429                           ;alarm.c: 538:                 BuzzerSet(type);
 15430  004F7C  0102               	movlb	2	; () banked
 15431  004F7E  51FC               	movf	AlarmCheckTask@type& (0+255),w,b
 15432  004F80  ECE6  F04F         	call	_BuzzerSet
 15433                           
 15434                           ;alarm.c: 539:             } else {
 15435  004F84  D007               	goto	l22021
 15436  004F86                     l22017:
 15437                           
 15438                           ; BSR set to: 1
 15439                           ;alarm.c: 541:                 current = 0;
 15440  004F86  0E00               	movlw	0
 15441  004F88  0102               	movlb	2	; () banked
 15442  004F8A  6F75               	movwf	(AlarmCheckTask@current+1)& (0+255),b
 15443  004F8C  0E00               	movlw	0
 15444  004F8E  6F74               	movwf	AlarmCheckTask@current& (0+255),b
 15445                           
 15446                           ; BSR set to: 2
 15447                           ;alarm.c: 542:                 BuzzerClear();
 15448  004F90  ECBF  F050         	call	_BuzzerClear	;wreg free
 15449  004F94                     l22021:
 15450                           
 15451                           ;alarm.c: 544:             SetAlarmLED(type);
 15452  004F94  0102               	movlb	2	; () banked
 15453  004F96  51FC               	movf	AlarmCheckTask@type& (0+255),w,b
 15454  004F98  EC7B  F051         	call	_SetAlarmLED
 15455                           
 15456                           ;alarm.c: 545:         } else { }
 15457  004F9C  0012               	return	
 15458  004F9E                     l22023:
 15459                           
 15460                           ; BSR set to: 1
 15461                           ;alarm.c: 548:         current = 0;
 15462  004F9E  0E00               	movlw	0
 15463  004FA0  0102               	movlb	2	; () banked
 15464  004FA2  6F75               	movwf	(AlarmCheckTask@current+1)& (0+255),b
 15465  004FA4  0E00               	movlw	0
 15466  004FA6  6F74               	movwf	AlarmCheckTask@current& (0+255),b
 15467                           
 15468                           ; BSR set to: 2
 15469                           ;alarm.c: 549:         BuzzerClear();
 15470  004FA8  ECBF  F050         	call	_BuzzerClear	;wreg free
 15471                           
 15472                           ; BSR set to: 57
 15473                           ;alarm.c: 550:         ClearAlarmLED();
 15474  004FAC  EC31  F052         	call	_ClearAlarmLED	;wreg free
 15475  004FB0  0012               	return		;funcret
 15476  004FB2                     __end_of_AlarmCheckTask:
 15477                           	opt callstack 0
 15478                           
 15479 ;; *************** function _NoPowerSupplyAlarm *****************
 15480 ;; Defined at:
 15481 ;;		line 220 in file "alarm.c"
 15482 ;; Parameters:    Size  Location     Type
 15483 ;;		None
 15484 ;; Auto vars:     Size  Location     Type
 15485 ;;		None
 15486 ;; Return value:  Size  Location     Type
 15487 ;;                  1    wreg      _Bool 
 15488 ;; Registers used:
 15489 ;;		wreg, status,2
 15490 ;; Tracked objects:
 15491 ;;		On entry : 3F/2
 15492 ;;		On exit  : 3F/2
 15493 ;;		Unchanged: 0/0
 15494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15499 ;;Total ram usage:        0 bytes
 15500 ;; Hardware stack levels used:    1
 15501 ;; Hardware stack levels required when called:   16
 15502 ;; This function calls:
 15503 ;;		Nothing
 15504 ;; This function is called by:
 15505 ;;		_AlarmCheckTask
 15506 ;; This function uses a non-reentrant model
 15507 ;;
 15508                           
 15509                           	psect	text105
 15510  00A696                     __ptext105:
 15511                           	opt callstack 0
 15512  00A696                     _NoPowerSupplyAlarm:
 15513                           	opt callstack 13
 15514                           
 15515                           ; BSR set to: 2
 15516                           
 15517                           ;incstack = 0
 15518  00A696  51A4               	movf	_noPowerSupplyAlarm& (0+255),w,b
 15519                           
 15520                           ; BSR set to: 2
 15521  00A698  0012               	return		;funcret
 15522  00A69A                     __end_of_NoPowerSupplyAlarm:
 15523                           	opt callstack 0
 15524                           
 15525 ;; *************** function _VBelowMinAlarm *****************
 15526 ;; Defined at:
 15527 ;;		line 216 in file "alarm.c"
 15528 ;; Parameters:    Size  Location     Type
 15529 ;;		None
 15530 ;; Auto vars:     Size  Location     Type
 15531 ;;		None
 15532 ;; Return value:  Size  Location     Type
 15533 ;;                  1    wreg      _Bool 
 15534 ;; Registers used:
 15535 ;;		wreg, status,2
 15536 ;; Tracked objects:
 15537 ;;		On entry : 3F/2
 15538 ;;		On exit  : 3F/2
 15539 ;;		Unchanged: 0/0
 15540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15545 ;;Total ram usage:        0 bytes
 15546 ;; Hardware stack levels used:    1
 15547 ;; Hardware stack levels required when called:   16
 15548 ;; This function calls:
 15549 ;;		Nothing
 15550 ;; This function is called by:
 15551 ;;		_AlarmCheckTask
 15552 ;; This function uses a non-reentrant model
 15553 ;;
 15554                           
 15555                           	psect	text106
 15556  00A69A                     __ptext106:
 15557                           	opt callstack 0
 15558  00A69A                     _VBelowMinAlarm:
 15559                           	opt callstack 13
 15560                           
 15561                           ; BSR set to: 2
 15562                           ;alarm.c: 217:     return vBelowMinAlarm;
 15563                           
 15564                           ; BSR set to: 2
 15565                           ;incstack = 0
 15566  00A69A  51A6               	movf	_vBelowMinAlarm& (0+255),w,b
 15567                           
 15568                           ; BSR set to: 2
 15569  00A69C  0012               	return		;funcret
 15570  00A69E                     __end_of_VBelowMinAlarm:
 15571                           	opt callstack 0
 15572                           
 15573 ;; *************** function _VAboveMaxAlarm *****************
 15574 ;; Defined at:
 15575 ;;		line 212 in file "alarm.c"
 15576 ;; Parameters:    Size  Location     Type
 15577 ;;		None
 15578 ;; Auto vars:     Size  Location     Type
 15579 ;;		None
 15580 ;; Return value:  Size  Location     Type
 15581 ;;                  1    wreg      _Bool 
 15582 ;; Registers used:
 15583 ;;		wreg, status,2
 15584 ;; Tracked objects:
 15585 ;;		On entry : 3F/2
 15586 ;;		On exit  : 3F/2
 15587 ;;		Unchanged: 0/0
 15588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15593 ;;Total ram usage:        0 bytes
 15594 ;; Hardware stack levels used:    1
 15595 ;; Hardware stack levels required when called:   16
 15596 ;; This function calls:
 15597 ;;		Nothing
 15598 ;; This function is called by:
 15599 ;;		_AlarmCheckTask
 15600 ;; This function uses a non-reentrant model
 15601 ;;
 15602                           
 15603                           	psect	text107
 15604  00A69E                     __ptext107:
 15605                           	opt callstack 0
 15606  00A69E                     _VAboveMaxAlarm:
 15607                           	opt callstack 13
 15608                           
 15609                           ; BSR set to: 2
 15610                           ;alarm.c: 213:     return vAboveMaxAlarm;
 15611                           
 15612                           ; BSR set to: 2
 15613                           ;incstack = 0
 15614  00A69E  51A5               	movf	_vAboveMaxAlarm& (0+255),w,b
 15615                           
 15616                           ; BSR set to: 2
 15617  00A6A0  0012               	return		;funcret
 15618  00A6A2                     __end_of_VAboveMaxAlarm:
 15619                           	opt callstack 0
 15620                           
 15621 ;; *************** function _TdeTooLongAlarm *****************
 15622 ;; Defined at:
 15623 ;;		line 206 in file "alarm.c"
 15624 ;; Parameters:    Size  Location     Type
 15625 ;;		None
 15626 ;; Auto vars:     Size  Location     Type
 15627 ;;		None
 15628 ;; Return value:  Size  Location     Type
 15629 ;;                  1    wreg      _Bool 
 15630 ;; Registers used:
 15631 ;;		wreg, status,2
 15632 ;; Tracked objects:
 15633 ;;		On entry : 3F/2
 15634 ;;		On exit  : 3F/2
 15635 ;;		Unchanged: 0/0
 15636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15641 ;;Total ram usage:        0 bytes
 15642 ;; Hardware stack levels used:    1
 15643 ;; Hardware stack levels required when called:   16
 15644 ;; This function calls:
 15645 ;;		Nothing
 15646 ;; This function is called by:
 15647 ;;		_AlarmCheckTask
 15648 ;; This function uses a non-reentrant model
 15649 ;;
 15650                           
 15651                           	psect	text108
 15652  00A6A2                     __ptext108:
 15653                           	opt callstack 0
 15654  00A6A2                     _TdeTooLongAlarm:
 15655                           	opt callstack 13
 15656                           
 15657                           ; BSR set to: 2
 15658                           ;alarm.c: 209:     return tdeTooLongAlarm;
 15659                           
 15660                           ; BSR set to: 2
 15661                           ;incstack = 0
 15662  00A6A2  51A7               	movf	_tdeTooLongAlarm& (0+255),w,b
 15663                           
 15664                           ; BSR set to: 2
 15665  00A6A4  0012               	return		;funcret
 15666  00A6A6                     __end_of_TdeTooLongAlarm:
 15667                           	opt callstack 0
 15668                           
 15669 ;; *************** function _TdiTooLongAlarm *****************
 15670 ;; Defined at:
 15671 ;;		line 200 in file "alarm.c"
 15672 ;; Parameters:    Size  Location     Type
 15673 ;;		None
 15674 ;; Auto vars:     Size  Location     Type
 15675 ;;		None
 15676 ;; Return value:  Size  Location     Type
 15677 ;;                  1    wreg      _Bool 
 15678 ;; Registers used:
 15679 ;;		wreg, status,2
 15680 ;; Tracked objects:
 15681 ;;		On entry : 3F/2
 15682 ;;		On exit  : 3F/2
 15683 ;;		Unchanged: 0/0
 15684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15689 ;;Total ram usage:        0 bytes
 15690 ;; Hardware stack levels used:    1
 15691 ;; Hardware stack levels required when called:   16
 15692 ;; This function calls:
 15693 ;;		Nothing
 15694 ;; This function is called by:
 15695 ;;		_AlarmCheckTask
 15696 ;; This function uses a non-reentrant model
 15697 ;;
 15698                           
 15699                           	psect	text109
 15700  00A6A6                     __ptext109:
 15701                           	opt callstack 0
 15702  00A6A6                     _TdiTooLongAlarm:
 15703                           	opt callstack 13
 15704                           
 15705                           ; BSR set to: 2
 15706                           ;alarm.c: 203:     return tdiTooLongAlarm;
 15707                           
 15708                           ; BSR set to: 2
 15709                           ;incstack = 0
 15710  00A6A6  51A8               	movf	_tdiTooLongAlarm& (0+255),w,b
 15711                           
 15712                           ; BSR set to: 2
 15713  00A6A8  0012               	return		;funcret
 15714  00A6AA                     __end_of_TdiTooLongAlarm:
 15715                           	opt callstack 0
 15716                           
 15717 ;; *************** function _IPAboveSetAlarm *****************
 15718 ;; Defined at:
 15719 ;;		line 196 in file "alarm.c"
 15720 ;; Parameters:    Size  Location     Type
 15721 ;;		None
 15722 ;; Auto vars:     Size  Location     Type
 15723 ;;		None
 15724 ;; Return value:  Size  Location     Type
 15725 ;;                  1    wreg      _Bool 
 15726 ;; Registers used:
 15727 ;;		wreg, status,2, status,0
 15728 ;; Tracked objects:
 15729 ;;		On entry : 3F/2
 15730 ;;		On exit  : 3F/0
 15731 ;;		Unchanged: 0/0
 15732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15737 ;;Total ram usage:        0 bytes
 15738 ;; Hardware stack levels used:    1
 15739 ;; Hardware stack levels required when called:   16
 15740 ;; This function calls:
 15741 ;;		Nothing
 15742 ;; This function is called by:
 15743 ;;		_AlarmCheckTask
 15744 ;; This function uses a non-reentrant model
 15745 ;;
 15746                           
 15747                           	psect	text110
 15748  009F64                     __ptext110:
 15749                           	opt callstack 0
 15750  009F64                     _IPAboveSetAlarm:
 15751                           	opt callstack 13
 15752                           
 15753                           ; BSR set to: 2
 15754                           ;alarm.c: 197:     if (ipAboveSetAlarm> 3) { return 1; }
 15755                           
 15756                           ; BSR set to: 2
 15757                           ;incstack = 0
 15758  009F64  0100               	movlb	0	; () banked
 15759  009F66  BFE3               	btfsc	(_ipAboveSetAlarm+1)& (0+255),7,b
 15760  009F68  D008               	goto	l20929
 15761  009F6A  51E3               	movf	(_ipAboveSetAlarm+1)& (0+255),w,b
 15762  009F6C  E104               	bnz	u20060
 15763  009F6E  0E04               	movlw	4
 15764  009F70  5DE2               	subwf	_ipAboveSetAlarm& (0+255),w,b
 15765  009F72  A0D8               	btfss	status,0,c
 15766  009F74  D002               	goto	l20929
 15767  009F76                     u20060:
 15768                           
 15769                           ; BSR set to: 0
 15770  009F76  0E01               	movlw	1
 15771  009F78  0012               	return	
 15772  009F7A                     l20929:
 15773                           
 15774                           ; BSR set to: 0
 15775  009F7A  0E00               	movlw	0
 15776                           
 15777                           ; BSR set to: 0
 15778  009F7C  0012               	return		;funcret
 15779  009F7E                     __end_of_IPAboveSetAlarm:
 15780                           	opt callstack 0
 15781                           
 15782 ;; *************** function _IPBelowSetAlarm *****************
 15783 ;; Defined at:
 15784 ;;		line 192 in file "alarm.c"
 15785 ;; Parameters:    Size  Location     Type
 15786 ;;		None
 15787 ;; Auto vars:     Size  Location     Type
 15788 ;;		None
 15789 ;; Return value:  Size  Location     Type
 15790 ;;                  1    wreg      _Bool 
 15791 ;; Registers used:
 15792 ;;		wreg, status,2, status,0
 15793 ;; Tracked objects:
 15794 ;;		On entry : 3F/2
 15795 ;;		On exit  : 3F/0
 15796 ;;		Unchanged: 0/0
 15797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15802 ;;Total ram usage:        0 bytes
 15803 ;; Hardware stack levels used:    1
 15804 ;; Hardware stack levels required when called:   16
 15805 ;; This function calls:
 15806 ;;		Nothing
 15807 ;; This function is called by:
 15808 ;;		_AlarmCheckTask
 15809 ;; This function uses a non-reentrant model
 15810 ;;
 15811                           
 15812                           	psect	text111
 15813  009F7E                     __ptext111:
 15814                           	opt callstack 0
 15815  009F7E                     _IPBelowSetAlarm:
 15816                           	opt callstack 13
 15817                           
 15818                           ; BSR set to: 2
 15819                           ;alarm.c: 193:     if (ipBelowSetAlarm> 3) { return 1; }
 15820                           
 15821                           ; BSR set to: 0
 15822                           ;incstack = 0
 15823  009F7E  0100               	movlb	0	; () banked
 15824  009F80  BFE5               	btfsc	(_ipBelowSetAlarm+1)& (0+255),7,b
 15825  009F82  D008               	goto	l20917
 15826  009F84  51E5               	movf	(_ipBelowSetAlarm+1)& (0+255),w,b
 15827  009F86  E104               	bnz	u20050
 15828  009F88  0E04               	movlw	4
 15829  009F8A  5DE4               	subwf	_ipBelowSetAlarm& (0+255),w,b
 15830  009F8C  A0D8               	btfss	status,0,c
 15831  009F8E  D002               	goto	l20917
 15832  009F90                     u20050:
 15833                           
 15834                           ; BSR set to: 0
 15835  009F90  0E01               	movlw	1
 15836  009F92  0012               	return	
 15837  009F94                     l20917:
 15838                           
 15839                           ; BSR set to: 0
 15840  009F94  0E00               	movlw	0
 15841                           
 15842                           ; BSR set to: 0
 15843  009F96  0012               	return		;funcret
 15844  009F98                     __end_of_IPBelowSetAlarm:
 15845                           	opt callstack 0
 15846                           
 15847 ;; *************** function _EPAboveSetAlarm *****************
 15848 ;; Defined at:
 15849 ;;		line 188 in file "alarm.c"
 15850 ;; Parameters:    Size  Location     Type
 15851 ;;		None
 15852 ;; Auto vars:     Size  Location     Type
 15853 ;;		None
 15854 ;; Return value:  Size  Location     Type
 15855 ;;                  1    wreg      _Bool 
 15856 ;; Registers used:
 15857 ;;		wreg, status,2, status,0
 15858 ;; Tracked objects:
 15859 ;;		On entry : 3F/2
 15860 ;;		On exit  : 3F/0
 15861 ;;		Unchanged: 0/0
 15862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15867 ;;Total ram usage:        0 bytes
 15868 ;; Hardware stack levels used:    1
 15869 ;; Hardware stack levels required when called:   16
 15870 ;; This function calls:
 15871 ;;		Nothing
 15872 ;; This function is called by:
 15873 ;;		_AlarmCheckTask
 15874 ;; This function uses a non-reentrant model
 15875 ;;
 15876                           
 15877                           	psect	text112
 15878  009F98                     __ptext112:
 15879                           	opt callstack 0
 15880  009F98                     _EPAboveSetAlarm:
 15881                           	opt callstack 13
 15882                           
 15883                           ; BSR set to: 2
 15884                           ;alarm.c: 189:     if (epAboveSetAlarm> 3) return 1;
 15885                           
 15886                           ; BSR set to: 0
 15887                           ;incstack = 0
 15888  009F98  0100               	movlb	0	; () banked
 15889  009F9A  BFE7               	btfsc	(_epAboveSetAlarm+1)& (0+255),7,b
 15890  009F9C  D008               	goto	l20905
 15891  009F9E  51E7               	movf	(_epAboveSetAlarm+1)& (0+255),w,b
 15892  009FA0  E104               	bnz	u20040
 15893  009FA2  0E04               	movlw	4
 15894  009FA4  5DE6               	subwf	_epAboveSetAlarm& (0+255),w,b
 15895  009FA6  A0D8               	btfss	status,0,c
 15896  009FA8  D002               	goto	l20905
 15897  009FAA                     u20040:
 15898                           
 15899                           ; BSR set to: 0
 15900  009FAA  0E01               	movlw	1
 15901  009FAC  0012               	return	
 15902  009FAE                     l20905:
 15903                           
 15904                           ; BSR set to: 0
 15905  009FAE  0E00               	movlw	0
 15906                           
 15907                           ; BSR set to: 0
 15908  009FB0  0012               	return		;funcret
 15909  009FB2                     __end_of_EPAboveSetAlarm:
 15910                           	opt callstack 0
 15911                           
 15912 ;; *************** function _EPBelowSetAlarm *****************
 15913 ;; Defined at:
 15914 ;;		line 184 in file "alarm.c"
 15915 ;; Parameters:    Size  Location     Type
 15916 ;;		None
 15917 ;; Auto vars:     Size  Location     Type
 15918 ;;		None
 15919 ;; Return value:  Size  Location     Type
 15920 ;;                  1    wreg      _Bool 
 15921 ;; Registers used:
 15922 ;;		wreg, status,2, status,0
 15923 ;; Tracked objects:
 15924 ;;		On entry : 3F/2
 15925 ;;		On exit  : 3F/0
 15926 ;;		Unchanged: 0/0
 15927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15932 ;;Total ram usage:        0 bytes
 15933 ;; Hardware stack levels used:    1
 15934 ;; Hardware stack levels required when called:   16
 15935 ;; This function calls:
 15936 ;;		Nothing
 15937 ;; This function is called by:
 15938 ;;		_AlarmCheckTask
 15939 ;; This function uses a non-reentrant model
 15940 ;;
 15941                           
 15942                           	psect	text113
 15943  009FB2                     __ptext113:
 15944                           	opt callstack 0
 15945  009FB2                     _EPBelowSetAlarm:
 15946                           	opt callstack 13
 15947                           
 15948                           ; BSR set to: 2
 15949                           ;alarm.c: 185:     if (epBelowSetAlarm> 3) return 1;
 15950                           
 15951                           ; BSR set to: 0
 15952                           ;incstack = 0
 15953  009FB2  0100               	movlb	0	; () banked
 15954  009FB4  BFE9               	btfsc	(_epBelowSetAlarm+1)& (0+255),7,b
 15955  009FB6  D008               	goto	l20893
 15956  009FB8  51E9               	movf	(_epBelowSetAlarm+1)& (0+255),w,b
 15957  009FBA  E104               	bnz	u20030
 15958  009FBC  0E04               	movlw	4
 15959  009FBE  5DE8               	subwf	_epBelowSetAlarm& (0+255),w,b
 15960  009FC0  A0D8               	btfss	status,0,c
 15961  009FC2  D002               	goto	l20893
 15962  009FC4                     u20030:
 15963                           
 15964                           ; BSR set to: 0
 15965  009FC4  0E01               	movlw	1
 15966  009FC6  0012               	return	
 15967  009FC8                     l20893:
 15968                           
 15969                           ; BSR set to: 0
 15970  009FC8  0E00               	movlw	0
 15971                           
 15972                           ; BSR set to: 0
 15973  009FCA  0012               	return		;funcret
 15974  009FCC                     __end_of_EPBelowSetAlarm:
 15975                           	opt callstack 0
 15976                           
 15977 ;; *************** function _BaterryLowAlarmHigh *****************
 15978 ;; Defined at:
 15979 ;;		line 183 in file "alarm.c"
 15980 ;; Parameters:    Size  Location     Type
 15981 ;;		None
 15982 ;; Auto vars:     Size  Location     Type
 15983 ;;		None
 15984 ;; Return value:  Size  Location     Type
 15985 ;;                  1    wreg      _Bool 
 15986 ;; Registers used:
 15987 ;;		wreg, status,2
 15988 ;; Tracked objects:
 15989 ;;		On entry : 3F/2
 15990 ;;		On exit  : 3F/2
 15991 ;;		Unchanged: 0/0
 15992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15997 ;;Total ram usage:        0 bytes
 15998 ;; Hardware stack levels used:    1
 15999 ;; Hardware stack levels required when called:   16
 16000 ;; This function calls:
 16001 ;;		Nothing
 16002 ;; This function is called by:
 16003 ;;		_AlarmCheckTask
 16004 ;; This function uses a non-reentrant model
 16005 ;;
 16006                           
 16007                           	psect	text114
 16008  00A6AA                     __ptext114:
 16009                           	opt callstack 0
 16010  00A6AA                     _BaterryLowAlarmHigh:
 16011                           	opt callstack 13
 16012                           
 16013                           ; BSR set to: 2
 16014                           
 16015                           ; BSR set to: 0
 16016                           ;incstack = 0
 16017  00A6AA  51A9               	movf	_baterryLowAlarmHigh& (0+255),w,b
 16018                           
 16019                           ; BSR set to: 2
 16020  00A6AC  0012               	return		;funcret
 16021  00A6AE                     __end_of_BaterryLowAlarmHigh:
 16022                           	opt callstack 0
 16023                           
 16024 ;; *************** function _BaterryLowAlarmMed *****************
 16025 ;; Defined at:
 16026 ;;		line 182 in file "alarm.c"
 16027 ;; Parameters:    Size  Location     Type
 16028 ;;		None
 16029 ;; Auto vars:     Size  Location     Type
 16030 ;;		None
 16031 ;; Return value:  Size  Location     Type
 16032 ;;                  1    wreg      _Bool 
 16033 ;; Registers used:
 16034 ;;		wreg, status,2
 16035 ;; Tracked objects:
 16036 ;;		On entry : 3F/2
 16037 ;;		On exit  : 3F/2
 16038 ;;		Unchanged: 0/0
 16039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16044 ;;Total ram usage:        0 bytes
 16045 ;; Hardware stack levels used:    1
 16046 ;; Hardware stack levels required when called:   16
 16047 ;; This function calls:
 16048 ;;		Nothing
 16049 ;; This function is called by:
 16050 ;;		_AlarmCheckTask
 16051 ;; This function uses a non-reentrant model
 16052 ;;
 16053                           
 16054                           	psect	text115
 16055  00A6AE                     __ptext115:
 16056                           	opt callstack 0
 16057  00A6AE                     _BaterryLowAlarmMed:
 16058                           	opt callstack 13
 16059                           
 16060                           ; BSR set to: 2
 16061                           
 16062                           ; BSR set to: 2
 16063                           ;incstack = 0
 16064  00A6AE  51AA               	movf	_baterryLowAlarmMed& (0+255),w,b
 16065                           
 16066                           ; BSR set to: 2
 16067  00A6B0  0012               	return		;funcret
 16068  00A6B2                     __end_of_BaterryLowAlarmMed:
 16069                           	opt callstack 0
 16070                           
 16071 ;; *************** function _CircuitFailureAlarm *****************
 16072 ;; Defined at:
 16073 ;;		line 179 in file "alarm.c"
 16074 ;; Parameters:    Size  Location     Type
 16075 ;;		None
 16076 ;; Auto vars:     Size  Location     Type
 16077 ;;		None
 16078 ;; Return value:  Size  Location     Type
 16079 ;;                  1    wreg      _Bool 
 16080 ;; Registers used:
 16081 ;;		wreg, status,2
 16082 ;; Tracked objects:
 16083 ;;		On entry : 3F/2
 16084 ;;		On exit  : 3F/2
 16085 ;;		Unchanged: 0/0
 16086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16091 ;;Total ram usage:        0 bytes
 16092 ;; Hardware stack levels used:    1
 16093 ;; Hardware stack levels required when called:   16
 16094 ;; This function calls:
 16095 ;;		Nothing
 16096 ;; This function is called by:
 16097 ;;		_MuteAlarm
 16098 ;;		i2_MuteAlarm
 16099 ;;		_AlarmCheckTask
 16100 ;; This function uses a non-reentrant model
 16101 ;;
 16102                           
 16103                           	psect	text116
 16104  00A6B2                     __ptext116:
 16105                           	opt callstack 0
 16106  00A6B2                     _CircuitFailureAlarm:
 16107                           	opt callstack 13
 16108                           
 16109                           ; BSR set to: 2
 16110                           ;alarm.c: 180:     return circuitFailureAlarm;
 16111                           
 16112                           ; BSR set to: 2
 16113                           ;incstack = 0
 16114  00A6B2  51AB               	movf	_circuitFailureAlarm& (0+255),w,b
 16115                           
 16116                           ; BSR set to: 2
 16117  00A6B4  0012               	return		;funcret
 16118  00A6B6                     __end_of_CircuitFailureAlarm:
 16119                           	opt callstack 0
 16120                           
 16121 ;; *************** function _HighPressureAlarmHigh *****************
 16122 ;; Defined at:
 16123 ;;		line 172 in file "alarm.c"
 16124 ;; Parameters:    Size  Location     Type
 16125 ;;		None
 16126 ;; Auto vars:     Size  Location     Type
 16127 ;;		None
 16128 ;; Return value:  Size  Location     Type
 16129 ;;                  1    wreg      _Bool 
 16130 ;; Registers used:
 16131 ;;		wreg, status,2
 16132 ;; Tracked objects:
 16133 ;;		On entry : 3F/2
 16134 ;;		On exit  : 3F/2
 16135 ;;		Unchanged: 0/0
 16136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16141 ;;Total ram usage:        0 bytes
 16142 ;; Hardware stack levels used:    1
 16143 ;; Hardware stack levels required when called:   16
 16144 ;; This function calls:
 16145 ;;		Nothing
 16146 ;; This function is called by:
 16147 ;;		_MuteAlarm
 16148 ;;		i2_MuteAlarm
 16149 ;;		_AlarmCheckTask
 16150 ;; This function uses a non-reentrant model
 16151 ;;
 16152                           
 16153                           	psect	text117
 16154  00A6B6                     __ptext117:
 16155                           	opt callstack 0
 16156  00A6B6                     _HighPressureAlarmHigh:
 16157                           	opt callstack 13
 16158                           
 16159                           ; BSR set to: 2
 16160                           ;alarm.c: 174:     return highPressureAlarmHigh;
 16161                           
 16162                           ; BSR set to: 2
 16163                           ;incstack = 0
 16164  00A6B6  51AD               	movf	_highPressureAlarmHigh& (0+255),w,b
 16165                           
 16166                           ; BSR set to: 2
 16167  00A6B8  0012               	return		;funcret
 16168  00A6BA                     __end_of_HighPressureAlarmHigh:
 16169                           	opt callstack 0
 16170                           
 16171 ;; *************** function _HighPressureAlarmLow *****************
 16172 ;; Defined at:
 16173 ;;		line 146 in file "alarm.c"
 16174 ;; Parameters:    Size  Location     Type
 16175 ;;		None
 16176 ;; Auto vars:     Size  Location     Type
 16177 ;;  max             2   23[BANK1 ] short 
 16178 ;; Return value:  Size  Location     Type
 16179 ;;                  1    wreg      _Bool 
 16180 ;; Registers used:
 16181 ;;		wreg, status,2, status,0, cstack
 16182 ;; Tracked objects:
 16183 ;;		On entry : 3F/2
 16184 ;;		On exit  : 3F/2
 16185 ;;		Unchanged: 0/0
 16186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16188 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16189 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16190 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16191 ;;Total ram usage:        3 bytes
 16192 ;; Hardware stack levels used:    1
 16193 ;; Hardware stack levels required when called:   18
 16194 ;; This function calls:
 16195 ;;		_GetMaxPressure
 16196 ;;		_SetHighPressureAlarmHigh
 16197 ;;		_SetVeryHighPressureAlarmHigh
 16198 ;; This function is called by:
 16199 ;;		_AlarmCheckTask
 16200 ;; This function uses a non-reentrant model
 16201 ;;
 16202                           
 16203                           	psect	text118
 16204  00818A                     __ptext118:
 16205                           	opt callstack 0
 16206  00818A                     _HighPressureAlarmLow:
 16207                           	opt callstack 11
 16208                           
 16209                           ; BSR set to: 2
 16210                           ;alarm.c: 147:     static int count = 0;;alarm.c: 148:     static int countVery = 0;;ala
      +                          rm.c: 149:     int16_t max = GetMaxPressure();
 16211                           
 16212                           ; BSR set to: 2
 16213                           ;incstack = 0
 16214  00818A  ECD2  F049         	call	_GetMaxPressure	;wreg free
 16215  00818E  0060  F448  F117   	movff	?_GetMaxPressure,HighPressureAlarmLow@max
 16216  008194  0060  F44C  F118   	movff	?_GetMaxPressure+1,HighPressureAlarmLow@max+1
 16217                           
 16218                           ; BSR set to: 2
 16219                           ;alarm.c: 150:     if (max>alarmPmax) {
 16220  00819A  0101               	movlb	1	; () banked
 16221  00819C  5117               	movf	HighPressureAlarmLow@max& (0+255),w,b
 16222  00819E  0102               	movlb	2	; () banked
 16223  0081A0  5DD7               	subwf	_alarmPmax& (0+255),w,b
 16224  0081A2  51D8               	movf	(_alarmPmax+1)& (0+255),w,b
 16225  0081A4  0A80               	xorlw	128
 16226  0081A6  0101               	movlb	1	; () banked
 16227  0081A8  6F16               	movwf	??_HighPressureAlarmLow& (0+255),b
 16228  0081AA  5118               	movf	(HighPressureAlarmLow@max+1)& (0+255),w,b
 16229  0081AC  0A80               	xorlw	128
 16230  0081AE  5916               	subwfb	??_HighPressureAlarmLow& (0+255),w,b
 16231  0081B0  B0D8               	btfsc	status,0,c
 16232  0081B2  D006               	goto	l20847
 16233                           
 16234                           ; BSR set to: 1
 16235                           ;alarm.c: 151:         highPressureAlarmLow = 1;
 16236  0081B4  0E01               	movlw	1
 16237  0081B6  0102               	movlb	2	; () banked
 16238  0081B8  6FAE               	movwf	_highPressureAlarmLow& (0+255),b
 16239                           
 16240                           ; BSR set to: 2
 16241                           ;alarm.c: 152:         count ++;
 16242  0081BA  4B78               	infsnz	HighPressureAlarmLow@count& (0+255),f,b
 16243  0081BC  2B79               	incf	(HighPressureAlarmLow@count+1)& (0+255),f,b
 16244                           
 16245                           ;alarm.c: 153:     } else
 16246  0081BE  D007               	goto	l20849
 16247  0081C0                     l20847:
 16248                           
 16249                           ; BSR set to: 1
 16250                           ;alarm.c: 154:     {;alarm.c: 155:         highPressureAlarmLow= 0;
 16251  0081C0  0E00               	movlw	0
 16252  0081C2  0102               	movlb	2	; () banked
 16253  0081C4  6FAE               	movwf	_highPressureAlarmLow& (0+255),b
 16254                           
 16255                           ;alarm.c: 156:         count = 0;
 16256  0081C6  0E00               	movlw	0
 16257  0081C8  6F79               	movwf	(HighPressureAlarmLow@count+1)& (0+255),b
 16258  0081CA  0E00               	movlw	0
 16259  0081CC  6F78               	movwf	HighPressureAlarmLow@count& (0+255),b
 16260  0081CE                     l20849:
 16261                           
 16262                           ; BSR set to: 2
 16263                           ;alarm.c: 158:     if (count >= 3) {
 16264  0081CE  BF79               	btfsc	(HighPressureAlarmLow@count+1)& (0+255),7,b
 16265  0081D0  D00C               	goto	l20855
 16266  0081D2  5179               	movf	(HighPressureAlarmLow@count+1)& (0+255),w,b
 16267  0081D4  E104               	bnz	u20010
 16268  0081D6  0E03               	movlw	3
 16269  0081D8  5D78               	subwf	HighPressureAlarmLow@count& (0+255),w,b
 16270  0081DA  A0D8               	btfss	status,0,c
 16271  0081DC  D006               	goto	l20855
 16272  0081DE                     u20010:
 16273                           
 16274                           ; BSR set to: 2
 16275                           ;alarm.c: 159:         SetHighPressureAlarmHigh();
 16276  0081DE  ECF3  F052         	call	_SetHighPressureAlarmHigh	;wreg free
 16277                           
 16278                           ; BSR set to: 2
 16279                           ;alarm.c: 160:         count = 3;
 16280  0081E2  0E00               	movlw	0
 16281  0081E4  6F79               	movwf	(HighPressureAlarmLow@count+1)& (0+255),b
 16282  0081E6  0E03               	movlw	3
 16283  0081E8  6F78               	movwf	HighPressureAlarmLow@count& (0+255),b
 16284  0081EA                     l20855:
 16285                           
 16286                           ; BSR set to: 2
 16287                           ;alarm.c: 164:     if (max>70){
 16288  0081EA  0101               	movlb	1	; () banked
 16289  0081EC  BF18               	btfsc	(HighPressureAlarmLow@max+1)& (0+255),7,b
 16290  0081EE  D00B               	goto	l20861
 16291  0081F0  5118               	movf	(HighPressureAlarmLow@max+1)& (0+255),w,b
 16292  0081F2  E104               	bnz	u20020
 16293  0081F4  0E47               	movlw	71
 16294  0081F6  5D17               	subwf	HighPressureAlarmLow@max& (0+255),w,b
 16295  0081F8  A0D8               	btfss	status,0,c
 16296  0081FA  D005               	goto	l20861
 16297  0081FC                     u20020:
 16298                           
 16299                           ; BSR set to: 1
 16300                           ;alarm.c: 165:         SetVeryHighPressureAlarmHigh();
 16301  0081FC  EC81  F052         	call	_SetVeryHighPressureAlarmHigh	;wreg free
 16302                           
 16303                           ; BSR set to: 2
 16304                           ;alarm.c: 166:         veryHighSV1 = 0;
 16305  008200  0E00               	movlw	0
 16306  008202  0101               	movlb	1	; () banked
 16307  008204  6FFB               	movwf	_veryHighSV1& (0+255),b
 16308  008206                     l20861:
 16309                           
 16310                           ; BSR set to: 1
 16311                           ;alarm.c: 170:     return highPressureAlarmLow;
 16312  008206  0102               	movlb	2	; () banked
 16313  008208  51AE               	movf	_highPressureAlarmLow& (0+255),w,b
 16314                           
 16315                           ; BSR set to: 2
 16316  00820A  0012               	return		;funcret
 16317  00820C                     __end_of_HighPressureAlarmLow:
 16318                           	opt callstack 0
 16319                           
 16320 ;; *************** function _GasFailureAlarm *****************
 16321 ;; Defined at:
 16322 ;;		line 143 in file "alarm.c"
 16323 ;; Parameters:    Size  Location     Type
 16324 ;;		None
 16325 ;; Auto vars:     Size  Location     Type
 16326 ;;		None
 16327 ;; Return value:  Size  Location     Type
 16328 ;;                  1    wreg      _Bool 
 16329 ;; Registers used:
 16330 ;;		wreg, status,2
 16331 ;; Tracked objects:
 16332 ;;		On entry : 3F/2
 16333 ;;		On exit  : 3F/2
 16334 ;;		Unchanged: 0/0
 16335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16340 ;;Total ram usage:        0 bytes
 16341 ;; Hardware stack levels used:    1
 16342 ;; Hardware stack levels required when called:   16
 16343 ;; This function calls:
 16344 ;;		Nothing
 16345 ;; This function is called by:
 16346 ;;		_MuteAlarm
 16347 ;;		i2_MuteAlarm
 16348 ;;		_AlarmCheckTask
 16349 ;; This function uses a non-reentrant model
 16350 ;;
 16351                           
 16352                           	psect	text119
 16353  00A6BA                     __ptext119:
 16354                           	opt callstack 0
 16355  00A6BA                     _GasFailureAlarm:
 16356                           	opt callstack 13
 16357                           
 16358                           ; BSR set to: 2
 16359                           
 16360                           ; BSR set to: 2
 16361                           ;incstack = 0
 16362  00A6BA  51AF               	movf	_gasFailureAlarm& (0+255),w,b
 16363                           
 16364                           ; BSR set to: 2
 16365  00A6BC  0012               	return		;funcret
 16366  00A6BE                     __end_of_GasFailureAlarm:
 16367                           	opt callstack 0
 16368                           
 16369 ;; *************** function _ControlFailAlarm *****************
 16370 ;; Defined at:
 16371 ;;		line 136 in file "alarm.c"
 16372 ;; Parameters:    Size  Location     Type
 16373 ;;		None
 16374 ;; Auto vars:     Size  Location     Type
 16375 ;;		None
 16376 ;; Return value:  Size  Location     Type
 16377 ;;                  1    wreg      _Bool 
 16378 ;; Registers used:
 16379 ;;		wreg, status,2
 16380 ;; Tracked objects:
 16381 ;;		On entry : 3F/2
 16382 ;;		On exit  : 3F/0
 16383 ;;		Unchanged: 0/0
 16384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16389 ;;Total ram usage:        0 bytes
 16390 ;; Hardware stack levels used:    1
 16391 ;; Hardware stack levels required when called:   16
 16392 ;; This function calls:
 16393 ;;		Nothing
 16394 ;; This function is called by:
 16395 ;;		_MuteAlarm
 16396 ;;		i2_MuteAlarm
 16397 ;;		_AlarmCheckTask
 16398 ;; This function uses a non-reentrant model
 16399 ;;
 16400                           
 16401                           	psect	text120
 16402  00A0EC                     __ptext120:
 16403                           	opt callstack 0
 16404  00A0EC                     _ControlFailAlarm:
 16405                           	opt callstack 13
 16406                           
 16407                           ; BSR set to: 2
 16408                           ;alarm.c: 137:     if (controlFailAlarm) {
 16409                           
 16410                           ; BSR set to: 2
 16411                           ;incstack = 0
 16412  00A0EC  0100               	movlb	0	; () banked
 16413  00A0EE  51F6               	movf	_controlFailAlarm& (0+255),w,b
 16414  00A0F0  B4D8               	btfsc	status,2,c
 16415  00A0F2  D003               	goto	l2389
 16416                           
 16417                           ; BSR set to: 0
 16418                           ;alarm.c: 138:         controlSV1=0;
 16419  00A0F4  0E00               	movlw	0
 16420  00A0F6  0101               	movlb	1	; () banked
 16421  00A0F8  6FF9               	movwf	_controlSV1& (0+255),b
 16422  00A0FA                     l2389:
 16423                           
 16424                           ;alarm.c: 140:     return controlFailAlarm;
 16425  00A0FA  0100               	movlb	0	; () banked
 16426  00A0FC  51F6               	movf	_controlFailAlarm& (0+255),w,b
 16427                           
 16428                           ; BSR set to: 0
 16429  00A0FE  0012               	return		;funcret
 16430  00A100                     __end_of_ControlFailAlarm:
 16431                           	opt callstack 0
 16432                           
 16433 ;; *************** function _MonitorFailAlarm *****************
 16434 ;; Defined at:
 16435 ;;		line 107 in file "alarm.c"
 16436 ;; Parameters:    Size  Location     Type
 16437 ;;		None
 16438 ;; Auto vars:     Size  Location     Type
 16439 ;;  v5              2  132[BANK1 ] short 
 16440 ;; Return value:  Size  Location     Type
 16441 ;;                  1    wreg      _Bool 
 16442 ;; Registers used:
 16443 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16444 ;; Tracked objects:
 16445 ;;		On entry : 3F/2
 16446 ;;		On exit  : 3F/1
 16447 ;;		Unchanged: 0/0
 16448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16450 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16452 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16453 ;;Total ram usage:        3 bytes
 16454 ;; Hardware stack levels used:    1
 16455 ;; Hardware stack levels required when called:   25
 16456 ;; This function calls:
 16457 ;;		_AdcDataReady
 16458 ;;		_Get5V
 16459 ;;		_printf
 16460 ;; This function is called by:
 16461 ;;		_MuteAlarm
 16462 ;;		i2_MuteAlarm
 16463 ;;		_AlarmCheckTask
 16464 ;; This function uses a non-reentrant model
 16465 ;;
 16466                           
 16467                           	psect	text121
 16468  006AC8                     __ptext121:
 16469                           	opt callstack 0
 16470  006AC8                     _MonitorFailAlarm:
 16471                           	opt callstack 4
 16472                           
 16473                           ; BSR set to: 2
 16474                           ;alarm.c: 108:     int16_t v5;;alarm.c: 109:     static _Bool monitorFailAlarm5V = 0;;al
      +                          arm.c: 110:     static int cnt5v = 0;;alarm.c: 111:     if (AdcDataReady(1)) {
 16475                           
 16476                           ; BSR set to: 0
 16477                           ;incstack = 0
 16478  006AC8  0E00               	movlw	0
 16479  006ACA  0101               	movlb	1	; () banked
 16480  006ACC  6F0B               	movwf	(AdcDataReady@id+1)& (0+255),b
 16481  006ACE  0E01               	movlw	1
 16482  006AD0  6F0A               	movwf	AdcDataReady@id& (0+255),b
 16483  006AD2  EC47  F04D         	call	_AdcDataReady	;wreg free
 16484  006AD6  0900               	iorlw	0
 16485  006AD8  B4D8               	btfsc	status,2,c
 16486  006ADA  D049               	goto	l2377
 16487                           
 16488                           ; BSR set to: 1
 16489                           ;alarm.c: 112:         v5= Get5V();
 16490  006ADC  EC0B  F043         	call	_Get5V	;wreg free
 16491  006AE0  0060  F478  F184   	movff	?_Get5V,MonitorFailAlarm@v5
 16492  006AE6  0060  F47C  F185   	movff	?_Get5V+1,MonitorFailAlarm@v5+1
 16493                           
 16494                           ; BSR set to: 1
 16495                           ;alarm.c: 113:         if (v5>3000) {
 16496  006AEC  BF85               	btfsc	(MonitorFailAlarm@v5+1)& (0+255),7,b
 16497  006AEE  D03F               	goto	l2377
 16498  006AF0  0EB9               	movlw	185
 16499  006AF2  5D84               	subwf	MonitorFailAlarm@v5& (0+255),w,b
 16500  006AF4  0E0B               	movlw	11
 16501  006AF6  5985               	subwfb	(MonitorFailAlarm@v5+1)& (0+255),w,b
 16502  006AF8  A0D8               	btfss	status,0,c
 16503  006AFA  D039               	goto	l2377
 16504                           
 16505                           ; BSR set to: 1
 16506                           ;alarm.c: 114:             if (v5 < 4700/2 || v5 > 5300/2) {
 16507  006AFC  BF85               	btfsc	(MonitorFailAlarm@v5+1)& (0+255),7,b
 16508  006AFE  D00E               	goto	u19930
 16509  006B00  0E2E               	movlw	46
 16510  006B02  5D84               	subwf	MonitorFailAlarm@v5& (0+255),w,b
 16511  006B04  0E09               	movlw	9
 16512  006B06  5985               	subwfb	(MonitorFailAlarm@v5+1)& (0+255),w,b
 16513  006B08  A0D8               	btfss	status,0,c
 16514  006B0A  D008               	goto	u19930
 16515                           
 16516                           ; BSR set to: 1
 16517  006B0C  BF85               	btfsc	(MonitorFailAlarm@v5+1)& (0+255),7,b
 16518  006B0E  D027               	goto	l20821
 16519  006B10  0E5B               	movlw	91
 16520  006B12  5D84               	subwf	MonitorFailAlarm@v5& (0+255),w,b
 16521  006B14  0E0A               	movlw	10
 16522  006B16  5985               	subwfb	(MonitorFailAlarm@v5+1)& (0+255),w,b
 16523  006B18  A0D8               	btfss	status,0,c
 16524  006B1A  D021               	goto	l20821
 16525  006B1C                     u19930:
 16526                           
 16527                           ; BSR set to: 1
 16528                           ;alarm.c: 115:                 cnt5v++;
 16529  006B1C  0102               	movlb	2	; () banked
 16530  006B1E  4B7A               	infsnz	MonitorFailAlarm@cnt5v& (0+255),f,b
 16531  006B20  2B7B               	incf	(MonitorFailAlarm@cnt5v+1)& (0+255),f,b
 16532                           
 16533                           ; BSR set to: 2
 16534                           ;alarm.c: 116:                 if (cnt5v>3) {
 16535  006B22  BF7B               	btfsc	(MonitorFailAlarm@cnt5v+1)& (0+255),7,b
 16536  006B24  D024               	goto	l2377
 16537  006B26  517B               	movf	(MonitorFailAlarm@cnt5v+1)& (0+255),w,b
 16538  006B28  E104               	bnz	u19940
 16539  006B2A  0E04               	movlw	4
 16540  006B2C  5D7A               	subwf	MonitorFailAlarm@cnt5v& (0+255),w,b
 16541  006B2E  A0D8               	btfss	status,0,c
 16542  006B30  D01E               	goto	l2377
 16543  006B32                     u19940:
 16544                           
 16545                           ; BSR set to: 2
 16546                           ;alarm.c: 117:                     monitorFailAlarm5V = 1;
 16547  006B32  0E01               	movlw	1
 16548  006B34  0100               	movlb	0	; () banked
 16549  006B36  6FF5               	movwf	MonitorFailAlarm@monitorFailAlarm5V& (0+255),b
 16550                           
 16551                           ;alarm.c: 118:                     cnt5v = 4;
 16552  006B38  0E00               	movlw	0
 16553  006B3A  0102               	movlb	2	; () banked
 16554  006B3C  6F7B               	movwf	(MonitorFailAlarm@cnt5v+1)& (0+255),b
 16555  006B3E  0E04               	movlw	4
 16556  006B40  6F7A               	movwf	MonitorFailAlarm@cnt5v& (0+255),b
 16557                           
 16558                           ; BSR set to: 2
 16559                           ;alarm.c: 119:                     printf("\r\nFail 5V : %d \r\n", v5);
 16560  006B42  0EAB               	movlw	low STR_22
 16561  006B44  0101               	movlb	1	; () banked
 16562  006B46  6F71               	movwf	printf@fmt& (0+255),b
 16563  006B48  0EFE               	movlw	high STR_22
 16564  006B4A  6F72               	movwf	(printf@fmt+1)& (0+255),b
 16565  006B4C  0060  F610  F173   	movff	MonitorFailAlarm@v5,?_printf+2
 16566  006B52  0060  F614  F174   	movff	MonitorFailAlarm@v5+1,?_printf+3
 16567  006B58  EC32  F04D         	call	_printf	;wreg free
 16568  006B5C  D008               	goto	l2377
 16569  006B5E                     l20821:
 16570                           
 16571                           ; BSR set to: 1
 16572                           ;alarm.c: 122:             {;alarm.c: 123:                 monitorFailAlarm5V = 0;
 16573  006B5E  0E00               	movlw	0
 16574  006B60  0100               	movlb	0	; () banked
 16575  006B62  6FF5               	movwf	MonitorFailAlarm@monitorFailAlarm5V& (0+255),b
 16576                           
 16577                           ;alarm.c: 124:                 cnt5v = 0;
 16578  006B64  0E00               	movlw	0
 16579  006B66  0102               	movlb	2	; () banked
 16580  006B68  6F7B               	movwf	(MonitorFailAlarm@cnt5v+1)& (0+255),b
 16581  006B6A  0E00               	movlw	0
 16582  006B6C  6F7A               	movwf	MonitorFailAlarm@cnt5v& (0+255),b
 16583  006B6E                     l2377:
 16584                           
 16585                           ;alarm.c: 128:     monitorSV1 = !monitorFailAlarm5V;
 16586  006B6E  0100               	movlb	0	; () banked
 16587  006B70  51F5               	movf	MonitorFailAlarm@monitorFailAlarm5V& (0+255),w,b
 16588  006B72  A4D8               	btfss	status,2,c
 16589  006B74  D002               	goto	u19950
 16590  006B76  0E01               	movlw	1
 16591  006B78  D001               	goto	u19960
 16592  006B7A                     u19950:
 16593  006B7A  0E00               	movlw	0
 16594  006B7C                     u19960:
 16595  006B7C  0101               	movlb	1	; () banked
 16596  006B7E  6FF8               	movwf	_monitorSV1& (0+255),b
 16597                           
 16598                           ;alarm.c: 133:     return monitorFailAlarm || monitorFailAlarm5V;
 16599  006B80  0E01               	movlw	1
 16600  006B82  6F83               	movwf	_MonitorFailAlarm$4446& (0+255),b
 16601  006B84  0102               	movlb	2	; () banked
 16602  006B86  51B0               	movf	_monitorFailAlarm& (0+255),w,b
 16603  006B88  A4D8               	btfss	status,2,c
 16604  006B8A  D007               	goto	l2385
 16605                           
 16606                           ; BSR set to: 2
 16607  006B8C  0100               	movlb	0	; () banked
 16608  006B8E  51F5               	movf	MonitorFailAlarm@monitorFailAlarm5V& (0+255),w,b
 16609  006B90  A4D8               	btfss	status,2,c
 16610  006B92  D003               	goto	l2385
 16611                           
 16612                           ; BSR set to: 0
 16613  006B94  0E00               	movlw	0
 16614  006B96  0101               	movlb	1	; () banked
 16615  006B98  6F83               	movwf	_MonitorFailAlarm$4446& (0+255),b
 16616  006B9A                     l2385:
 16617  006B9A  0101               	movlb	1	; () banked
 16618  006B9C  5183               	movf	_MonitorFailAlarm$4446& (0+255),w,b
 16619                           
 16620                           ; BSR set to: 1
 16621  006B9E  0012               	return		;funcret
 16622  006BA0                     __end_of_MonitorFailAlarm:
 16623                           	opt callstack 0
 16624                           
 16625 ;; *************** function _BatteryFailAlarm *****************
 16626 ;; Defined at:
 16627 ;;		line 58 in file "alarm.c"
 16628 ;; Parameters:    Size  Location     Type
 16629 ;;		None
 16630 ;; Auto vars:     Size  Location     Type
 16631 ;;  bat             2   40[BANK1 ] short 
 16632 ;; Return value:  Size  Location     Type
 16633 ;;                  1    wreg      _Bool 
 16634 ;; Registers used:
 16635 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16636 ;; Tracked objects:
 16637 ;;		On entry : 3F/2
 16638 ;;		On exit  : 3F/0
 16639 ;;		Unchanged: 0/0
 16640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16642 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16644 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16645 ;;Total ram usage:        2 bytes
 16646 ;; Hardware stack levels used:    1
 16647 ;; Hardware stack levels required when called:   19
 16648 ;; This function calls:
 16649 ;;		_AdcDataReady
 16650 ;;		_ClearBaterryLowAlarmHigh
 16651 ;;		_ClearBaterryLowAlarmMed
 16652 ;;		_ClearBatteryFailAlarm
 16653 ;;		_ClearNoPowerSupplyAlarm
 16654 ;;		_Get12V
 16655 ;;		_SetBaterryLowAlarmHigh
 16656 ;;		_SetBaterryLowAlarmMed
 16657 ;;		_SetBatteryFailAlarm
 16658 ;;		_SetNoPowerSupplyAlarm
 16659 ;; This function is called by:
 16660 ;;		_AlarmCheckTask
 16661 ;; This function uses a non-reentrant model
 16662 ;;
 16663                           
 16664                           	psect	text122
 16665  0069E4                     __ptext122:
 16666                           	opt callstack 0
 16667  0069E4                     _BatteryFailAlarm:
 16668                           	opt callstack 10
 16669                           
 16670                           ; BSR set to: 2
 16671                           ;alarm.c: 59:     static int timeBattery = 0;;alarm.c: 60:     static int timeBelow10 = 
      +                          0;;alarm.c: 61:     static int timeFail = 0;;alarm.c: 62:     int16_t bat;;alarm.c: 64: 
      +                              if (AdcDataReady(3)) {
 16672                           
 16673                           ; BSR set to: 1
 16674                           ;incstack = 0
 16675  0069E4  0E00               	movlw	0
 16676  0069E6  0101               	movlb	1	; () banked
 16677  0069E8  6F0B               	movwf	(AdcDataReady@id+1)& (0+255),b
 16678  0069EA  0E03               	movlw	3
 16679  0069EC  6F0A               	movwf	AdcDataReady@id& (0+255),b
 16680  0069EE  EC47  F04D         	call	_AdcDataReady	;wreg free
 16681  0069F2  0900               	iorlw	0
 16682  0069F4  B4D8               	btfsc	status,2,c
 16683  0069F6  D065               	goto	l20795
 16684                           
 16685                           ; BSR set to: 1
 16686                           ;alarm.c: 65:         bat= Get12V();
 16687  0069F8  ECD2  F03C         	call	_Get12V	;wreg free
 16688  0069FC  0060  F478  F128   	movff	?_Get12V,BatteryFailAlarm@bat
 16689  006A02  0060  F47C  F129   	movff	?_Get12V+1,BatteryFailAlarm@bat+1
 16690                           
 16691                           ; BSR set to: 1
 16692                           ;alarm.c: 67:         if (bat < 11300) {
 16693  006A08  BF29               	btfsc	(BatteryFailAlarm@bat+1)& (0+255),7,b
 16694  006A0A  D006               	goto	u19850
 16695  006A0C  0E24               	movlw	36
 16696  006A0E  5D28               	subwf	BatteryFailAlarm@bat& (0+255),w,b
 16697  006A10  0E2C               	movlw	44
 16698  006A12  5929               	subwfb	(BatteryFailAlarm@bat+1)& (0+255),w,b
 16699  006A14  B0D8               	btfsc	status,0,c
 16700  006A16  D011               	goto	l20765
 16701  006A18                     u19850:
 16702                           
 16703                           ; BSR set to: 1
 16704                           ;alarm.c: 68:             timeFail++;
 16705  006A18  0102               	movlb	2	; () banked
 16706  006A1A  4B7C               	infsnz	BatteryFailAlarm@timeFail& (0+255),f,b
 16707  006A1C  2B7D               	incf	(BatteryFailAlarm@timeFail+1)& (0+255),f,b
 16708                           
 16709                           ; BSR set to: 2
 16710                           ;alarm.c: 69:             if (timeFail>10*60) {
 16711  006A1E  BF7D               	btfsc	(BatteryFailAlarm@timeFail+1)& (0+255),7,b
 16712  006A20  D016               	goto	l20769
 16713  006A22  0E59               	movlw	89
 16714  006A24  5D7C               	subwf	BatteryFailAlarm@timeFail& (0+255),w,b
 16715  006A26  0E02               	movlw	2
 16716  006A28  597D               	subwfb	(BatteryFailAlarm@timeFail+1)& (0+255),w,b
 16717  006A2A  A0D8               	btfss	status,0,c
 16718  006A2C  D010               	goto	l20769
 16719                           
 16720                           ; BSR set to: 2
 16721                           ;alarm.c: 70:                 SetBatteryFailAlarm ();
 16722  006A2E  EC95  F052         	call	_SetBatteryFailAlarm	;wreg free
 16723                           
 16724                           ; BSR set to: 0
 16725                           ;alarm.c: 71:                 batterySV1=0;
 16726  006A32  0E00               	movlw	0
 16727  006A34  0101               	movlb	1	; () banked
 16728  006A36  6FFA               	movwf	_batterySV1& (0+255),b
 16729  006A38  D00A               	goto	l20769
 16730  006A3A                     l20765:
 16731                           
 16732                           ; BSR set to: 1
 16733                           ;alarm.c: 74:             timeFail = 0;
 16734  006A3A  0E00               	movlw	0
 16735  006A3C  0102               	movlb	2	; () banked
 16736  006A3E  6F7D               	movwf	(BatteryFailAlarm@timeFail+1)& (0+255),b
 16737  006A40  0E00               	movlw	0
 16738  006A42  6F7C               	movwf	BatteryFailAlarm@timeFail& (0+255),b
 16739                           
 16740                           ;alarm.c: 75:             batterySV1=1;
 16741  006A44  0E01               	movlw	1
 16742  006A46  0101               	movlb	1	; () banked
 16743  006A48  6FFA               	movwf	_batterySV1& (0+255),b
 16744                           
 16745                           ; BSR set to: 1
 16746                           ;alarm.c: 76:             ClearBatteryFailAlarm ();
 16747  006A4A  EC99  F052         	call	_ClearBatteryFailAlarm	;wreg free
 16748  006A4E                     l20769:
 16749                           
 16750                           ;alarm.c: 79:         if (bat < 11500) {
 16751  006A4E  0101               	movlb	1	; () banked
 16752  006A50  BF29               	btfsc	(BatteryFailAlarm@bat+1)& (0+255),7,b
 16753  006A52  D006               	goto	u19870
 16754  006A54  0EEC               	movlw	236
 16755  006A56  5D28               	subwf	BatteryFailAlarm@bat& (0+255),w,b
 16756  006A58  0E2C               	movlw	44
 16757  006A5A  5929               	subwfb	(BatteryFailAlarm@bat+1)& (0+255),w,b
 16758  006A5C  B0D8               	btfsc	status,0,c
 16759  006A5E  D012               	goto	l20779
 16760  006A60                     u19870:
 16761                           
 16762                           ; BSR set to: 1
 16763                           ;alarm.c: 80:             timeBelow10++;
 16764  006A60  0102               	movlb	2	; () banked
 16765  006A62  4B7E               	infsnz	BatteryFailAlarm@timeBelow10& (0+255),f,b
 16766  006A64  2B7F               	incf	(BatteryFailAlarm@timeBelow10+1)& (0+255),f,b
 16767                           
 16768                           ; BSR set to: 2
 16769                           ;alarm.c: 81:             SetBaterryLowAlarmMed();
 16770  006A66  ECF9  F052         	call	_SetBaterryLowAlarmMed	;wreg free
 16771                           
 16772                           ; BSR set to: 2
 16773                           ;alarm.c: 82:             if (timeBelow10>3*60) {
 16774  006A6A  BF7F               	btfsc	(BatteryFailAlarm@timeBelow10+1)& (0+255),7,b
 16775  006A6C  D014               	goto	l20785
 16776  006A6E  517F               	movf	(BatteryFailAlarm@timeBelow10+1)& (0+255),w,b
 16777  006A70  E104               	bnz	u19880
 16778  006A72  0EB5               	movlw	181
 16779  006A74  5D7E               	subwf	BatteryFailAlarm@timeBelow10& (0+255),w,b
 16780  006A76  A0D8               	btfss	status,0,c
 16781  006A78  D00E               	goto	l20785
 16782  006A7A                     u19880:
 16783                           
 16784                           ; BSR set to: 2
 16785                           ;alarm.c: 83:                 SetBaterryLowAlarmHigh();
 16786  006A7A  ECFC  F052         	call	_SetBaterryLowAlarmHigh	;wreg free
 16787                           
 16788                           ;alarm.c: 84:                 ClearBaterryLowAlarmHigh();
 16789  006A7E  EC05  F053         	call	_ClearBaterryLowAlarmHigh	;wreg free
 16790  006A82  D009               	goto	l20785
 16791  006A84                     l20779:
 16792                           
 16793                           ; BSR set to: 1
 16794                           ;alarm.c: 87:             timeBelow10 = 0;
 16795  006A84  0E00               	movlw	0
 16796  006A86  0102               	movlb	2	; () banked
 16797  006A88  6F7F               	movwf	(BatteryFailAlarm@timeBelow10+1)& (0+255),b
 16798  006A8A  0E00               	movlw	0
 16799  006A8C  6F7E               	movwf	BatteryFailAlarm@timeBelow10& (0+255),b
 16800                           
 16801                           ; BSR set to: 2
 16802                           ;alarm.c: 88:             ClearBaterryLowAlarmMed();
 16803  006A8E  EC02  F053         	call	_ClearBaterryLowAlarmMed	;wreg free
 16804                           
 16805                           ; BSR set to: 2
 16806                           ;alarm.c: 89:             ClearBaterryLowAlarmHigh();
 16807  006A92  EC05  F053         	call	_ClearBaterryLowAlarmHigh	;wreg free
 16808  006A96                     l20785:
 16809                           
 16810                           ; BSR set to: 2
 16811                           ;alarm.c: 92:         if (bat < 13250) {
 16812  006A96  0101               	movlb	1	; () banked
 16813  006A98  BF29               	btfsc	(BatteryFailAlarm@bat+1)& (0+255),7,b
 16814  006A9A  D006               	goto	u19890
 16815  006A9C  0EC2               	movlw	194
 16816  006A9E  5D28               	subwf	BatteryFailAlarm@bat& (0+255),w,b
 16817  006AA0  0E33               	movlw	51
 16818  006AA2  5929               	subwfb	(BatteryFailAlarm@bat+1)& (0+255),w,b
 16819  006AA4  B0D8               	btfsc	status,0,c
 16820  006AA6  D006               	goto	l20791
 16821  006AA8                     u19890:
 16822                           
 16823                           ; BSR set to: 1
 16824                           ;alarm.c: 93:             timeBattery++;
 16825  006AA8  0102               	movlb	2	; () banked
 16826  006AAA  4B80               	infsnz	BatteryFailAlarm@timeBattery& (0+255),f,b
 16827  006AAC  2B81               	incf	(BatteryFailAlarm@timeBattery+1)& (0+255),f,b
 16828                           
 16829                           ; BSR set to: 2
 16830                           ;alarm.c: 94:             SetNoPowerSupplyAlarm();
 16831  006AAE  ECF6  F052         	call	_SetNoPowerSupplyAlarm	;wreg free
 16832                           
 16833                           ;alarm.c: 95:         }
 16834  006AB2  D007               	goto	l20795
 16835  006AB4                     l20791:
 16836                           
 16837                           ; BSR set to: 1
 16838                           ;alarm.c: 97:         {;alarm.c: 98:             timeBattery = 0;
 16839  006AB4  0E00               	movlw	0
 16840  006AB6  0102               	movlb	2	; () banked
 16841  006AB8  6F81               	movwf	(BatteryFailAlarm@timeBattery+1)& (0+255),b
 16842  006ABA  0E00               	movlw	0
 16843  006ABC  6F80               	movwf	BatteryFailAlarm@timeBattery& (0+255),b
 16844                           
 16845                           ; BSR set to: 2
 16846                           ;alarm.c: 99:             ClearNoPowerSupplyAlarm();
 16847  006ABE  ECFF  F052         	call	_ClearNoPowerSupplyAlarm	;wreg free
 16848  006AC2                     l20795:
 16849                           
 16850                           ;alarm.c: 101:         return batteryFailAlarm;
 16851  006AC2  0100               	movlb	0	; () banked
 16852  006AC4  51F7               	movf	_batteryFailAlarm& (0+255),w,b
 16853                           
 16854                           ; BSR set to: 0
 16855  006AC6  0012               	return		;funcret
 16856  006AC8                     __end_of_BatteryFailAlarm:
 16857                           	opt callstack 0
 16858                           
 16859 ;; *************** function _VeryHighPressureAlarmHigh *****************
 16860 ;; Defined at:
 16861 ;;		line 176 in file "alarm.c"
 16862 ;; Parameters:    Size  Location     Type
 16863 ;;		None
 16864 ;; Auto vars:     Size  Location     Type
 16865 ;;		None
 16866 ;; Return value:  Size  Location     Type
 16867 ;;                  1    wreg      _Bool 
 16868 ;; Registers used:
 16869 ;;		wreg, status,2
 16870 ;; Tracked objects:
 16871 ;;		On entry : 3F/2
 16872 ;;		On exit  : 3F/2
 16873 ;;		Unchanged: 0/0
 16874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16879 ;;Total ram usage:        0 bytes
 16880 ;; Hardware stack levels used:    1
 16881 ;; Hardware stack levels required when called:   16
 16882 ;; This function calls:
 16883 ;;		Nothing
 16884 ;; This function is called by:
 16885 ;;		_MuteAlarm
 16886 ;;		i2_MuteAlarm
 16887 ;;		_AlarmCheckTask
 16888 ;; This function uses a non-reentrant model
 16889 ;;
 16890                           
 16891                           	psect	text123
 16892  00A6BE                     __ptext123:
 16893                           	opt callstack 0
 16894  00A6BE                     _VeryHighPressureAlarmHigh:
 16895                           	opt callstack 13
 16896                           
 16897                           ; BSR set to: 2
 16898                           ;alarm.c: 177:     return veryHighPressureAlarmHigh;
 16899                           
 16900                           ; BSR set to: 0
 16901                           ;incstack = 0
 16902  00A6BE  51AC               	movf	_veryHighPressureAlarmHigh& (0+255),w,b
 16903                           
 16904                           ; BSR set to: 2
 16905  00A6C0  0012               	return		;funcret
 16906  00A6C2                     __end_of_VeryHighPressureAlarmHigh:
 16907                           	opt callstack 0
 16908                           
 16909 ;; *************** function _SetAlarmSV1 *****************
 16910 ;; Defined at:
 16911 ;;		line 883 in file "monitor.c"
 16912 ;; Parameters:    Size  Location     Type
 16913 ;;  value           1    wreg     _Bool 
 16914 ;; Auto vars:     Size  Location     Type
 16915 ;;  value           1  131[BANK1 ] _Bool 
 16916 ;; Return value:  Size  Location     Type
 16917 ;;                  1    wreg      void 
 16918 ;; Registers used:
 16919 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16920 ;; Tracked objects:
 16921 ;;		On entry : 3C/0
 16922 ;;		On exit  : 3D/0
 16923 ;;		Unchanged: 0/0
 16924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16926 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16928 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16929 ;;Total ram usage:        1 bytes
 16930 ;; Hardware stack levels used:    1
 16931 ;; Hardware stack levels required when called:   25
 16932 ;; This function calls:
 16933 ;;		_printf
 16934 ;; This function is called by:
 16935 ;;		_main
 16936 ;;		_MuteAlarm
 16937 ;;		_AlarmCheckTask
 16938 ;; This function uses a non-reentrant model
 16939 ;;
 16940                           
 16941                           	psect	text124
 16942  0096D0                     __ptext124:
 16943                           	opt callstack 0
 16944  0096D0                     _SetAlarmSV1:
 16945                           	opt callstack 5
 16946                           
 16947                           ; BSR set to: 2
 16948                           ;incstack = 0
 16949                           ;SetAlarmSV1@value stored from wreg
 16950  0096D0  0101               	movlb	1	; () banked
 16951  0096D2  6F83               	movwf	SetAlarmSV1@value& (0+255),b
 16952                           
 16953                           ;monitor.c: 884:     static _Bool last= 0;;monitor.c: 885:     if (last!=value) printf("
      +                          \r\nAlSV1: %d\r\n", value);
 16954  0096D4  0101               	movlb	1	; () banked
 16955  0096D6  5183               	movf	SetAlarmSV1@value& (0+255),w,b
 16956  0096D8  0100               	movlb	0	; () banked
 16957  0096DA  19F2               	xorwf	SetAlarmSV1@last& (0+255),w,b
 16958  0096DC  B4D8               	btfsc	status,2,c
 16959  0096DE  D00B               	goto	l20561
 16960                           
 16961                           ; BSR set to: 0
 16962  0096E0  0E5C               	movlw	low STR_47
 16963  0096E2  0101               	movlb	1	; () banked
 16964  0096E4  6F71               	movwf	printf@fmt& (0+255),b
 16965  0096E6  0EFF               	movlw	high STR_47
 16966  0096E8  6F72               	movwf	(printf@fmt+1)& (0+255),b
 16967  0096EA  0060  F60C  F173   	movff	SetAlarmSV1@value,?_printf+2
 16968  0096F0  6B74               	clrf	(?_printf+3)& (0+255),b
 16969  0096F2  EC32  F04D         	call	_printf	;wreg free
 16970  0096F6                     l20561:
 16971                           
 16972                           ;monitor.c: 886:     alarmSV1 = value;
 16973  0096F6  0060  F60C  F2A0   	movff	SetAlarmSV1@value,_alarmSV1
 16974                           
 16975                           ;monitor.c: 887:     last = value;
 16976  0096FC  0060  F60C  F0F2   	movff	SetAlarmSV1@value,SetAlarmSV1@last
 16977  009702  0012               	return		;funcret
 16978  009704                     __end_of_SetAlarmSV1:
 16979                           	opt callstack 0
 16980                           
 16981 ;; *************** function _SetAlarmLED *****************
 16982 ;; Defined at:
 16983 ;;		line 88 in file "buttons.c"
 16984 ;; Parameters:    Size  Location     Type
 16985 ;;  type            1    wreg     unsigned char 
 16986 ;; Auto vars:     Size  Location     Type
 16987 ;;  type            1    4[BANK1 ] unsigned char 
 16988 ;; Return value:  Size  Location     Type
 16989 ;;                  1    wreg      void 
 16990 ;; Registers used:
 16991 ;;		wreg
 16992 ;; Tracked objects:
 16993 ;;		On entry : 3F/2
 16994 ;;		On exit  : 0/0
 16995 ;;		Unchanged: 0/0
 16996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16998 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17000 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17001 ;;Total ram usage:        1 bytes
 17002 ;; Hardware stack levels used:    1
 17003 ;; Hardware stack levels required when called:   16
 17004 ;; This function calls:
 17005 ;;		Nothing
 17006 ;; This function is called by:
 17007 ;;		_AlarmCheckTask
 17008 ;; This function uses a non-reentrant model
 17009 ;;
 17010                           
 17011                           	psect	text125
 17012  00A2F6                     __ptext125:
 17013                           	opt callstack 0
 17014  00A2F6                     _SetAlarmLED:
 17015                           	opt callstack 13
 17016                           
 17017                           ;incstack = 0
 17018                           ;SetAlarmLED@type stored from wreg
 17019  00A2F6  0101               	movlb	1	; () banked
 17020  00A2F8  6F04               	movwf	SetAlarmLED@type& (0+255),b
 17021                           
 17022                           ;buttons.c: 89:     ledType = type;
 17023  00A2FA  0060  F410  F0FB   	movff	SetAlarmLED@type,_ledType
 17024  00A300  86BD               	bsf	189,3,c	;volatile
 17025  00A302  0012               	return		;funcret
 17026  00A304                     __end_of_SetAlarmLED:
 17027                           	opt callstack 0
 17028                           
 17029 ;; *************** function _Get5V *****************
 17030 ;; Defined at:
 17031 ;;		line 849 in file "monitor.c"
 17032 ;; Parameters:    Size  Location     Type
 17033 ;;		None
 17034 ;; Auto vars:     Size  Location     Type
 17035 ;;  mv              4   32[BANK1 ] long 
 17036 ;;  v12             2   38[BANK1 ] short 
 17037 ;;  adc             2   36[BANK1 ] unsigned short 
 17038 ;; Return value:  Size  Location     Type
 17039 ;;                  2   30[BANK1 ] short 
 17040 ;; Registers used:
 17041 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17042 ;; Tracked objects:
 17043 ;;		On entry : 3F/1
 17044 ;;		On exit  : 3F/1
 17045 ;;		Unchanged: 0/0
 17046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17047 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17048 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17050 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17051 ;;Total ram usage:       10 bytes
 17052 ;; Hardware stack levels used:    1
 17053 ;; Hardware stack levels required when called:   18
 17054 ;; This function calls:
 17055 ;;		_AdcGetData
 17056 ;;		___aldiv
 17057 ;; This function is called by:
 17058 ;;		_MonitorFailAlarm
 17059 ;; This function uses a non-reentrant model
 17060 ;;
 17061                           
 17062                           	psect	text126
 17063  008616                     __ptext126:
 17064                           	opt callstack 0
 17065  008616                     _Get5V:
 17066                           	opt callstack 10
 17067                           
 17068                           ; BSR set to: 1
 17069                           ;monitor.c: 850:     adc_result_t adc = AdcGetData(1);
 17070                           
 17071                           ;incstack = 0
 17072  008616  0E00               	movlw	0
 17073  008618  6F0B               	movwf	(AdcGetData@id+1)& (0+255),b
 17074  00861A  0E01               	movlw	1
 17075  00861C  6F0A               	movwf	AdcGetData@id& (0+255),b
 17076  00861E  ECB5  F044         	call	_AdcGetData	;wreg free
 17077  008622  0060  F428  F124   	movff	?_AdcGetData,Get5V@adc
 17078  008628  0060  F42C  F125   	movff	?_AdcGetData+1,Get5V@adc+1
 17079                           
 17080                           ; BSR set to: 1
 17081                           ;monitor.c: 851:     int32_t mv = adc;
 17082  00862E  0060  F490  F120   	movff	Get5V@adc,Get5V@mv
 17083  008634  0060  F494  F121   	movff	Get5V@adc+1,Get5V@mv+1
 17084  00863A  6B22               	clrf	(Get5V@mv+2)& (0+255),b
 17085  00863C  6B23               	clrf	(Get5V@mv+3)& (0+255),b
 17086                           
 17087                           ; BSR set to: 1
 17088                           ;monitor.c: 853:     int16_t v12 = mv/2;
 17089  00863E  0060  F480  F110   	movff	Get5V@mv,___aldiv@dividend
 17090  008644  0060  F484  F111   	movff	Get5V@mv+1,___aldiv@dividend+1
 17091  00864A  0060  F488  F112   	movff	Get5V@mv+2,___aldiv@dividend+2
 17092  008650  0060  F48C  F113   	movff	Get5V@mv+3,___aldiv@dividend+3
 17093  008656  0E02               	movlw	2
 17094  008658  6F14               	movwf	___aldiv@divisor& (0+255),b
 17095  00865A  0E00               	movlw	0
 17096  00865C  6F15               	movwf	(___aldiv@divisor+1)& (0+255),b
 17097  00865E  0E00               	movlw	0
 17098  008660  6F16               	movwf	(___aldiv@divisor+2)& (0+255),b
 17099  008662  0E00               	movlw	0
 17100  008664  6F17               	movwf	(___aldiv@divisor+3)& (0+255),b
 17101  008666  ECD0  F035         	call	___aldiv	;wreg free
 17102  00866A  0060  F440  F126   	movff	?___aldiv,Get5V@v12
 17103  008670  0060  F444  F127   	movff	?___aldiv+1,Get5V@v12+1
 17104                           
 17105                           ; BSR set to: 1
 17106                           ;monitor.c: 854:     return v12;
 17107  008676  0060  F498  F11E   	movff	Get5V@v12,?_Get5V
 17108  00867C  0060  F49C  F11F   	movff	Get5V@v12+1,?_Get5V+1
 17109                           
 17110                           ; BSR set to: 1
 17111  008682  0012               	return		;funcret
 17112  008684                     __end_of_Get5V:
 17113                           	opt callstack 0
 17114                           
 17115 ;; *************** function _SetVeryHighPressureAlarmHigh *****************
 17116 ;; Defined at:
 17117 ;;		line 233 in file "alarm.c"
 17118 ;; Parameters:    Size  Location     Type
 17119 ;;		None
 17120 ;; Auto vars:     Size  Location     Type
 17121 ;;		None
 17122 ;; Return value:  Size  Location     Type
 17123 ;;                  1    wreg      void 
 17124 ;; Registers used:
 17125 ;;		wreg, status,2
 17126 ;; Tracked objects:
 17127 ;;		On entry : 3F/1
 17128 ;;		On exit  : 3F/2
 17129 ;;		Unchanged: 0/0
 17130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17135 ;;Total ram usage:        0 bytes
 17136 ;; Hardware stack levels used:    1
 17137 ;; Hardware stack levels required when called:   16
 17138 ;; This function calls:
 17139 ;;		Nothing
 17140 ;; This function is called by:
 17141 ;;		_HighPressureAlarmLow
 17142 ;; This function uses a non-reentrant model
 17143 ;;
 17144                           
 17145                           	psect	text127
 17146  00A502                     __ptext127:
 17147                           	opt callstack 0
 17148  00A502                     _SetVeryHighPressureAlarmHigh:
 17149                           	opt callstack 12
 17150                           
 17151                           ; BSR set to: 1
 17152                           
 17153                           ; BSR set to: 1
 17154                           ;incstack = 0
 17155  00A502  0E01               	movlw	1
 17156  00A504  0102               	movlb	2	; () banked
 17157  00A506  6FAC               	movwf	_veryHighPressureAlarmHigh& (0+255),b
 17158                           
 17159                           ; BSR set to: 2
 17160  00A508  0012               	return		;funcret
 17161  00A50A                     __end_of_SetVeryHighPressureAlarmHigh:
 17162                           	opt callstack 0
 17163                           
 17164 ;; *************** function _SetHighPressureAlarmHigh *****************
 17165 ;; Defined at:
 17166 ;;		line 232 in file "alarm.c"
 17167 ;; Parameters:    Size  Location     Type
 17168 ;;		None
 17169 ;; Auto vars:     Size  Location     Type
 17170 ;;		None
 17171 ;; Return value:  Size  Location     Type
 17172 ;;                  1    wreg      void 
 17173 ;; Registers used:
 17174 ;;		wreg, status,2
 17175 ;; Tracked objects:
 17176 ;;		On entry : 3F/2
 17177 ;;		On exit  : 3F/2
 17178 ;;		Unchanged: 0/0
 17179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17184 ;;Total ram usage:        0 bytes
 17185 ;; Hardware stack levels used:    1
 17186 ;; Hardware stack levels required when called:   16
 17187 ;; This function calls:
 17188 ;;		Nothing
 17189 ;; This function is called by:
 17190 ;;		_HighPressureAlarmLow
 17191 ;; This function uses a non-reentrant model
 17192 ;;
 17193                           
 17194                           	psect	text128
 17195  00A5E6                     __ptext128:
 17196                           	opt callstack 0
 17197  00A5E6                     _SetHighPressureAlarmHigh:
 17198                           	opt callstack 12
 17199                           
 17200                           ; BSR set to: 2
 17201                           
 17202                           ; BSR set to: 2
 17203                           ;incstack = 0
 17204  00A5E6  0E01               	movlw	1
 17205  00A5E8  6FAD               	movwf	_highPressureAlarmHigh& (0+255),b
 17206                           
 17207                           ; BSR set to: 2
 17208  00A5EA  0012               	return		;funcret
 17209  00A5EC                     __end_of_SetHighPressureAlarmHigh:
 17210                           	opt callstack 0
 17211                           
 17212 ;; *************** function _GetMaxPressure *****************
 17213 ;; Defined at:
 17214 ;;		line 171 in file "monitor.c"
 17215 ;; Parameters:    Size  Location     Type
 17216 ;;		None
 17217 ;; Auto vars:     Size  Location     Type
 17218 ;;  temp            2   20[BANK1 ] int 
 17219 ;; Return value:  Size  Location     Type
 17220 ;;                  2   18[BANK1 ] short 
 17221 ;; Registers used:
 17222 ;;		wreg, status,2, status,0, cstack
 17223 ;; Tracked objects:
 17224 ;;		On entry : 3F/2
 17225 ;;		On exit  : 3F/2
 17226 ;;		Unchanged: 0/0
 17227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17228 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17229 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17231 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17232 ;;Total ram usage:        4 bytes
 17233 ;; Hardware stack levels used:    1
 17234 ;; Hardware stack levels required when called:   17
 17235 ;; This function calls:
 17236 ;;		___awdiv
 17237 ;; This function is called by:
 17238 ;;		_HighPressureAlarmLow
 17239 ;; This function uses a non-reentrant model
 17240 ;;
 17241                           
 17242                           	psect	text129
 17243  0093A4                     __ptext129:
 17244                           	opt callstack 0
 17245  0093A4                     _GetMaxPressure:
 17246                           	opt callstack 11
 17247                           
 17248                           ; BSR set to: 2
 17249                           ;monitor.c: 172:     int temp = alarmMaxPressure/5;
 17250                           
 17251                           ; BSR set to: 2
 17252                           ;incstack = 0
 17253  0093A4  0060  F940  F10A   	movff	_alarmMaxPressure,___awdiv@dividend
 17254  0093AA  0060  F944  F10B   	movff	_alarmMaxPressure+1,___awdiv@dividend+1
 17255  0093B0  0E00               	movlw	0
 17256  0093B2  0101               	movlb	1	; () banked
 17257  0093B4  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 17258  0093B6  0E05               	movlw	5
 17259  0093B8  6F0C               	movwf	___awdiv@divisor& (0+255),b
 17260  0093BA  ECB9  F03F         	call	___awdiv	;wreg free
 17261  0093BE  0060  F428  F114   	movff	?___awdiv,GetMaxPressure@temp
 17262  0093C4  0060  F42C  F115   	movff	?___awdiv+1,GetMaxPressure@temp+1
 17263                           
 17264                           ; BSR set to: 1
 17265                           ;monitor.c: 174:     alarmMaxPressure = 0;
 17266  0093CA  0E00               	movlw	0
 17267  0093CC  0102               	movlb	2	; () banked
 17268  0093CE  6F51               	movwf	(_alarmMaxPressure+1)& (0+255),b
 17269  0093D0  0E00               	movlw	0
 17270  0093D2  6F50               	movwf	_alarmMaxPressure& (0+255),b
 17271                           
 17272                           ; BSR set to: 2
 17273                           ;monitor.c: 175:     return temp;
 17274  0093D4  0060  F450  F112   	movff	GetMaxPressure@temp,?_GetMaxPressure
 17275  0093DA  0060  F454  F113   	movff	GetMaxPressure@temp+1,?_GetMaxPressure+1
 17276                           
 17277                           ; BSR set to: 2
 17278  0093E0  0012               	return		;funcret
 17279  0093E2                     __end_of_GetMaxPressure:
 17280                           	opt callstack 0
 17281                           
 17282 ;; *************** function _ClearAlarmLED *****************
 17283 ;; Defined at:
 17284 ;;		line 93 in file "buttons.c"
 17285 ;; Parameters:    Size  Location     Type
 17286 ;;		None
 17287 ;; Auto vars:     Size  Location     Type
 17288 ;;		None
 17289 ;; Return value:  Size  Location     Type
 17290 ;;                  1    wreg      void 
 17291 ;; Registers used:
 17292 ;;		wreg, status,2
 17293 ;; Tracked objects:
 17294 ;;		On entry : 3F/39
 17295 ;;		On exit  : 3F/0
 17296 ;;		Unchanged: 0/0
 17297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17302 ;;Total ram usage:        0 bytes
 17303 ;; Hardware stack levels used:    1
 17304 ;; Hardware stack levels required when called:   16
 17305 ;; This function calls:
 17306 ;;		Nothing
 17307 ;; This function is called by:
 17308 ;;		_AlarmCheckTask
 17309 ;; This function uses a non-reentrant model
 17310 ;;
 17311                           
 17312                           	psect	text130
 17313  00A462                     __ptext130:
 17314                           	opt callstack 0
 17315  00A462                     _ClearAlarmLED:
 17316                           	opt callstack 13
 17317                           
 17318                           ; BSR set to: 57
 17319                           ;buttons.c: 94:     ledType = 0;
 17320                           
 17321                           ; BSR set to: 2
 17322                           ;incstack = 0
 17323  00A462  0E00               	movlw	0
 17324  00A464  0100               	movlb	0	; () banked
 17325  00A466  6FFB               	movwf	_ledType& (0+255),b
 17326                           
 17327                           ; BSR set to: 0
 17328  00A468  96BD               	bcf	189,3,c	;volatile
 17329                           
 17330                           ; BSR set to: 0
 17331  00A46A  0012               	return		;funcret
 17332  00A46C                     __end_of_ClearAlarmLED:
 17333                           	opt callstack 0
 17334                           
 17335 ;; *************** function _BuzzerSet *****************
 17336 ;; Defined at:
 17337 ;;		line 64 in file "buzzer.c"
 17338 ;; Parameters:    Size  Location     Type
 17339 ;;  state           1    wreg     unsigned char 
 17340 ;; Auto vars:     Size  Location     Type
 17341 ;;  state           1  133[BANK1 ] unsigned char 
 17342 ;; Return value:  Size  Location     Type
 17343 ;;                  1    wreg      void 
 17344 ;; Registers used:
 17345 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17346 ;; Tracked objects:
 17347 ;;		On entry : 3F/2
 17348 ;;		On exit  : 0/0
 17349 ;;		Unchanged: 0/0
 17350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17352 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17354 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17355 ;;Total ram usage:        1 bytes
 17356 ;; Hardware stack levels used:    1
 17357 ;; Hardware stack levels required when called:   26
 17358 ;; This function calls:
 17359 ;;		_BuzzerOff
 17360 ;;		_BuzzerTask
 17361 ;; This function is called by:
 17362 ;;		_AlarmCheckTask
 17363 ;; This function uses a non-reentrant model
 17364 ;;
 17365                           
 17366                           	psect	text131
 17367  009FCC                     __ptext131:
 17368                           	opt callstack 0
 17369  009FCC                     _BuzzerSet:
 17370                           	opt callstack 3
 17371                           
 17372                           ; BSR set to: 0
 17373                           ;incstack = 0
 17374                           ;BuzzerSet@state stored from wreg
 17375  009FCC  0101               	movlb	1	; () banked
 17376  009FCE  6F85               	movwf	BuzzerSet@state& (0+255),b
 17377                           
 17378                           ;buzzer.c: 65:     alarmState = state;
 17379  009FD0  0060  F614  F0FA   	movff	BuzzerSet@state,_alarmState
 17380                           
 17381                           ;buzzer.c: 66:     alarmStep = 0;
 17382  009FD6  0E00               	movlw	0
 17383  009FD8  0101               	movlb	1	; () banked
 17384  009FDA  6FEF               	movwf	_alarmStep& (0+255),b
 17385                           
 17386                           ; BSR set to: 1
 17387                           ;buzzer.c: 67:     BuzzerOff();
 17388  009FDC  ECC7  F050         	call	_BuzzerOff	;wreg free
 17389                           
 17390                           ; BSR set to: 57
 17391                           ;buzzer.c: 68:     BuzzerTask();
 17392  009FE0  ECEE  F014         	call	_BuzzerTask	;wreg free
 17393  009FE4  0012               	return		;funcret
 17394  009FE6                     __end_of_BuzzerSet:
 17395                           	opt callstack 0
 17396                           
 17397 ;; *************** function _BuzzerTask *****************
 17398 ;; Defined at:
 17399 ;;		line 132 in file "buzzer.c"
 17400 ;; Parameters:    Size  Location     Type
 17401 ;;		None
 17402 ;; Auto vars:     Size  Location     Type
 17403 ;;		None
 17404 ;; Return value:  Size  Location     Type
 17405 ;;                  1    wreg      void 
 17406 ;; Registers used:
 17407 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17408 ;; Tracked objects:
 17409 ;;		On entry : 3F/39
 17410 ;;		On exit  : 0/0
 17411 ;;		Unchanged: 0/0
 17412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17415 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17416 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17417 ;;Total ram usage:        2 bytes
 17418 ;; Hardware stack levels used:    1
 17419 ;; Hardware stack levels required when called:   25
 17420 ;; This function calls:
 17421 ;;		_BuzzerOff
 17422 ;;		_BuzzerOn
 17423 ;;		_ClearMonitorFailAlarm
 17424 ;;		_SetMonitorFailAlarm
 17425 ;;		_TMR4_Period8BitSet
 17426 ;;		_TMR4_SetInterruptHandler
 17427 ;;		_TMR4_Start
 17428 ;;		_TMR4_Stop
 17429 ;;		_printf
 17430 ;; This function is called by:
 17431 ;;		_BuzzerSet
 17432 ;; This function uses a non-reentrant model
 17433 ;;
 17434                           
 17435                           	psect	text132
 17436  0029DC                     __ptext132:
 17437                           	opt callstack 0
 17438  0029DC                     _BuzzerTask:
 17439                           	opt callstack 3
 17440                           
 17441                           ; BSR set to: 57
 17442                           ;buzzer.c: 133:     static int noDetections = 0;;buzzer.c: 134:     if (on) {
 17443                           
 17444                           ;incstack = 0
 17445  0029DC  0100               	movlb	0	; () banked
 17446  0029DE  51F9               	movf	_on& (0+255),w,b
 17447  0029E0  B4D8               	btfsc	status,2,c
 17448  0029E2  D026               	goto	l19423
 17449                           
 17450                           ; BSR set to: 0
 17451                           ;buzzer.c: 136:         if (detected) {
 17452  0029E4  51F8               	movf	_detected& (0+255),w,b
 17453  0029E6  B4D8               	btfsc	status,2,c
 17454  0029E8  D00E               	goto	l19415
 17455                           
 17456                           ; BSR set to: 0
 17457                           ;buzzer.c: 138:             ClearMonitorFailAlarm();
 17458  0029EA  EC89  F052         	call	_ClearMonitorFailAlarm	;wreg free
 17459                           
 17460                           ; BSR set to: 2
 17461                           ;buzzer.c: 139:             noDetections = 0;
 17462  0029EE  0E00               	movlw	0
 17463  0029F0  6F83               	movwf	(BuzzerTask@noDetections+1)& (0+255),b
 17464  0029F2  0E00               	movlw	0
 17465  0029F4  6F82               	movwf	BuzzerTask@noDetections& (0+255),b
 17466                           
 17467                           ; BSR set to: 2
 17468                           ;buzzer.c: 140:             printf("_DB_");
 17469  0029F6  0EC6               	movlw	low STR_15
 17470  0029F8  0101               	movlb	1	; () banked
 17471  0029FA  6F71               	movwf	printf@fmt& (0+255),b
 17472  0029FC  0EFF               	movlw	high STR_15
 17473  0029FE  6F72               	movwf	(printf@fmt+1)& (0+255),b
 17474  002A00  EC32  F04D         	call	_printf	;wreg free
 17475                           
 17476                           ;buzzer.c: 141:         } else {
 17477  002A04  D015               	goto	l19423
 17478  002A06                     l19415:
 17479                           
 17480                           ; BSR set to: 0
 17481                           ;buzzer.c: 144:             if (noDetections>=3) {
 17482  002A06  0102               	movlb	2	; () banked
 17483  002A08  BF83               	btfsc	(BuzzerTask@noDetections+1)& (0+255),7,b
 17484  002A0A  D009               	goto	l19419
 17485  002A0C  5183               	movf	(BuzzerTask@noDetections+1)& (0+255),w,b
 17486  002A0E  E104               	bnz	u19090
 17487  002A10  0E03               	movlw	3
 17488  002A12  5D82               	subwf	BuzzerTask@noDetections& (0+255),w,b
 17489  002A14  A0D8               	btfss	status,0,c
 17490  002A16  D003               	goto	l19419
 17491  002A18                     u19090:
 17492                           
 17493                           ; BSR set to: 2
 17494                           ;buzzer.c: 145:                 SetMonitorFailAlarm();
 17495  002A18  EC85  F052         	call	_SetMonitorFailAlarm	;wreg free
 17496                           
 17497                           ;buzzer.c: 146:             } else {
 17498  002A1C  D002               	goto	l19421
 17499  002A1E                     l19419:
 17500                           
 17501                           ; BSR set to: 2
 17502                           ;buzzer.c: 147:                 noDetections ++;
 17503  002A1E  4B82               	infsnz	BuzzerTask@noDetections& (0+255),f,b
 17504  002A20  2B83               	incf	(BuzzerTask@noDetections+1)& (0+255),f,b
 17505  002A22                     l19421:
 17506                           
 17507                           ; BSR set to: 2
 17508                           ;buzzer.c: 149:             printf("_EB_");
 17509  002A22  0ECB               	movlw	low STR_16
 17510  002A24  0101               	movlb	1	; () banked
 17511  002A26  6F71               	movwf	printf@fmt& (0+255),b
 17512  002A28  0EFF               	movlw	high STR_16
 17513  002A2A  6F72               	movwf	(printf@fmt+1)& (0+255),b
 17514  002A2C  EC32  F04D         	call	_printf	;wreg free
 17515  002A30                     l19423:
 17516                           
 17517                           ;buzzer.c: 152:     BuzzerOff();
 17518  002A30  ECC7  F050         	call	_BuzzerOff	;wreg free
 17519                           
 17520                           ; BSR set to: 57
 17521                           ;buzzer.c: 153:     TMR4_Stop();
 17522  002A34  EC63  F053         	call	_TMR4_Stop	;wreg free
 17523                           
 17524                           ; BSR set to: 57
 17525                           ;buzzer.c: 154:     TMR4_SetInterruptHandler(BuzzerHandler);
 17526  002A38  0E1C               	movlw	low _BuzzerHandler
 17527  002A3A  0101               	movlb	1	; () banked
 17528  002A3C  6F04               	movwf	TMR4_SetInterruptHandler@InterruptHandler& (0+255),b
 17529  002A3E  0EA6               	movlw	high _BuzzerHandler
 17530  002A40  6F05               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 17531  002A42  EC82  F051         	call	_TMR4_SetInterruptHandler	;wreg free
 17532                           
 17533                           ;buzzer.c: 155:     switch(alarmState) {
 17534  002A46  D187               	goto	l19691
 17535  002A48                     l19429:
 17536                           
 17537                           ; BSR set to: 1
 17538                           ;buzzer.c: 159:                     BuzzerOn(0xBD);
 17539  002A48  0EBD               	movlw	189
 17540  002A4A  EC79  F04F         	call	_BuzzerOn
 17541                           
 17542                           ; BSR set to: 57
 17543                           ;buzzer.c: 160:                     TMR4_Period8BitSet(51);
 17544  002A4E  0E33               	movlw	51
 17545  002A50  ECFE  F051         	call	_TMR4_Period8BitSet
 17546  002A54                     l19433:
 17547                           
 17548                           ;buzzer.c: 161:                     alarmStep++;
 17549  002A54  0101               	movlb	1	; () banked
 17550  002A56  2BEF               	incf	_alarmStep& (0+255),f,b
 17551  002A58                     l19435:
 17552                           
 17553                           ; BSR set to: 1
 17554                           ;buzzer.c: 162:                     TMR4_Start();
 17555  002A58  EC61  F053         	call	_TMR4_Start	;wreg free
 17556                           
 17557                           ;buzzer.c: 163:                     break;
 17558  002A5C  0012               	return	
 17559  002A5E                     l19437:
 17560                           
 17561                           ; BSR set to: 1
 17562                           ;buzzer.c: 165:                     TMR4_Period8BitSet(51);
 17563  002A5E  0E33               	movlw	51
 17564  002A60  ECFE  F051         	call	_TMR4_Period8BitSet
 17565  002A64  D7F7               	goto	l19433
 17566  002A66                     l19443:
 17567                           
 17568                           ; BSR set to: 1
 17569                           ;buzzer.c: 170:                     BuzzerOn(0xEE);
 17570  002A66  0EEE               	movlw	238
 17571  002A68  EC79  F04F         	call	_BuzzerOn
 17572                           
 17573                           ; BSR set to: 57
 17574                           ;buzzer.c: 171:                     TMR4_Period8BitSet(51);
 17575  002A6C  0E33               	movlw	51
 17576  002A6E  ECFE  F051         	call	_TMR4_Period8BitSet
 17577  002A72  D7F0               	goto	l19433
 17578  002A74                     l2116:
 17579                           
 17580                           ; BSR set to: 1
 17581                           ;buzzer.c: 190:                     TMR4_Period8BitSet(255);
 17582                           
 17583                           ; BSR set to: 1
 17584  002A74  0EFF               	movlw	255
 17585  002A76  ECFE  F051         	call	_TMR4_Period8BitSet
 17586  002A7A  D7EC               	goto	l19433
 17587  002A7C                     l19457:
 17588                           
 17589                           ; BSR set to: 1
 17590                           ;buzzer.c: 195:                     TMR4_Period8BitSet(255);
 17591  002A7C  0EFF               	movlw	255
 17592  002A7E  ECFE  F051         	call	_TMR4_Period8BitSet
 17593  002A82                     l19459:
 17594                           
 17595                           ;buzzer.c: 196:                     alarmStep=0;
 17596  002A82  0E00               	movlw	0
 17597  002A84  0101               	movlb	1	; () banked
 17598  002A86  6FEF               	movwf	_alarmStep& (0+255),b
 17599  002A88  D7E7               	goto	l19435
 17600  002A8A                     l19463:
 17601                           
 17602                           ; BSR set to: 1
 17603                           ;buzzer.c: 200:                     TMR4_Period8BitSet(51);
 17604  002A8A  0E33               	movlw	51
 17605  002A8C  ECFE  F051         	call	_TMR4_Period8BitSet
 17606  002A90  D7F8               	goto	l19459
 17607  002A92                     l19471:
 17608                           
 17609                           ; BSR set to: 1
 17610  002A92  51EF               	movf	_alarmStep& (0+255),w,b
 17611  002A94  6F83               	movwf	??_BuzzerTask& (0+255),b
 17612  002A96  6B84               	clrf	(??_BuzzerTask+1)& (0+255),b
 17613                           
 17614                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17615                           ; Switch size 1, requested type "simple"
 17616                           ; Number of cases is 1, Range of values is 0 to 0
 17617                           ; switch strategies available:
 17618                           ; Name         Instructions Cycles
 17619                           ; simple_byte            4     3 (average)
 17620                           ;	Chosen strategy is simple_byte
 17621  002A98  5184               	movf	(??_BuzzerTask+1)& (0+255),w,b
 17622  002A9A  0A00               	xorlw	0	; case 0
 17623  002A9C  A4D8               	btfss	status,2,c
 17624  002A9E  D7F5               	goto	l19463
 17625                           
 17626                           ; BSR set to: 1
 17627                           ; Switch size 1, requested type "simple"
 17628                           ; Number of cases is 19, Range of values is 0 to 18
 17629                           ; switch strategies available:
 17630                           ; Name         Instructions Cycles
 17631                           ; simple_byte           58    30 (average)
 17632                           ;	Chosen strategy is simple_byte
 17633  002AA0  5183               	movf	??_BuzzerTask& (0+255),w,b
 17634  002AA2  0A00               	xorlw	0	; case 0
 17635  002AA4  B4D8               	btfsc	status,2,c
 17636  002AA6  D7D0               	goto	l19429
 17637  002AA8  0A01               	xorlw	1	; case 1
 17638  002AAA  B4D8               	btfsc	status,2,c
 17639  002AAC  D7D8               	goto	l19437
 17640  002AAE  0A03               	xorlw	3	; case 2
 17641  002AB0  B4D8               	btfsc	status,2,c
 17642  002AB2  D7D9               	goto	l19443
 17643  002AB4  0A01               	xorlw	1	; case 3
 17644  002AB6  B4D8               	btfsc	status,2,c
 17645  002AB8  D7DD               	goto	l2116
 17646  002ABA  0A07               	xorlw	7	; case 4
 17647  002ABC  B4D8               	btfsc	status,2,c
 17648  002ABE  D7DA               	goto	l2116
 17649  002AC0  0A01               	xorlw	1	; case 5
 17650  002AC2  B4D8               	btfsc	status,2,c
 17651  002AC4  D7D7               	goto	l2116
 17652  002AC6  0A03               	xorlw	3	; case 6
 17653  002AC8  B4D8               	btfsc	status,2,c
 17654  002ACA  D7D4               	goto	l2116
 17655  002ACC  0A01               	xorlw	1	; case 7
 17656  002ACE  B4D8               	btfsc	status,2,c
 17657  002AD0  D7D1               	goto	l2116
 17658  002AD2  0A0F               	xorlw	15	; case 8
 17659  002AD4  B4D8               	btfsc	status,2,c
 17660  002AD6  D7CE               	goto	l2116
 17661  002AD8  0A01               	xorlw	1	; case 9
 17662  002ADA  B4D8               	btfsc	status,2,c
 17663  002ADC  D7CB               	goto	l2116
 17664  002ADE  0A03               	xorlw	3	; case 10
 17665  002AE0  B4D8               	btfsc	status,2,c
 17666  002AE2  D7C8               	goto	l2116
 17667  002AE4  0A01               	xorlw	1	; case 11
 17668  002AE6  B4D8               	btfsc	status,2,c
 17669  002AE8  D7C5               	goto	l2116
 17670  002AEA  0A07               	xorlw	7	; case 12
 17671  002AEC  B4D8               	btfsc	status,2,c
 17672  002AEE  D7C2               	goto	l2116
 17673  002AF0  0A01               	xorlw	1	; case 13
 17674  002AF2  B4D8               	btfsc	status,2,c
 17675  002AF4  D7BF               	goto	l2116
 17676  002AF6  0A03               	xorlw	3	; case 14
 17677  002AF8  B4D8               	btfsc	status,2,c
 17678  002AFA  D7BC               	goto	l2116
 17679  002AFC  0A01               	xorlw	1	; case 15
 17680  002AFE  B4D8               	btfsc	status,2,c
 17681  002B00  D7B9               	goto	l2116
 17682  002B02  0A1F               	xorlw	31	; case 16
 17683  002B04  B4D8               	btfsc	status,2,c
 17684  002B06  D7B6               	goto	l2116
 17685  002B08  0A01               	xorlw	1	; case 17
 17686  002B0A  B4D8               	btfsc	status,2,c
 17687  002B0C  D7B3               	goto	l2116
 17688  002B0E  0A03               	xorlw	3	; case 18
 17689  002B10  B4D8               	btfsc	status,2,c
 17690  002B12  D7B4               	goto	l19457
 17691  002B14  D7BA               	goto	l19463
 17692  002B16                     l19473:
 17693                           
 17694                           ; BSR set to: 1
 17695                           ;buzzer.c: 209:                     BuzzerOn(0xEE);
 17696  002B16  0EEE               	movlw	238
 17697  002B18  EC79  F04F         	call	_BuzzerOn
 17698                           
 17699                           ; BSR set to: 57
 17700                           ;buzzer.c: 210:                     TMR4_Period8BitSet(51);
 17701  002B1C  0E33               	movlw	51
 17702  002B1E  ECFE  F051         	call	_TMR4_Period8BitSet
 17703  002B22  D798               	goto	l19433
 17704  002B24                     l19481:
 17705                           
 17706                           ; BSR set to: 1
 17707                           ;buzzer.c: 215:                     TMR4_Period8BitSet(51);
 17708  002B24  0E33               	movlw	51
 17709  002B26  ECFE  F051         	call	_TMR4_Period8BitSet
 17710  002B2A  D794               	goto	l19433
 17711  002B2C                     l19487:
 17712                           
 17713                           ; BSR set to: 1
 17714                           ;buzzer.c: 220:                     BuzzerOn(0x8D);
 17715  002B2C  0E8D               	movlw	141
 17716  002B2E  EC79  F04F         	call	_BuzzerOn
 17717                           
 17718                           ; BSR set to: 57
 17719                           ;buzzer.c: 221:                     TMR4_Period8BitSet(51);
 17720  002B32  0E33               	movlw	51
 17721  002B34  ECFE  F051         	call	_TMR4_Period8BitSet
 17722  002B38  D78D               	goto	l19433
 17723  002B3A                     l19495:
 17724                           
 17725                           ; BSR set to: 1
 17726                           ;buzzer.c: 226:                     TMR4_Period8BitSet(51);
 17727  002B3A  0E33               	movlw	51
 17728  002B3C  ECFE  F051         	call	_TMR4_Period8BitSet
 17729  002B40  D789               	goto	l19433
 17730  002B42                     l19501:
 17731                           
 17732                           ; BSR set to: 1
 17733                           ;buzzer.c: 231:                     BuzzerOn(0xB2);
 17734  002B42  0EB2               	movlw	178
 17735  002B44  EC79  F04F         	call	_BuzzerOn
 17736                           
 17737                           ; BSR set to: 57
 17738                           ;buzzer.c: 232:                     TMR4_Period8BitSet(51);
 17739  002B48  0E33               	movlw	51
 17740  002B4A  ECFE  F051         	call	_TMR4_Period8BitSet
 17741  002B4E  D782               	goto	l19433
 17742  002B50                     l2142:
 17743                           
 17744                           ; BSR set to: 1
 17745                           ;buzzer.c: 243:                     TMR4_Period8BitSet(255);
 17746                           
 17747                           ; BSR set to: 1
 17748  002B50  0EFF               	movlw	255
 17749  002B52  ECFE  F051         	call	_TMR4_Period8BitSet
 17750  002B56  D77E               	goto	l19433
 17751  002B58                     l19515:
 17752                           
 17753                           ; BSR set to: 1
 17754                           ;buzzer.c: 248:                     TMR4_Period8BitSet(255);
 17755  002B58  0EFF               	movlw	255
 17756  002B5A  ECFE  F051         	call	_TMR4_Period8BitSet
 17757  002B5E  D791               	goto	l19459
 17758  002B60                     l19521:
 17759                           
 17760                           ; BSR set to: 1
 17761                           ;buzzer.c: 253:                     TMR4_Period8BitSet(51);
 17762  002B60  0E33               	movlw	51
 17763  002B62  ECFE  F051         	call	_TMR4_Period8BitSet
 17764  002B66  D78D               	goto	l19459
 17765  002B68                     l19529:
 17766                           
 17767                           ; BSR set to: 1
 17768  002B68  51EF               	movf	_alarmStep& (0+255),w,b
 17769  002B6A  6F83               	movwf	??_BuzzerTask& (0+255),b
 17770  002B6C  6B84               	clrf	(??_BuzzerTask+1)& (0+255),b
 17771                           
 17772                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17773                           ; Switch size 1, requested type "simple"
 17774                           ; Number of cases is 1, Range of values is 0 to 0
 17775                           ; switch strategies available:
 17776                           ; Name         Instructions Cycles
 17777                           ; simple_byte            4     3 (average)
 17778                           ;	Chosen strategy is simple_byte
 17779  002B6E  5184               	movf	(??_BuzzerTask+1)& (0+255),w,b
 17780  002B70  0A00               	xorlw	0	; case 0
 17781  002B72  A4D8               	btfss	status,2,c
 17782  002B74  D7F5               	goto	l19521
 17783                           
 17784                           ; BSR set to: 1
 17785                           ; Switch size 1, requested type "simple"
 17786                           ; Number of cases is 13, Range of values is 0 to 12
 17787                           ; switch strategies available:
 17788                           ; Name         Instructions Cycles
 17789                           ; simple_byte           40    21 (average)
 17790                           ;	Chosen strategy is simple_byte
 17791  002B76  5183               	movf	??_BuzzerTask& (0+255),w,b
 17792  002B78  0A00               	xorlw	0	; case 0
 17793  002B7A  B4D8               	btfsc	status,2,c
 17794  002B7C  D7CC               	goto	l19473
 17795  002B7E  0A01               	xorlw	1	; case 1
 17796  002B80  B4D8               	btfsc	status,2,c
 17797  002B82  D7D0               	goto	l19481
 17798  002B84  0A03               	xorlw	3	; case 2
 17799  002B86  B4D8               	btfsc	status,2,c
 17800  002B88  D7D1               	goto	l19487
 17801  002B8A  0A01               	xorlw	1	; case 3
 17802  002B8C  B4D8               	btfsc	status,2,c
 17803  002B8E  D7D5               	goto	l19495
 17804  002B90  0A07               	xorlw	7	; case 4
 17805  002B92  B4D8               	btfsc	status,2,c
 17806  002B94  D7D6               	goto	l19501
 17807  002B96  0A01               	xorlw	1	; case 5
 17808  002B98  B4D8               	btfsc	status,2,c
 17809  002B9A  D7DA               	goto	l2142
 17810  002B9C  0A03               	xorlw	3	; case 6
 17811  002B9E  B4D8               	btfsc	status,2,c
 17812  002BA0  D7D7               	goto	l2142
 17813  002BA2  0A01               	xorlw	1	; case 7
 17814  002BA4  B4D8               	btfsc	status,2,c
 17815  002BA6  D7D4               	goto	l2142
 17816  002BA8  0A0F               	xorlw	15	; case 8
 17817  002BAA  B4D8               	btfsc	status,2,c
 17818  002BAC  D7D1               	goto	l2142
 17819  002BAE  0A01               	xorlw	1	; case 9
 17820  002BB0  B4D8               	btfsc	status,2,c
 17821  002BB2  D7CE               	goto	l2142
 17822  002BB4  0A03               	xorlw	3	; case 10
 17823  002BB6  B4D8               	btfsc	status,2,c
 17824  002BB8  D7CB               	goto	l2142
 17825  002BBA  0A01               	xorlw	1	; case 11
 17826  002BBC  B4D8               	btfsc	status,2,c
 17827  002BBE  D7C8               	goto	l2142
 17828  002BC0  0A07               	xorlw	7	; case 12
 17829  002BC2  B4D8               	btfsc	status,2,c
 17830  002BC4  D7C9               	goto	l19515
 17831  002BC6  D7CC               	goto	l19521
 17832  002BC8                     l19531:
 17833                           
 17834                           ; BSR set to: 1
 17835                           ;buzzer.c: 262:                     BuzzerOn(0xEE);
 17836  002BC8  0EEE               	movlw	238
 17837  002BCA  EC79  F04F         	call	_BuzzerOn
 17838                           
 17839                           ; BSR set to: 57
 17840                           ;buzzer.c: 263:                     TMR4_Period8BitSet(46);
 17841  002BCE  0E2E               	movlw	46
 17842  002BD0  ECFE  F051         	call	_TMR4_Period8BitSet
 17843  002BD4  D73F               	goto	l19433
 17844  002BD6                     l19539:
 17845                           
 17846                           ; BSR set to: 1
 17847                           ;buzzer.c: 268:                     TMR4_Period8BitSet(26);
 17848  002BD6  0E1A               	movlw	26
 17849  002BD8  ECFE  F051         	call	_TMR4_Period8BitSet
 17850  002BDC  D73B               	goto	l19433
 17851  002BDE                     l19545:
 17852                           
 17853                           ; BSR set to: 1
 17854                           ;buzzer.c: 273:                     BuzzerOn(0x8D);
 17855  002BDE  0E8D               	movlw	141
 17856  002BE0  EC79  F04F         	call	_BuzzerOn
 17857                           
 17858                           ; BSR set to: 57
 17859                           ;buzzer.c: 274:                     TMR4_Period8BitSet(46);
 17860  002BE4  0E2E               	movlw	46
 17861  002BE6  ECFE  F051         	call	_TMR4_Period8BitSet
 17862  002BEA  D734               	goto	l19433
 17863  002BEC                     l19553:
 17864                           
 17865                           ; BSR set to: 1
 17866                           ;buzzer.c: 279:                     TMR4_Period8BitSet(26);
 17867  002BEC  0E1A               	movlw	26
 17868  002BEE  ECFE  F051         	call	_TMR4_Period8BitSet
 17869  002BF2  D730               	goto	l19433
 17870  002BF4                     l19559:
 17871                           
 17872                           ; BSR set to: 1
 17873                           ;buzzer.c: 284:                     BuzzerOn(0xB2);
 17874  002BF4  0EB2               	movlw	178
 17875  002BF6  EC79  F04F         	call	_BuzzerOn
 17876                           
 17877                           ; BSR set to: 57
 17878                           ;buzzer.c: 285:                     TMR4_Period8BitSet(46);
 17879  002BFA  0E2E               	movlw	46
 17880  002BFC  ECFE  F051         	call	_TMR4_Period8BitSet
 17881  002C00  D729               	goto	l19433
 17882  002C02                     l19567:
 17883                           
 17884                           ; BSR set to: 1
 17885                           ;buzzer.c: 290:                     TMR4_Period8BitSet(102);
 17886  002C02  0E66               	movlw	102
 17887  002C04  ECFE  F051         	call	_TMR4_Period8BitSet
 17888  002C08  D725               	goto	l19433
 17889  002C0A                     l19573:
 17890                           
 17891                           ; BSR set to: 1
 17892                           ;buzzer.c: 295:                     BuzzerOn(0x8D);
 17893  002C0A  0E8D               	movlw	141
 17894  002C0C  EC79  F04F         	call	_BuzzerOn
 17895                           
 17896                           ; BSR set to: 57
 17897                           ;buzzer.c: 296:                     TMR4_Period8BitSet(46);
 17898  002C10  0E2E               	movlw	46
 17899  002C12  ECFE  F051         	call	_TMR4_Period8BitSet
 17900  002C16  D71E               	goto	l19433
 17901  002C18                     l19581:
 17902                           
 17903                           ; BSR set to: 1
 17904                           ;buzzer.c: 301:                     TMR4_Period8BitSet(26);
 17905  002C18  0E1A               	movlw	26
 17906  002C1A  ECFE  F051         	call	_TMR4_Period8BitSet
 17907  002C1E  D71A               	goto	l19433
 17908  002C20                     l19587:
 17909                           
 17910                           ; BSR set to: 1
 17911                           ;buzzer.c: 306:                     BuzzerOn(0xB2);
 17912  002C20  0EB2               	movlw	178
 17913  002C22  EC79  F04F         	call	_BuzzerOn
 17914                           
 17915                           ; BSR set to: 57
 17916                           ;buzzer.c: 307:                     TMR4_Period8BitSet(46);
 17917  002C26  0E2E               	movlw	46
 17918  002C28  ECFE  F051         	call	_TMR4_Period8BitSet
 17919  002C2C  D713               	goto	l19433
 17920  002C2E                     l19595:
 17921                           
 17922                           ; BSR set to: 1
 17923                           ;buzzer.c: 312:                     TMR4_Period8BitSet(255);
 17924  002C2E  0EFF               	movlw	255
 17925  002C30  ECFE  F051         	call	_TMR4_Period8BitSet
 17926  002C34  D70F               	goto	l19433
 17927  002C36                     l19601:
 17928                           
 17929                           ; BSR set to: 1
 17930                           ;buzzer.c: 317:                     BuzzerOn(0xEE);
 17931  002C36  0EEE               	movlw	238
 17932  002C38  EC79  F04F         	call	_BuzzerOn
 17933                           
 17934                           ; BSR set to: 57
 17935                           ;buzzer.c: 318:                     TMR4_Period8BitSet(46);
 17936  002C3C  0E2E               	movlw	46
 17937  002C3E  ECFE  F051         	call	_TMR4_Period8BitSet
 17938  002C42  D708               	goto	l19433
 17939  002C44                     l19609:
 17940                           
 17941                           ; BSR set to: 1
 17942                           ;buzzer.c: 323:                     TMR4_Period8BitSet(26);
 17943  002C44  0E1A               	movlw	26
 17944  002C46  ECFE  F051         	call	_TMR4_Period8BitSet
 17945  002C4A  D704               	goto	l19433
 17946  002C4C                     l19615:
 17947                           
 17948                           ; BSR set to: 1
 17949                           ;buzzer.c: 328:                     BuzzerOn(0x8D);
 17950  002C4C  0E8D               	movlw	141
 17951  002C4E  EC79  F04F         	call	_BuzzerOn
 17952                           
 17953                           ; BSR set to: 57
 17954                           ;buzzer.c: 329:                     TMR4_Period8BitSet(46);
 17955  002C52  0E2E               	movlw	46
 17956  002C54  ECFE  F051         	call	_TMR4_Period8BitSet
 17957  002C58  D6FD               	goto	l19433
 17958  002C5A                     l19623:
 17959                           
 17960                           ; BSR set to: 1
 17961                           ;buzzer.c: 334:                     TMR4_Period8BitSet(26);
 17962  002C5A  0E1A               	movlw	26
 17963  002C5C  ECFE  F051         	call	_TMR4_Period8BitSet
 17964  002C60  D6F9               	goto	l19433
 17965  002C62                     l19629:
 17966                           
 17967                           ; BSR set to: 1
 17968                           ;buzzer.c: 339:                     BuzzerOn(0xB2);
 17969  002C62  0EB2               	movlw	178
 17970  002C64  EC79  F04F         	call	_BuzzerOn
 17971                           
 17972                           ; BSR set to: 57
 17973                           ;buzzer.c: 340:                     TMR4_Period8BitSet(46);
 17974  002C68  0E2E               	movlw	46
 17975  002C6A  ECFE  F051         	call	_TMR4_Period8BitSet
 17976  002C6E  D6F2               	goto	l19433
 17977  002C70                     l19637:
 17978                           
 17979                           ; BSR set to: 1
 17980                           ;buzzer.c: 345:                     TMR4_Period8BitSet(102);
 17981  002C70  0E66               	movlw	102
 17982  002C72  ECFE  F051         	call	_TMR4_Period8BitSet
 17983  002C76  D6EE               	goto	l19433
 17984  002C78                     l19643:
 17985                           
 17986                           ; BSR set to: 1
 17987                           ;buzzer.c: 350:                     BuzzerOn(0x8D);
 17988  002C78  0E8D               	movlw	141
 17989  002C7A  EC79  F04F         	call	_BuzzerOn
 17990                           
 17991                           ; BSR set to: 57
 17992                           ;buzzer.c: 351:                     TMR4_Period8BitSet(46);
 17993  002C7E  0E2E               	movlw	46
 17994  002C80  ECFE  F051         	call	_TMR4_Period8BitSet
 17995  002C84  D6E7               	goto	l19433
 17996  002C86                     l19651:
 17997                           
 17998                           ; BSR set to: 1
 17999                           ;buzzer.c: 356:                     TMR4_Period8BitSet(26);
 18000  002C86  0E1A               	movlw	26
 18001  002C88  ECFE  F051         	call	_TMR4_Period8BitSet
 18002  002C8C  D6E3               	goto	l19433
 18003  002C8E                     l19657:
 18004                           
 18005                           ; BSR set to: 1
 18006                           ;buzzer.c: 361:                     BuzzerOn(0xB2);
 18007  002C8E  0EB2               	movlw	178
 18008  002C90  EC79  F04F         	call	_BuzzerOn
 18009                           
 18010                           ; BSR set to: 57
 18011                           ;buzzer.c: 362:                     TMR4_Period8BitSet(46);
 18012  002C94  0E2E               	movlw	46
 18013  002C96  ECFE  F051         	call	_TMR4_Period8BitSet
 18014  002C9A  D6DC               	goto	l19433
 18015  002C9C                     l19665:
 18016                           
 18017                           ; BSR set to: 1
 18018                           ;buzzer.c: 369:                     TMR4_Period8BitSet(255);
 18019  002C9C  0EFF               	movlw	255
 18020  002C9E  ECFE  F051         	call	_TMR4_Period8BitSet
 18021  002CA2  D6D8               	goto	l19433
 18022  002CA4                     l19671:
 18023                           
 18024                           ; BSR set to: 1
 18025                           ;buzzer.c: 374:                     TMR4_Period8BitSet(255);
 18026  002CA4  0EFF               	movlw	255
 18027  002CA6  ECFE  F051         	call	_TMR4_Period8BitSet
 18028  002CAA  D6EB               	goto	l19459
 18029  002CAC                     l19677:
 18030                           
 18031                           ; BSR set to: 1
 18032                           ;buzzer.c: 379:                     TMR4_Period8BitSet(51);
 18033  002CAC  0E33               	movlw	51
 18034  002CAE  ECFE  F051         	call	_TMR4_Period8BitSet
 18035  002CB2  D6E7               	goto	l19459
 18036  002CB4                     l19685:
 18037                           
 18038                           ; BSR set to: 1
 18039  002CB4  51EF               	movf	_alarmStep& (0+255),w,b
 18040  002CB6  6F83               	movwf	??_BuzzerTask& (0+255),b
 18041  002CB8  6B84               	clrf	(??_BuzzerTask+1)& (0+255),b
 18042                           
 18043                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18044                           ; Switch size 1, requested type "simple"
 18045                           ; Number of cases is 1, Range of values is 0 to 0
 18046                           ; switch strategies available:
 18047                           ; Name         Instructions Cycles
 18048                           ; simple_byte            4     3 (average)
 18049                           ;	Chosen strategy is simple_byte
 18050  002CBA  5184               	movf	(??_BuzzerTask+1)& (0+255),w,b
 18051  002CBC  0A00               	xorlw	0	; case 0
 18052  002CBE  A4D8               	btfss	status,2,c
 18053  002CC0  D7F5               	goto	l19677
 18054                           
 18055                           ; BSR set to: 1
 18056                           ; Switch size 1, requested type "simple"
 18057                           ; Number of cases is 23, Range of values is 0 to 22
 18058                           ; switch strategies available:
 18059                           ; Name         Instructions Cycles
 18060                           ; simple_byte           70    36 (average)
 18061                           ;	Chosen strategy is simple_byte
 18062  002CC2  5183               	movf	??_BuzzerTask& (0+255),w,b
 18063  002CC4  0A00               	xorlw	0	; case 0
 18064  002CC6  B4D8               	btfsc	status,2,c
 18065  002CC8  D77F               	goto	l19531
 18066  002CCA  0A01               	xorlw	1	; case 1
 18067  002CCC  B4D8               	btfsc	status,2,c
 18068  002CCE  D783               	goto	l19539
 18069  002CD0  0A03               	xorlw	3	; case 2
 18070  002CD2  B4D8               	btfsc	status,2,c
 18071  002CD4  D784               	goto	l19545
 18072  002CD6  0A01               	xorlw	1	; case 3
 18073  002CD8  B4D8               	btfsc	status,2,c
 18074  002CDA  D788               	goto	l19553
 18075  002CDC  0A07               	xorlw	7	; case 4
 18076  002CDE  B4D8               	btfsc	status,2,c
 18077  002CE0  D789               	goto	l19559
 18078  002CE2  0A01               	xorlw	1	; case 5
 18079  002CE4  B4D8               	btfsc	status,2,c
 18080  002CE6  D78D               	goto	l19567
 18081  002CE8  0A03               	xorlw	3	; case 6
 18082  002CEA  B4D8               	btfsc	status,2,c
 18083  002CEC  D78E               	goto	l19573
 18084  002CEE  0A01               	xorlw	1	; case 7
 18085  002CF0  B4D8               	btfsc	status,2,c
 18086  002CF2  D792               	goto	l19581
 18087  002CF4  0A0F               	xorlw	15	; case 8
 18088  002CF6  B4D8               	btfsc	status,2,c
 18089  002CF8  D793               	goto	l19587
 18090  002CFA  0A01               	xorlw	1	; case 9
 18091  002CFC  B4D8               	btfsc	status,2,c
 18092  002CFE  D797               	goto	l19595
 18093  002D00  0A03               	xorlw	3	; case 10
 18094  002D02  B4D8               	btfsc	status,2,c
 18095  002D04  D798               	goto	l19601
 18096  002D06  0A01               	xorlw	1	; case 11
 18097  002D08  B4D8               	btfsc	status,2,c
 18098  002D0A  D79C               	goto	l19609
 18099  002D0C  0A07               	xorlw	7	; case 12
 18100  002D0E  B4D8               	btfsc	status,2,c
 18101  002D10  D79D               	goto	l19615
 18102  002D12  0A01               	xorlw	1	; case 13
 18103  002D14  B4D8               	btfsc	status,2,c
 18104  002D16  D7A1               	goto	l19623
 18105  002D18  0A03               	xorlw	3	; case 14
 18106  002D1A  B4D8               	btfsc	status,2,c
 18107  002D1C  D7A2               	goto	l19629
 18108  002D1E  0A01               	xorlw	1	; case 15
 18109  002D20  B4D8               	btfsc	status,2,c
 18110  002D22  D7A6               	goto	l19637
 18111  002D24  0A1F               	xorlw	31	; case 16
 18112  002D26  B4D8               	btfsc	status,2,c
 18113  002D28  D7A7               	goto	l19643
 18114  002D2A  0A01               	xorlw	1	; case 17
 18115  002D2C  B4D8               	btfsc	status,2,c
 18116  002D2E  D7AB               	goto	l19651
 18117  002D30  0A03               	xorlw	3	; case 18
 18118  002D32  B4D8               	btfsc	status,2,c
 18119  002D34  D7AC               	goto	l19657
 18120  002D36  0A01               	xorlw	1	; case 19
 18121  002D38  B4D8               	btfsc	status,2,c
 18122  002D3A  D7B0               	goto	l19665
 18123  002D3C  0A07               	xorlw	7	; case 20
 18124  002D3E  B4D8               	btfsc	status,2,c
 18125  002D40  D7AD               	goto	l19665
 18126  002D42  0A01               	xorlw	1	; case 21
 18127  002D44  B4D8               	btfsc	status,2,c
 18128  002D46  D7AA               	goto	l19665
 18129  002D48  0A03               	xorlw	3	; case 22
 18130  002D4A  B4D8               	btfsc	status,2,c
 18131  002D4C  D7AB               	goto	l19671
 18132  002D4E  D7AE               	goto	l19677
 18133  002D50                     l19687:
 18134                           
 18135                           ; BSR set to: 1
 18136                           ;buzzer.c: 387:             BuzzerOff();
 18137  002D50  ECC7  F050         	call	_BuzzerOff	;wreg free
 18138                           
 18139                           ;buzzer.c: 388:             break;
 18140  002D54  0012               	return	
 18141  002D56                     l19691:
 18142                           
 18143                           ; BSR set to: 1
 18144  002D56  0100               	movlb	0	; () banked
 18145  002D58  51FA               	movf	_alarmState& (0+255),w,b
 18146  002D5A  0101               	movlb	1	; () banked
 18147  002D5C  6F83               	movwf	??_BuzzerTask& (0+255),b
 18148  002D5E  6B84               	clrf	(??_BuzzerTask+1)& (0+255),b
 18149                           
 18150                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18151                           ; Switch size 1, requested type "simple"
 18152                           ; Number of cases is 1, Range of values is 0 to 0
 18153                           ; switch strategies available:
 18154                           ; Name         Instructions Cycles
 18155                           ; simple_byte            4     3 (average)
 18156                           ;	Chosen strategy is simple_byte
 18157  002D60  5184               	movf	(??_BuzzerTask+1)& (0+255),w,b
 18158  002D62  0A00               	xorlw	0	; case 0
 18159  002D64  A4D8               	btfss	status,2,c
 18160  002D66  D7F4               	goto	l19687
 18161                           
 18162                           ; BSR set to: 1
 18163                           ; Switch size 1, requested type "simple"
 18164                           ; Number of cases is 4, Range of values is 0 to 4
 18165                           ; switch strategies available:
 18166                           ; Name         Instructions Cycles
 18167                           ; simple_byte           13     7 (average)
 18168                           ;	Chosen strategy is simple_byte
 18169  002D68  5183               	movf	??_BuzzerTask& (0+255),w,b
 18170  002D6A  0A00               	xorlw	0	; case 0
 18171  002D6C  B4D8               	btfsc	status,2,c
 18172  002D6E  D7F0               	goto	l19687
 18173  002D70  0A01               	xorlw	1	; case 1
 18174  002D72  B4D8               	btfsc	status,2,c
 18175  002D74  D68E               	goto	l19471
 18176  002D76  0A03               	xorlw	3	; case 2
 18177  002D78  B4D8               	btfsc	status,2,c
 18178  002D7A  D6F6               	goto	l19529
 18179  002D7C  0A06               	xorlw	6	; case 4
 18180  002D7E  B4D8               	btfsc	status,2,c
 18181  002D80  D799               	goto	l19685
 18182  002D82  D7E6               	goto	l19687
 18183  002D84                     __end_of_BuzzerTask:
 18184                           	opt callstack 0
 18185                           
 18186 ;; *************** function _printf *****************
 18187 ;; Defined at:
 18188 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 18189 ;; Parameters:    Size  Location     Type
 18190 ;;  fmt             2  113[BANK1 ] PTR const unsigned char 
 18191 ;;		 -> STR_55(4), STR_54(4), STR_53(15), STR_52(16), 
 18192 ;;		 -> STR_51(32), STR_50(32), STR_49(13), STR_48(12), 
 18193 ;;		 -> STR_47(14), STR_46(4), STR_45(4), STR_44(2), 
 18194 ;;		 -> STR_43(10), STR_42(4), STR_41(55), STR_40(53), 
 18195 ;;		 -> STR_39(43), STR_38(54), STR_37(40), STR_36(36), 
 18196 ;;		 -> STR_35(41), STR_34(32), STR_33(65), STR_32(4), 
 18197 ;;		 -> STR_31(12), STR_30(4), STR_25(5), STR_24(3), 
 18198 ;;		 -> STR_23(7), STR_22(18), STR_21(15), STR_20(15), 
 18199 ;;		 -> STR_19(12), STR_18(5), STR_17(5), STR_16(5), 
 18200 ;;		 -> STR_15(5), STR_14(19), STR_4(45), STR_3(4), 
 18201 ;;		 -> STR_2(15), STR_1(13), 
 18202 ;; Auto vars:     Size  Location     Type
 18203 ;;  ap              2  129[BANK1 ] PTR void [1]
 18204 ;;		 -> ?_printf(2), ?_sprintf(2), 
 18205 ;;  ret             2    0        int 
 18206 ;; Return value:  Size  Location     Type
 18207 ;;                  2  113[BANK1 ] int 
 18208 ;; Registers used:
 18209 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18210 ;; Tracked objects:
 18211 ;;		On entry : 3F/1
 18212 ;;		On exit  : 3F/2
 18213 ;;		Unchanged: 0/0
 18214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18215 ;;      Params:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18216 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18218 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18219 ;;Total ram usage:       18 bytes
 18220 ;; Hardware stack levels used:    1
 18221 ;; Hardware stack levels required when called:   24
 18222 ;; This function calls:
 18223 ;;		_vfprintf
 18224 ;; This function is called by:
 18225 ;;		_main
 18226 ;;		_BuzzerTask
 18227 ;;		_BuzzerCheck
 18228 ;;		_MonitorFailAlarm
 18229 ;;		_TestAlarm
 18230 ;;		_MuteAlarm
 18231 ;;		_MonitorDump
 18232 ;;		_SetCalibrateState
 18233 ;;		_SetAlarmSV1
 18234 ;;		_SetSV1
 18235 ;; This function uses a non-reentrant model
 18236 ;;
 18237                           
 18238                           	psect	text133
 18239  009A64                     __ptext133:
 18240                           	opt callstack 0
 18241  009A64                     _printf:
 18242                           	opt callstack 6
 18243                           
 18244                           ; BSR set to: 1
 18245                           
 18246                           ;incstack = 0
 18247  009A64  0E73               	movlw	low (?_printf+2)
 18248  009A66  6F81               	movwf	printf@ap& (0+255),b
 18249  009A68  0E01               	movlw	high (?_printf+2)
 18250  009A6A  6F82               	movwf	(printf@ap+1)& (0+255),b
 18251                           
 18252                           ; BSR set to: 1
 18253  009A6C  0E00               	movlw	0
 18254  009A6E  6F69               	movwf	vfprintf@fp& (0+255),b
 18255  009A70  0E00               	movlw	0
 18256  009A72  6F6A               	movwf	(vfprintf@fp+1)& (0+255),b
 18257  009A74  0060  F5C4  F16B   	movff	printf@fmt,vfprintf@fmt
 18258  009A7A  0060  F5C8  F16C   	movff	printf@fmt+1,vfprintf@fmt+1
 18259  009A80  0E81               	movlw	low printf@ap
 18260  009A82  6F6D               	movwf	vfprintf@ap& (0+255),b
 18261  009A84  0E01               	movlw	high printf@ap
 18262  009A86  6F6E               	movwf	(vfprintf@ap+1)& (0+255),b
 18263  009A88  EC2C  F042         	call	_vfprintf	;wreg free
 18264                           
 18265                           ; BSR set to: 2
 18266  009A8C  0012               	return		;funcret
 18267  009A8E                     __end_of_printf:
 18268                           	opt callstack 0
 18269                           
 18270 ;; *************** function _TMR4_Start *****************
 18271 ;; Defined at:
 18272 ;;		line 108 in file "mcc_generated_files/tmr4.c"
 18273 ;; Parameters:    Size  Location     Type
 18274 ;;		None
 18275 ;; Auto vars:     Size  Location     Type
 18276 ;;		None
 18277 ;; Return value:  Size  Location     Type
 18278 ;;                  1    wreg      void 
 18279 ;; Registers used:
 18280 ;;		None
 18281 ;; Tracked objects:
 18282 ;;		On entry : 0/39
 18283 ;;		On exit  : 0/0
 18284 ;;		Unchanged: 0/0
 18285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18290 ;;Total ram usage:        0 bytes
 18291 ;; Hardware stack levels used:    1
 18292 ;; Hardware stack levels required when called:   16
 18293 ;; This function calls:
 18294 ;;		Nothing
 18295 ;; This function is called by:
 18296 ;;		_BuzzerTest
 18297 ;;		_BuzzerTask
 18298 ;; This function uses a non-reentrant model
 18299 ;;
 18300                           
 18301                           	psect	text134
 18302  00A6C2                     __ptext134:
 18303                           	opt callstack 0
 18304  00A6C2                     _TMR4_Start:
 18305                           	opt callstack 13
 18306                           
 18307                           ;mcc_generated_files/tmr4.c: 111:     T4CONbits.TMR4ON = 1;
 18308                           
 18309                           ; BSR set to: 2
 18310                           ;incstack = 0
 18311  00A6C2  8EA0               	bsf	160,7,c	;volatile
 18312  00A6C4  0012               	return		;funcret
 18313  00A6C6                     __end_of_TMR4_Start:
 18314                           	opt callstack 0
 18315                           
 18316 ;; *************** function _TMR4_SetInterruptHandler *****************
 18317 ;; Defined at:
 18318 ;;		line 178 in file "mcc_generated_files/tmr4.c"
 18319 ;; Parameters:    Size  Location     Type
 18320 ;;  InterruptHan    2    4[BANK1 ] PTR FTN()void 
 18321 ;;		 -> BuzzerTestHandler(1), BuzzerHandler(1), TMR4_DefaultInterruptHandler(1), 
 18322 ;; Auto vars:     Size  Location     Type
 18323 ;;		None
 18324 ;; Return value:  Size  Location     Type
 18325 ;;                  1    wreg      void 
 18326 ;; Registers used:
 18327 ;;		wreg, status,2, status,0
 18328 ;; Tracked objects:
 18329 ;;		On entry : 3F/1
 18330 ;;		On exit  : 3F/1
 18331 ;;		Unchanged: 3F/0
 18332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18333 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18336 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18337 ;;Total ram usage:        2 bytes
 18338 ;; Hardware stack levels used:    1
 18339 ;; Hardware stack levels required when called:   16
 18340 ;; This function calls:
 18341 ;;		Nothing
 18342 ;; This function is called by:
 18343 ;;		_TMR4_Initialize
 18344 ;;		_BuzzerTest
 18345 ;;		_BuzzerTask
 18346 ;;		_BuzzerInit
 18347 ;; This function uses a non-reentrant model
 18348 ;;
 18349                           
 18350                           	psect	text135
 18351  00A304                     __ptext135:
 18352                           	opt callstack 0
 18353  00A304                     _TMR4_SetInterruptHandler:
 18354                           	opt callstack 12
 18355                           
 18356                           ; BSR set to: 1
 18357                           ;mcc_generated_files/tmr4.c: 179:     TMR4_InterruptHandler = InterruptHandler;
 18358                           
 18359                           ;incstack = 0
 18360  00A304  0060  F410  F2ED   	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
 18361  00A30A  0060  F414  F2EE   	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
 18362                           
 18363                           ; BSR set to: 1
 18364  00A310  0012               	return		;funcret
 18365  00A312                     __end_of_TMR4_SetInterruptHandler:
 18366                           	opt callstack 0
 18367                           
 18368 ;; *************** function _TMR4_Period8BitSet *****************
 18369 ;; Defined at:
 18370 ;;		line 155 in file "mcc_generated_files/tmr4.c"
 18371 ;; Parameters:    Size  Location     Type
 18372 ;;  periodVal       1    wreg     unsigned char 
 18373 ;; Auto vars:     Size  Location     Type
 18374 ;;  periodVal       1    4[BANK1 ] unsigned char 
 18375 ;; Return value:  Size  Location     Type
 18376 ;;                  1    wreg      void 
 18377 ;; Registers used:
 18378 ;;		wreg
 18379 ;; Tracked objects:
 18380 ;;		On entry : 7/39
 18381 ;;		On exit  : 0/0
 18382 ;;		Unchanged: 0/0
 18383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18385 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18387 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18388 ;;Total ram usage:        1 bytes
 18389 ;; Hardware stack levels used:    1
 18390 ;; Hardware stack levels required when called:   16
 18391 ;; This function calls:
 18392 ;;		Nothing
 18393 ;; This function is called by:
 18394 ;;		_BuzzerTest
 18395 ;;		_BuzzerTask
 18396 ;; This function uses a non-reentrant model
 18397 ;;
 18398                           
 18399                           	psect	text136
 18400  00A3FC                     __ptext136:
 18401                           	opt callstack 0
 18402  00A3FC                     _TMR4_Period8BitSet:
 18403                           	opt callstack 13
 18404                           
 18405                           ; BSR set to: 1
 18406                           ;incstack = 0
 18407                           ;TMR4_Period8BitSet@periodVal stored from wreg
 18408  00A3FC  0101               	movlb	1	; () banked
 18409  00A3FE  6F04               	movwf	TMR4_Period8BitSet@periodVal& (0+255),b
 18410                           
 18411                           ;mcc_generated_files/tmr4.c: 155: void TMR4_Period8BitSet(uint8_t periodVal);mcc_generat
      +                          ed_files/tmr4.c: 156: {;mcc_generated_files/tmr4.c: 157:    PR4 = periodVal;
 18412  00A400  0060  F413  FF9F   	movff	TMR4_Period8BitSet@periodVal,16287	;volatile
 18413  00A406  0012               	return		;funcret
 18414  00A408                     __end_of_TMR4_Period8BitSet:
 18415                           	opt callstack 0
 18416                           
 18417 ;; *************** function _SetMonitorFailAlarm *****************
 18418 ;; Defined at:
 18419 ;;		line 225 in file "alarm.c"
 18420 ;; Parameters:    Size  Location     Type
 18421 ;;		None
 18422 ;; Auto vars:     Size  Location     Type
 18423 ;;		None
 18424 ;; Return value:  Size  Location     Type
 18425 ;;                  1    wreg      void 
 18426 ;; Registers used:
 18427 ;;		wreg, status,2
 18428 ;; Tracked objects:
 18429 ;;		On entry : 3D/0
 18430 ;;		On exit  : 3F/2
 18431 ;;		Unchanged: 0/0
 18432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18437 ;;Total ram usage:        0 bytes
 18438 ;; Hardware stack levels used:    1
 18439 ;; Hardware stack levels required when called:   16
 18440 ;; This function calls:
 18441 ;;		Nothing
 18442 ;; This function is called by:
 18443 ;;		_BuzzerTask
 18444 ;;		_BuzzerCheck
 18445 ;; This function uses a non-reentrant model
 18446 ;;
 18447                           
 18448                           	psect	text137
 18449  00A50A                     __ptext137:
 18450                           	opt callstack 0
 18451  00A50A                     _SetMonitorFailAlarm:
 18452                           	opt callstack 13
 18453                           
 18454                           ;alarm.c: 226:     monitorFailAlarm = 1;
 18455                           
 18456                           ;incstack = 0
 18457  00A50A  0E01               	movlw	1
 18458  00A50C  0102               	movlb	2	; () banked
 18459  00A50E  6FB0               	movwf	_monitorFailAlarm& (0+255),b
 18460                           
 18461                           ; BSR set to: 2
 18462  00A510  0012               	return		;funcret
 18463  00A512                     __end_of_SetMonitorFailAlarm:
 18464                           	opt callstack 0
 18465                           
 18466 ;; *************** function _ClearMonitorFailAlarm *****************
 18467 ;; Defined at:
 18468 ;;		line 270 in file "alarm.c"
 18469 ;; Parameters:    Size  Location     Type
 18470 ;;		None
 18471 ;; Auto vars:     Size  Location     Type
 18472 ;;		None
 18473 ;; Return value:  Size  Location     Type
 18474 ;;                  1    wreg      void 
 18475 ;; Registers used:
 18476 ;;		wreg, status,2
 18477 ;; Tracked objects:
 18478 ;;		On entry : 3E/1
 18479 ;;		On exit  : 3F/2
 18480 ;;		Unchanged: 0/0
 18481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18486 ;;Total ram usage:        0 bytes
 18487 ;; Hardware stack levels used:    1
 18488 ;; Hardware stack levels required when called:   16
 18489 ;; This function calls:
 18490 ;;		Nothing
 18491 ;; This function is called by:
 18492 ;;		_BuzzerTask
 18493 ;;		_MuteAlarm
 18494 ;; This function uses a non-reentrant model
 18495 ;;
 18496                           
 18497                           	psect	text138
 18498  00A512                     __ptext138:
 18499                           	opt callstack 0
 18500  00A512                     _ClearMonitorFailAlarm:
 18501                           	opt callstack 13
 18502                           
 18503                           ;alarm.c: 272:     monitorFailAlarm = 0;
 18504                           
 18505                           ; BSR set to: 2
 18506                           ;incstack = 0
 18507  00A512  0E00               	movlw	0
 18508  00A514  0102               	movlb	2	; () banked
 18509  00A516  6FB0               	movwf	_monitorFailAlarm& (0+255),b
 18510                           
 18511                           ; BSR set to: 2
 18512  00A518  0012               	return		;funcret
 18513  00A51A                     __end_of_ClearMonitorFailAlarm:
 18514                           	opt callstack 0
 18515                           
 18516 ;; *************** function _BuzzerOn *****************
 18517 ;; Defined at:
 18518 ;;		line 446 in file "buzzer.c"
 18519 ;; Parameters:    Size  Location     Type
 18520 ;;  period          1    wreg     unsigned char 
 18521 ;; Auto vars:     Size  Location     Type
 18522 ;;  period          1    4[BANK1 ] unsigned char 
 18523 ;; Return value:  Size  Location     Type
 18524 ;;                  1    wreg      void 
 18525 ;; Registers used:
 18526 ;;		wreg, status,2, cstack
 18527 ;; Tracked objects:
 18528 ;;		On entry : 0/1
 18529 ;;		On exit  : 3F/39
 18530 ;;		Unchanged: 0/0
 18531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18533 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18535 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18536 ;;Total ram usage:        1 bytes
 18537 ;; Hardware stack levels used:    1
 18538 ;; Hardware stack levels required when called:   17
 18539 ;; This function calls:
 18540 ;;		_CMP1_Enable
 18541 ;; This function is called by:
 18542 ;;		_BuzzerTest
 18543 ;;		_BuzzerTask
 18544 ;;		_BuzzerCheck
 18545 ;; This function uses a non-reentrant model
 18546 ;;
 18547                           
 18548                           	psect	text139
 18549  009EF2                     __ptext139:
 18550                           	opt callstack 0
 18551  009EF2                     _BuzzerOn:
 18552                           	opt callstack 12
 18553                           
 18554                           ; BSR set to: 2
 18555                           ;incstack = 0
 18556                           ;BuzzerOn@period stored from wreg
 18557  009EF2  0101               	movlb	1	; () banked
 18558  009EF4  6F04               	movwf	BuzzerOn@period& (0+255),b
 18559                           
 18560                           ;buzzer.c: 448:     T2PR = period;
 18561  009EF6  0060  F413  FFAB   	movff	BuzzerOn@period,16299	;volatile
 18562                           
 18563                           ;buzzer.c: 449:     PWM6CON = 0x80;
 18564  009EFC  0E80               	movlw	128
 18565  009EFE  6E6A               	movwf	106,c	;volatile
 18566                           
 18567                           ;buzzer.c: 451:     on = 1;
 18568  009F00  0E01               	movlw	1
 18569  009F02  0100               	movlb	0	; () banked
 18570  009F04  6FF9               	movwf	_on& (0+255),b
 18571                           
 18572                           ; BSR set to: 0
 18573                           ;buzzer.c: 452:     detected = 0;
 18574  009F06  0E00               	movlw	0
 18575  009F08  6FF8               	movwf	_detected& (0+255),b
 18576                           
 18577                           ; BSR set to: 0
 18578                           ;buzzer.c: 454:     CMP1_Enable();
 18579  009F0A  EC8D  F052         	call	_CMP1_Enable	;wreg free
 18580                           
 18581                           ; BSR set to: 57
 18582  009F0E  0012               	return		;funcret
 18583  009F10                     __end_of_BuzzerOn:
 18584                           	opt callstack 0
 18585                           
 18586 ;; *************** function _CMP1_Enable *****************
 18587 ;; Defined at:
 18588 ;;		line 104 in file "mcc_generated_files/cmp1.c"
 18589 ;; Parameters:    Size  Location     Type
 18590 ;;		None
 18591 ;; Auto vars:     Size  Location     Type
 18592 ;;		None
 18593 ;; Return value:  Size  Location     Type
 18594 ;;                  1    wreg      void 
 18595 ;; Registers used:
 18596 ;;		None
 18597 ;; Tracked objects:
 18598 ;;		On entry : 6/39
 18599 ;;		On exit  : 3F/39
 18600 ;;		Unchanged: 0/0
 18601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18606 ;;Total ram usage:        0 bytes
 18607 ;; Hardware stack levels used:    1
 18608 ;; Hardware stack levels required when called:   16
 18609 ;; This function calls:
 18610 ;;		Nothing
 18611 ;; This function is called by:
 18612 ;;		_CMP1_Initialize
 18613 ;;		_BuzzerOn
 18614 ;; This function uses a non-reentrant model
 18615 ;;
 18616                           
 18617                           	psect	text140
 18618  00A51A                     __ptext140:
 18619                           	opt callstack 0
 18620  00A51A                     _CMP1_Enable:
 18621                           	opt callstack 12
 18622                           
 18623                           ;mcc_generated_files/cmp1.c: 106:     PIR1bits.C1IF = 0;
 18624                           
 18625                           ; BSR set to: 57
 18626                           ;incstack = 0
 18627  00A51A  0139               	movlb	57	; () banked
 18628  00A51C  99A1               	bcf	161,4,b	;volatile
 18629                           
 18630                           ;mcc_generated_files/cmp1.c: 107:     PIE1bits.C1IE = 1;
 18631  00A51E  8991               	bsf	145,4,b	;volatile
 18632                           
 18633                           ; BSR set to: 57
 18634  00A520  0012               	return		;funcret
 18635  00A522                     __end_of_CMP1_Enable:
 18636                           	opt callstack 0
 18637                           
 18638 ;; *************** function _BuzzerClear *****************
 18639 ;; Defined at:
 18640 ;;		line 71 in file "buzzer.c"
 18641 ;; Parameters:    Size  Location     Type
 18642 ;;		None
 18643 ;; Auto vars:     Size  Location     Type
 18644 ;;		None
 18645 ;; Return value:  Size  Location     Type
 18646 ;;                  1    wreg      void 
 18647 ;; Registers used:
 18648 ;;		wreg, status,2, cstack
 18649 ;; Tracked objects:
 18650 ;;		On entry : 3C/1
 18651 ;;		On exit  : 3F/39
 18652 ;;		Unchanged: 0/0
 18653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18658 ;;Total ram usage:        0 bytes
 18659 ;; Hardware stack levels used:    1
 18660 ;; Hardware stack levels required when called:   18
 18661 ;; This function calls:
 18662 ;;		_BuzzerOff
 18663 ;;		_TMR4_Stop
 18664 ;; This function is called by:
 18665 ;;		_MuteAlarm
 18666 ;;		_AlarmCheckTask
 18667 ;; This function uses a non-reentrant model
 18668 ;;
 18669                           
 18670                           	psect	text141
 18671  00A17E                     __ptext141:
 18672                           	opt callstack 0
 18673  00A17E                     _BuzzerClear:
 18674                           	opt callstack 11
 18675                           
 18676                           ;buzzer.c: 72:     alarmState = 0;
 18677                           
 18678                           ; BSR set to: 57
 18679                           ;incstack = 0
 18680  00A17E  0E00               	movlw	0
 18681  00A180  0100               	movlb	0	; () banked
 18682  00A182  6FFA               	movwf	_alarmState& (0+255),b
 18683                           
 18684                           ; BSR set to: 0
 18685                           ;buzzer.c: 73:     BuzzerOff();
 18686  00A184  ECC7  F050         	call	_BuzzerOff	;wreg free
 18687                           
 18688                           ;buzzer.c: 74:     TMR4_Stop();
 18689  00A188  EC63  F053         	call	_TMR4_Stop	;wreg free
 18690                           
 18691                           ; BSR set to: 57
 18692  00A18C  0012               	return		;funcret
 18693  00A18E                     __end_of_BuzzerClear:
 18694                           	opt callstack 0
 18695                           
 18696 ;; *************** function _TMR4_Stop *****************
 18697 ;; Defined at:
 18698 ;;		line 119 in file "mcc_generated_files/tmr4.c"
 18699 ;; Parameters:    Size  Location     Type
 18700 ;;		None
 18701 ;; Auto vars:     Size  Location     Type
 18702 ;;		None
 18703 ;; Return value:  Size  Location     Type
 18704 ;;                  1    wreg      void 
 18705 ;; Registers used:
 18706 ;;		None
 18707 ;; Tracked objects:
 18708 ;;		On entry : 3F/39
 18709 ;;		On exit  : 3F/39
 18710 ;;		Unchanged: 3E/0
 18711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18716 ;;Total ram usage:        0 bytes
 18717 ;; Hardware stack levels used:    1
 18718 ;; Hardware stack levels required when called:   16
 18719 ;; This function calls:
 18720 ;;		Nothing
 18721 ;; This function is called by:
 18722 ;;		_BuzzerClear
 18723 ;;		_BuzzerTask
 18724 ;; This function uses a non-reentrant model
 18725 ;;
 18726                           
 18727                           	psect	text142
 18728  00A6C6                     __ptext142:
 18729                           	opt callstack 0
 18730  00A6C6                     _TMR4_Stop:
 18731                           	opt callstack 12
 18732                           
 18733                           ; BSR set to: 57
 18734                           ;mcc_generated_files/tmr4.c: 122:     T4CONbits.TMR4ON = 0;
 18735                           
 18736                           ; BSR set to: 57
 18737                           ;incstack = 0
 18738  00A6C6  9EA0               	bcf	160,7,c	;volatile
 18739                           
 18740                           ; BSR set to: 57
 18741  00A6C8  0012               	return		;funcret
 18742  00A6CA                     __end_of_TMR4_Stop:
 18743                           	opt callstack 0
 18744                           
 18745 ;; *************** function _BuzzerOff *****************
 18746 ;; Defined at:
 18747 ;;		line 458 in file "buzzer.c"
 18748 ;; Parameters:    Size  Location     Type
 18749 ;;		None
 18750 ;; Auto vars:     Size  Location     Type
 18751 ;;		None
 18752 ;; Return value:  Size  Location     Type
 18753 ;;                  1    wreg      void 
 18754 ;; Registers used:
 18755 ;;		wreg, status,2, cstack
 18756 ;; Tracked objects:
 18757 ;;		On entry : 0/1
 18758 ;;		On exit  : 3F/39
 18759 ;;		Unchanged: 0/0
 18760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18765 ;;Total ram usage:        0 bytes
 18766 ;; Hardware stack levels used:    1
 18767 ;; Hardware stack levels required when called:   17
 18768 ;; This function calls:
 18769 ;;		_CMP1_Disable
 18770 ;; This function is called by:
 18771 ;;		_BuzzerSet
 18772 ;;		_BuzzerClear
 18773 ;;		_BuzzerTest
 18774 ;;		_BuzzerTask
 18775 ;;		_BuzzerInit
 18776 ;;		_BuzzerCheck
 18777 ;; This function uses a non-reentrant model
 18778 ;;
 18779                           
 18780                           	psect	text143
 18781  00A18E                     __ptext143:
 18782                           	opt callstack 0
 18783  00A18E                     _BuzzerOff:
 18784                           	opt callstack 11
 18785                           
 18786                           ;buzzer.c: 459:     PWM6CON = 0x00;
 18787                           
 18788                           ; BSR set to: 57
 18789                           ;incstack = 0
 18790  00A18E  0E00               	movlw	0
 18791  00A190  6E6A               	movwf	106,c	;volatile
 18792                           
 18793                           ;buzzer.c: 460:     on = 0;
 18794  00A192  0E00               	movlw	0
 18795  00A194  0100               	movlb	0	; () banked
 18796  00A196  6FF9               	movwf	_on& (0+255),b
 18797                           
 18798                           ; BSR set to: 0
 18799                           ;buzzer.c: 461:     CMP1_Disable();
 18800  00A198  EC91  F052         	call	_CMP1_Disable	;wreg free
 18801                           
 18802                           ; BSR set to: 57
 18803  00A19C  0012               	return		;funcret
 18804  00A19E                     __end_of_BuzzerOff:
 18805                           	opt callstack 0
 18806                           
 18807 ;; *************** function _CMP1_Disable *****************
 18808 ;; Defined at:
 18809 ;;		line 98 in file "mcc_generated_files/cmp1.c"
 18810 ;; Parameters:    Size  Location     Type
 18811 ;;		None
 18812 ;; Auto vars:     Size  Location     Type
 18813 ;;		None
 18814 ;; Return value:  Size  Location     Type
 18815 ;;                  1    wreg      void 
 18816 ;; Registers used:
 18817 ;;		None
 18818 ;; Tracked objects:
 18819 ;;		On entry : 3E/1
 18820 ;;		On exit  : 3F/39
 18821 ;;		Unchanged: 0/0
 18822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18827 ;;Total ram usage:        0 bytes
 18828 ;; Hardware stack levels used:    1
 18829 ;; Hardware stack levels required when called:   16
 18830 ;; This function calls:
 18831 ;;		Nothing
 18832 ;; This function is called by:
 18833 ;;		_CMP1_Initialize
 18834 ;;		_BuzzerOff
 18835 ;; This function uses a non-reentrant model
 18836 ;;
 18837                           
 18838                           	psect	text144
 18839  00A522                     __ptext144:
 18840                           	opt callstack 0
 18841  00A522                     _CMP1_Disable:
 18842                           	opt callstack 12
 18843                           
 18844                           ;mcc_generated_files/cmp1.c: 100:     PIE1bits.C1IE = 0;
 18845                           
 18846                           ; BSR set to: 57
 18847                           ;incstack = 0
 18848  00A522  0139               	movlb	57	; () banked
 18849  00A524  9991               	bcf	145,4,b	;volatile
 18850                           
 18851                           ;mcc_generated_files/cmp1.c: 101:     PIR1bits.C1IF = 0;
 18852  00A526  99A1               	bcf	161,4,b	;volatile
 18853                           
 18854                           ; BSR set to: 57
 18855  00A528  0012               	return		;funcret
 18856  00A52A                     __end_of_CMP1_Disable:
 18857                           	opt callstack 0
 18858                           
 18859 ;; *************** function _SetNoPowerSupplyAlarm *****************
 18860 ;; Defined at:
 18861 ;;		line 245 in file "alarm.c"
 18862 ;; Parameters:    Size  Location     Type
 18863 ;;		None
 18864 ;; Auto vars:     Size  Location     Type
 18865 ;;		None
 18866 ;; Return value:  Size  Location     Type
 18867 ;;                  1    wreg      void 
 18868 ;; Registers used:
 18869 ;;		wreg, status,2
 18870 ;; Tracked objects:
 18871 ;;		On entry : 3F/2
 18872 ;;		On exit  : 3F/2
 18873 ;;		Unchanged: 0/0
 18874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18879 ;;Total ram usage:        0 bytes
 18880 ;; Hardware stack levels used:    1
 18881 ;; Hardware stack levels required when called:   16
 18882 ;; This function calls:
 18883 ;;		Nothing
 18884 ;; This function is called by:
 18885 ;;		_BatteryFailAlarm
 18886 ;; This function uses a non-reentrant model
 18887 ;;
 18888                           
 18889                           	psect	text145
 18890  00A5EC                     __ptext145:
 18891                           	opt callstack 0
 18892  00A5EC                     _SetNoPowerSupplyAlarm:
 18893                           	opt callstack 12
 18894                           
 18895                           ; BSR set to: 2
 18896                           
 18897                           ; BSR set to: 57
 18898                           ;incstack = 0
 18899  00A5EC  0E01               	movlw	1
 18900  00A5EE  6FA4               	movwf	_noPowerSupplyAlarm& (0+255),b
 18901                           
 18902                           ; BSR set to: 2
 18903  00A5F0  0012               	return		;funcret
 18904  00A5F2                     __end_of_SetNoPowerSupplyAlarm:
 18905                           	opt callstack 0
 18906                           
 18907 ;; *************** function _SetBatteryFailAlarm *****************
 18908 ;; Defined at:
 18909 ;;		line 224 in file "alarm.c"
 18910 ;; Parameters:    Size  Location     Type
 18911 ;;		None
 18912 ;; Auto vars:     Size  Location     Type
 18913 ;;		None
 18914 ;; Return value:  Size  Location     Type
 18915 ;;                  1    wreg      void 
 18916 ;; Registers used:
 18917 ;;		wreg, status,2
 18918 ;; Tracked objects:
 18919 ;;		On entry : 3F/2
 18920 ;;		On exit  : 3F/0
 18921 ;;		Unchanged: 0/0
 18922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18927 ;;Total ram usage:        0 bytes
 18928 ;; Hardware stack levels used:    1
 18929 ;; Hardware stack levels required when called:   16
 18930 ;; This function calls:
 18931 ;;		Nothing
 18932 ;; This function is called by:
 18933 ;;		_BatteryFailAlarm
 18934 ;; This function uses a non-reentrant model
 18935 ;;
 18936                           
 18937                           	psect	text146
 18938  00A52A                     __ptext146:
 18939                           	opt callstack 0
 18940  00A52A                     _SetBatteryFailAlarm:
 18941                           	opt callstack 12
 18942                           
 18943                           ; BSR set to: 2
 18944                           
 18945                           ; BSR set to: 2
 18946                           ;incstack = 0
 18947  00A52A  0E01               	movlw	1
 18948  00A52C  0100               	movlb	0	; () banked
 18949  00A52E  6FF7               	movwf	_batteryFailAlarm& (0+255),b
 18950                           
 18951                           ; BSR set to: 0
 18952  00A530  0012               	return		;funcret
 18953  00A532                     __end_of_SetBatteryFailAlarm:
 18954                           	opt callstack 0
 18955                           
 18956 ;; *************** function _SetBaterryLowAlarmMed *****************
 18957 ;; Defined at:
 18958 ;;		line 235 in file "alarm.c"
 18959 ;; Parameters:    Size  Location     Type
 18960 ;;		None
 18961 ;; Auto vars:     Size  Location     Type
 18962 ;;		None
 18963 ;; Return value:  Size  Location     Type
 18964 ;;                  1    wreg      void 
 18965 ;; Registers used:
 18966 ;;		wreg, status,2
 18967 ;; Tracked objects:
 18968 ;;		On entry : 3F/2
 18969 ;;		On exit  : 3F/2
 18970 ;;		Unchanged: 0/0
 18971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18976 ;;Total ram usage:        0 bytes
 18977 ;; Hardware stack levels used:    1
 18978 ;; Hardware stack levels required when called:   16
 18979 ;; This function calls:
 18980 ;;		Nothing
 18981 ;; This function is called by:
 18982 ;;		_BatteryFailAlarm
 18983 ;; This function uses a non-reentrant model
 18984 ;;
 18985                           
 18986                           	psect	text147
 18987  00A5F2                     __ptext147:
 18988                           	opt callstack 0
 18989  00A5F2                     _SetBaterryLowAlarmMed:
 18990                           	opt callstack 12
 18991                           
 18992                           ; BSR set to: 2
 18993                           
 18994                           ; BSR set to: 0
 18995                           ;incstack = 0
 18996  00A5F2  0E01               	movlw	1
 18997  00A5F4  6FAA               	movwf	_baterryLowAlarmMed& (0+255),b
 18998                           
 18999                           ; BSR set to: 2
 19000  00A5F6  0012               	return		;funcret
 19001  00A5F8                     __end_of_SetBaterryLowAlarmMed:
 19002                           	opt callstack 0
 19003                           
 19004 ;; *************** function _SetBaterryLowAlarmHigh *****************
 19005 ;; Defined at:
 19006 ;;		line 236 in file "alarm.c"
 19007 ;; Parameters:    Size  Location     Type
 19008 ;;		None
 19009 ;; Auto vars:     Size  Location     Type
 19010 ;;		None
 19011 ;; Return value:  Size  Location     Type
 19012 ;;                  1    wreg      void 
 19013 ;; Registers used:
 19014 ;;		wreg, status,2
 19015 ;; Tracked objects:
 19016 ;;		On entry : 3F/2
 19017 ;;		On exit  : 3F/2
 19018 ;;		Unchanged: 0/0
 19019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19024 ;;Total ram usage:        0 bytes
 19025 ;; Hardware stack levels used:    1
 19026 ;; Hardware stack levels required when called:   16
 19027 ;; This function calls:
 19028 ;;		Nothing
 19029 ;; This function is called by:
 19030 ;;		_BatteryFailAlarm
 19031 ;; This function uses a non-reentrant model
 19032 ;;
 19033                           
 19034                           	psect	text148
 19035  00A5F8                     __ptext148:
 19036                           	opt callstack 0
 19037  00A5F8                     _SetBaterryLowAlarmHigh:
 19038                           	opt callstack 12
 19039                           
 19040                           ; BSR set to: 2
 19041                           
 19042                           ; BSR set to: 2
 19043                           ;incstack = 0
 19044  00A5F8  0E01               	movlw	1
 19045  00A5FA  6FA9               	movwf	_baterryLowAlarmHigh& (0+255),b
 19046                           
 19047                           ; BSR set to: 2
 19048  00A5FC  0012               	return		;funcret
 19049  00A5FE                     __end_of_SetBaterryLowAlarmHigh:
 19050                           	opt callstack 0
 19051                           
 19052 ;; *************** function _Get12V *****************
 19053 ;; Defined at:
 19054 ;;		line 865 in file "monitor.c"
 19055 ;; Parameters:    Size  Location     Type
 19056 ;;		None
 19057 ;; Auto vars:     Size  Location     Type
 19058 ;;  mv              4   32[BANK1 ] long 
 19059 ;;  v12             2   38[BANK1 ] short 
 19060 ;;  adc             2   36[BANK1 ] unsigned short 
 19061 ;; Return value:  Size  Location     Type
 19062 ;;                  2   30[BANK1 ] short 
 19063 ;; Registers used:
 19064 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19065 ;; Tracked objects:
 19066 ;;		On entry : 3F/1
 19067 ;;		On exit  : 3F/1
 19068 ;;		Unchanged: 0/0
 19069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19070 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19071 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19073 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19074 ;;Total ram usage:       10 bytes
 19075 ;; Hardware stack levels used:    1
 19076 ;; Hardware stack levels required when called:   18
 19077 ;; This function calls:
 19078 ;;		_AdcGetData
 19079 ;;		___aldiv
 19080 ;;		___lmul
 19081 ;; This function is called by:
 19082 ;;		_BatteryFailAlarm
 19083 ;; This function uses a non-reentrant model
 19084 ;;
 19085                           
 19086                           	psect	text149
 19087  0079A4                     __ptext149:
 19088                           	opt callstack 0
 19089  0079A4                     _Get12V:
 19090                           	opt callstack 10
 19091                           
 19092                           ; BSR set to: 1
 19093                           ;monitor.c: 866:     adc_result_t adc = AdcGetData(3);
 19094                           
 19095                           ; BSR set to: 2
 19096                           ;incstack = 0
 19097  0079A4  0E00               	movlw	0
 19098  0079A6  6F0B               	movwf	(AdcGetData@id+1)& (0+255),b
 19099  0079A8  0E03               	movlw	3
 19100  0079AA  6F0A               	movwf	AdcGetData@id& (0+255),b
 19101  0079AC  ECB5  F044         	call	_AdcGetData	;wreg free
 19102  0079B0  0060  F428  F124   	movff	?_AdcGetData,Get12V@adc
 19103  0079B6  0060  F42C  F125   	movff	?_AdcGetData+1,Get12V@adc+1
 19104                           
 19105                           ; BSR set to: 1
 19106                           ;monitor.c: 867:     int32_t mv = adc;
 19107  0079BC  0060  F490  F120   	movff	Get12V@adc,Get12V@mv
 19108  0079C2  0060  F494  F121   	movff	Get12V@adc+1,Get12V@mv+1
 19109  0079C8  6B22               	clrf	(Get12V@mv+2)& (0+255),b
 19110  0079CA  6B23               	clrf	(Get12V@mv+3)& (0+255),b
 19111                           
 19112                           ; BSR set to: 1
 19113                           ;monitor.c: 869:     int16_t v12 = (mv*33)/10;
 19114  0079CC  0060  F480  F104   	movff	Get12V@mv,___lmul@multiplier
 19115  0079D2  0060  F484  F105   	movff	Get12V@mv+1,___lmul@multiplier+1
 19116  0079D8  0060  F488  F106   	movff	Get12V@mv+2,___lmul@multiplier+2
 19117  0079DE  0060  F48C  F107   	movff	Get12V@mv+3,___lmul@multiplier+3
 19118  0079E4  0E21               	movlw	33
 19119  0079E6  6F08               	movwf	___lmul@multiplicand& (0+255),b
 19120  0079E8  0E00               	movlw	0
 19121  0079EA  6F09               	movwf	(___lmul@multiplicand+1)& (0+255),b
 19122  0079EC  0E00               	movlw	0
 19123  0079EE  6F0A               	movwf	(___lmul@multiplicand+2)& (0+255),b
 19124  0079F0  0E00               	movlw	0
 19125  0079F2  6F0B               	movwf	(___lmul@multiplicand+3)& (0+255),b
 19126  0079F4  ECAF  F045         	call	___lmul	;wreg free
 19127  0079F8  0060  F410  F110   	movff	?___lmul,___aldiv@dividend
 19128  0079FE  0060  F414  F111   	movff	?___lmul+1,___aldiv@dividend+1
 19129  007A04  0060  F418  F112   	movff	?___lmul+2,___aldiv@dividend+2
 19130  007A0A  0060  F41C  F113   	movff	?___lmul+3,___aldiv@dividend+3
 19131  007A10  0E0A               	movlw	10
 19132  007A12  6F14               	movwf	___aldiv@divisor& (0+255),b
 19133  007A14  0E00               	movlw	0
 19134  007A16  6F15               	movwf	(___aldiv@divisor+1)& (0+255),b
 19135  007A18  0E00               	movlw	0
 19136  007A1A  6F16               	movwf	(___aldiv@divisor+2)& (0+255),b
 19137  007A1C  0E00               	movlw	0
 19138  007A1E  6F17               	movwf	(___aldiv@divisor+3)& (0+255),b
 19139  007A20  ECD0  F035         	call	___aldiv	;wreg free
 19140  007A24  0060  F440  F126   	movff	?___aldiv,Get12V@v12
 19141  007A2A  0060  F444  F127   	movff	?___aldiv+1,Get12V@v12+1
 19142                           
 19143                           ; BSR set to: 1
 19144                           ;monitor.c: 870:     return v12;
 19145  007A30  0060  F498  F11E   	movff	Get12V@v12,?_Get12V
 19146  007A36  0060  F49C  F11F   	movff	Get12V@v12+1,?_Get12V+1
 19147                           
 19148                           ; BSR set to: 1
 19149  007A3C  0012               	return		;funcret
 19150  007A3E                     __end_of_Get12V:
 19151                           	opt callstack 0
 19152                           
 19153 ;; *************** function ___lmul *****************
 19154 ;; Defined at:
 19155 ;;		line 15 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/Umul32.c"
 19156 ;; Parameters:    Size  Location     Type
 19157 ;;  multiplier      4    4[BANK1 ] unsigned long 
 19158 ;;  multiplicand    4    8[BANK1 ] unsigned long 
 19159 ;; Auto vars:     Size  Location     Type
 19160 ;;  product         4   12[BANK1 ] unsigned long 
 19161 ;; Return value:  Size  Location     Type
 19162 ;;                  4    4[BANK1 ] unsigned long 
 19163 ;; Registers used:
 19164 ;;		wreg, status,2, status,0
 19165 ;; Tracked objects:
 19166 ;;		On entry : 3F/1
 19167 ;;		On exit  : 3F/1
 19168 ;;		Unchanged: 0/0
 19169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19170 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19171 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19173 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19174 ;;Total ram usage:       12 bytes
 19175 ;; Hardware stack levels used:    1
 19176 ;; Hardware stack levels required when called:   16
 19177 ;; This function calls:
 19178 ;;		Nothing
 19179 ;; This function is called by:
 19180 ;;		_GetPressure_pa
 19181 ;;		_SeePressure_pa
 19182 ;;		_See12V
 19183 ;;		_Get12V
 19184 ;; This function uses a non-reentrant model
 19185 ;;
 19186                           
 19187                           	psect	text150
 19188  008B5E                     __ptext150:
 19189                           	opt callstack 0
 19190  008B5E                     ___lmul:
 19191                           	opt callstack 12
 19192                           
 19193                           ; BSR set to: 1
 19194                           
 19195                           ; BSR set to: 1
 19196                           ;incstack = 0
 19197  008B5E  0E00               	movlw	0
 19198  008B60  6F0C               	movwf	___lmul@product& (0+255),b
 19199  008B62  0E00               	movlw	0
 19200  008B64  6F0D               	movwf	(___lmul@product+1)& (0+255),b
 19201  008B66  0E00               	movlw	0
 19202  008B68  6F0E               	movwf	(___lmul@product+2)& (0+255),b
 19203  008B6A  0E00               	movlw	0
 19204  008B6C  6F0F               	movwf	(___lmul@product+3)& (0+255),b
 19205  008B6E                     l19171:
 19206                           
 19207                           ; BSR set to: 1
 19208  008B6E  A104               	btfss	___lmul@multiplier& (0+255),0,b
 19209  008B70  D008               	goto	l19175
 19210                           
 19211                           ; BSR set to: 1
 19212  008B72  5108               	movf	___lmul@multiplicand& (0+255),w,b
 19213  008B74  270C               	addwf	___lmul@product& (0+255),f,b
 19214  008B76  5109               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 19215  008B78  230D               	addwfc	(___lmul@product+1)& (0+255),f,b
 19216  008B7A  510A               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 19217  008B7C  230E               	addwfc	(___lmul@product+2)& (0+255),f,b
 19218  008B7E  510B               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 19219  008B80  230F               	addwfc	(___lmul@product+3)& (0+255),f,b
 19220  008B82                     l19175:
 19221                           
 19222                           ; BSR set to: 1
 19223  008B82  90D8               	bcf	status,0,c
 19224  008B84  3708               	rlcf	___lmul@multiplicand& (0+255),f,b
 19225  008B86  3709               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 19226  008B88  370A               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 19227  008B8A  370B               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 19228                           
 19229                           ; BSR set to: 1
 19230  008B8C  90D8               	bcf	status,0,c
 19231  008B8E  3307               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 19232  008B90  3306               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 19233  008B92  3305               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 19234  008B94  3304               	rrcf	___lmul@multiplier& (0+255),f,b
 19235  008B96  5104               	movf	___lmul@multiplier& (0+255),w,b
 19236  008B98  1105               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 19237  008B9A  1106               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 19238  008B9C  1107               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 19239  008B9E  A4D8               	btfss	status,2,c
 19240  008BA0  D7E6               	goto	l19171
 19241                           
 19242                           ; BSR set to: 1
 19243  008BA2  0060  F430  F104   	movff	___lmul@product,?___lmul
 19244  008BA8  0060  F434  F105   	movff	___lmul@product+1,?___lmul+1
 19245  008BAE  0060  F438  F106   	movff	___lmul@product+2,?___lmul+2
 19246  008BB4  0060  F43C  F107   	movff	___lmul@product+3,?___lmul+3
 19247                           
 19248                           ; BSR set to: 1
 19249  008BBA  0012               	return		;funcret
 19250  008BBC                     __end_of___lmul:
 19251                           	opt callstack 0
 19252                           
 19253 ;; *************** function ___aldiv *****************
 19254 ;; Defined at:
 19255 ;;		line 7 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/aldiv.c"
 19256 ;; Parameters:    Size  Location     Type
 19257 ;;  dividend        4   16[BANK1 ] long 
 19258 ;;  divisor         4   20[BANK1 ] long 
 19259 ;; Auto vars:     Size  Location     Type
 19260 ;;  quotient        4   26[BANK1 ] long 
 19261 ;;  sign            1   25[BANK1 ] unsigned char 
 19262 ;;  counter         1   24[BANK1 ] unsigned char 
 19263 ;; Return value:  Size  Location     Type
 19264 ;;                  4   16[BANK1 ] long 
 19265 ;; Registers used:
 19266 ;;		wreg, status,2, status,0
 19267 ;; Tracked objects:
 19268 ;;		On entry : 3F/1
 19269 ;;		On exit  : 3F/1
 19270 ;;		Unchanged: 0/0
 19271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19272 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19273 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19275 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19276 ;;Total ram usage:       14 bytes
 19277 ;; Hardware stack levels used:    1
 19278 ;; Hardware stack levels required when called:   16
 19279 ;; This function calls:
 19280 ;;		Nothing
 19281 ;; This function is called by:
 19282 ;;		_GetPressure_pa
 19283 ;;		_SeePressure_pa
 19284 ;;		_See5V
 19285 ;;		_Get5V
 19286 ;;		_See12V
 19287 ;;		_Get12V
 19288 ;; This function uses a non-reentrant model
 19289 ;;
 19290                           
 19291                           	psect	text151
 19292  006BA0                     __ptext151:
 19293                           	opt callstack 0
 19294  006BA0                     ___aldiv:
 19295                           	opt callstack 12
 19296                           
 19297                           ; BSR set to: 1
 19298                           
 19299                           ; BSR set to: 1
 19300                           ;incstack = 0
 19301  006BA0  0E00               	movlw	0
 19302  006BA2  6F19               	movwf	___aldiv@sign& (0+255),b
 19303                           
 19304                           ; BSR set to: 1
 19305  006BA4  AF17               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 19306  006BA6  D00A               	goto	l19187
 19307                           
 19308                           ; BSR set to: 1
 19309  006BA8  1F17               	comf	(___aldiv@divisor+3)& (0+255),f,b
 19310  006BAA  1F16               	comf	(___aldiv@divisor+2)& (0+255),f,b
 19311  006BAC  1F15               	comf	(___aldiv@divisor+1)& (0+255),f,b
 19312  006BAE  6D14               	negf	___aldiv@divisor& (0+255),b
 19313  006BB0  0E00               	movlw	0
 19314  006BB2  2315               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 19315  006BB4  2316               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 19316  006BB6  2317               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 19317                           
 19318                           ; BSR set to: 1
 19319  006BB8  0E01               	movlw	1
 19320  006BBA  6F19               	movwf	___aldiv@sign& (0+255),b
 19321  006BBC                     l19187:
 19322                           
 19323                           ; BSR set to: 1
 19324  006BBC  AF13               	btfss	(___aldiv@dividend+3)& (0+255),7,b
 19325  006BBE  D00A               	goto	l19193
 19326                           
 19327                           ; BSR set to: 1
 19328  006BC0  1F13               	comf	(___aldiv@dividend+3)& (0+255),f,b
 19329  006BC2  1F12               	comf	(___aldiv@dividend+2)& (0+255),f,b
 19330  006BC4  1F11               	comf	(___aldiv@dividend+1)& (0+255),f,b
 19331  006BC6  6D10               	negf	___aldiv@dividend& (0+255),b
 19332  006BC8  0E00               	movlw	0
 19333  006BCA  2311               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 19334  006BCC  2312               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 19335  006BCE  2313               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 19336                           
 19337                           ; BSR set to: 1
 19338  006BD0  0E01               	movlw	1
 19339  006BD2  1B19               	xorwf	___aldiv@sign& (0+255),f,b
 19340  006BD4                     l19193:
 19341                           
 19342                           ; BSR set to: 1
 19343  006BD4  0E00               	movlw	0
 19344  006BD6  6F1A               	movwf	___aldiv@quotient& (0+255),b
 19345  006BD8  0E00               	movlw	0
 19346  006BDA  6F1B               	movwf	(___aldiv@quotient+1)& (0+255),b
 19347  006BDC  0E00               	movlw	0
 19348  006BDE  6F1C               	movwf	(___aldiv@quotient+2)& (0+255),b
 19349  006BE0  0E00               	movlw	0
 19350  006BE2  6F1D               	movwf	(___aldiv@quotient+3)& (0+255),b
 19351                           
 19352                           ; BSR set to: 1
 19353  006BE4  5114               	movf	___aldiv@divisor& (0+255),w,b
 19354  006BE6  1115               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 19355  006BE8  1116               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 19356  006BEA  1117               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
 19357  006BEC  B4D8               	btfsc	status,2,c
 19358  006BEE  D02A               	goto	l19215
 19359                           
 19360                           ; BSR set to: 1
 19361  006BF0  0E01               	movlw	1
 19362  006BF2  6F18               	movwf	___aldiv@counter& (0+255),b
 19363  006BF4  D006               	goto	l19201
 19364  006BF6                     l19199:
 19365                           
 19366                           ; BSR set to: 1
 19367  006BF6  90D8               	bcf	status,0,c
 19368  006BF8  3714               	rlcf	___aldiv@divisor& (0+255),f,b
 19369  006BFA  3715               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 19370  006BFC  3716               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 19371  006BFE  3717               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 19372  006C00  2B18               	incf	___aldiv@counter& (0+255),f,b
 19373  006C02                     l19201:
 19374                           
 19375                           ; BSR set to: 1
 19376  006C02  AF17               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 19377  006C04  D7F8               	goto	l19199
 19378  006C06                     u18900:
 19379                           
 19380                           ; BSR set to: 1
 19381  006C06  90D8               	bcf	status,0,c
 19382  006C08  371A               	rlcf	___aldiv@quotient& (0+255),f,b
 19383  006C0A  371B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 19384  006C0C  371C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 19385  006C0E  371D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 19386                           
 19387                           ; BSR set to: 1
 19388  006C10  5114               	movf	___aldiv@divisor& (0+255),w,b
 19389  006C12  5D10               	subwf	___aldiv@dividend& (0+255),w,b
 19390  006C14  5115               	movf	(___aldiv@divisor+1)& (0+255),w,b
 19391  006C16  5911               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 19392  006C18  5116               	movf	(___aldiv@divisor+2)& (0+255),w,b
 19393  006C1A  5912               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 19394  006C1C  5117               	movf	(___aldiv@divisor+3)& (0+255),w,b
 19395  006C1E  5913               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 19396  006C20  A0D8               	btfss	status,0,c
 19397  006C22  D009               	goto	l19211
 19398                           
 19399                           ; BSR set to: 1
 19400  006C24  5114               	movf	___aldiv@divisor& (0+255),w,b
 19401  006C26  5F10               	subwf	___aldiv@dividend& (0+255),f,b
 19402  006C28  5115               	movf	(___aldiv@divisor+1)& (0+255),w,b
 19403  006C2A  5B11               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 19404  006C2C  5116               	movf	(___aldiv@divisor+2)& (0+255),w,b
 19405  006C2E  5B12               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 19406  006C30  5117               	movf	(___aldiv@divisor+3)& (0+255),w,b
 19407  006C32  5B13               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 19408                           
 19409                           ; BSR set to: 1
 19410  006C34  811A               	bsf	___aldiv@quotient& (0+255),0,b
 19411  006C36                     l19211:
 19412                           
 19413                           ; BSR set to: 1
 19414  006C36  90D8               	bcf	status,0,c
 19415  006C38  3317               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 19416  006C3A  3316               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 19417  006C3C  3315               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 19418  006C3E  3314               	rrcf	___aldiv@divisor& (0+255),f,b
 19419                           
 19420                           ; BSR set to: 1
 19421  006C40  2F18               	decfsz	___aldiv@counter& (0+255),f,b
 19422  006C42  D7E1               	goto	u18900
 19423  006C44                     l19215:
 19424                           
 19425                           ; BSR set to: 1
 19426  006C44  5119               	movf	___aldiv@sign& (0+255),w,b
 19427  006C46  B4D8               	btfsc	status,2,c
 19428  006C48  D008               	goto	l19219
 19429                           
 19430                           ; BSR set to: 1
 19431  006C4A  1F1D               	comf	(___aldiv@quotient+3)& (0+255),f,b
 19432  006C4C  1F1C               	comf	(___aldiv@quotient+2)& (0+255),f,b
 19433  006C4E  1F1B               	comf	(___aldiv@quotient+1)& (0+255),f,b
 19434  006C50  6D1A               	negf	___aldiv@quotient& (0+255),b
 19435  006C52  0E00               	movlw	0
 19436  006C54  231B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 19437  006C56  231C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 19438  006C58  231D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 19439  006C5A                     l19219:
 19440                           
 19441                           ; BSR set to: 1
 19442  006C5A  0060  F468  F110   	movff	___aldiv@quotient,?___aldiv
 19443  006C60  0060  F46C  F111   	movff	___aldiv@quotient+1,?___aldiv+1
 19444  006C66  0060  F470  F112   	movff	___aldiv@quotient+2,?___aldiv+2
 19445  006C6C  0060  F474  F113   	movff	___aldiv@quotient+3,?___aldiv+3
 19446                           
 19447                           ; BSR set to: 1
 19448  006C72  0012               	return		;funcret
 19449  006C74                     __end_of___aldiv:
 19450                           	opt callstack 0
 19451                           
 19452 ;; *************** function _AdcGetData *****************
 19453 ;; Defined at:
 19454 ;;		line 89 in file "monitor.c"
 19455 ;; Parameters:    Size  Location     Type
 19456 ;;  id              2   10[BANK1 ] int 
 19457 ;; Auto vars:     Size  Location     Type
 19458 ;;  data            2   12[BANK1 ] unsigned short 
 19459 ;; Return value:  Size  Location     Type
 19460 ;;                  2   10[BANK1 ] unsigned short 
 19461 ;; Registers used:
 19462 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19463 ;; Tracked objects:
 19464 ;;		On entry : 3F/1
 19465 ;;		On exit  : 3F/1
 19466 ;;		Unchanged: 0/0
 19467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19468 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19469 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19471 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19472 ;;Total ram usage:        4 bytes
 19473 ;; Hardware stack levels used:    1
 19474 ;; Hardware stack levels required when called:   17
 19475 ;; This function calls:
 19476 ;;		___wmul
 19477 ;; This function is called by:
 19478 ;;		_GetPressure_pa
 19479 ;;		_GetPressureV_pa
 19480 ;;		_Get5V
 19481 ;;		_Get12V
 19482 ;; This function uses a non-reentrant model
 19483 ;;
 19484                           
 19485                           	psect	text152
 19486  00896A                     __ptext152:
 19487                           	opt callstack 0
 19488  00896A                     _AdcGetData:
 19489                           	opt callstack 11
 19490                           
 19491                           ; BSR set to: 1
 19492                           ;monitor.c: 90:     adc_result_t data;;monitor.c: 91:     data = adcChannels[id].data;
 19493                           
 19494                           ; BSR set to: 1
 19495                           ;incstack = 0
 19496  00896A  0060  F428  F104   	movff	AdcGetData@id,___wmul@multiplier
 19497  008970  0060  F42C  F105   	movff	AdcGetData@id+1,___wmul@multiplier+1
 19498  008976  0E00               	movlw	0
 19499  008978  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19500  00897A  0E05               	movlw	5
 19501  00897C  6F06               	movwf	___wmul@multiplicand& (0+255),b
 19502  00897E  EC7C  F04C         	call	___wmul	;wreg free
 19503  008982  0EBE               	movlw	low (_adcChannels+2)
 19504  008984  2504               	addwf	?___wmul& (0+255),w,b
 19505  008986  6ED9               	movwf	fsr2l,c
 19506  008988  0E02               	movlw	high (_adcChannels+2)
 19507  00898A  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 19508  00898C  6EDA               	movwf	fsr2h,c
 19509  00898E  006F FF78  F10C    	movff	postinc2,AdcGetData@data
 19510  008994  006F FF74  F10D    	movff	postdec2,AdcGetData@data+1
 19511                           
 19512                           ;monitor.c: 92:     adcChannels[id].dataValid=0;
 19513  00899A  0060  F428  F104   	movff	AdcGetData@id,___wmul@multiplier
 19514  0089A0  0060  F42C  F105   	movff	AdcGetData@id+1,___wmul@multiplier+1
 19515  0089A6  0E00               	movlw	0
 19516  0089A8  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19517  0089AA  0E05               	movlw	5
 19518  0089AC  6F06               	movwf	___wmul@multiplicand& (0+255),b
 19519  0089AE  EC7C  F04C         	call	___wmul	;wreg free
 19520  0089B2  0EBD               	movlw	low (_adcChannels+1)
 19521  0089B4  2504               	addwf	?___wmul& (0+255),w,b
 19522  0089B6  6ED9               	movwf	fsr2l,c
 19523  0089B8  0E02               	movlw	high (_adcChannels+1)
 19524  0089BA  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 19525  0089BC  6EDA               	movwf	fsr2h,c
 19526  0089BE  0E00               	movlw	0
 19527  0089C0  6EDF               	movwf	indf2,c
 19528                           
 19529                           ; BSR set to: 1
 19530                           ;monitor.c: 93:     return data;
 19531  0089C2  0060  F430  F10A   	movff	AdcGetData@data,?_AdcGetData
 19532  0089C8  0060  F434  F10B   	movff	AdcGetData@data+1,?_AdcGetData+1
 19533                           
 19534                           ; BSR set to: 1
 19535  0089CE  0012               	return		;funcret
 19536  0089D0                     __end_of_AdcGetData:
 19537                           	opt callstack 0
 19538                           
 19539 ;; *************** function _ClearNoPowerSupplyAlarm *****************
 19540 ;; Defined at:
 19541 ;;		line 290 in file "alarm.c"
 19542 ;; Parameters:    Size  Location     Type
 19543 ;;		None
 19544 ;; Auto vars:     Size  Location     Type
 19545 ;;		None
 19546 ;; Return value:  Size  Location     Type
 19547 ;;                  1    wreg      void 
 19548 ;; Registers used:
 19549 ;;		wreg, status,2
 19550 ;; Tracked objects:
 19551 ;;		On entry : 3F/2
 19552 ;;		On exit  : 3F/2
 19553 ;;		Unchanged: 0/0
 19554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19559 ;;Total ram usage:        0 bytes
 19560 ;; Hardware stack levels used:    1
 19561 ;; Hardware stack levels required when called:   16
 19562 ;; This function calls:
 19563 ;;		Nothing
 19564 ;; This function is called by:
 19565 ;;		_BatteryFailAlarm
 19566 ;; This function uses a non-reentrant model
 19567 ;;
 19568                           
 19569                           	psect	text153
 19570  00A5FE                     __ptext153:
 19571                           	opt callstack 0
 19572  00A5FE                     _ClearNoPowerSupplyAlarm:
 19573                           	opt callstack 12
 19574                           
 19575                           ; BSR set to: 2
 19576                           
 19577                           ; BSR set to: 1
 19578                           ;incstack = 0
 19579  00A5FE  0E00               	movlw	0
 19580  00A600  6FA4               	movwf	_noPowerSupplyAlarm& (0+255),b
 19581                           
 19582                           ; BSR set to: 2
 19583  00A602  0012               	return		;funcret
 19584  00A604                     __end_of_ClearNoPowerSupplyAlarm:
 19585                           	opt callstack 0
 19586                           
 19587 ;; *************** function _ClearBatteryFailAlarm *****************
 19588 ;; Defined at:
 19589 ;;		line 269 in file "alarm.c"
 19590 ;; Parameters:    Size  Location     Type
 19591 ;;		None
 19592 ;; Auto vars:     Size  Location     Type
 19593 ;;		None
 19594 ;; Return value:  Size  Location     Type
 19595 ;;                  1    wreg      void 
 19596 ;; Registers used:
 19597 ;;		wreg, status,2
 19598 ;; Tracked objects:
 19599 ;;		On entry : 3F/1
 19600 ;;		On exit  : 3F/0
 19601 ;;		Unchanged: 0/0
 19602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19607 ;;Total ram usage:        0 bytes
 19608 ;; Hardware stack levels used:    1
 19609 ;; Hardware stack levels required when called:   16
 19610 ;; This function calls:
 19611 ;;		Nothing
 19612 ;; This function is called by:
 19613 ;;		_BatteryFailAlarm
 19614 ;; This function uses a non-reentrant model
 19615 ;;
 19616                           
 19617                           	psect	text154
 19618  00A532                     __ptext154:
 19619                           	opt callstack 0
 19620  00A532                     _ClearBatteryFailAlarm:
 19621                           	opt callstack 12
 19622                           
 19623                           ; BSR set to: 1
 19624                           
 19625                           ; BSR set to: 2
 19626                           ;incstack = 0
 19627  00A532  0E00               	movlw	0
 19628  00A534  0100               	movlb	0	; () banked
 19629  00A536  6FF7               	movwf	_batteryFailAlarm& (0+255),b
 19630                           
 19631                           ; BSR set to: 0
 19632  00A538  0012               	return		;funcret
 19633  00A53A                     __end_of_ClearBatteryFailAlarm:
 19634                           	opt callstack 0
 19635                           
 19636 ;; *************** function _ClearBaterryLowAlarmMed *****************
 19637 ;; Defined at:
 19638 ;;		line 280 in file "alarm.c"
 19639 ;; Parameters:    Size  Location     Type
 19640 ;;		None
 19641 ;; Auto vars:     Size  Location     Type
 19642 ;;		None
 19643 ;; Return value:  Size  Location     Type
 19644 ;;                  1    wreg      void 
 19645 ;; Registers used:
 19646 ;;		wreg, status,2
 19647 ;; Tracked objects:
 19648 ;;		On entry : 3F/2
 19649 ;;		On exit  : 3F/2
 19650 ;;		Unchanged: 0/0
 19651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19656 ;;Total ram usage:        0 bytes
 19657 ;; Hardware stack levels used:    1
 19658 ;; Hardware stack levels required when called:   16
 19659 ;; This function calls:
 19660 ;;		Nothing
 19661 ;; This function is called by:
 19662 ;;		_BatteryFailAlarm
 19663 ;; This function uses a non-reentrant model
 19664 ;;
 19665                           
 19666                           	psect	text155
 19667  00A604                     __ptext155:
 19668                           	opt callstack 0
 19669  00A604                     _ClearBaterryLowAlarmMed:
 19670                           	opt callstack 12
 19671                           
 19672                           ; BSR set to: 2
 19673                           
 19674                           ; BSR set to: 0
 19675                           ;incstack = 0
 19676  00A604  0E00               	movlw	0
 19677  00A606  6FAA               	movwf	_baterryLowAlarmMed& (0+255),b
 19678                           
 19679                           ; BSR set to: 2
 19680  00A608  0012               	return		;funcret
 19681  00A60A                     __end_of_ClearBaterryLowAlarmMed:
 19682                           	opt callstack 0
 19683                           
 19684 ;; *************** function _ClearBaterryLowAlarmHigh *****************
 19685 ;; Defined at:
 19686 ;;		line 281 in file "alarm.c"
 19687 ;; Parameters:    Size  Location     Type
 19688 ;;		None
 19689 ;; Auto vars:     Size  Location     Type
 19690 ;;		None
 19691 ;; Return value:  Size  Location     Type
 19692 ;;                  1    wreg      void 
 19693 ;; Registers used:
 19694 ;;		wreg, status,2
 19695 ;; Tracked objects:
 19696 ;;		On entry : 3F/2
 19697 ;;		On exit  : 3F/2
 19698 ;;		Unchanged: 0/0
 19699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19704 ;;Total ram usage:        0 bytes
 19705 ;; Hardware stack levels used:    1
 19706 ;; Hardware stack levels required when called:   16
 19707 ;; This function calls:
 19708 ;;		Nothing
 19709 ;; This function is called by:
 19710 ;;		_BatteryFailAlarm
 19711 ;; This function uses a non-reentrant model
 19712 ;;
 19713                           
 19714                           	psect	text156
 19715  00A60A                     __ptext156:
 19716                           	opt callstack 0
 19717  00A60A                     _ClearBaterryLowAlarmHigh:
 19718                           	opt callstack 12
 19719                           
 19720                           ; BSR set to: 2
 19721                           
 19722                           ; BSR set to: 2
 19723                           ;incstack = 0
 19724  00A60A  0E00               	movlw	0
 19725  00A60C  6FA9               	movwf	_baterryLowAlarmHigh& (0+255),b
 19726                           
 19727                           ; BSR set to: 2
 19728  00A60E  0012               	return		;funcret
 19729  00A610                     __end_of_ClearBaterryLowAlarmHigh:
 19730                           	opt callstack 0
 19731                           
 19732 ;; *************** function _AdcDataReady *****************
 19733 ;; Defined at:
 19734 ;;		line 78 in file "monitor.c"
 19735 ;; Parameters:    Size  Location     Type
 19736 ;;  id              2   10[BANK1 ] int 
 19737 ;; Auto vars:     Size  Location     Type
 19738 ;;		None
 19739 ;; Return value:  Size  Location     Type
 19740 ;;                  1    wreg      _Bool 
 19741 ;; Registers used:
 19742 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19743 ;; Tracked objects:
 19744 ;;		On entry : 3F/1
 19745 ;;		On exit  : 3F/1
 19746 ;;		Unchanged: 0/0
 19747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19748 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19751 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19752 ;;Total ram usage:        2 bytes
 19753 ;; Hardware stack levels used:    1
 19754 ;; Hardware stack levels required when called:   17
 19755 ;; This function calls:
 19756 ;;		___wmul
 19757 ;; This function is called by:
 19758 ;;		_BatteryFailAlarm
 19759 ;;		_MonitorFailAlarm
 19760 ;; This function uses a non-reentrant model
 19761 ;;
 19762                           
 19763                           	psect	text157
 19764  009A8E                     __ptext157:
 19765                           	opt callstack 0
 19766  009A8E                     _AdcDataReady:
 19767                           	opt callstack 11
 19768                           
 19769                           ; BSR set to: 1
 19770                           ;monitor.c: 79:     return adcChannels[id].dataValid;
 19771                           
 19772                           ; BSR set to: 2
 19773                           ;incstack = 0
 19774  009A8E  0060  F428  F104   	movff	AdcDataReady@id,___wmul@multiplier
 19775  009A94  0060  F42C  F105   	movff	AdcDataReady@id+1,___wmul@multiplier+1
 19776  009A9A  0E00               	movlw	0
 19777  009A9C  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19778  009A9E  0E05               	movlw	5
 19779  009AA0  6F06               	movwf	___wmul@multiplicand& (0+255),b
 19780  009AA2  EC7C  F04C         	call	___wmul	;wreg free
 19781  009AA6  0EBD               	movlw	low (_adcChannels+1)
 19782  009AA8  2504               	addwf	?___wmul& (0+255),w,b
 19783  009AAA  6ED9               	movwf	fsr2l,c
 19784  009AAC  0E02               	movlw	high (_adcChannels+1)
 19785  009AAE  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 19786  009AB0  6EDA               	movwf	fsr2h,c
 19787  009AB2  50DF               	movf	indf2,w,c
 19788                           
 19789                           ; BSR set to: 1
 19790  009AB4  0012               	return		;funcret
 19791  009AB6                     __end_of_AdcDataReady:
 19792                           	opt callstack 0
 19793                           
 19794 ;; *************** function _AlarmUpdateLCD *****************
 19795 ;; Defined at:
 19796 ;;		line 440 in file "alarm.c"
 19797 ;; Parameters:    Size  Location     Type
 19798 ;;		None
 19799 ;; Auto vars:     Size  Location     Type
 19800 ;;  id              2  192[BANK1 ] int 
 19801 ;; Return value:  Size  Location     Type
 19802 ;;                  1    wreg      void 
 19803 ;; Registers used:
 19804 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19805 ;; Tracked objects:
 19806 ;;		On entry : 3C/1
 19807 ;;		On exit  : 3E/0
 19808 ;;		Unchanged: 0/0
 19809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19811 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19813 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19814 ;;Total ram usage:        6 bytes
 19815 ;; Hardware stack levels used:    1
 19816 ;; Hardware stack levels required when called:   27
 19817 ;; This function calls:
 19818 ;;		_AlarmDisplay
 19819 ;;		_AnyAlarm
 19820 ;;		_HigherAlarm
 19821 ;;		_ValueDisplay
 19822 ;;		___wmul
 19823 ;; This function is called by:
 19824 ;;		_HistAlarm
 19825 ;;		_AlarmCheckTask
 19826 ;; This function uses a non-reentrant model
 19827 ;;
 19828                           
 19829                           	psect	text158
 19830  005C98                     __ptext158:
 19831                           	opt callstack 0
 19832  005C98                     _AlarmUpdateLCD:
 19833                           	opt callstack 2
 19834                           
 19835                           ;alarm.c: 442:     if (histSec) {
 19836                           
 19837                           ; BSR set to: 1
 19838                           ;incstack = 0
 19839  005C98  0101               	movlb	1	; () banked
 19840  005C9A  51E9               	movf	_histSec& (0+255),w,b
 19841  005C9C  11EA               	iorwf	(_histSec+1)& (0+255),w,b
 19842  005C9E  B4D8               	btfsc	status,2,c
 19843  005CA0  D03F               	goto	l20979
 19844                           
 19845                           ; BSR set to: 1
 19846                           ;alarm.c: 443:         displayStatus = 2;
 19847  005CA2  0E00               	movlw	0
 19848  005CA4  0100               	movlb	0	; () banked
 19849  005CA6  6FE1               	movwf	(_displayStatus+1)& (0+255),b
 19850  005CA8  0E02               	movlw	2
 19851  005CAA  6FE0               	movwf	_displayStatus& (0+255),b
 19852                           
 19853                           ; BSR set to: 0
 19854                           ;alarm.c: 444:         AlarmDisplay(alarmData[hist].type, alarmData[hist].name);
 19855  005CAC  0060  F79C  F104   	movff	_hist,___wmul@multiplier
 19856  005CB2  0060  F7A0  F105   	movff	_hist+1,___wmul@multiplier+1
 19857  005CB8  0E00               	movlw	0
 19858  005CBA  0101               	movlb	1	; () banked
 19859  005CBC  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19860  005CBE  0E15               	movlw	21
 19861  005CC0  6F06               	movwf	___wmul@multiplicand& (0+255),b
 19862  005CC2  EC7C  F04C         	call	___wmul	;wreg free
 19863  005CC6  0E25               	movlw	low (_alarmData+17)
 19864  005CC8  2504               	addwf	?___wmul& (0+255),w,b
 19865  005CCA  6ED9               	movwf	fsr2l,c
 19866  005CCC  0E09               	movlw	high (_alarmData+17)
 19867  005CCE  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 19868  005CD0  6EDA               	movwf	fsr2h,c
 19869  005CD2  006F FF78  F1C2    	movff	postinc2,_AlarmUpdateLCD$6531
 19870  005CD8  006F FF74  F1C3    	movff	postdec2,_AlarmUpdateLCD$6531+1
 19871                           
 19872                           ; BSR set to: 1
 19873                           ;alarm.c: 444:         AlarmDisplay(alarmData[hist].type, alarmData[hist].name);
 19874  005CDE  0060  F79C  F104   	movff	_hist,___wmul@multiplier
 19875  005CE4  0060  F7A0  F105   	movff	_hist+1,___wmul@multiplier+1
 19876  005CEA  0E00               	movlw	0
 19877  005CEC  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19878  005CEE  0E15               	movlw	21
 19879  005CF0  6F06               	movwf	___wmul@multiplicand& (0+255),b
 19880  005CF2  EC7C  F04C         	call	___wmul	;wreg free
 19881  005CF6  0E14               	movlw	low _alarmData
 19882  005CF8  2504               	addwf	?___wmul& (0+255),w,b
 19883  005CFA  6FC4               	movwf	_AlarmUpdateLCD$6532& (0+255),b
 19884  005CFC  0E09               	movlw	high _alarmData
 19885  005CFE  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 19886  005D00  6FC5               	movwf	(_AlarmUpdateLCD$6532+1)& (0+255),b
 19887                           
 19888                           ; BSR set to: 1
 19889                           ;alarm.c: 444:         AlarmDisplay(alarmData[hist].type, alarmData[hist].name);
 19890  005D02  0060  F708  F1B7   	movff	_AlarmUpdateLCD$6531,AlarmDisplay@type
 19891  005D08  0060  F70C  F1B8   	movff	_AlarmUpdateLCD$6531+1,AlarmDisplay@type+1
 19892  005D0E  0060  F710  F1B9   	movff	_AlarmUpdateLCD$6532,AlarmDisplay@alarm
 19893  005D14  0060  F714  F1BA   	movff	_AlarmUpdateLCD$6532+1,AlarmDisplay@alarm+1
 19894  005D1A  EC1F  F03D         	call	_AlarmDisplay	;wreg free
 19895                           
 19896                           ;alarm.c: 446:     } else {
 19897  005D1E  0012               	return	
 19898  005D20                     l20979:
 19899                           
 19900                           ; BSR set to: 1
 19901                           ;alarm.c: 447:         if (displayStatus==1 && AnyAlarm())
 19902  005D20  0100               	movlb	0	; () banked
 19903  005D22  05E0               	decf	_displayStatus& (0+255),w,b
 19904  005D24  11E1               	iorwf	(_displayStatus+1)& (0+255),w,b
 19905  005D26  A4D8               	btfss	status,2,c
 19906  005D28  D04B               	goto	l20993
 19907                           
 19908                           ; BSR set to: 0
 19909  005D2A  EC8C  F04A         	call	_AnyAlarm	;wreg free
 19910  005D2E  0900               	iorlw	0
 19911  005D30  B4D8               	btfsc	status,2,c
 19912  005D32  D046               	goto	l20993
 19913                           
 19914                           ; BSR set to: 1
 19915                           ;alarm.c: 448:         {;alarm.c: 449:             int id;;alarm.c: 451:             id 
      +                          = HigherAlarm();
 19916  005D34  ECDF  F038         	call	_HigherAlarm	;wreg free
 19917  005D38  0060  F428  F1C0   	movff	?_HigherAlarm,AlarmUpdateLCD@id
 19918  005D3E  0060  F42C  F1C1   	movff	?_HigherAlarm+1,AlarmUpdateLCD@id+1
 19919                           
 19920                           ; BSR set to: 1
 19921                           ;alarm.c: 453:             AlarmDisplay(alarmData[id].type,alarmData[id].name);
 19922  005D44  0060  F700  F104   	movff	AlarmUpdateLCD@id,___wmul@multiplier
 19923  005D4A  0060  F704  F105   	movff	AlarmUpdateLCD@id+1,___wmul@multiplier+1
 19924  005D50  0E00               	movlw	0
 19925  005D52  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19926  005D54  0E15               	movlw	21
 19927  005D56  6F06               	movwf	___wmul@multiplicand& (0+255),b
 19928  005D58  EC7C  F04C         	call	___wmul	;wreg free
 19929  005D5C  0E25               	movlw	low (_alarmData+17)
 19930  005D5E  2504               	addwf	?___wmul& (0+255),w,b
 19931  005D60  6ED9               	movwf	fsr2l,c
 19932  005D62  0E09               	movlw	high (_alarmData+17)
 19933  005D64  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 19934  005D66  6EDA               	movwf	fsr2h,c
 19935  005D68  006F FF78  F1C2    	movff	postinc2,_AlarmUpdateLCD$6531
 19936  005D6E  006F FF74  F1C3    	movff	postdec2,_AlarmUpdateLCD$6531+1
 19937                           
 19938                           ; BSR set to: 1
 19939                           ;alarm.c: 453:             AlarmDisplay(alarmData[id].type,alarmData[id].name);
 19940  005D74  0060  F700  F104   	movff	AlarmUpdateLCD@id,___wmul@multiplier
 19941  005D7A  0060  F704  F105   	movff	AlarmUpdateLCD@id+1,___wmul@multiplier+1
 19942  005D80  0E00               	movlw	0
 19943  005D82  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19944  005D84  0E15               	movlw	21
 19945  005D86  6F06               	movwf	___wmul@multiplicand& (0+255),b
 19946  005D88  EC7C  F04C         	call	___wmul	;wreg free
 19947  005D8C  0E14               	movlw	low _alarmData
 19948  005D8E  2504               	addwf	?___wmul& (0+255),w,b
 19949  005D90  6FC4               	movwf	_AlarmUpdateLCD$6532& (0+255),b
 19950  005D92  0E09               	movlw	high _alarmData
 19951  005D94  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 19952  005D96  6FC5               	movwf	(_AlarmUpdateLCD$6532+1)& (0+255),b
 19953                           
 19954                           ; BSR set to: 1
 19955                           ;alarm.c: 453:             AlarmDisplay(alarmData[id].type,alarmData[id].name);
 19956  005D98  0060  F708  F1B7   	movff	_AlarmUpdateLCD$6531,AlarmDisplay@type
 19957  005D9E  0060  F70C  F1B8   	movff	_AlarmUpdateLCD$6531+1,AlarmDisplay@type+1
 19958  005DA4  0060  F710  F1B9   	movff	_AlarmUpdateLCD$6532,AlarmDisplay@alarm
 19959  005DAA  0060  F714  F1BA   	movff	_AlarmUpdateLCD$6532+1,AlarmDisplay@alarm+1
 19960  005DB0  EC1F  F03D         	call	_AlarmDisplay	;wreg free
 19961                           
 19962                           ; BSR set to: 1
 19963                           ;alarm.c: 454:             displayStatus = 0;
 19964  005DB4  0E00               	movlw	0
 19965  005DB6  0100               	movlb	0	; () banked
 19966  005DB8  6FE1               	movwf	(_displayStatus+1)& (0+255),b
 19967  005DBA  0E00               	movlw	0
 19968  005DBC  6FE0               	movwf	_displayStatus& (0+255),b
 19969                           
 19970                           ;alarm.c: 455:         } else {
 19971  005DBE  0012               	return	
 19972  005DC0                     l20993:
 19973                           
 19974                           ;alarm.c: 458:             ValueDisplay();
 19975  005DC0  EC3A  F011         	call	_ValueDisplay	;wreg free
 19976                           
 19977                           ;alarm.c: 460:             if (AnyAlarm()) displayStatus = 1;
 19978  005DC4  EC8C  F04A         	call	_AnyAlarm	;wreg free
 19979  005DC8  0900               	iorlw	0
 19980  005DCA  B4D8               	btfsc	status,2,c
 19981  005DCC  0012               	return	
 19982                           
 19983                           ; BSR set to: 1
 19984  005DCE  0E00               	movlw	0
 19985  005DD0  0100               	movlb	0	; () banked
 19986  005DD2  6FE1               	movwf	(_displayStatus+1)& (0+255),b
 19987  005DD4  0E01               	movlw	1
 19988  005DD6  6FE0               	movwf	_displayStatus& (0+255),b
 19989  005DD8  0012               	return		;funcret
 19990  005DDA                     __end_of_AlarmUpdateLCD:
 19991                           	opt callstack 0
 19992                           
 19993 ;; *************** function _HigherAlarm *****************
 19994 ;; Defined at:
 19995 ;;		line 359 in file "alarm.c"
 19996 ;; Parameters:    Size  Location     Type
 19997 ;;		None
 19998 ;; Auto vars:     Size  Location     Type
 19999 ;;  i               2   19[BANK1 ] int 
 20000 ;;  max             2   17[BANK1 ] int 
 20001 ;; Return value:  Size  Location     Type
 20002 ;;                  2   10[BANK1 ] int 
 20003 ;; Registers used:
 20004 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20005 ;; Tracked objects:
 20006 ;;		On entry : 3F/1
 20007 ;;		On exit  : 3F/1
 20008 ;;		Unchanged: 0/0
 20009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20010 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20011 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20012 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20013 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20014 ;;Total ram usage:       11 bytes
 20015 ;; Hardware stack levels used:    1
 20016 ;; Hardware stack levels required when called:   17
 20017 ;; This function calls:
 20018 ;;		___wmul
 20019 ;; This function is called by:
 20020 ;;		_MuteAlarm
 20021 ;;		_AlarmUpdateLCD
 20022 ;;		_AlarmCheckTask
 20023 ;; This function uses a non-reentrant model
 20024 ;;
 20025                           
 20026                           	psect	text159
 20027  0071BE                     __ptext159:
 20028                           	opt callstack 0
 20029  0071BE                     _HigherAlarm:
 20030                           	opt callstack 12
 20031                           
 20032                           ; BSR set to: 1
 20033                           ;alarm.c: 360:     int max=-1;
 20034                           
 20035                           ;incstack = 0
 20036  0071BE  6911               	setf	HigherAlarm@max& (0+255),b
 20037  0071C0  6912               	setf	(HigherAlarm@max+1)& (0+255),b
 20038                           
 20039                           ; BSR set to: 1
 20040                           ;alarm.c: 361:     for (int i=0; i<sizeof(alarmData)/sizeof(a); i++) {
 20041  0071C2  0E00               	movlw	0
 20042  0071C4  6F14               	movwf	(HigherAlarm@i+1)& (0+255),b
 20043  0071C6  0E00               	movlw	0
 20044  0071C8  6F13               	movwf	HigherAlarm@i& (0+255),b
 20045  0071CA                     l19803:
 20046                           
 20047                           ; BSR set to: 1
 20048                           ;alarm.c: 362:         if (alarms[i]) {
 20049  0071CA  90D8               	bcf	status,0,c
 20050  0071CC  3513               	rlcf	HigherAlarm@i& (0+255),w,b
 20051  0071CE  6ED9               	movwf	fsr2l,c
 20052  0071D0  3514               	rlcf	(HigherAlarm@i+1)& (0+255),w,b
 20053  0071D2  6EDA               	movwf	fsr2h,c
 20054  0071D4  0E00               	movlw	low _alarms
 20055  0071D6  26D9               	addwf	fsr2l,f,c
 20056  0071D8  0E03               	movlw	high _alarms
 20057  0071DA  22DA               	addwfc	fsr2h,f,c
 20058  0071DC  50DE               	movf	postinc2,w,c
 20059  0071DE  10DE               	iorwf	postinc2,w,c
 20060  0071E0  B4D8               	btfsc	status,2,c
 20061  0071E2  D037               	goto	l19813
 20062                           
 20063                           ; BSR set to: 1
 20064                           ;alarm.c: 363:             if (max<0) max = i;
 20065  0071E4  AF12               	btfss	(HigherAlarm@max+1)& (0+255),7,b
 20066  0071E6  D007               	goto	l19809
 20067  0071E8                     u19150:
 20068                           
 20069                           ; BSR set to: 1
 20070  0071E8  0060  F44C  F111   	movff	HigherAlarm@i,HigherAlarm@max
 20071  0071EE  0060  F450  F112   	movff	HigherAlarm@i+1,HigherAlarm@max+1
 20072  0071F4  D02E               	goto	l19813
 20073  0071F6                     l19809:
 20074                           
 20075                           ; BSR set to: 1
 20076  0071F6  0060  F44C  F104   	movff	HigherAlarm@i,___wmul@multiplier
 20077  0071FC  0060  F450  F105   	movff	HigherAlarm@i+1,___wmul@multiplier+1
 20078  007202  0E00               	movlw	0
 20079  007204  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20080  007206  0E15               	movlw	21
 20081  007208  6F06               	movwf	___wmul@multiplicand& (0+255),b
 20082  00720A  EC7C  F04C         	call	___wmul	;wreg free
 20083  00720E  0E25               	movlw	low (_alarmData+17)
 20084  007210  2504               	addwf	?___wmul& (0+255),w,b
 20085  007212  6ED9               	movwf	fsr2l,c
 20086  007214  0E09               	movlw	high (_alarmData+17)
 20087  007216  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 20088  007218  6EDA               	movwf	fsr2h,c
 20089  00721A  0060  F444  F104   	movff	HigherAlarm@max,___wmul@multiplier
 20090  007220  0060  F448  F105   	movff	HigherAlarm@max+1,___wmul@multiplier+1
 20091  007226  0E00               	movlw	0
 20092  007228  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20093  00722A  0E15               	movlw	21
 20094  00722C  6F06               	movwf	___wmul@multiplicand& (0+255),b
 20095  00722E  EC7C  F04C         	call	___wmul	;wreg free
 20096  007232  0E25               	movlw	low (_alarmData+17)
 20097  007234  2504               	addwf	?___wmul& (0+255),w,b
 20098  007236  6EE1               	movwf	fsr1l,c
 20099  007238  0E09               	movlw	high (_alarmData+17)
 20100  00723A  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 20101  00723C  6EE2               	movwf	fsr1h,c
 20102  00723E  50DE               	movf	postinc2,w,c
 20103  007240  5CE6               	subwf	postinc1,w,c
 20104  007242  50E6               	movf	postinc1,w,c
 20105  007244  0A80               	xorlw	128
 20106  007246  6F10               	movwf	(??_HigherAlarm+4)& (0+255),b
 20107  007248  50DE               	movf	postinc2,w,c
 20108  00724A  0A80               	xorlw	128
 20109  00724C  5910               	subwfb	(??_HigherAlarm+4)& (0+255),w,b
 20110  00724E  A0D8               	btfss	status,0,c
 20111  007250  D7CB               	goto	u19150
 20112  007252                     l19813:
 20113                           
 20114                           ; BSR set to: 1
 20115                           ;alarm.c: 366:     }
 20116  007252  4B13               	infsnz	HigherAlarm@i& (0+255),f,b
 20117  007254  2B14               	incf	(HigherAlarm@i+1)& (0+255),f,b
 20118                           
 20119                           ; BSR set to: 1
 20120  007256  5114               	movf	(HigherAlarm@i+1)& (0+255),w,b
 20121  007258  E104               	bnz	u19170
 20122  00725A  0E13               	movlw	19
 20123  00725C  5D13               	subwf	HigherAlarm@i& (0+255),w,b
 20124  00725E  A0D8               	btfss	status,0,c
 20125  007260  D7B4               	goto	l19803
 20126  007262                     u19170:
 20127                           
 20128                           ; BSR set to: 1
 20129                           ;alarm.c: 367:     return max;
 20130  007262  0060  F444  F10A   	movff	HigherAlarm@max,?_HigherAlarm
 20131  007268  0060  F448  F10B   	movff	HigherAlarm@max+1,?_HigherAlarm+1
 20132                           
 20133                           ; BSR set to: 1
 20134  00726E  0012               	return		;funcret
 20135  007270                     __end_of_HigherAlarm:
 20136                           	opt callstack 0
 20137                           
 20138 ;; *************** function _AlarmDisplay *****************
 20139 ;; Defined at:
 20140 ;;		line 110 in file "display.c"
 20141 ;; Parameters:    Size  Location     Type
 20142 ;;  type            2  183[BANK1 ] int 
 20143 ;;  alarm           2  185[BANK1 ] PTR unsigned char 
 20144 ;;		 -> alarmData(399), 
 20145 ;; Auto vars:     Size  Location     Type
 20146 ;;  t               1  187[BANK1 ] unsigned char 
 20147 ;; Return value:  Size  Location     Type
 20148 ;;                  1    wreg      void 
 20149 ;; Registers used:
 20150 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20151 ;; Tracked objects:
 20152 ;;		On entry : 3F/1
 20153 ;;		On exit  : 3F/1
 20154 ;;		Unchanged: 0/0
 20155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20156 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20157 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20159 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20160 ;;Total ram usage:        9 bytes
 20161 ;; Hardware stack levels used:    1
 20162 ;; Hardware stack levels required when called:   26
 20163 ;; This function calls:
 20164 ;;		_ValueDisplay
 20165 ;;		___awmod
 20166 ;;		_sprintf
 20167 ;; This function is called by:
 20168 ;;		_AlarmUpdateLCD
 20169 ;; This function uses a non-reentrant model
 20170 ;;
 20171                           
 20172                           	psect	text160
 20173  007A3E                     __ptext160:
 20174                           	opt callstack 0
 20175  007A3E                     _AlarmDisplay:
 20176                           	opt callstack 2
 20177                           
 20178                           ; BSR set to: 1
 20179                           ;display.c: 111:     static int cnt = 0;;display.c: 112:     char t = (type==4) ? 'H' : 
      +                          ((type==2) ? 'M' : 'L');
 20180                           
 20181                           ; BSR set to: 1
 20182                           ;incstack = 0
 20183  007A3E  0E04               	movlw	4
 20184  007A40  19B7               	xorwf	AlarmDisplay@type& (0+255),w,b
 20185  007A42  11B8               	iorwf	(AlarmDisplay@type+1)& (0+255),w,b
 20186  007A44  B4D8               	btfsc	status,2,c
 20187  007A46  D014               	goto	l19393
 20188                           
 20189                           ; BSR set to: 1
 20190  007A48  0E02               	movlw	2
 20191  007A4A  19B7               	xorwf	AlarmDisplay@type& (0+255),w,b
 20192  007A4C  11B8               	iorwf	(AlarmDisplay@type+1)& (0+255),w,b
 20193  007A4E  B4D8               	btfsc	status,2,c
 20194  007A50  D004               	goto	l19389
 20195                           
 20196                           ; BSR set to: 1
 20197  007A52  0E00               	movlw	0
 20198  007A54  6FBF               	movwf	(_AlarmDisplay$4016+1)& (0+255),b
 20199  007A56  0E4C               	movlw	76
 20200  007A58  D003               	goto	L2
 20201  007A5A                     l19389:
 20202                           
 20203                           ; BSR set to: 1
 20204  007A5A  0E00               	movlw	0
 20205  007A5C  6FBF               	movwf	(_AlarmDisplay$4016+1)& (0+255),b
 20206  007A5E  0E4D               	movlw	77
 20207  007A60                     L2:
 20208  007A60  6FBE               	movwf	_AlarmDisplay$4016& (0+255),b
 20209                           
 20210                           ; BSR set to: 1
 20211  007A62  0060  F6F8  F1BC   	movff	_AlarmDisplay$4016,_AlarmDisplay$4015
 20212  007A68  0060  F6FC  F1BD   	movff	_AlarmDisplay$4016+1,_AlarmDisplay$4015+1
 20213  007A6E  D004               	goto	l19395
 20214  007A70                     l19393:
 20215                           
 20216                           ; BSR set to: 1
 20217  007A70  0E00               	movlw	0
 20218  007A72  6FBD               	movwf	(_AlarmDisplay$4015+1)& (0+255),b
 20219  007A74  0E48               	movlw	72
 20220  007A76  6FBC               	movwf	_AlarmDisplay$4015& (0+255),b
 20221  007A78                     l19395:
 20222                           
 20223                           ; BSR set to: 1
 20224  007A78  0060  F6F0  F1BB   	movff	_AlarmDisplay$4015,AlarmDisplay@t
 20225                           
 20226                           ; BSR set to: 1
 20227                           ;display.c: 114:         sprintf(msg2, "%c %14s", t, alarm);
 20228  007A7E  0ED1               	movlw	low _msg2
 20229  007A80  6F71               	movwf	sprintf@s& (0+255),b
 20230  007A82  0E03               	movlw	high _msg2
 20231  007A84  6F72               	movwf	(sprintf@s+1)& (0+255),b
 20232  007A86  0EB2               	movlw	low STR_13
 20233  007A88  6F73               	movwf	sprintf@fmt& (0+255),b
 20234  007A8A  0EFF               	movlw	high STR_13
 20235  007A8C  6F74               	movwf	(sprintf@fmt+1)& (0+255),b
 20236  007A8E  0060  F6EC  F175   	movff	AlarmDisplay@t,?_sprintf+4
 20237  007A94  6B76               	clrf	(?_sprintf+5)& (0+255),b
 20238  007A96  0060  F6E4  F177   	movff	AlarmDisplay@alarm,?_sprintf+6
 20239  007A9C  0060  F6E8  F178   	movff	AlarmDisplay@alarm+1,?_sprintf+7
 20240  007AA2  EC0D  F046         	call	_sprintf	;wreg free
 20241                           
 20242                           ; BSR set to: 1
 20243                           ;display.c: 117:     ValueDisplay();
 20244  007AA6  EC3A  F011         	call	_ValueDisplay	;wreg free
 20245                           
 20246                           ;display.c: 118:     cnt++;
 20247  007AAA  0102               	movlb	2	; () banked
 20248  007AAC  4B86               	infsnz	AlarmDisplay@cnt& (0+255),f,b
 20249  007AAE  2B87               	incf	(AlarmDisplay@cnt+1)& (0+255),f,b
 20250                           
 20251                           ; BSR set to: 2
 20252                           ;display.c: 119:     cnt = cnt%10;
 20253  007AB0  0060  FA18  F104   	movff	AlarmDisplay@cnt,___awmod@dividend
 20254  007AB6  0060  FA1C  F105   	movff	AlarmDisplay@cnt+1,___awmod@dividend+1
 20255  007ABC  0E00               	movlw	0
 20256  007ABE  0101               	movlb	1	; () banked
 20257  007AC0  6F07               	movwf	(___awmod@divisor+1)& (0+255),b
 20258  007AC2  0E0A               	movlw	10
 20259  007AC4  6F06               	movwf	___awmod@divisor& (0+255),b
 20260  007AC6  EC7F  F041         	call	___awmod	;wreg free
 20261  007ACA  0060  F410  F286   	movff	?___awmod,AlarmDisplay@cnt
 20262  007AD0  0060  F414  F287   	movff	?___awmod+1,AlarmDisplay@cnt+1
 20263                           
 20264                           ; BSR set to: 1
 20265  007AD6  0012               	return		;funcret
 20266  007AD8                     __end_of_AlarmDisplay:
 20267                           	opt callstack 0
 20268                           
 20269 ;; *************** function _ValueDisplay *****************
 20270 ;; Defined at:
 20271 ;;		line 66 in file "display.c"
 20272 ;; Parameters:    Size  Location     Type
 20273 ;;		None
 20274 ;; Auto vars:     Size  Location     Type
 20275 ;;  ti              2  181[BANK1 ] short 
 20276 ;;  te              2  179[BANK1 ] short 
 20277 ;;  r               2  177[BANK1 ] short 
 20278 ;;  tde             2  172[BANK1 ] short 
 20279 ;;  tdi             2  170[BANK1 ] short 
 20280 ;;  spr             2  157[BANK1 ] short 
 20281 ;;  pmax            2  155[BANK1 ] short 
 20282 ;;  vol             2  153[BANK1 ] short 
 20283 ;;  pe              2  151[BANK1 ] short 
 20284 ;;  pi              2  149[BANK1 ] short 
 20285 ;;  tep             2    0        short 
 20286 ;;  tip             2    0        short 
 20287 ;;  bpm             2    0        short 
 20288 ;;  er              1  176[BANK1 ] char 
 20289 ;;  etde            1  175[BANK1 ] char 
 20290 ;;  etdi            1  174[BANK1 ] char 
 20291 ;;  dr              1  165[BANK1 ] char 
 20292 ;;  dtde            1  164[BANK1 ] char 
 20293 ;;  dtdi            1  163[BANK1 ] char 
 20294 ;;  ete             1  162[BANK1 ] char 
 20295 ;;  eti             1  161[BANK1 ] char 
 20296 ;;  dte             1    0        char 
 20297 ;;  dti             1    0        char 
 20298 ;; Return value:  Size  Location     Type
 20299 ;;                  1    wreg      void 
 20300 ;; Registers used:
 20301 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20302 ;; Tracked objects:
 20303 ;;		On entry : 3E/0
 20304 ;;		On exit  : 3D/1
 20305 ;;		Unchanged: 0/0
 20306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20308 ;;      Locals:         0       0      42       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20310 ;;      Totals:         0       0      42       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20311 ;;Total ram usage:       42 bytes
 20312 ;; Hardware stack levels used:    1
 20313 ;; Hardware stack levels required when called:   25
 20314 ;; This function calls:
 20315 ;;		_GetAlarmState
 20316 ;;		_GetBpm
 20317 ;;		_GetDisableAlarmSV1
 20318 ;;		_GetEp
 20319 ;;		_GetIp
 20320 ;;		_GetPmax
 20321 ;;		_GetSpr
 20322 ;;		_GetTargetEp
 20323 ;;		_GetTargetIp
 20324 ;;		_GetTde
 20325 ;;		_GetTdi
 20326 ;;		_GetTe
 20327 ;;		_GetTi
 20328 ;;		_GetVolume
 20329 ;;		___awdiv
 20330 ;;		___awmod
 20331 ;;		___wmul
 20332 ;;		_sprintf
 20333 ;; This function is called by:
 20334 ;;		_AlarmDisplay
 20335 ;;		_AlarmUpdateLCD
 20336 ;; This function uses a non-reentrant model
 20337 ;;
 20338                           
 20339                           	psect	text161
 20340  002274                     __ptext161:
 20341                           	opt callstack 0
 20342  002274                     _ValueDisplay:
 20343                           	opt callstack 3
 20344                           
 20345                           ;display.c: 67:     if (!enable) {
 20346                           
 20347                           ; BSR set to: 1
 20348                           ;incstack = 0
 20349  002274  0100               	movlb	0	; () banked
 20350  002276  51FE               	movf	_enable& (0+255),w,b
 20351  002278  A4D8               	btfss	status,2,c
 20352  00227A  D01F               	goto	l18959
 20353                           
 20354                           ; BSR set to: 0
 20355                           ;display.c: 68:         if (msg1[0]==0) sprintf(msg1, "OxyVitaEmergency");
 20356  00227C  0103               	movlb	3	; () banked
 20357  00227E  51E5               	movf	_msg1& (0+255),w,b
 20358  002280  A4D8               	btfss	status,2,c
 20359  002282  D00B               	goto	l18953
 20360                           
 20361                           ; BSR set to: 3
 20362  002284  0EE5               	movlw	low _msg1
 20363  002286  0101               	movlb	1	; () banked
 20364  002288  6F71               	movwf	sprintf@s& (0+255),b
 20365  00228A  0E03               	movlw	high _msg1
 20366  00228C  6F72               	movwf	(sprintf@s+1)& (0+255),b
 20367  00228E  0ECE               	movlw	low STR_8
 20368  002290  6F73               	movwf	sprintf@fmt& (0+255),b
 20369  002292  0EFE               	movlw	high STR_8
 20370  002294  6F74               	movwf	(sprintf@fmt+1)& (0+255),b
 20371  002296  EC0D  F046         	call	_sprintf	;wreg free
 20372  00229A                     l18953:
 20373                           
 20374                           ;display.c: 69:         if (msg2[0]==0) sprintf(msg2, "Ventilator v1.0 ");
 20375  00229A  0103               	movlb	3	; () banked
 20376  00229C  51D1               	movf	_msg2& (0+255),w,b
 20377  00229E  A4D8               	btfss	status,2,c
 20378  0022A0  0012               	return	
 20379                           
 20380                           ; BSR set to: 3
 20381  0022A2  0ED1               	movlw	low _msg2
 20382  0022A4  0101               	movlb	1	; () banked
 20383  0022A6  6F71               	movwf	sprintf@s& (0+255),b
 20384  0022A8  0E03               	movlw	high _msg2
 20385  0022AA  6F72               	movwf	(sprintf@s+1)& (0+255),b
 20386  0022AC  0EBD               	movlw	low STR_9
 20387  0022AE  6F73               	movwf	sprintf@fmt& (0+255),b
 20388  0022B0  0EFE               	movlw	high STR_9
 20389  0022B2  6F74               	movwf	(sprintf@fmt+1)& (0+255),b
 20390  0022B4  EC0D  F046         	call	_sprintf	;wreg free
 20391  0022B8  0012               	return	
 20392  0022BA                     l18959:
 20393                           
 20394                           ; BSR set to: 0
 20395                           ;display.c: 72:     static int cnt=0;;display.c: 74:     int16_t tdi = GetTdi();
 20396  0022BA  EC90  F051         	call	_GetTdi	;wreg free
 20397  0022BE  0060  F410  F1AA   	movff	?_GetTdi,ValueDisplay@tdi
 20398  0022C4  0060  F414  F1AB   	movff	?_GetTdi+1,ValueDisplay@tdi+1
 20399                           
 20400                           ;display.c: 75:     int16_t tde = GetTde();
 20401  0022CA  EC0A  F052         	call	_GetTde	;wreg free
 20402  0022CE  0060  F410  F1AC   	movff	?_GetTde,ValueDisplay@tde
 20403  0022D4  0060  F414  F1AD   	movff	?_GetTde+1,ValueDisplay@tde+1
 20404                           
 20405                           ;display.c: 76:     int16_t ti = GetTi();
 20406  0022DA  EC80  F050         	call	_GetTi	;wreg free
 20407  0022DE  0060  F410  F1B5   	movff	?_GetTi,ValueDisplay@ti
 20408  0022E4  0060  F414  F1B6   	movff	?_GetTi+1,ValueDisplay@ti+1
 20409                           
 20410                           ;display.c: 77:     int16_t te = GetTe();
 20411  0022EA  EC8A  F050         	call	_GetTe	;wreg free
 20412  0022EE  0060  F410  F1B3   	movff	?_GetTe,ValueDisplay@te
 20413  0022F4  0060  F414  F1B4   	movff	?_GetTe+1,ValueDisplay@te+1
 20414                           
 20415                           ;display.c: 78:     int8_t eti = ti/1000;
 20416  0022FA  0060  F6D4  F10A   	movff	ValueDisplay@ti,___awdiv@dividend
 20417  002300  0060  F6D8  F10B   	movff	ValueDisplay@ti+1,___awdiv@dividend+1
 20418  002306  0E03               	movlw	3
 20419  002308  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 20420  00230A  0EE8               	movlw	232
 20421  00230C  6F0C               	movwf	___awdiv@divisor& (0+255),b
 20422  00230E  ECB9  F03F         	call	___awdiv	;wreg free
 20423  002312  510A               	movf	?___awdiv& (0+255),w,b
 20424  002314  6FA1               	movwf	ValueDisplay@eti& (0+255),b
 20425                           
 20426                           ; BSR set to: 1
 20427  002316  51A1               	movf	ValueDisplay@eti& (0+255),w,b
 20428  002318  6F04               	movwf	___wmul@multiplier& (0+255),b
 20429  00231A  6B05               	clrf	(___wmul@multiplier+1)& (0+255),b
 20430  00231C  BF04               	btfsc	___wmul@multiplier& (0+255),7,b
 20431  00231E  0705               	decf	(___wmul@multiplier+1)& (0+255),f,b
 20432  002320  0EFC               	movlw	252
 20433  002322  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20434  002324  0E18               	movlw	24
 20435  002326  6F06               	movwf	___wmul@multiplicand& (0+255),b
 20436  002328  EC7C  F04C         	call	___wmul	;wreg free
 20437  00232C  51B5               	movf	ValueDisplay@ti& (0+255),w,b
 20438  00232E  2504               	addwf	?___wmul& (0+255),w,b
 20439  002330  6F0A               	movwf	___awdiv@dividend& (0+255),b
 20440  002332  51B6               	movf	(ValueDisplay@ti+1)& (0+255),w,b
 20441  002334  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 20442  002336  6F0B               	movwf	(___awdiv@dividend+1)& (0+255),b
 20443  002338  0E00               	movlw	0
 20444  00233A  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 20445  00233C  0E0A               	movlw	10
 20446  00233E  6F0C               	movwf	___awdiv@divisor& (0+255),b
 20447  002340  ECB9  F03F         	call	___awdiv	;wreg free
 20448                           
 20449                           ; BSR set to: 1
 20450                           ;display.c: 80:     int8_t ete = te/1000;
 20451  002344  0060  F6CC  F10A   	movff	ValueDisplay@te,___awdiv@dividend
 20452  00234A  0060  F6D0  F10B   	movff	ValueDisplay@te+1,___awdiv@dividend+1
 20453  002350  0E03               	movlw	3
 20454  002352  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 20455  002354  0EE8               	movlw	232
 20456  002356  6F0C               	movwf	___awdiv@divisor& (0+255),b
 20457  002358  ECB9  F03F         	call	___awdiv	;wreg free
 20458  00235C  510A               	movf	?___awdiv& (0+255),w,b
 20459  00235E  6FA2               	movwf	ValueDisplay@ete& (0+255),b
 20460  002360  51A2               	movf	ValueDisplay@ete& (0+255),w,b
 20461  002362  6F04               	movwf	___wmul@multiplier& (0+255),b
 20462  002364  6B05               	clrf	(___wmul@multiplier+1)& (0+255),b
 20463  002366  BF04               	btfsc	___wmul@multiplier& (0+255),7,b
 20464  002368  0705               	decf	(___wmul@multiplier+1)& (0+255),f,b
 20465  00236A  0EFC               	movlw	252
 20466  00236C  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20467  00236E  0E18               	movlw	24
 20468  002370  6F06               	movwf	___wmul@multiplicand& (0+255),b
 20469  002372  EC7C  F04C         	call	___wmul	;wreg free
 20470  002376  51B3               	movf	ValueDisplay@te& (0+255),w,b
 20471  002378  2504               	addwf	?___wmul& (0+255),w,b
 20472  00237A  6F0A               	movwf	___awdiv@dividend& (0+255),b
 20473  00237C  51B4               	movf	(ValueDisplay@te+1)& (0+255),w,b
 20474  00237E  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 20475  002380  6F0B               	movwf	(___awdiv@dividend+1)& (0+255),b
 20476  002382  0E00               	movlw	0
 20477  002384  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 20478  002386  0E0A               	movlw	10
 20479  002388  6F0C               	movwf	___awdiv@divisor& (0+255),b
 20480  00238A  ECB9  F03F         	call	___awdiv	;wreg free
 20481                           
 20482                           ; BSR set to: 1
 20483  00238E  EC9E  F051         	call	_GetBpm	;wreg free
 20484                           
 20485                           ; BSR set to: 1
 20486                           ;display.c: 83:     int16_t pi = GetIp();
 20487  002392  ECD9  F027         	call	_GetIp	;wreg free
 20488  002396  0060  F448  F195   	movff	?_GetIp,ValueDisplay@pi
 20489  00239C  0060  F44C  F196   	movff	?_GetIp+1,ValueDisplay@pi+1
 20490                           
 20491                           ; BSR set to: 1
 20492                           ;display.c: 84:     int16_t pe = GetEp();
 20493  0023A2  EC93  F04C         	call	_GetEp	;wreg free
 20494  0023A6  0060  F448  F197   	movff	?_GetEp,ValueDisplay@pe
 20495  0023AC  0060  F44C  F198   	movff	?_GetEp+1,ValueDisplay@pe+1
 20496                           
 20497                           ; BSR set to: 1
 20498                           ;display.c: 85:     int8_t etdi = tdi/1000;
 20499  0023B2  0060  F6A8  F10A   	movff	ValueDisplay@tdi,___awdiv@dividend
 20500  0023B8  0060  F6AC  F10B   	movff	ValueDisplay@tdi+1,___awdiv@dividend+1
 20501  0023BE  0E03               	movlw	3
 20502  0023C0  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 20503  0023C2  0EE8               	movlw	232
 20504  0023C4  6F0C               	movwf	___awdiv@divisor& (0+255),b
 20505  0023C6  ECB9  F03F         	call	___awdiv	;wreg free
 20506  0023CA  510A               	movf	?___awdiv& (0+255),w,b
 20507  0023CC  6FAE               	movwf	ValueDisplay@etdi& (0+255),b
 20508                           
 20509                           ; BSR set to: 1
 20510                           ;display.c: 86:     int8_t dtdi = (tdi-((int16_t) etdi)*1000)/10;
 20511  0023CE  51AE               	movf	ValueDisplay@etdi& (0+255),w,b
 20512  0023D0  6F04               	movwf	___wmul@multiplier& (0+255),b
 20513  0023D2  6B05               	clrf	(___wmul@multiplier+1)& (0+255),b
 20514  0023D4  BF04               	btfsc	___wmul@multiplier& (0+255),7,b
 20515  0023D6  0705               	decf	(___wmul@multiplier+1)& (0+255),f,b
 20516  0023D8  0EFC               	movlw	252
 20517  0023DA  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20518  0023DC  0E18               	movlw	24
 20519  0023DE  6F06               	movwf	___wmul@multiplicand& (0+255),b
 20520  0023E0  EC7C  F04C         	call	___wmul	;wreg free
 20521  0023E4  51AA               	movf	ValueDisplay@tdi& (0+255),w,b
 20522  0023E6  2504               	addwf	?___wmul& (0+255),w,b
 20523  0023E8  6F0A               	movwf	___awdiv@dividend& (0+255),b
 20524  0023EA  51AB               	movf	(ValueDisplay@tdi+1)& (0+255),w,b
 20525  0023EC  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 20526  0023EE  6F0B               	movwf	(___awdiv@dividend+1)& (0+255),b
 20527  0023F0  0E00               	movlw	0
 20528  0023F2  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 20529  0023F4  0E0A               	movlw	10
 20530  0023F6  6F0C               	movwf	___awdiv@divisor& (0+255),b
 20531  0023F8  ECB9  F03F         	call	___awdiv	;wreg free
 20532  0023FC  510A               	movf	?___awdiv& (0+255),w,b
 20533  0023FE  6FA3               	movwf	ValueDisplay@dtdi& (0+255),b
 20534                           
 20535                           ; BSR set to: 1
 20536                           ;display.c: 87:     int8_t etde = tde/1000;
 20537  002400  0060  F6B0  F10A   	movff	ValueDisplay@tde,___awdiv@dividend
 20538  002406  0060  F6B4  F10B   	movff	ValueDisplay@tde+1,___awdiv@dividend+1
 20539  00240C  0E03               	movlw	3
 20540  00240E  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 20541  002410  0EE8               	movlw	232
 20542  002412  6F0C               	movwf	___awdiv@divisor& (0+255),b
 20543  002414  ECB9  F03F         	call	___awdiv	;wreg free
 20544  002418  510A               	movf	?___awdiv& (0+255),w,b
 20545  00241A  6FAF               	movwf	ValueDisplay@etde& (0+255),b
 20546                           
 20547                           ; BSR set to: 1
 20548                           ;display.c: 88:     int8_t dtde = (tde-((int16_t) etde)*1000)/10;
 20549  00241C  51AF               	movf	ValueDisplay@etde& (0+255),w,b
 20550  00241E  6F04               	movwf	___wmul@multiplier& (0+255),b
 20551  002420  6B05               	clrf	(___wmul@multiplier+1)& (0+255),b
 20552  002422  BF04               	btfsc	___wmul@multiplier& (0+255),7,b
 20553  002424  0705               	decf	(___wmul@multiplier+1)& (0+255),f,b
 20554  002426  0EFC               	movlw	252
 20555  002428  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20556  00242A  0E18               	movlw	24
 20557  00242C  6F06               	movwf	___wmul@multiplicand& (0+255),b
 20558  00242E  EC7C  F04C         	call	___wmul	;wreg free
 20559  002432  51AC               	movf	ValueDisplay@tde& (0+255),w,b
 20560  002434  2504               	addwf	?___wmul& (0+255),w,b
 20561  002436  6F0A               	movwf	___awdiv@dividend& (0+255),b
 20562  002438  51AD               	movf	(ValueDisplay@tde+1)& (0+255),w,b
 20563  00243A  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 20564  00243C  6F0B               	movwf	(___awdiv@dividend+1)& (0+255),b
 20565  00243E  0E00               	movlw	0
 20566  002440  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 20567  002442  0E0A               	movlw	10
 20568  002444  6F0C               	movwf	___awdiv@divisor& (0+255),b
 20569  002446  ECB9  F03F         	call	___awdiv	;wreg free
 20570  00244A  510A               	movf	?___awdiv& (0+255),w,b
 20571  00244C  6FA4               	movwf	ValueDisplay@dtde& (0+255),b
 20572                           
 20573                           ; BSR set to: 1
 20574                           ;display.c: 89:     int16_t r;;display.c: 90:     if (ti!=0) r = (te)/(ti/10);
 20575  00244E  51B5               	movf	ValueDisplay@ti& (0+255),w,b
 20576  002450  11B6               	iorwf	(ValueDisplay@ti+1)& (0+255),w,b
 20577  002452  B4D8               	btfsc	status,2,c
 20578  002454  D027               	goto	l18983
 20579                           
 20580                           ; BSR set to: 1
 20581  002456  0E00               	movlw	0
 20582  002458  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 20583  00245A  0E0A               	movlw	10
 20584  00245C  6F0C               	movwf	___awdiv@divisor& (0+255),b
 20585  00245E  0060  F6D4  F10A   	movff	ValueDisplay@ti,___awdiv@dividend
 20586  002464  0060  F6D8  F10B   	movff	ValueDisplay@ti+1,___awdiv@dividend+1
 20587  00246A  ECB9  F03F         	call	___awdiv	;wreg free
 20588  00246E  0060  F428  F19F   	movff	?___awdiv,_ValueDisplay$6530
 20589  002474  0060  F42C  F1A0   	movff	?___awdiv+1,_ValueDisplay$6530+1
 20590  00247A  0060  F6CC  F10A   	movff	ValueDisplay@te,___awdiv@dividend
 20591  002480  0060  F6D0  F10B   	movff	ValueDisplay@te+1,___awdiv@dividend+1
 20592  002486  0060  F67C  F10C   	movff	_ValueDisplay$6530,___awdiv@divisor
 20593  00248C  0060  F680  F10D   	movff	_ValueDisplay$6530+1,___awdiv@divisor+1
 20594  002492  ECB9  F03F         	call	___awdiv	;wreg free
 20595  002496  0060  F428  F1B1   	movff	?___awdiv,ValueDisplay@r
 20596  00249C  0060  F42C  F1B2   	movff	?___awdiv+1,ValueDisplay@r+1
 20597  0024A2  D004               	goto	l18985
 20598  0024A4                     l18983:
 20599                           
 20600                           ; BSR set to: 1
 20601  0024A4  0E00               	movlw	0
 20602  0024A6  6FB2               	movwf	(ValueDisplay@r+1)& (0+255),b
 20603  0024A8  0E00               	movlw	0
 20604  0024AA  6FB1               	movwf	ValueDisplay@r& (0+255),b
 20605  0024AC                     l18985:
 20606                           
 20607                           ; BSR set to: 1
 20608                           ;display.c: 92:     int8_t er = r/10;
 20609  0024AC  0060  F6C4  F10A   	movff	ValueDisplay@r,___awdiv@dividend
 20610  0024B2  0060  F6C8  F10B   	movff	ValueDisplay@r+1,___awdiv@dividend+1
 20611  0024B8  0E00               	movlw	0
 20612  0024BA  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 20613  0024BC  0E0A               	movlw	10
 20614  0024BE  6F0C               	movwf	___awdiv@divisor& (0+255),b
 20615  0024C0  ECB9  F03F         	call	___awdiv	;wreg free
 20616  0024C4  510A               	movf	?___awdiv& (0+255),w,b
 20617  0024C6  6FB0               	movwf	ValueDisplay@er& (0+255),b
 20618                           
 20619                           ; BSR set to: 1
 20620                           ;display.c: 93:     int8_t dr = (r-((int16_t) er)*10);
 20621  0024C8  51B0               	movf	ValueDisplay@er& (0+255),w,b
 20622  0024CA  0DF6               	mullw	-10
 20623  0024CC  50F3               	movf	243,w,c
 20624  0024CE  25B1               	addwf	ValueDisplay@r& (0+255),w,b
 20625  0024D0  6FA5               	movwf	ValueDisplay@dr& (0+255),b
 20626                           
 20627                           ; BSR set to: 1
 20628  0024D2  EC82  F04D         	call	_GetTargetIp	;wreg free
 20629                           
 20630                           ; BSR set to: 1
 20631  0024D6  EC95  F04D         	call	_GetTargetEp	;wreg free
 20632                           
 20633                           ; BSR set to: 1
 20634                           ;display.c: 96:     int16_t vol = GetVolume();
 20635  0024DA  EC89  F051         	call	_GetVolume	;wreg free
 20636  0024DE  0060  F410  F199   	movff	?_GetVolume,ValueDisplay@vol
 20637  0024E4  0060  F414  F19A   	movff	?_GetVolume+1,ValueDisplay@vol+1
 20638                           
 20639                           ; BSR set to: 1
 20640                           ;display.c: 97:     int16_t pmax = GetPmax();
 20641  0024EA  ECA8  F04D         	call	_GetPmax	;wreg free
 20642  0024EE  0060  F448  F19B   	movff	?_GetPmax,ValueDisplay@pmax
 20643  0024F4  0060  F44C  F19C   	movff	?_GetPmax+1,ValueDisplay@pmax+1
 20644                           
 20645                           ; BSR set to: 1
 20646                           ;display.c: 98:     int16_t spr = GetSpr();
 20647  0024FA  EC97  F051         	call	_GetSpr	;wreg free
 20648  0024FE  0060  F410  F19D   	movff	?_GetSpr,ValueDisplay@spr
 20649  002504  0060  F414  F19E   	movff	?_GetSpr+1,ValueDisplay@spr+1
 20650                           
 20651                           ; BSR set to: 1
 20652                           ;display.c: 102:     sprintf(msg1, "%2d%% %d.%02d %d.%02d%c%s", spr, etde,dtde, etdi, dt
      +                          di, GetDisableAlarmSV1() ? 'd':' ', calibrate? "Ca" : GetAlarmState() );
 20653  00250A  0100               	movlb	0	; () banked
 20654  00250C  51FF               	movf	_calibrate& (0+255),w,b
 20655  00250E  A4D8               	btfss	status,2,c
 20656  002510  D009               	goto	l19003
 20657                           
 20658                           ; BSR set to: 0
 20659  002512  ECDB  F047         	call	_GetAlarmState	;wreg free
 20660  002516  0060  F420  F1A6   	movff	?_GetAlarmState,_ValueDisplay$4007
 20661  00251C  0060  F424  F1A7   	movff	?_GetAlarmState+1,_ValueDisplay$4007+1
 20662  002522  D005               	goto	l19005
 20663  002524                     l19003:
 20664                           
 20665                           ; BSR set to: 0
 20666  002524  0EF9               	movlw	low STR_11
 20667  002526  0101               	movlb	1	; () banked
 20668  002528  6FA6               	movwf	_ValueDisplay$4007& (0+255),b
 20669  00252A  0EFF               	movlw	high STR_11
 20670  00252C  6FA7               	movwf	(_ValueDisplay$4007+1)& (0+255),b
 20671  00252E                     l19005:
 20672                           
 20673                           ; BSR set to: 1
 20674  00252E  EC08  F053         	call	_GetDisableAlarmSV1	;wreg free
 20675  002532  0900               	iorlw	0
 20676  002534  A4D8               	btfss	status,2,c
 20677  002536  D005               	goto	l19009
 20678                           
 20679                           ; BSR set to: 0
 20680  002538  0E00               	movlw	0
 20681  00253A  0101               	movlb	1	; () banked
 20682  00253C  6FA9               	movwf	(_ValueDisplay$4008+1)& (0+255),b
 20683  00253E  0E20               	movlw	32
 20684  002540  D004               	goto	L3
 20685  002542                     l19009:
 20686                           
 20687                           ; BSR set to: 0
 20688  002542  0E00               	movlw	0
 20689  002544  0101               	movlb	1	; () banked
 20690  002546  6FA9               	movwf	(_ValueDisplay$4008+1)& (0+255),b
 20691  002548  0E64               	movlw	100
 20692  00254A                     L3:
 20693  00254A  6FA8               	movwf	_ValueDisplay$4008& (0+255),b
 20694                           
 20695                           ; BSR set to: 1
 20696  00254C  0EE5               	movlw	low _msg1
 20697  00254E  6F71               	movwf	sprintf@s& (0+255),b
 20698  002550  0E03               	movlw	high _msg1
 20699  002552  6F72               	movwf	(sprintf@s+1)& (0+255),b
 20700  002554  0E67               	movlw	low STR_10
 20701  002556  6F73               	movwf	sprintf@fmt& (0+255),b
 20702  002558  0EFE               	movlw	high STR_10
 20703  00255A  6F74               	movwf	(sprintf@fmt+1)& (0+255),b
 20704  00255C  0060  F674  F175   	movff	ValueDisplay@spr,?_sprintf+4
 20705  002562  0060  F678  F176   	movff	ValueDisplay@spr+1,?_sprintf+5
 20706  002568  51AF               	movf	ValueDisplay@etde& (0+255),w,b
 20707  00256A  6F77               	movwf	(?_sprintf+6)& (0+255),b
 20708  00256C  6B78               	clrf	(?_sprintf+7)& (0+255),b
 20709  00256E  BF77               	btfsc	(?_sprintf+6)& (0+255),7,b
 20710  002570  0778               	decf	(?_sprintf+7)& (0+255),f,b
 20711  002572  51A4               	movf	ValueDisplay@dtde& (0+255),w,b
 20712  002574  6F79               	movwf	(?_sprintf+8)& (0+255),b
 20713  002576  6B7A               	clrf	(?_sprintf+9)& (0+255),b
 20714  002578  BF79               	btfsc	(?_sprintf+8)& (0+255),7,b
 20715  00257A  077A               	decf	(?_sprintf+9)& (0+255),f,b
 20716  00257C  51AE               	movf	ValueDisplay@etdi& (0+255),w,b
 20717  00257E  6F7B               	movwf	(?_sprintf+10)& (0+255),b
 20718  002580  6B7C               	clrf	(?_sprintf+11)& (0+255),b
 20719  002582  BF7B               	btfsc	(?_sprintf+10)& (0+255),7,b
 20720  002584  077C               	decf	(?_sprintf+11)& (0+255),f,b
 20721  002586  51A3               	movf	ValueDisplay@dtdi& (0+255),w,b
 20722  002588  6F7D               	movwf	(?_sprintf+12)& (0+255),b
 20723  00258A  6B7E               	clrf	(?_sprintf+13)& (0+255),b
 20724  00258C  BF7D               	btfsc	(?_sprintf+12)& (0+255),7,b
 20725  00258E  077E               	decf	(?_sprintf+13)& (0+255),f,b
 20726  002590  0060  F6A0  F17F   	movff	_ValueDisplay$4008,?_sprintf+14
 20727  002596  0060  F6A4  F180   	movff	_ValueDisplay$4008+1,?_sprintf+15
 20728  00259C  0060  F698  F181   	movff	_ValueDisplay$4007,?_sprintf+16
 20729  0025A2  0060  F69C  F182   	movff	_ValueDisplay$4007+1,?_sprintf+17
 20730  0025A8  EC0D  F046         	call	_sprintf	;wreg free
 20731                           
 20732                           ; BSR set to: 1
 20733                           ;display.c: 104:     sprintf(msg3, "%1d%1d %2d %2d %2d %4d", er, dr, pe, pi, pmax, vol);
 20734  0025AC  0EBD               	movlw	low _msg3
 20735  0025AE  6F71               	movwf	sprintf@s& (0+255),b
 20736  0025B0  0E03               	movlw	high _msg3
 20737  0025B2  6F72               	movwf	(sprintf@s+1)& (0+255),b
 20738  0025B4  0E81               	movlw	low STR_12
 20739  0025B6  6F73               	movwf	sprintf@fmt& (0+255),b
 20740  0025B8  0EFE               	movlw	high STR_12
 20741  0025BA  6F74               	movwf	(sprintf@fmt+1)& (0+255),b
 20742  0025BC  51B0               	movf	ValueDisplay@er& (0+255),w,b
 20743  0025BE  6F75               	movwf	(?_sprintf+4)& (0+255),b
 20744  0025C0  6B76               	clrf	(?_sprintf+5)& (0+255),b
 20745  0025C2  BF75               	btfsc	(?_sprintf+4)& (0+255),7,b
 20746  0025C4  0776               	decf	(?_sprintf+5)& (0+255),f,b
 20747  0025C6  51A5               	movf	ValueDisplay@dr& (0+255),w,b
 20748  0025C8  6F77               	movwf	(?_sprintf+6)& (0+255),b
 20749  0025CA  6B78               	clrf	(?_sprintf+7)& (0+255),b
 20750  0025CC  BF77               	btfsc	(?_sprintf+6)& (0+255),7,b
 20751  0025CE  0778               	decf	(?_sprintf+7)& (0+255),f,b
 20752  0025D0  0060  F65C  F179   	movff	ValueDisplay@pe,?_sprintf+8
 20753  0025D6  0060  F660  F17A   	movff	ValueDisplay@pe+1,?_sprintf+9
 20754  0025DC  0060  F654  F17B   	movff	ValueDisplay@pi,?_sprintf+10
 20755  0025E2  0060  F658  F17C   	movff	ValueDisplay@pi+1,?_sprintf+11
 20756  0025E8  0060  F66C  F17D   	movff	ValueDisplay@pmax,?_sprintf+12
 20757  0025EE  0060  F670  F17E   	movff	ValueDisplay@pmax+1,?_sprintf+13
 20758  0025F4  0060  F664  F17F   	movff	ValueDisplay@vol,?_sprintf+14
 20759  0025FA  0060  F668  F180   	movff	ValueDisplay@vol+1,?_sprintf+15
 20760  002600  EC0D  F046         	call	_sprintf	;wreg free
 20761                           
 20762                           ; BSR set to: 1
 20763                           ;display.c: 106:     cnt++;
 20764  002604  0102               	movlb	2	; () banked
 20765  002606  4B88               	infsnz	ValueDisplay@cnt& (0+255),f,b
 20766  002608  2B89               	incf	(ValueDisplay@cnt+1)& (0+255),f,b
 20767                           
 20768                           ; BSR set to: 2
 20769                           ;display.c: 107:     cnt=cnt%10;
 20770  00260A  0060  FA20  F104   	movff	ValueDisplay@cnt,___awmod@dividend
 20771  002610  0060  FA24  F105   	movff	ValueDisplay@cnt+1,___awmod@dividend+1
 20772  002616  0E00               	movlw	0
 20773  002618  0101               	movlb	1	; () banked
 20774  00261A  6F07               	movwf	(___awmod@divisor+1)& (0+255),b
 20775  00261C  0E0A               	movlw	10
 20776  00261E  6F06               	movwf	___awmod@divisor& (0+255),b
 20777  002620  EC7F  F041         	call	___awmod	;wreg free
 20778  002624  0060  F410  F288   	movff	?___awmod,ValueDisplay@cnt
 20779  00262A  0060  F414  F289   	movff	?___awmod+1,ValueDisplay@cnt+1
 20780  002630  0012               	return		;funcret
 20781  002632                     __end_of_ValueDisplay:
 20782                           	opt callstack 0
 20783                           
 20784 ;; *************** function _sprintf *****************
 20785 ;; Defined at:
 20786 ;;		line 9 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
 20787 ;; Parameters:    Size  Location     Type
 20788 ;;  s               2  113[BANK1 ] PTR unsigned char 
 20789 ;;		 -> msg3(20), msg2(20), msg1(20), msg4(20), 
 20790 ;;  fmt             2  115[BANK1 ] PTR const unsigned char 
 20791 ;;		 -> STR_13(8), STR_12(23), STR_10(26), STR_9(17), 
 20792 ;;		 -> STR_8(17), STR_7(15), 
 20793 ;; Auto vars:     Size  Location     Type
 20794 ;;  f               6  135[BANK1 ] struct _IO_FILE
 20795 ;;  ap              2  133[BANK1 ] PTR void [1]
 20796 ;;		 -> ?_printf(2), ?_sprintf(2), 
 20797 ;;  ret             2    0        int 
 20798 ;; Return value:  Size  Location     Type
 20799 ;;                  2  113[BANK1 ] int 
 20800 ;; Registers used:
 20801 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20802 ;; Tracked objects:
 20803 ;;		On entry : 3F/1
 20804 ;;		On exit  : 3F/1
 20805 ;;		Unchanged: 0/0
 20806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20807 ;;      Params:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20808 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20810 ;;      Totals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20811 ;;Total ram usage:       28 bytes
 20812 ;; Hardware stack levels used:    1
 20813 ;; Hardware stack levels required when called:   24
 20814 ;; This function calls:
 20815 ;;		_vfprintf
 20816 ;; This function is called by:
 20817 ;;		_ValueDisplay
 20818 ;;		_AlarmDisplay
 20819 ;; This function uses a non-reentrant model
 20820 ;;
 20821                           
 20822                           	psect	text162
 20823  008C1A                     __ptext162:
 20824                           	opt callstack 0
 20825  008C1A                     _sprintf:
 20826                           	opt callstack 3
 20827                           
 20828                           ; BSR set to: 1
 20829                           
 20830                           ;incstack = 0
 20831  008C1A  0E75               	movlw	low (?_sprintf+4)
 20832  008C1C  6F85               	movwf	sprintf@ap& (0+255),b
 20833  008C1E  0E01               	movlw	high (?_sprintf+4)
 20834  008C20  6F86               	movwf	(sprintf@ap+1)& (0+255),b
 20835  008C22  0060  F5C4  F187   	movff	sprintf@s,sprintf@f
 20836  008C28  0060  F5C8  F188   	movff	sprintf@s+1,sprintf@f+1
 20837                           
 20838                           ; BSR set to: 1
 20839  008C2E  0E00               	movlw	0
 20840  008C30  6F8A               	movwf	(sprintf@f+3)& (0+255),b
 20841  008C32  0E00               	movlw	0
 20842  008C34  6F89               	movwf	(sprintf@f+2)& (0+255),b
 20843                           
 20844                           ; BSR set to: 1
 20845  008C36  0E00               	movlw	0
 20846  008C38  6F8C               	movwf	(sprintf@f+5)& (0+255),b
 20847  008C3A  0E00               	movlw	0
 20848  008C3C  6F8B               	movwf	(sprintf@f+4)& (0+255),b
 20849                           
 20850                           ; BSR set to: 1
 20851  008C3E  0E87               	movlw	low sprintf@f
 20852  008C40  6F69               	movwf	vfprintf@fp& (0+255),b
 20853  008C42  0E01               	movlw	high sprintf@f
 20854  008C44  6F6A               	movwf	(vfprintf@fp+1)& (0+255),b
 20855  008C46  0060  F5CC  F16B   	movff	sprintf@fmt,vfprintf@fmt
 20856  008C4C  0060  F5D0  F16C   	movff	sprintf@fmt+1,vfprintf@fmt+1
 20857  008C52  0E85               	movlw	low sprintf@ap
 20858  008C54  6F6D               	movwf	vfprintf@ap& (0+255),b
 20859  008C56  0E01               	movlw	high sprintf@ap
 20860  008C58  6F6E               	movwf	(vfprintf@ap+1)& (0+255),b
 20861  008C5A  EC2C  F042         	call	_vfprintf	;wreg free
 20862                           
 20863                           ; BSR set to: 2
 20864  008C5E  0101               	movlb	1	; () banked
 20865  008C60  5189               	movf	(sprintf@f+2)& (0+255),w,b
 20866  008C62  2571               	addwf	sprintf@s& (0+255),w,b
 20867  008C64  6ED9               	movwf	fsr2l,c
 20868  008C66  518A               	movf	(sprintf@f+3)& (0+255),w,b
 20869  008C68  2172               	addwfc	(sprintf@s+1)& (0+255),w,b
 20870  008C6A  6EDA               	movwf	fsr2h,c
 20871  008C6C  0E00               	movlw	0
 20872  008C6E  6EDF               	movwf	indf2,c
 20873                           
 20874                           ; BSR set to: 1
 20875  008C70  0012               	return		;funcret
 20876  008C72                     __end_of_sprintf:
 20877                           	opt callstack 0
 20878                           
 20879 ;; *************** function _vfprintf *****************
 20880 ;; Defined at:
 20881 ;;		line 1368 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20882 ;; Parameters:    Size  Location     Type
 20883 ;;  fp              2  105[BANK1 ] PTR struct _IO_FILE
 20884 ;;		 -> sprintf@f(6), NULL(0), 
 20885 ;;  fmt             2  107[BANK1 ] PTR const unsigned char 
 20886 ;;		 -> STR_55(4), STR_54(4), STR_53(15), STR_52(16), 
 20887 ;;		 -> STR_51(32), STR_50(32), STR_49(13), STR_48(12), 
 20888 ;;		 -> STR_47(14), STR_46(4), STR_45(4), STR_44(2), 
 20889 ;;		 -> STR_43(10), STR_42(4), STR_41(55), STR_40(53), 
 20890 ;;		 -> STR_39(43), STR_38(54), STR_37(40), STR_36(36), 
 20891 ;;		 -> STR_35(41), STR_34(32), STR_33(65), STR_32(4), 
 20892 ;;		 -> STR_31(12), STR_30(4), STR_25(5), STR_24(3), 
 20893 ;;		 -> STR_23(7), STR_22(18), STR_21(15), STR_20(15), 
 20894 ;;		 -> STR_19(12), STR_18(5), STR_17(5), STR_16(5), 
 20895 ;;		 -> STR_15(5), STR_14(19), STR_13(8), STR_12(23), 
 20896 ;;		 -> STR_10(26), STR_9(17), STR_8(17), STR_7(15), 
 20897 ;;		 -> STR_4(45), STR_3(4), STR_2(15), STR_1(13), 
 20898 ;;  ap              2  109[BANK1 ] PTR PTR void 
 20899 ;;		 -> printf@ap(2), sprintf@ap(2), 
 20900 ;; Auto vars:     Size  Location     Type
 20901 ;;  cfmt            2  111[BANK1 ] PTR unsigned char 
 20902 ;;		 -> STR_55(4), STR_54(4), STR_53(15), STR_52(16), 
 20903 ;;		 -> STR_51(32), STR_50(32), STR_49(13), STR_48(12), 
 20904 ;;		 -> STR_47(14), STR_46(4), STR_45(4), STR_44(2), 
 20905 ;;		 -> STR_43(10), STR_42(4), STR_41(55), STR_40(53), 
 20906 ;;		 -> STR_39(43), STR_38(54), STR_37(40), STR_36(36), 
 20907 ;;		 -> STR_35(41), STR_34(32), STR_33(65), STR_32(4), 
 20908 ;;		 -> STR_31(12), STR_30(4), STR_25(5), STR_24(3), 
 20909 ;;		 -> STR_23(7), STR_22(18), STR_21(15), STR_20(15), 
 20910 ;;		 -> STR_19(12), STR_18(5), STR_17(5), STR_16(5), 
 20911 ;;		 -> STR_15(5), STR_14(19), STR_13(8), STR_12(23), 
 20912 ;;		 -> STR_10(26), STR_9(17), STR_8(17), STR_7(15), 
 20913 ;;		 -> STR_4(45), STR_3(4), STR_2(15), STR_1(13), 
 20914 ;; Return value:  Size  Location     Type
 20915 ;;                  2  105[BANK1 ] int 
 20916 ;; Registers used:
 20917 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20918 ;; Tracked objects:
 20919 ;;		On entry : 3F/1
 20920 ;;		On exit  : 3F/2
 20921 ;;		Unchanged: 0/0
 20922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20923 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20924 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20926 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20927 ;;Total ram usage:        8 bytes
 20928 ;; Hardware stack levels used:    1
 20929 ;; Hardware stack levels required when called:   23
 20930 ;; This function calls:
 20931 ;;		_vfpfcnvrt
 20932 ;; This function is called by:
 20933 ;;		_sprintf
 20934 ;;		_printf
 20935 ;; This function uses a non-reentrant model
 20936 ;;
 20937                           
 20938                           	psect	text163
 20939  008458                     __ptext163:
 20940                           	opt callstack 0
 20941  008458                     _vfprintf:
 20942                           	opt callstack 6
 20943                           
 20944                           ; BSR set to: 1
 20945                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.10/pic/sources/c99/
      +                          common/doprnt.c: 1369: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt
      +                          .c: 1371:     char *cfmt;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprn
      +                          t.c: 1373:     cfmt = (char *)fmt;
 20946                           
 20947                           ; BSR set to: 1
 20948                           ;incstack = 0
 20949  008458  0060  F5AC  F16F   	movff	vfprintf@fmt,vfprintf@cfmt
 20950  00845E  0060  F5B0  F170   	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 20951                           
 20952                           ; BSR set to: 1
 20953                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 20954  008464  0E00               	movlw	0
 20955  008466  0102               	movlb	2	; () banked
 20956  008468  6F2B               	movwf	(_nout+1)& (0+255),b
 20957  00846A  0E00               	movlw	0
 20958  00846C  6F2A               	movwf	_nout& (0+255),b
 20959                           
 20960                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
 20961  00846E  D01A               	goto	l18353
 20962  008470                     l18351:
 20963                           
 20964                           ; BSR set to: 2
 20965                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout +
      +                          = vfpfcnvrt(fp, &cfmt, ap);
 20966  008470  0060  F5A4  F148   	movff	vfprintf@fp,vfpfcnvrt@fp
 20967  008476  0060  F5A8  F149   	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 20968  00847C  0E6F               	movlw	low vfprintf@cfmt
 20969  00847E  0101               	movlb	1	; () banked
 20970  008480  6F4A               	movwf	vfpfcnvrt@fmt& (0+255),b
 20971  008482  0E01               	movlw	high vfprintf@cfmt
 20972  008484  6F4B               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
 20973  008486  0060  F5B4  F14C   	movff	vfprintf@ap,vfpfcnvrt@ap
 20974  00848C  0060  F5B8  F14D   	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 20975  008492  EC6B  F00C         	call	_vfpfcnvrt	;wreg free
 20976  008496  5148               	movf	?_vfpfcnvrt& (0+255),w,b
 20977  008498  0102               	movlb	2	; () banked
 20978  00849A  272A               	addwf	_nout& (0+255),f,b
 20979  00849C  0101               	movlb	1	; () banked
 20980  00849E  5149               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
 20981  0084A0  0102               	movlb	2	; () banked
 20982  0084A2  232B               	addwfc	(_nout+1)& (0+255),f,b
 20983  0084A4                     l18353:
 20984                           
 20985                           ; BSR set to: 2
 20986                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
 20987  0084A4  0060  F5BF  FFF6   	movff	vfprintf@cfmt,tblptrl
 20988  0084AA  0060  F5C3  FFF7   	movff	vfprintf@cfmt+1,tblptrh
 20989  0084B0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20990  0084B0  6AF8               	clrf	tblptru,c
 20991  0084B2                     	endif
 20992  0084B2                     	if	0	;tblptru may be non-zero
 20993  0084B2                     	endif
 20994  0084B2  0008               	tblrd		*
 20995  0084B4  50F5               	movf	tablat,w,c
 20996  0084B6  0900               	iorlw	0
 20997  0084B8  A4D8               	btfss	status,2,c
 20998  0084BA  D7DA               	goto	l18351
 20999                           
 21000                           ; BSR set to: 2
 21001                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nou
      +                          t;
 21002  0084BC  0060  F8A8  F169   	movff	_nout,?_vfprintf
 21003  0084C2  0060  F8AC  F16A   	movff	_nout+1,?_vfprintf+1
 21004                           
 21005                           ; BSR set to: 2
 21006  0084C8  0012               	return		;funcret
 21007  0084CA                     __end_of_vfprintf:
 21008                           	opt callstack 0
 21009                           
 21010 ;; *************** function _vfpfcnvrt *****************
 21011 ;; Defined at:
 21012 ;;		line 670 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 21013 ;; Parameters:    Size  Location     Type
 21014 ;;  fp              2   72[BANK1 ] PTR struct _IO_FILE
 21015 ;;		 -> sprintf@f(6), NULL(0), 
 21016 ;;  fmt             2   74[BANK1 ] PTR PTR unsigned char 
 21017 ;;		 -> vfprintf@cfmt(2), 
 21018 ;;  ap              2   76[BANK1 ] PTR PTR void 
 21019 ;;		 -> printf@ap(2), sprintf@ap(2), 
 21020 ;; Auto vars:     Size  Location     Type
 21021 ;;  llu             8   90[BANK1 ] unsigned long long 
 21022 ;;  ll              8   82[BANK1 ] long long 
 21023 ;;  f               4    0        long long 
 21024 ;;  vp              3    0        PTR void 
 21025 ;;  ct              3    0        unsigned char [3]
 21026 ;;  done            2  100[BANK1 ] int 
 21027 ;;  cp              2   98[BANK1 ] PTR unsigned char 
 21028 ;;		 -> ?_printf(2), ?_sprintf(2), adcVOffset(2), adcOffset(2), 
 21029 ;;		 -> STR_29(3), STR_28(3), STR_27(3), STR_26(3), 
 21030 ;;		 -> alarmData(399), STR_11(3), 
 21031 ;;  i               2    0        int 
 21032 ;;  c               1  104[BANK1 ] unsigned char 
 21033 ;; Return value:  Size  Location     Type
 21034 ;;                  2   72[BANK1 ] int 
 21035 ;; Registers used:
 21036 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21037 ;; Tracked objects:
 21038 ;;		On entry : 3F/1
 21039 ;;		On exit  : 3F/1
 21040 ;;		Unchanged: 0/0
 21041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21042 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21043 ;;      Locals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21044 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21045 ;;      Totals:         0       0      33       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21046 ;;Total ram usage:       33 bytes
 21047 ;; Hardware stack levels used:    1
 21048 ;; Hardware stack levels required when called:   22
 21049 ;; This function calls:
 21050 ;;		_atoi
 21051 ;;		_ctoa
 21052 ;;		_dtoa
 21053 ;;		_fputc
 21054 ;;		_isdigit
 21055 ;;		_stoa
 21056 ;;		_xtoa
 21057 ;; This function is called by:
 21058 ;;		_vfprintf
 21059 ;; This function uses a non-reentrant model
 21060 ;;
 21061                           
 21062                           	psect	text164
 21063  0018D6                     __ptext164:
 21064                           	opt callstack 0
 21065  0018D6                     _vfpfcnvrt:
 21066                           	opt callstack 6
 21067                           
 21068                           ; BSR set to: 1
 21069                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpf
      +                          cnvrt(FILE *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.10/pic/sources/c
      +                          99/common/doprnt.c: 671: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/dopr
      +                          nt.c: 672:     char c, *cp, ct[3];;/Applications/microchip/xc8/v2.10/pic/sources/c99/com
      +                          mon/doprnt.c: 673:     int done, i;;/Applications/microchip/xc8/v2.10/pic/sources/c99/co
      +                          mmon/doprnt.c: 674:     long long ll;;/Applications/microchip/xc8/v2.10/pic/sources/c99/
      +                          common/doprnt.c: 675:     unsigned long long llu;
 21070                           
 21071                           ; BSR set to: 2
 21072                           ;incstack = 0
 21073  0018D6  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21074  0018DC  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21075  0018E2  006F FF7B FFF6     	movff	postinc2,tblptrl
 21076  0018E8  006F FF77 FFF7     	movff	postdec2,tblptrh
 21077  0018EE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21078  0018EE  6AF8               	clrf	tblptru,c
 21079  0018F0                     	endif
 21080  0018F0                     	if	0	;tblptru may be non-zero
 21081  0018F0                     	endif
 21082  0018F0  0008               	tblrd		*
 21083  0018F2  50F5               	movf	tablat,w,c
 21084  0018F4  0A25               	xorlw	37
 21085  0018F6  A4D8               	btfss	status,2,c
 21086  0018F8  D2B4               	goto	l18051
 21087                           
 21088                           ; BSR set to: 1
 21089                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 21090  0018FA  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21091  001900  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21092  001906  2ADE               	incf	postinc2,f,c
 21093  001908  0E00               	movlw	0
 21094  00190A  22DD               	addwfc	postdec2,f,c
 21095                           
 21096                           ; BSR set to: 1
 21097                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags =
      +                           width = 0;
 21098  00190C  0E00               	movlw	0
 21099  00190E  6FC8               	movwf	(_width+1)& (0+255),b
 21100  001910  0E00               	movlw	0
 21101  001912  6FC7               	movwf	_width& (0+255),b
 21102  001914  C1C7  F1CB         	movff	_width,_flags
 21103  001918  C1C8  F1CC         	movff	_width+1,_flags+1
 21104                           
 21105                           ; BSR set to: 1
 21106                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = 
      +                          -1;
 21107  00191C  69C9               	setf	_prec& (0+255),b
 21108  00191E  69CA               	setf	(_prec+1)& (0+255),b
 21109                           
 21110                           ; BSR set to: 1
 21111                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 688:         done = 
      +                          0;
 21112  001920  0E00               	movlw	0
 21113  001922  6F65               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 21114  001924  0E00               	movlw	0
 21115  001926  D016               	goto	L4
 21116  001928                     l17947:
 21117                           
 21118                           ; BSR set to: 1
 21119                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 692:                
      +                               flags |= (1 << 0);
 21120  001928  81CB               	bsf	_flags& (0+255),0,b
 21121  00192A  D007               	goto	l17965
 21122  00192C                     l17951:
 21123                           
 21124                           ; BSR set to: 1
 21125                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 696:                
      +                               flags |= (1 << 1);
 21126  00192C  83CB               	bsf	_flags& (0+255),1,b
 21127  00192E  D005               	goto	l17965
 21128  001930                     l17955:
 21129                           
 21130                           ; BSR set to: 1
 21131                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 700:                
      +                               flags |= (1 << 2);
 21132  001930  85CB               	bsf	_flags& (0+255),2,b
 21133  001932  D003               	goto	l17965
 21134  001934                     l17959:
 21135                           
 21136                           ; BSR set to: 1
 21137                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 704:                
      +                               flags |= (1 << 3);
 21138  001934  87CB               	bsf	_flags& (0+255),3,b
 21139  001936  D001               	goto	l17965
 21140  001938                     l17963:
 21141                           
 21142                           ; BSR set to: 1
 21143                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 708:                
      +                               flags |= (1 << 4);
 21144  001938  89CB               	bsf	_flags& (0+255),4,b
 21145  00193A                     l17965:
 21146                           
 21147                           ; BSR set to: 1
 21148                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 709:                
      +                               ++*fmt;
 21149  00193A  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21150  001940  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21151  001946  2ADE               	incf	postinc2,f,c
 21152  001948  0E00               	movlw	0
 21153  00194A  22DD               	addwfc	postdec2,f,c
 21154                           
 21155                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 710:                
      +                               break;
 21156  00194C  D02B               	goto	l17973
 21157  00194E                     l17967:
 21158                           
 21159                           ; BSR set to: 1
 21160                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 712:                
      +                               done = 1;
 21161  00194E  0E00               	movlw	0
 21162  001950  6F65               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 21163  001952  0E01               	movlw	1
 21164  001954                     L4:
 21165  001954  6F64               	movwf	vfpfcnvrt@done& (0+255),b
 21166                           
 21167                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 713:                
      +                               break;
 21168  001956  D026               	goto	l17973
 21169  001958                     l17971:
 21170                           
 21171                           ; BSR set to: 1
 21172  001958  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21173  00195E  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21174  001964  006F FF7B FFF6     	movff	postinc2,tblptrl
 21175  00196A  006F FF77 FFF7     	movff	postdec2,tblptrh
 21176  001970                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21177  001970  6AF8               	clrf	tblptru,c
 21178  001972                     	endif
 21179  001972                     	if	0	;tblptru may be non-zero
 21180  001972                     	endif
 21181  001972  0008               	tblrd		*
 21182  001974  50F5               	movf	tablat,w,c
 21183  001976  6F4E               	movwf	??_vfpfcnvrt& (0+255),b
 21184  001978  6B4F               	clrf	(??_vfpfcnvrt+1)& (0+255),b
 21185                           
 21186                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21187                           ; Switch size 1, requested type "simple"
 21188                           ; Number of cases is 1, Range of values is 0 to 0
 21189                           ; switch strategies available:
 21190                           ; Name         Instructions Cycles
 21191                           ; simple_byte            4     3 (average)
 21192                           ;	Chosen strategy is simple_byte
 21193  00197A  514F               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
 21194  00197C  0A00               	xorlw	0	; case 0
 21195  00197E  A4D8               	btfss	status,2,c
 21196  001980  D7E6               	goto	l17967
 21197                           
 21198                           ; BSR set to: 1
 21199                           ; Switch size 1, requested type "simple"
 21200                           ; Number of cases is 5, Range of values is 32 to 48
 21201                           ; switch strategies available:
 21202                           ; Name         Instructions Cycles
 21203                           ; simple_byte           16     9 (average)
 21204                           ;	Chosen strategy is simple_byte
 21205  001982  514E               	movf	??_vfpfcnvrt& (0+255),w,b
 21206  001984  0A20               	xorlw	32	; case 32
 21207  001986  B4D8               	btfsc	status,2,c
 21208  001988  D7D5               	goto	l17959
 21209  00198A  0A03               	xorlw	3	; case 35
 21210  00198C  B4D8               	btfsc	status,2,c
 21211  00198E  D7D4               	goto	l17963
 21212  001990  0A08               	xorlw	8	; case 43
 21213  001992  B4D8               	btfsc	status,2,c
 21214  001994  D7CD               	goto	l17955
 21215  001996  0A06               	xorlw	6	; case 45
 21216  001998  B4D8               	btfsc	status,2,c
 21217  00199A  D7C6               	goto	l17947
 21218  00199C  0A1D               	xorlw	29	; case 48
 21219  00199E  B4D8               	btfsc	status,2,c
 21220  0019A0  D7C5               	goto	l17951
 21221  0019A2  D7D5               	goto	l17967
 21222  0019A4                     l17973:
 21223                           
 21224                           ; BSR set to: 1
 21225                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 689:         while (
      +                          !done) {
 21226  0019A4  5164               	movf	vfpfcnvrt@done& (0+255),w,b
 21227  0019A6  1165               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
 21228  0019A8  B4D8               	btfsc	status,2,c
 21229  0019AA  D7D6               	goto	l17971
 21230                           
 21231                           ; BSR set to: 1
 21232                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 716:         if (fla
      +                          gs & (1 << 0)) {
 21233  0019AC  B1CB               	btfsc	_flags& (0+255),0,b
 21234                           
 21235                           ; BSR set to: 1
 21236                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 717:             fla
      +                          gs &= ~(1 << 1);
 21237  0019AE  93CB               	bcf	_flags& (0+255),1,b
 21238                           
 21239                           ; BSR set to: 1
 21240                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*f
      +                          mt)[0] == '*') {
 21241  0019B0  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21242  0019B6  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21243  0019BC  006F FF7B FFF6     	movff	postinc2,tblptrl
 21244  0019C2  006F FF77 FFF7     	movff	postdec2,tblptrh
 21245  0019C8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21246  0019C8  6AF8               	clrf	tblptru,c
 21247  0019CA                     	endif
 21248  0019CA                     	if	0	;tblptru may be non-zero
 21249  0019CA                     	endif
 21250  0019CA  0008               	tblrd		*
 21251  0019CC  50F5               	movf	tablat,w,c
 21252  0019CE  0A2A               	xorlw	42
 21253  0019D0  A4D8               	btfss	status,2,c
 21254  0019D2  D02D               	goto	l17985
 21255                           
 21256                           ; BSR set to: 1
 21257                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*
      +                          fmt;
 21258  0019D4  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21259  0019DA  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21260  0019E0  2ADE               	incf	postinc2,f,c
 21261  0019E2  0E00               	movlw	0
 21262  0019E4  22DD               	addwfc	postdec2,f,c
 21263                           
 21264                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             wid
      +                          th = (*(int *)__va_arg(*(int **)ap, (int)0));
 21265  0019E6  0060  F533  FFD9   	movff	vfpfcnvrt@ap,fsr2l
 21266  0019EC  0060  F537  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
 21267  0019F2  006F FF7C  F14E    	movff	indf2,??_vfpfcnvrt
 21268  0019F8  0E02               	movlw	2
 21269  0019FA  26DE               	addwf	postinc2,f,c
 21270  0019FC  006F FF7C  F14F    	movff	indf2,??_vfpfcnvrt+1
 21271  001A02  0E00               	movlw	0
 21272  001A04  22DD               	addwfc	postdec2,f,c
 21273  001A06  0060  F53B  FFD9   	movff	??_vfpfcnvrt,fsr2l
 21274  001A0C  0060  F53F  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
 21275  001A12  006F FF78  F1C7    	movff	postinc2,_width
 21276  001A18  006F FF74  F1C8    	movff	postdec2,_width+1
 21277                           
 21278                           ; BSR set to: 1
 21279                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if 
      +                          (width < 0) {
 21280  001A1E  AFC8               	btfss	(_width+1)& (0+255),7,b
 21281  001A20  D04C               	goto	u17480
 21282                           
 21283                           ; BSR set to: 1
 21284                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                
      +                           flags |= (1 << 0);
 21285  001A22  81CB               	bsf	_flags& (0+255),0,b
 21286                           
 21287                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                
      +                           width = -width;
 21288  001A24  6DC7               	negf	_width& (0+255),b
 21289  001A26  1FC8               	comf	(_width+1)& (0+255),f,b
 21290  001A28  B0D8               	btfsc	status,0,c
 21291  001A2A  2BC8               	incf	(_width+1)& (0+255),f,b
 21292  001A2C  D046               	goto	u17480
 21293  001A2E                     l17985:
 21294                           
 21295                           ; BSR set to: 1
 21296                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             wid
      +                          th = atoi(*fmt);
 21297  001A2E  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21298  001A34  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21299  001A3A  006F FF78  F10B    	movff	postinc2,atoi@s
 21300  001A40  006F FF74  F10C    	movff	postdec2,atoi@s+1
 21301  001A46  ECCD  F02A         	call	_atoi	;wreg free
 21302  001A4A  0060  F42C  F1C7   	movff	?_atoi,_width
 21303  001A50  0060  F430  F1C8   	movff	?_atoi+1,_width+1
 21304                           
 21305                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             whi
      +                          le ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 21306  001A56  D009               	goto	l17989
 21307  001A58                     l17987:
 21308                           
 21309                           ; BSR set to: 1
 21310                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                
      +                           ++*fmt;
 21311  001A58  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21312  001A5E  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21313  001A64  2ADE               	incf	postinc2,f,c
 21314  001A66  0E00               	movlw	0
 21315  001A68  22DD               	addwfc	postdec2,f,c
 21316  001A6A                     l17989:
 21317                           
 21318                           ; BSR set to: 1
 21319  001A6A  0ED0               	movlw	208
 21320  001A6C  6F4E               	movwf	??_vfpfcnvrt& (0+255),b
 21321  001A6E  0EFF               	movlw	255
 21322  001A70  6F4F               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 21323  001A72  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21324  001A78  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21325  001A7E  006F FF7B FFF6     	movff	postinc2,tblptrl
 21326  001A84  006F FF77 FFF7     	movff	postdec2,tblptrh
 21327  001A8A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21328  001A8A  6AF8               	clrf	tblptru,c
 21329  001A8C                     	endif
 21330  001A8C                     	if	0	;tblptru may be non-zero
 21331  001A8C                     	endif
 21332  001A8C  0008               	tblrd		*
 21333  001A8E  50F5               	movf	tablat,w,c
 21334  001A90  6F50               	movwf	(??_vfpfcnvrt+2)& (0+255),b
 21335  001A92  6B51               	clrf	(??_vfpfcnvrt+3)& (0+255),b
 21336  001A94  514E               	movf	??_vfpfcnvrt& (0+255),w,b
 21337  001A96  2750               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
 21338  001A98  514F               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
 21339  001A9A  2351               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
 21340  001A9C  5151               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
 21341  001A9E  E106               	bnz	u17460
 21342  001AA0  0E0A               	movlw	10
 21343  001AA2  5D50               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
 21344  001AA4  B0D8               	btfsc	status,0,c
 21345  001AA6  D002               	goto	u17460
 21346  001AA8  0E01               	movlw	1
 21347  001AAA  D001               	goto	u17470
 21348  001AAC                     u17460:
 21349  001AAC  0E00               	movlw	0
 21350  001AAE                     u17470:
 21351  001AAE  6F66               	movwf	_vfpfcnvrt$5214& (0+255),b
 21352  001AB0  6B67               	clrf	(_vfpfcnvrt$5214+1)& (0+255),b
 21353                           
 21354                           ; BSR set to: 1
 21355  001AB2  5166               	movf	_vfpfcnvrt$5214& (0+255),w,b
 21356  001AB4  1167               	iorwf	(_vfpfcnvrt$5214+1)& (0+255),w,b
 21357  001AB6  A4D8               	btfss	status,2,c
 21358  001AB8  D7CF               	goto	l17987
 21359  001ABA                     u17480:
 21360                           
 21361                           ; BSR set to: 1
 21362                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fm
      +                          t[0] == 'c') {
 21363  001ABA  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21364  001AC0  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21365  001AC6  006F FF7B FFF6     	movff	postinc2,tblptrl
 21366  001ACC  006F FF77 FFF7     	movff	postdec2,tblptrh
 21367  001AD2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21368  001AD2  6AF8               	clrf	tblptru,c
 21369  001AD4                     	endif
 21370  001AD4                     	if	0	;tblptru may be non-zero
 21371  001AD4                     	endif
 21372  001AD4  0008               	tblrd		*
 21373  001AD6  50F5               	movf	tablat,w,c
 21374  001AD8  0A63               	xorlw	99
 21375  001ADA  A4D8               	btfss	status,2,c
 21376  001ADC  D033               	goto	l18003
 21377                           
 21378                           ; BSR set to: 1
 21379                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*
      +                          fmt;
 21380  001ADE  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21381  001AE4  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21382  001AEA  2ADE               	incf	postinc2,f,c
 21383  001AEC  0E00               	movlw	0
 21384  001AEE  22DD               	addwfc	postdec2,f,c
 21385                           
 21386                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c =
      +                           (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 21387  001AF0  0060  F533  FFD9   	movff	vfpfcnvrt@ap,fsr2l
 21388  001AF6  0060  F537  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
 21389  001AFC  006F FF7C  F14E    	movff	indf2,??_vfpfcnvrt
 21390  001B02  0E02               	movlw	2
 21391  001B04  26DE               	addwf	postinc2,f,c
 21392  001B06  006F FF7C  F14F    	movff	indf2,??_vfpfcnvrt+1
 21393  001B0C  0E00               	movlw	0
 21394  001B0E  22DD               	addwfc	postdec2,f,c
 21395  001B10  0060  F53B  FFD9   	movff	??_vfpfcnvrt,fsr2l
 21396  001B16  0060  F53F  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
 21397  001B1C  50DF               	movf	indf2,w,c
 21398  001B1E  6F68               	movwf	vfpfcnvrt@c& (0+255),b
 21399                           
 21400                           ; BSR set to: 1
 21401                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             ret
      +                          urn ctoa(fp, c);
 21402  001B20  0060  F520  F121   	movff	vfpfcnvrt@fp,ctoa@fp
 21403  001B26  0060  F524  F122   	movff	vfpfcnvrt@fp+1,ctoa@fp+1
 21404  001B2C  0060  F5A0  F123   	movff	vfpfcnvrt@c,ctoa@c
 21405  001B32  EC4D  F045         	call	_ctoa	;wreg free
 21406  001B36  0060  F484  F148   	movff	?_ctoa,?_vfpfcnvrt
 21407  001B3C  0060  F488  F149   	movff	?_ctoa+1,?_vfpfcnvrt+1
 21408  001B42  0012               	return	
 21409  001B44                     l18003:
 21410                           
 21411                           ; BSR set to: 1
 21412                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*f
      +                          mt[0] == 'd') || (*fmt[0] == 'i')) {
 21413  001B44  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21414  001B4A  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21415  001B50  006F FF7B FFF6     	movff	postinc2,tblptrl
 21416  001B56  006F FF77 FFF7     	movff	postdec2,tblptrh
 21417  001B5C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21418  001B5C  6AF8               	clrf	tblptru,c
 21419  001B5E                     	endif
 21420  001B5E                     	if	0	;tblptru may be non-zero
 21421  001B5E                     	endif
 21422  001B5E  0008               	tblrd		*
 21423  001B60  50F5               	movf	tablat,w,c
 21424  001B62  0A64               	xorlw	100
 21425  001B64  B4D8               	btfsc	status,2,c
 21426  001B66  D012               	goto	u17510
 21427                           
 21428                           ; BSR set to: 1
 21429  001B68  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21430  001B6E  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21431  001B74  006F FF7B FFF6     	movff	postinc2,tblptrl
 21432  001B7A  006F FF77 FFF7     	movff	postdec2,tblptrh
 21433  001B80                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21434  001B80  6AF8               	clrf	tblptru,c
 21435  001B82                     	endif
 21436  001B82                     	if	0	;tblptru may be non-zero
 21437  001B82                     	endif
 21438  001B82  0008               	tblrd		*
 21439  001B84  50F5               	movf	tablat,w,c
 21440  001B86  0A69               	xorlw	105
 21441  001B88  A4D8               	btfss	status,2,c
 21442  001B8A  D055               	goto	l18013
 21443  001B8C                     u17510:
 21444                           
 21445                           ; BSR set to: 1
 21446                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*
      +                          fmt;
 21447  001B8C  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21448  001B92  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21449  001B98  2ADE               	incf	postinc2,f,c
 21450  001B9A  0E00               	movlw	0
 21451  001B9C  22DD               	addwfc	postdec2,f,c
 21452                           
 21453                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll 
      +                          = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 21454  001B9E  0060  F533  FFD9   	movff	vfpfcnvrt@ap,fsr2l
 21455  001BA4  0060  F537  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
 21456  001BAA  006F FF7C  F14E    	movff	indf2,??_vfpfcnvrt
 21457  001BB0  0E02               	movlw	2
 21458  001BB2  26DE               	addwf	postinc2,f,c
 21459  001BB4  006F FF7C  F14F    	movff	indf2,??_vfpfcnvrt+1
 21460  001BBA  0E00               	movlw	0
 21461  001BBC  22DD               	addwfc	postdec2,f,c
 21462  001BBE  0060  F53B  FFD9   	movff	??_vfpfcnvrt,fsr2l
 21463  001BC4  0060  F53F  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
 21464  001BCA  006F FF78  F152    	movff	postinc2,vfpfcnvrt@ll
 21465  001BD0  006F FF74  F153    	movff	postdec2,vfpfcnvrt@ll+1
 21466  001BD6  0E00               	movlw	0
 21467  001BD8  BF53               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
 21468  001BDA  0EFF               	movlw	-1
 21469  001BDC  6F54               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
 21470  001BDE  6F55               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
 21471  001BE0  6F56               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
 21472  001BE2  6F57               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
 21473  001BE4  6F58               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
 21474  001BE6  6F59               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
 21475                           
 21476                           ; BSR set to: 1
 21477                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             ret
      +                          urn dtoa(fp, ll);
 21478  001BE8  0060  F520  F121   	movff	vfpfcnvrt@fp,dtoa@fp
 21479  001BEE  0060  F524  F122   	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 21480  001BF4  0060  F548  F123   	movff	vfpfcnvrt@ll,dtoa@d
 21481  001BFA  0060  F54C  F124   	movff	vfpfcnvrt@ll+1,dtoa@d+1
 21482  001C00  0060  F550  F125   	movff	vfpfcnvrt@ll+2,dtoa@d+2
 21483  001C06  0060  F554  F126   	movff	vfpfcnvrt@ll+3,dtoa@d+3
 21484  001C0C  0060  F558  F127   	movff	vfpfcnvrt@ll+4,dtoa@d+4
 21485  001C12  0060  F55C  F128   	movff	vfpfcnvrt@ll+5,dtoa@d+5
 21486  001C18  0060  F560  F129   	movff	vfpfcnvrt@ll+6,dtoa@d+6
 21487  001C1E  0060  F564  F12A   	movff	vfpfcnvrt@ll+7,dtoa@d+7
 21488  001C24  EC8B  F01B         	call	_dtoa	;wreg free
 21489  001C28  0060  F484  F148   	movff	?_dtoa,?_vfpfcnvrt
 21490  001C2E  0060  F488  F149   	movff	?_dtoa+1,?_vfpfcnvrt+1
 21491  001C34  0012               	return	
 21492  001C36                     l18013:
 21493                           
 21494                           ; BSR set to: 1
 21495                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*f
      +                          mt[0] == 's') {
 21496  001C36  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21497  001C3C  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21498  001C42  006F FF7B FFF6     	movff	postinc2,tblptrl
 21499  001C48  006F FF77 FFF7     	movff	postdec2,tblptrh
 21500  001C4E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21501  001C4E  6AF8               	clrf	tblptru,c
 21502  001C50                     	endif
 21503  001C50                     	if	0	;tblptru may be non-zero
 21504  001C50                     	endif
 21505  001C50  0008               	tblrd		*
 21506  001C52  50F5               	movf	tablat,w,c
 21507  001C54  0A73               	xorlw	115
 21508  001C56  A4D8               	btfss	status,2,c
 21509  001C58  D03A               	goto	l18021
 21510                           
 21511                           ; BSR set to: 1
 21512                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++
      +                          *fmt;
 21513  001C5A  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21514  001C60  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21515  001C66  2ADE               	incf	postinc2,f,c
 21516  001C68  0E00               	movlw	0
 21517  001C6A  22DD               	addwfc	postdec2,f,c
 21518                           
 21519                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp
      +                           = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 21520  001C6C  0060  F533  FFD9   	movff	vfpfcnvrt@ap,fsr2l
 21521  001C72  0060  F537  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
 21522  001C78  006F FF7C  F14E    	movff	indf2,??_vfpfcnvrt
 21523  001C7E  0E02               	movlw	2
 21524  001C80  26DE               	addwf	postinc2,f,c
 21525  001C82  006F FF7C  F14F    	movff	indf2,??_vfpfcnvrt+1
 21526  001C88  0E00               	movlw	0
 21527  001C8A  22DD               	addwfc	postdec2,f,c
 21528  001C8C  0060  F53B  FFD9   	movff	??_vfpfcnvrt,fsr2l
 21529  001C92  0060  F53F  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
 21530  001C98  006F FF78  F162    	movff	postinc2,vfpfcnvrt@cp
 21531  001C9E  006F FF74  F163    	movff	postdec2,vfpfcnvrt@cp+1
 21532                           
 21533                           ; BSR set to: 1
 21534                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             re
      +                          turn stoa(fp, cp);
 21535  001CA4  0060  F520  F10F   	movff	vfpfcnvrt@fp,stoa@fp
 21536  001CAA  0060  F524  F110   	movff	vfpfcnvrt@fp+1,stoa@fp+1
 21537  001CB0  0060  F588  F111   	movff	vfpfcnvrt@cp,stoa@s
 21538  001CB6  0060  F58C  F112   	movff	vfpfcnvrt@cp+1,stoa@s+1
 21539  001CBC  EC55  F029         	call	_stoa	;wreg free
 21540  001CC0  0060  F43C  F148   	movff	?_stoa,?_vfpfcnvrt
 21541  001CC6  0060  F440  F149   	movff	?_stoa+1,?_vfpfcnvrt+1
 21542  001CCC  0012               	return	
 21543  001CCE                     l18021:
 21544                           
 21545                           ; BSR set to: 1
 21546                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*
      +                          fmt[0] == 'x') || (*fmt[0] == 'X')) {
 21547  001CCE  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21548  001CD4  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21549  001CDA  006F FF7B FFF6     	movff	postinc2,tblptrl
 21550  001CE0  006F FF77 FFF7     	movff	postdec2,tblptrh
 21551  001CE6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21552  001CE6  6AF8               	clrf	tblptru,c
 21553  001CE8                     	endif
 21554  001CE8                     	if	0	;tblptru may be non-zero
 21555  001CE8                     	endif
 21556  001CE8  0008               	tblrd		*
 21557  001CEA  50F5               	movf	tablat,w,c
 21558  001CEC  0A78               	xorlw	120
 21559  001CEE  B4D8               	btfsc	status,2,c
 21560  001CF0  D012               	goto	u17540
 21561                           
 21562                           ; BSR set to: 1
 21563  001CF2  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21564  001CF8  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21565  001CFE  006F FF7B FFF6     	movff	postinc2,tblptrl
 21566  001D04  006F FF77 FFF7     	movff	postdec2,tblptrh
 21567  001D0A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21568  001D0A  6AF8               	clrf	tblptru,c
 21569  001D0C                     	endif
 21570  001D0C                     	if	0	;tblptru may be non-zero
 21571  001D0C                     	endif
 21572  001D0C  0008               	tblrd		*
 21573  001D0E  50F5               	movf	tablat,w,c
 21574  001D10  0A58               	xorlw	88
 21575  001D12  A4D8               	btfss	status,2,c
 21576  001D14  D06C               	goto	l18035
 21577  001D16                     u17540:
 21578                           
 21579                           ; BSR set to: 1
 21580                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c 
      +                          = (*fmt)[0];
 21581  001D16  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21582  001D1C  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21583  001D22  006F FF7B FFF6     	movff	postinc2,tblptrl
 21584  001D28  006F FF77 FFF7     	movff	postdec2,tblptrh
 21585  001D2E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21586  001D2E  6AF8               	clrf	tblptru,c
 21587  001D30                     	endif
 21588  001D30                     	if	0	;tblptru may be non-zero
 21589  001D30                     	endif
 21590  001D30  0008               	tblrd		*
 21591  001D32  006F FFD4  F168    	movff	tablat,vfpfcnvrt@c
 21592                           
 21593                           ; BSR set to: 1
 21594                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++
      +                          *fmt;
 21595  001D38  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21596  001D3E  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21597  001D44  2ADE               	incf	postinc2,f,c
 21598  001D46  0E00               	movlw	0
 21599  001D48  22DD               	addwfc	postdec2,f,c
 21600                           
 21601                           ; BSR set to: 1
 21602                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             ll
      +                          u = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0
      +                          ));
 21603  001D4A  0060  F533  FFD9   	movff	vfpfcnvrt@ap,fsr2l
 21604  001D50  0060  F537  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
 21605  001D56  006F FF7C  F14E    	movff	indf2,??_vfpfcnvrt
 21606  001D5C  0E02               	movlw	2
 21607  001D5E  26DE               	addwf	postinc2,f,c
 21608  001D60  006F FF7C  F14F    	movff	indf2,??_vfpfcnvrt+1
 21609  001D66  0E00               	movlw	0
 21610  001D68  22DD               	addwfc	postdec2,f,c
 21611  001D6A  0060  F53B  FFD9   	movff	??_vfpfcnvrt,fsr2l
 21612  001D70  0060  F53F  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
 21613  001D76  006F FF78  F150    	movff	postinc2,??_vfpfcnvrt+2
 21614  001D7C  006F FF74  F151    	movff	postdec2,??_vfpfcnvrt+3
 21615  001D82  0060  F540  F15A   	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 21616  001D88  0060  F544  F15B   	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 21617  001D8E  6B5C               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 21618  001D90  6B5D               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 21619  001D92  6B5E               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 21620  001D94  6B5F               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 21621  001D96  6B60               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 21622  001D98  6B61               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 21623                           
 21624                           ; BSR set to: 1
 21625                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             re
      +                          turn xtoa(fp, llu, c);
 21626  001D9A  0060  F520  F121   	movff	vfpfcnvrt@fp,xtoa@fp
 21627  001DA0  0060  F524  F122   	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 21628  001DA6  0060  F568  F123   	movff	vfpfcnvrt@llu,xtoa@d
 21629  001DAC  0060  F56C  F124   	movff	vfpfcnvrt@llu+1,xtoa@d+1
 21630  001DB2  0060  F570  F125   	movff	vfpfcnvrt@llu+2,xtoa@d+2
 21631  001DB8  0060  F574  F126   	movff	vfpfcnvrt@llu+3,xtoa@d+3
 21632  001DBE  0060  F578  F127   	movff	vfpfcnvrt@llu+4,xtoa@d+4
 21633  001DC4  0060  F57C  F128   	movff	vfpfcnvrt@llu+5,xtoa@d+5
 21634  001DCA  0060  F580  F129   	movff	vfpfcnvrt@llu+6,xtoa@d+6
 21635  001DD0  0060  F584  F12A   	movff	vfpfcnvrt@llu+7,xtoa@d+7
 21636  001DD6  0060  F5A0  F12B   	movff	vfpfcnvrt@c,xtoa@x
 21637  001DDC  EC23  F01E         	call	_xtoa	;wreg free
 21638  001DE0  0060  F484  F148   	movff	?_xtoa,?_vfpfcnvrt
 21639  001DE6  0060  F488  F149   	movff	?_xtoa+1,?_vfpfcnvrt+1
 21640  001DEC  0012               	return	
 21641  001DEE                     l18035:
 21642                           
 21643                           ; BSR set to: 1
 21644                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*
      +                          fmt)[0] == '%') {
 21645  001DEE  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21646  001DF4  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21647  001DFA  006F FF7B FFF6     	movff	postinc2,tblptrl
 21648  001E00  006F FF77 FFF7     	movff	postdec2,tblptrh
 21649  001E06                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21650  001E06  6AF8               	clrf	tblptru,c
 21651  001E08                     	endif
 21652  001E08                     	if	0	;tblptru may be non-zero
 21653  001E08                     	endif
 21654  001E08  0008               	tblrd		*
 21655  001E0A  50F5               	movf	tablat,w,c
 21656  001E0C  0A25               	xorlw	37
 21657  001E0E  A4D8               	btfss	status,2,c
 21658  001E10  D01A               	goto	l18045
 21659                           
 21660                           ; BSR set to: 1
 21661                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++
      +                          *fmt;
 21662  001E12  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21663  001E18  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21664  001E1E  2ADE               	incf	postinc2,f,c
 21665  001E20  0E00               	movlw	0
 21666  001E22  22DD               	addwfc	postdec2,f,c
 21667                           
 21668                           ; BSR set to: 1
 21669                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fp
      +                          utc((int)'%', fp);
 21670  001E24  0E00               	movlw	0
 21671  001E26  6F07               	movwf	(fputc@c+1)& (0+255),b
 21672  001E28  0E25               	movlw	37
 21673  001E2A  6F06               	movwf	fputc@c& (0+255),b
 21674  001E2C  0060  F520  F108   	movff	vfpfcnvrt@fp,fputc@fp
 21675  001E32  0060  F524  F109   	movff	vfpfcnvrt@fp+1,fputc@fp+1
 21676  001E38  ECCF  F037         	call	_fputc	;wreg free
 21677  001E3C                     l18041:
 21678                           
 21679                           ; BSR set to: 1
 21680                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             re
      +                          turn 1;
 21681  001E3C  0E00               	movlw	0
 21682  001E3E  6F49               	movwf	(?_vfpfcnvrt+1)& (0+255),b
 21683  001E40  0E01               	movlw	1
 21684  001E42  6F48               	movwf	?_vfpfcnvrt& (0+255),b
 21685  001E44  0012               	return	
 21686  001E46                     l18045:
 21687                           
 21688                           ; BSR set to: 1
 21689                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt
      +                          ;
 21690  001E46  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21691  001E4C  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21692  001E52  2ADE               	incf	postinc2,f,c
 21693  001E54  0E00               	movlw	0
 21694  001E56  22DD               	addwfc	postdec2,f,c
 21695                           
 21696                           ; BSR set to: 1
 21697                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return
      +                           0;
 21698  001E58  0E00               	movlw	0
 21699  001E5A  6F49               	movwf	(?_vfpfcnvrt+1)& (0+255),b
 21700  001E5C  0E00               	movlw	0
 21701  001E5E  6F48               	movwf	?_vfpfcnvrt& (0+255),b
 21702  001E60  0012               	return	
 21703  001E62                     l18051:
 21704                           
 21705                           ; BSR set to: 1
 21706                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int
      +                          )(*fmt)[0], fp);
 21707  001E62  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21708  001E68  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21709  001E6E  006F FF7B FFF6     	movff	postinc2,tblptrl
 21710  001E74  006F FF77 FFF7     	movff	postdec2,tblptrh
 21711  001E7A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21712  001E7A  6AF8               	clrf	tblptru,c
 21713  001E7C                     	endif
 21714  001E7C                     	if	0	;tblptru may be non-zero
 21715  001E7C                     	endif
 21716  001E7C  0008               	tblrd		*
 21717  001E7E  50F5               	movf	tablat,w,c
 21718  001E80  6F06               	movwf	fputc@c& (0+255),b
 21719  001E82  6B07               	clrf	(fputc@c+1)& (0+255),b
 21720  001E84  0060  F520  F108   	movff	vfpfcnvrt@fp,fputc@fp
 21721  001E8A  0060  F524  F109   	movff	vfpfcnvrt@fp+1,fputc@fp+1
 21722  001E90  ECCF  F037         	call	_fputc	;wreg free
 21723                           
 21724                           ; BSR set to: 1
 21725                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 21726  001E94  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21727  001E9A  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21728  001EA0  2ADE               	incf	postinc2,f,c
 21729  001EA2  0E00               	movlw	0
 21730  001EA4  22DD               	addwfc	postdec2,f,c
 21731  001EA6  D7CA               	goto	l18041
 21732  001EA8                     __end_of_vfpfcnvrt:
 21733                           	opt callstack 0
 21734                           
 21735 ;; *************** function _xtoa *****************
 21736 ;; Defined at:
 21737 ;;		line 623 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 21738 ;; Parameters:    Size  Location     Type
 21739 ;;  fp              2   33[BANK1 ] PTR struct _IO_FILE
 21740 ;;		 -> sprintf@f(6), NULL(0), 
 21741 ;;  d               8   35[BANK1 ] unsigned long long 
 21742 ;;  x               1   43[BANK1 ] unsigned char 
 21743 ;; Auto vars:     Size  Location     Type
 21744 ;;  n               8   60[BANK1 ] unsigned long long 
 21745 ;;  c               2   70[BANK1 ] int 
 21746 ;;  i               2   68[BANK1 ] int 
 21747 ;;  w               2   58[BANK1 ] int 
 21748 ;;  p               2   56[BANK1 ] int 
 21749 ;; Return value:  Size  Location     Type
 21750 ;;                  2   33[BANK1 ] int 
 21751 ;; Registers used:
 21752 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21753 ;; Tracked objects:
 21754 ;;		On entry : 3F/1
 21755 ;;		On exit  : 3F/1
 21756 ;;		Unchanged: 0/0
 21757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21758 ;;      Params:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21759 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21760 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21761 ;;      Totals:         0       0      39       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21762 ;;Total ram usage:       39 bytes
 21763 ;; Hardware stack levels used:    1
 21764 ;; Hardware stack levels required when called:   21
 21765 ;; This function calls:
 21766 ;;		_isalpha
 21767 ;;		_isupper
 21768 ;;		_pad
 21769 ;;		_toupper
 21770 ;; This function is called by:
 21771 ;;		_vfpfcnvrt
 21772 ;; This function uses a non-reentrant model
 21773 ;;
 21774                           
 21775                           	psect	text165
 21776  003C46                     __ptext165:
 21777                           	opt callstack 0
 21778  003C46                     _xtoa:
 21779                           	opt callstack 6
 21780                           
 21781                           ; BSR set to: 1
 21782                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa
      +                          (FILE *fp, unsigned long long d, char x);/Applications/microchip/xc8/v2.10/pic/sources/c
      +                          99/common/doprnt.c: 624: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/dopr
      +                          nt.c: 625:     int c, i, p, w;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/
      +                          doprnt.c: 626:     unsigned long long n;;/Applications/microchip/xc8/v2.10/pic/sources/c
      +                          99/common/doprnt.c: 629:     if (!(prec < 0)) {
 21783                           
 21784                           ; BSR set to: 1
 21785                           ;incstack = 0
 21786  003C46  AFCA               	btfss	(_prec+1)& (0+255),7,b
 21787                           
 21788                           ; BSR set to: 1
 21789                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &
      +                          = ~(1 << 1);
 21790  003C48  93CB               	bcf	_flags& (0+255),1,b
 21791                           
 21792                           ; BSR set to: 1
 21793                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < pr
      +                          ec) ? prec : 1;
 21794  003C4A  BFCA               	btfsc	(_prec+1)& (0+255),7,b
 21795  003C4C  D005               	goto	u17090
 21796  003C4E  51CA               	movf	(_prec+1)& (0+255),w,b
 21797  003C50  E108               	bnz	l3539
 21798  003C52  05C9               	decf	_prec& (0+255),w,b
 21799  003C54  B0D8               	btfsc	status,0,c
 21800  003C56  D005               	goto	l3539
 21801  003C58                     u17090:
 21802                           
 21803                           ; BSR set to: 1
 21804  003C58  0E00               	movlw	0
 21805  003C5A  6F39               	movwf	(xtoa@p+1)& (0+255),b
 21806  003C5C  0E01               	movlw	1
 21807  003C5E  6F38               	movwf	xtoa@p& (0+255),b
 21808  003C60  D006               	goto	l3541
 21809  003C62                     l3539:
 21810                           
 21811                           ; BSR set to: 1
 21812  003C62  0060  F724  F138   	movff	_prec,xtoa@p
 21813  003C68  0060  F728  F139   	movff	_prec+1,xtoa@p+1
 21814  003C6E                     l3541:
 21815                           
 21816                           ; BSR set to: 1
 21817                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 21818  003C6E  0060  F71C  F13A   	movff	_width,xtoa@w
 21819  003C74  0060  F720  F13B   	movff	_width+1,xtoa@w+1
 21820                           
 21821                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags &
      +                           (1 << 4)) {
 21822  003C7A  A9CB               	btfss	_flags& (0+255),4,b
 21823  003C7C  D004               	goto	l17767
 21824                           
 21825                           ; BSR set to: 1
 21826                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 21827  003C7E  0EFE               	movlw	254
 21828  003C80  273A               	addwf	xtoa@w& (0+255),f,b
 21829  003C82  0EFF               	movlw	255
 21830  003C84  233B               	addwfc	(xtoa@w+1)& (0+255),f,b
 21831  003C86                     l17767:
 21832                           
 21833                           ; BSR set to: 1
 21834                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 21835  003C86  0060  F48C  F13C   	movff	xtoa@d,xtoa@n
 21836  003C8C  0060  F490  F13D   	movff	xtoa@d+1,xtoa@n+1
 21837  003C92  0060  F494  F13E   	movff	xtoa@d+2,xtoa@n+2
 21838  003C98  0060  F498  F13F   	movff	xtoa@d+3,xtoa@n+3
 21839  003C9E  0060  F49C  F140   	movff	xtoa@d+4,xtoa@n+4
 21840  003CA4  0060  F4A0  F141   	movff	xtoa@d+5,xtoa@n+5
 21841  003CAA  0060  F4A4  F142   	movff	xtoa@d+6,xtoa@n+6
 21842  003CB0  0060  F4A8  F143   	movff	xtoa@d+7,xtoa@n+7
 21843                           
 21844                           ; BSR set to: 1
 21845                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(
      +                          dbuf) - 1;
 21846  003CB6  0E00               	movlw	0
 21847  003CB8  6F45               	movwf	(xtoa@i+1)& (0+255),b
 21848  003CBA  0E1F               	movlw	31
 21849  003CBC  6F44               	movwf	xtoa@i& (0+255),b
 21850                           
 21851                           ; BSR set to: 1
 21852                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '
      +                          \0';
 21853  003CBE  0E00               	movlw	0
 21854  003CC0  0103               	movlb	3	; () banked
 21855  003CC2  6FA8               	movwf	(_dbuf+31)& (0+255),b
 21856                           
 21857                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i 
      +                          < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 21858  003CC4  D0A8               	goto	l17803
 21859  003CC6                     l17773:
 21860                           
 21861                           ; BSR set to: 1
 21862                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 21863  003CC6  0744               	decf	xtoa@i& (0+255),f,b
 21864  003CC8  A0D8               	btfss	status,0,c
 21865  003CCA  0745               	decf	(xtoa@i+1)& (0+255),f,b
 21866                           
 21867                           ; BSR set to: 1
 21868                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n &
      +                           0x0f;
 21869  003CCC  0E0F               	movlw	15
 21870  003CCE  153C               	andwf	xtoa@n& (0+255),w,b
 21871  003CD0  6F46               	movwf	xtoa@c& (0+255),b
 21872  003CD2  6B47               	clrf	(xtoa@c+1)& (0+255),b
 21873                           
 21874                           ; BSR set to: 1
 21875                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c 
      +                          < 10) ? '0' + c : 'a' + (c - 10);
 21876  003CD4  BF47               	btfsc	(xtoa@c+1)& (0+255),7,b
 21877  003CD6  D008               	goto	l17781
 21878  003CD8  5147               	movf	(xtoa@c+1)& (0+255),w,b
 21879  003CDA  E104               	bnz	u17110
 21880  003CDC  0E0A               	movlw	10
 21881  003CDE  5D46               	subwf	xtoa@c& (0+255),w,b
 21882  003CE0  A0D8               	btfss	status,0,c
 21883  003CE2  D002               	goto	l17781
 21884  003CE4                     u17110:
 21885                           
 21886                           ; BSR set to: 1
 21887  003CE4  0E57               	movlw	87
 21888  003CE6  D001               	goto	L5
 21889  003CE8                     l17781:
 21890                           
 21891                           ; BSR set to: 1
 21892  003CE8  0E30               	movlw	48
 21893  003CEA                     L5:
 21894  003CEA  2546               	addwf	xtoa@c& (0+255),w,b
 21895  003CEC  6F46               	movwf	xtoa@c& (0+255),b
 21896  003CEE  0E00               	movlw	0
 21897  003CF0  2147               	addwfc	(xtoa@c+1)& (0+255),w,b
 21898  003CF2  6F47               	movwf	(xtoa@c+1)& (0+255),b
 21899                           
 21900                           ; BSR set to: 1
 21901                           
 21902                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 646:         if ((0 
      +                          ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsigned)(c)|
      +                          32)-'a') < 26)) {
 21903  003CF4  0EBF               	movlw	191
 21904  003CF6  6F2C               	movwf	??_xtoa& (0+255),b
 21905  003CF8  0EFF               	movlw	255
 21906  003CFA  6F2D               	movwf	(??_xtoa+1)& (0+255),b
 21907  003CFC  512B               	movf	xtoa@x& (0+255),w,b
 21908  003CFE  6F2E               	movwf	(??_xtoa+2)& (0+255),b
 21909  003D00  6B2F               	clrf	(??_xtoa+3)& (0+255),b
 21910  003D02  512C               	movf	??_xtoa& (0+255),w,b
 21911  003D04  272E               	addwf	(??_xtoa+2)& (0+255),f,b
 21912  003D06  512D               	movf	(??_xtoa+1)& (0+255),w,b
 21913  003D08  232F               	addwfc	(??_xtoa+3)& (0+255),f,b
 21914  003D0A  512F               	movf	(??_xtoa+3)& (0+255),w,b
 21915  003D0C  E106               	bnz	u17120
 21916  003D0E  0E1A               	movlw	26
 21917  003D10  5D2E               	subwf	(??_xtoa+2)& (0+255),w,b
 21918  003D12  B0D8               	btfsc	status,0,c
 21919  003D14  D002               	goto	u17120
 21920  003D16  0E01               	movlw	1
 21921  003D18  D001               	goto	u17130
 21922  003D1A                     u17120:
 21923  003D1A  0E00               	movlw	0
 21924  003D1C                     u17130:
 21925  003D1C  6F34               	movwf	_xtoa$5199& (0+255),b
 21926  003D1E  6B35               	clrf	(_xtoa$5199+1)& (0+255),b
 21927                           
 21928                           ; BSR set to: 1
 21929  003D20  5134               	movf	_xtoa$5199& (0+255),w,b
 21930  003D22  1135               	iorwf	(_xtoa$5199+1)& (0+255),w,b
 21931  003D24  B4D8               	btfsc	status,2,c
 21932  003D26  D02B               	goto	l17795
 21933                           
 21934                           ; BSR set to: 1
 21935  003D28  0E9F               	movlw	159
 21936  003D2A  6F2C               	movwf	??_xtoa& (0+255),b
 21937  003D2C  0EFF               	movlw	255
 21938  003D2E  6F2D               	movwf	(??_xtoa+1)& (0+255),b
 21939  003D30  0E20               	movlw	32
 21940  003D32  1146               	iorwf	xtoa@c& (0+255),w,b
 21941  003D34  6F2E               	movwf	(??_xtoa+2)& (0+255),b
 21942  003D36  0E00               	movlw	0
 21943  003D38  1147               	iorwf	(xtoa@c+1)& (0+255),w,b
 21944  003D3A  6F2F               	movwf	(??_xtoa+3)& (0+255),b
 21945  003D3C  512C               	movf	??_xtoa& (0+255),w,b
 21946  003D3E  272E               	addwf	(??_xtoa+2)& (0+255),f,b
 21947  003D40  512D               	movf	(??_xtoa+1)& (0+255),w,b
 21948  003D42  232F               	addwfc	(??_xtoa+3)& (0+255),f,b
 21949  003D44  512F               	movf	(??_xtoa+3)& (0+255),w,b
 21950  003D46  E106               	bnz	u17150
 21951  003D48  0E1A               	movlw	26
 21952  003D4A  5D2E               	subwf	(??_xtoa+2)& (0+255),w,b
 21953  003D4C  B0D8               	btfsc	status,0,c
 21954  003D4E  D002               	goto	u17150
 21955  003D50  0E01               	movlw	1
 21956  003D52  D001               	goto	u17160
 21957  003D54                     u17150:
 21958  003D54  0E00               	movlw	0
 21959  003D56                     u17160:
 21960  003D56  6F36               	movwf	_xtoa$5200& (0+255),b
 21961  003D58  6B37               	clrf	(_xtoa$5200+1)& (0+255),b
 21962                           
 21963                           ; BSR set to: 1
 21964  003D5A  5136               	movf	_xtoa$5200& (0+255),w,b
 21965  003D5C  1137               	iorwf	(_xtoa$5200+1)& (0+255),w,b
 21966  003D5E  B4D8               	btfsc	status,2,c
 21967  003D60  D00E               	goto	l17795
 21968                           
 21969                           ; BSR set to: 1
 21970                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c =
      +                           toupper(c);
 21971  003D62  0060  F518  F10A   	movff	xtoa@c,toupper@c
 21972  003D68  0060  F51C  F10B   	movff	xtoa@c+1,toupper@c+1
 21973  003D6E  EC38  F047         	call	_toupper	;wreg free
 21974  003D72  0060  F428  F146   	movff	?_toupper,xtoa@c
 21975  003D78  0060  F42C  F147   	movff	?_toupper+1,xtoa@c+1
 21976  003D7E                     l17795:
 21977                           
 21978                           ; BSR set to: 1
 21979                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i]
      +                           = (char)c;
 21980  003D7E  0E89               	movlw	low _dbuf
 21981  003D80  2544               	addwf	xtoa@i& (0+255),w,b
 21982  003D82  6ED9               	movwf	fsr2l,c
 21983  003D84  0E03               	movlw	high _dbuf
 21984  003D86  2145               	addwfc	(xtoa@i+1)& (0+255),w,b
 21985  003D88  6EDA               	movwf	fsr2h,c
 21986  003D8A  0060  F51B  FFDF   	movff	xtoa@c,indf2
 21987                           
 21988                           ; BSR set to: 1
 21989                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 21990  003D90  0738               	decf	xtoa@p& (0+255),f,b
 21991  003D92  A0D8               	btfss	status,0,c
 21992  003D94  0739               	decf	(xtoa@p+1)& (0+255),f,b
 21993                           
 21994                           ; BSR set to: 1
 21995                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 21996  003D96  073A               	decf	xtoa@w& (0+255),f,b
 21997  003D98  A0D8               	btfss	status,0,c
 21998  003D9A  073B               	decf	(xtoa@w+1)& (0+255),f,b
 21999                           
 22000                           ; BSR set to: 1
 22001                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >
      +                          > 4;
 22002  003D9C  0060  F4F0  F12C   	movff	xtoa@n,??_xtoa
 22003  003DA2  0060  F4F4  F12D   	movff	xtoa@n+1,??_xtoa+1
 22004  003DA8  0060  F4F8  F12E   	movff	xtoa@n+2,??_xtoa+2
 22005  003DAE  0060  F4FC  F12F   	movff	xtoa@n+3,??_xtoa+3
 22006  003DB4  0060  F500  F130   	movff	xtoa@n+4,??_xtoa+4
 22007  003DBA  0060  F504  F131   	movff	xtoa@n+5,??_xtoa+5
 22008  003DC0  0060  F508  F132   	movff	xtoa@n+6,??_xtoa+6
 22009  003DC6  0060  F50C  F133   	movff	xtoa@n+7,??_xtoa+7
 22010  003DCC  0E05               	movlw	5
 22011  003DCE  D009               	goto	u17180
 22012  003DD0                     u17185:
 22013  003DD0  90D8               	bcf	status,0,c
 22014  003DD2  3333               	rrcf	(??_xtoa+7)& (0+255),f,b
 22015  003DD4  3332               	rrcf	(??_xtoa+6)& (0+255),f,b
 22016  003DD6  3331               	rrcf	(??_xtoa+5)& (0+255),f,b
 22017  003DD8  3330               	rrcf	(??_xtoa+4)& (0+255),f,b
 22018  003DDA  332F               	rrcf	(??_xtoa+3)& (0+255),f,b
 22019  003DDC  332E               	rrcf	(??_xtoa+2)& (0+255),f,b
 22020  003DDE  332D               	rrcf	(??_xtoa+1)& (0+255),f,b
 22021  003DE0  332C               	rrcf	??_xtoa& (0+255),f,b
 22022  003DE2                     u17180:
 22023  003DE2  2EE8               	decfsz	wreg,f,c
 22024  003DE4  D7F5               	goto	u17185
 22025  003DE6  0060  F4B0  F13C   	movff	??_xtoa,xtoa@n
 22026  003DEC  0060  F4B4  F13D   	movff	??_xtoa+1,xtoa@n+1
 22027  003DF2  0060  F4B8  F13E   	movff	??_xtoa+2,xtoa@n+2
 22028  003DF8  0060  F4BC  F13F   	movff	??_xtoa+3,xtoa@n+3
 22029  003DFE  0060  F4C0  F140   	movff	??_xtoa+4,xtoa@n+4
 22030  003E04  0060  F4C4  F141   	movff	??_xtoa+5,xtoa@n+5
 22031  003E0A  0060  F4C8  F142   	movff	??_xtoa+6,xtoa@n+6
 22032  003E10  0060  F4CC  F143   	movff	??_xtoa+7,xtoa@n+7
 22033  003E16                     l17803:
 22034                           
 22035                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i 
      +                          < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 22036  003E16  0101               	movlb	1	; () banked
 22037  003E18  BF45               	btfsc	(xtoa@i+1)& (0+255),7,b
 22038  003E1A  D020               	goto	u17230
 22039  003E1C  5145               	movf	(xtoa@i+1)& (0+255),w,b
 22040  003E1E  E104               	bnz	u17190
 22041  003E20  0E02               	movlw	2
 22042  003E22  5D44               	subwf	xtoa@i& (0+255),w,b
 22043  003E24  A0D8               	btfss	status,0,c
 22044  003E26  D01A               	goto	u17230
 22045  003E28                     u17190:
 22046                           
 22047                           ; BSR set to: 1
 22048  003E28  513C               	movf	xtoa@n& (0+255),w,b
 22049  003E2A  113D               	iorwf	(xtoa@n+1)& (0+255),w,b
 22050  003E2C  113E               	iorwf	(xtoa@n+2)& (0+255),w,b
 22051  003E2E  113F               	iorwf	(xtoa@n+3)& (0+255),w,b
 22052  003E30  1140               	iorwf	(xtoa@n+4)& (0+255),w,b
 22053  003E32  1141               	iorwf	(xtoa@n+5)& (0+255),w,b
 22054  003E34  1142               	iorwf	(xtoa@n+6)& (0+255),w,b
 22055  003E36  1143               	iorwf	(xtoa@n+7)& (0+255),w,b
 22056  003E38  A4D8               	btfss	status,2,c
 22057  003E3A  D745               	goto	l17773
 22058                           
 22059                           ; BSR set to: 1
 22060  003E3C  BF39               	btfsc	(xtoa@p+1)& (0+255),7,b
 22061  003E3E  D005               	goto	u17210
 22062  003E40  5139               	movf	(xtoa@p+1)& (0+255),w,b
 22063  003E42  E102               	bnz	u17211
 22064  003E44  0538               	decf	xtoa@p& (0+255),w,b
 22065  003E46  B0D8               	btfsc	status,0,c
 22066  003E48                     u17211:
 22067  003E48  D73E               	goto	l17773
 22068  003E4A                     u17210:
 22069                           
 22070                           ; BSR set to: 1
 22071  003E4A  BF3B               	btfsc	(xtoa@w+1)& (0+255),7,b
 22072  003E4C  D007               	goto	u17230
 22073  003E4E  513B               	movf	(xtoa@w+1)& (0+255),w,b
 22074  003E50  E103               	bnz	u17220
 22075  003E52  053A               	decf	xtoa@w& (0+255),w,b
 22076  003E54  A0D8               	btfss	status,0,c
 22077  003E56  D002               	goto	u17230
 22078  003E58                     u17220:
 22079                           
 22080                           ; BSR set to: 1
 22081  003E58  B3CB               	btfsc	_flags& (0+255),1,b
 22082  003E5A  D735               	goto	l17773
 22083  003E5C                     u17230:
 22084                           
 22085                           ; BSR set to: 1
 22086                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags &
      +                           (1 << 4)) {
 22087  003E5C  A9CB               	btfss	_flags& (0+255),4,b
 22088  003E5E  D017               	goto	l17819
 22089                           
 22090                           ; BSR set to: 1
 22091                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 22092  003E60  0744               	decf	xtoa@i& (0+255),f,b
 22093  003E62  A0D8               	btfss	status,0,c
 22094  003E64  0745               	decf	(xtoa@i+1)& (0+255),f,b
 22095                           
 22096                           ; BSR set to: 1
 22097                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i]
      +                           = x;
 22098  003E66  0E89               	movlw	low _dbuf
 22099  003E68  2544               	addwf	xtoa@i& (0+255),w,b
 22100  003E6A  6ED9               	movwf	fsr2l,c
 22101  003E6C  0E03               	movlw	high _dbuf
 22102  003E6E  2145               	addwfc	(xtoa@i+1)& (0+255),w,b
 22103  003E70  6EDA               	movwf	fsr2h,c
 22104  003E72  0060  F4AF  FFDF   	movff	xtoa@x,indf2
 22105                           
 22106                           ; BSR set to: 1
 22107                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 22108  003E78  0744               	decf	xtoa@i& (0+255),f,b
 22109  003E7A  A0D8               	btfss	status,0,c
 22110  003E7C  0745               	decf	(xtoa@i+1)& (0+255),f,b
 22111                           
 22112                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i]
      +                           = '0';
 22113  003E7E  0E89               	movlw	low _dbuf
 22114  003E80  2544               	addwf	xtoa@i& (0+255),w,b
 22115  003E82  6ED9               	movwf	fsr2l,c
 22116  003E84  0E03               	movlw	high _dbuf
 22117  003E86  2145               	addwfc	(xtoa@i+1)& (0+255),w,b
 22118  003E88  6EDA               	movwf	fsr2h,c
 22119  003E8A  0E30               	movlw	48
 22120  003E8C  6EDF               	movwf	indf2,c
 22121  003E8E                     l17819:
 22122                           
 22123                           ; BSR set to: 1
 22124                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(
      +                          fp, &dbuf[i], w);
 22125  003E8E  0060  F484  F116   	movff	xtoa@fp,pad@fp
 22126  003E94  0060  F488  F117   	movff	xtoa@fp+1,pad@fp+1
 22127  003E9A  0E89               	movlw	low _dbuf
 22128  003E9C  2544               	addwf	xtoa@i& (0+255),w,b
 22129  003E9E  6F18               	movwf	pad@buf& (0+255),b
 22130  003EA0  0E03               	movlw	high _dbuf
 22131  003EA2  2145               	addwfc	(xtoa@i+1)& (0+255),w,b
 22132  003EA4  6F19               	movwf	(pad@buf+1)& (0+255),b
 22133  003EA6  0060  F4E8  F11A   	movff	xtoa@w,pad@p
 22134  003EAC  0060  F4EC  F11B   	movff	xtoa@w+1,pad@p+1
 22135  003EB2  EC38  F039         	call	_pad	;wreg free
 22136  003EB6  0060  F458  F121   	movff	?_pad,?_xtoa
 22137  003EBC  0060  F45C  F122   	movff	?_pad+1,?_xtoa+1
 22138                           
 22139                           ; BSR set to: 1
 22140  003EC2  0012               	return		;funcret
 22141  003EC4                     __end_of_xtoa:
 22142                           	opt callstack 0
 22143                           
 22144 ;; *************** function _toupper *****************
 22145 ;; Defined at:
 22146 ;;		line 4 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 22147 ;; Parameters:    Size  Location     Type
 22148 ;;  c               2   10[BANK1 ] int 
 22149 ;; Auto vars:     Size  Location     Type
 22150 ;;		None
 22151 ;; Return value:  Size  Location     Type
 22152 ;;                  2   10[BANK1 ] int 
 22153 ;; Registers used:
 22154 ;;		wreg, status,2, status,0
 22155 ;; Tracked objects:
 22156 ;;		On entry : 3F/1
 22157 ;;		On exit  : 3F/1
 22158 ;;		Unchanged: 0/0
 22159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22160 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22161 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22162 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22163 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22164 ;;Total ram usage:        8 bytes
 22165 ;; Hardware stack levels used:    1
 22166 ;; Hardware stack levels required when called:   17
 22167 ;; This function calls:
 22168 ;;		_islower
 22169 ;; This function is called by:
 22170 ;;		_xtoa
 22171 ;; This function uses a non-reentrant model
 22172 ;;
 22173                           
 22174                           	psect	text166
 22175  008E70                     __ptext166:
 22176                           	opt callstack 0
 22177  008E70                     _toupper:
 22178                           	opt callstack 9
 22179                           
 22180                           ; BSR set to: 1
 22181                           
 22182                           ; BSR set to: 1
 22183                           ;incstack = 0
 22184  008E70  0E9F               	movlw	159
 22185  008E72  6F0C               	movwf	??_toupper& (0+255),b
 22186  008E74  0EFF               	movlw	255
 22187  008E76  6F0D               	movwf	(??_toupper+1)& (0+255),b
 22188  008E78  0060  F428  F10E   	movff	toupper@c,??_toupper+2
 22189  008E7E  0060  F42C  F10F   	movff	toupper@c+1,??_toupper+3
 22190  008E84  510C               	movf	??_toupper& (0+255),w,b
 22191  008E86  270E               	addwf	(??_toupper+2)& (0+255),f,b
 22192  008E88  510D               	movf	(??_toupper+1)& (0+255),w,b
 22193  008E8A  230F               	addwfc	(??_toupper+3)& (0+255),f,b
 22194  008E8C  510F               	movf	(??_toupper+3)& (0+255),w,b
 22195  008E8E  E106               	bnz	u16470
 22196  008E90  0E1A               	movlw	26
 22197  008E92  5D0E               	subwf	(??_toupper+2)& (0+255),w,b
 22198  008E94  B0D8               	btfsc	status,0,c
 22199  008E96  D002               	goto	u16470
 22200  008E98  0E01               	movlw	1
 22201  008E9A  D001               	goto	u16480
 22202  008E9C                     u16470:
 22203  008E9C  0E00               	movlw	0
 22204  008E9E                     u16480:
 22205  008E9E  6F10               	movwf	_toupper$5789& (0+255),b
 22206  008EA0  6B11               	clrf	(_toupper$5789+1)& (0+255),b
 22207                           
 22208                           ; BSR set to: 1
 22209  008EA2  5110               	movf	_toupper$5789& (0+255),w,b
 22210  008EA4  1111               	iorwf	(_toupper$5789+1)& (0+255),w,b
 22211  008EA6  B4D8               	btfsc	status,2,c
 22212  008EA8  D005               	goto	l4393
 22213                           
 22214                           ; BSR set to: 1
 22215  008EAA  0E5F               	movlw	95
 22216  008EAC  150A               	andwf	toupper@c& (0+255),w,b
 22217  008EAE  6F0A               	movwf	?_toupper& (0+255),b
 22218  008EB0  6B0B               	clrf	(?_toupper+1)& (0+255),b
 22219  008EB2  0012               	return	
 22220  008EB4                     l4393:
 22221                           
 22222                           ; BSR set to: 1
 22223  008EB4  0060  F428  F10A   	movff	toupper@c,?_toupper
 22224  008EBA  0060  F42C  F10B   	movff	toupper@c+1,?_toupper+1
 22225                           
 22226                           ; BSR set to: 1
 22227  008EC0  0012               	return		;funcret
 22228  008EC2                     __end_of_toupper:
 22229                           	opt callstack 0
 22230                           
 22231 ;; *************** function _islower *****************
 22232 ;; Defined at:
 22233 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 22234 ;; Parameters:    Size  Location     Type
 22235 ;;  c               2    4[BANK1 ] int 
 22236 ;; Auto vars:     Size  Location     Type
 22237 ;;		None
 22238 ;; Return value:  Size  Location     Type
 22239 ;;                  2    4[BANK1 ] int 
 22240 ;; Registers used:
 22241 ;;		wreg, status,2, status,0
 22242 ;; Tracked objects:
 22243 ;;		On entry : 0/0
 22244 ;;		On exit  : 3F/1
 22245 ;;		Unchanged: 0/0
 22246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22247 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22249 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22250 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22251 ;;Total ram usage:        6 bytes
 22252 ;; Hardware stack levels used:    1
 22253 ;; Hardware stack levels required when called:   16
 22254 ;; This function calls:
 22255 ;;		Nothing
 22256 ;; This function is called by:
 22257 ;;		_toupper
 22258 ;; This function uses a non-reentrant model
 22259 ;;
 22260                           
 22261                           	psect	text167
 22262  00958E                     __ptext167:
 22263                           	opt callstack 0
 22264  00958E                     _islower:
 22265                           	opt callstack 9
 22266                           
 22267                           ; BSR set to: 1
 22268                           ;incstack = 0
 22269  00958E  0E9F               	movlw	159
 22270  009590  0101               	movlb	1	; () banked
 22271  009592  6F06               	movwf	??_islower& (0+255),b
 22272  009594  0EFF               	movlw	255
 22273  009596  6F07               	movwf	(??_islower+1)& (0+255),b
 22274  009598  0060  F410  F108   	movff	islower@c,??_islower+2
 22275  00959E  0060  F414  F109   	movff	islower@c+1,??_islower+3
 22276  0095A4  5106               	movf	??_islower& (0+255),w,b
 22277  0095A6  2708               	addwf	(??_islower+2)& (0+255),f,b
 22278  0095A8  5107               	movf	(??_islower+1)& (0+255),w,b
 22279  0095AA  2309               	addwfc	(??_islower+3)& (0+255),f,b
 22280  0095AC  5109               	movf	(??_islower+3)& (0+255),w,b
 22281  0095AE  E106               	bnz	u15860
 22282  0095B0  0E1A               	movlw	26
 22283  0095B2  5D08               	subwf	(??_islower+2)& (0+255),w,b
 22284  0095B4  B0D8               	btfsc	status,0,c
 22285  0095B6  D002               	goto	u15860
 22286  0095B8  0E01               	movlw	1
 22287  0095BA  D001               	goto	u15870
 22288  0095BC                     u15860:
 22289  0095BC  0E00               	movlw	0
 22290  0095BE                     u15870:
 22291  0095BE  6F04               	movwf	?_islower& (0+255),b
 22292  0095C0  6B05               	clrf	(?_islower+1)& (0+255),b
 22293                           
 22294                           ; BSR set to: 1
 22295  0095C2  0012               	return		;funcret
 22296  0095C4                     __end_of_islower:
 22297                           	opt callstack 0
 22298                           
 22299 ;; *************** function _isupper *****************
 22300 ;; Defined at:
 22301 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 22302 ;; Parameters:    Size  Location     Type
 22303 ;;  c               2    4[BANK1 ] int 
 22304 ;; Auto vars:     Size  Location     Type
 22305 ;;		None
 22306 ;; Return value:  Size  Location     Type
 22307 ;;                  2    4[BANK1 ] int 
 22308 ;; Registers used:
 22309 ;;		wreg, status,2, status,0
 22310 ;; Tracked objects:
 22311 ;;		On entry : 0/0
 22312 ;;		On exit  : 3F/1
 22313 ;;		Unchanged: 0/0
 22314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22315 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22317 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22318 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22319 ;;Total ram usage:        6 bytes
 22320 ;; Hardware stack levels used:    1
 22321 ;; Hardware stack levels required when called:   16
 22322 ;; This function calls:
 22323 ;;		Nothing
 22324 ;; This function is called by:
 22325 ;;		_xtoa
 22326 ;; This function uses a non-reentrant model
 22327 ;;
 22328                           
 22329                           	psect	text168
 22330  0095C4                     __ptext168:
 22331                           	opt callstack 0
 22332  0095C4                     _isupper:
 22333                           	opt callstack 10
 22334                           
 22335                           ; BSR set to: 1
 22336                           ;incstack = 0
 22337  0095C4  0EBF               	movlw	191
 22338  0095C6  0101               	movlb	1	; () banked
 22339  0095C8  6F06               	movwf	??_isupper& (0+255),b
 22340  0095CA  0EFF               	movlw	255
 22341  0095CC  6F07               	movwf	(??_isupper+1)& (0+255),b
 22342  0095CE  0060  F410  F108   	movff	isupper@c,??_isupper+2
 22343  0095D4  0060  F414  F109   	movff	isupper@c+1,??_isupper+3
 22344  0095DA  5106               	movf	??_isupper& (0+255),w,b
 22345  0095DC  2708               	addwf	(??_isupper+2)& (0+255),f,b
 22346  0095DE  5107               	movf	(??_isupper+1)& (0+255),w,b
 22347  0095E0  2309               	addwfc	(??_isupper+3)& (0+255),f,b
 22348  0095E2  5109               	movf	(??_isupper+3)& (0+255),w,b
 22349  0095E4  E106               	bnz	u16430
 22350  0095E6  0E1A               	movlw	26
 22351  0095E8  5D08               	subwf	(??_isupper+2)& (0+255),w,b
 22352  0095EA  B0D8               	btfsc	status,0,c
 22353  0095EC  D002               	goto	u16430
 22354  0095EE  0E01               	movlw	1
 22355  0095F0  D001               	goto	u16440
 22356  0095F2                     u16430:
 22357  0095F2  0E00               	movlw	0
 22358  0095F4                     u16440:
 22359  0095F4  6F04               	movwf	?_isupper& (0+255),b
 22360  0095F6  6B05               	clrf	(?_isupper+1)& (0+255),b
 22361                           
 22362                           ; BSR set to: 1
 22363  0095F8  0012               	return		;funcret
 22364  0095FA                     __end_of_isupper:
 22365                           	opt callstack 0
 22366                           
 22367 ;; *************** function _isalpha *****************
 22368 ;; Defined at:
 22369 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 22370 ;; Parameters:    Size  Location     Type
 22371 ;;  c               2    4[BANK1 ] int 
 22372 ;; Auto vars:     Size  Location     Type
 22373 ;;		None
 22374 ;; Return value:  Size  Location     Type
 22375 ;;                  2    4[BANK1 ] int 
 22376 ;; Registers used:
 22377 ;;		wreg, status,2, status,0
 22378 ;; Tracked objects:
 22379 ;;		On entry : 0/0
 22380 ;;		On exit  : 3F/1
 22381 ;;		Unchanged: 0/0
 22382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22383 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22385 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22386 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22387 ;;Total ram usage:        6 bytes
 22388 ;; Hardware stack levels used:    1
 22389 ;; Hardware stack levels required when called:   16
 22390 ;; This function calls:
 22391 ;;		Nothing
 22392 ;; This function is called by:
 22393 ;;		_xtoa
 22394 ;; This function uses a non-reentrant model
 22395 ;;
 22396                           
 22397                           	psect	text169
 22398  0095FA                     __ptext169:
 22399                           	opt callstack 0
 22400  0095FA                     _isalpha:
 22401                           	opt callstack 10
 22402                           
 22403                           ; BSR set to: 1
 22404                           ;incstack = 0
 22405  0095FA  0E9F               	movlw	159
 22406  0095FC  0101               	movlb	1	; () banked
 22407  0095FE  6F06               	movwf	??_isalpha& (0+255),b
 22408  009600  0EFF               	movlw	255
 22409  009602  6F07               	movwf	(??_isalpha+1)& (0+255),b
 22410  009604  0E20               	movlw	32
 22411  009606  1104               	iorwf	isalpha@c& (0+255),w,b
 22412  009608  6F08               	movwf	(??_isalpha+2)& (0+255),b
 22413  00960A  0E00               	movlw	0
 22414  00960C  1105               	iorwf	(isalpha@c+1)& (0+255),w,b
 22415  00960E  6F09               	movwf	(??_isalpha+3)& (0+255),b
 22416  009610  5106               	movf	??_isalpha& (0+255),w,b
 22417  009612  2708               	addwf	(??_isalpha+2)& (0+255),f,b
 22418  009614  5107               	movf	(??_isalpha+1)& (0+255),w,b
 22419  009616  2309               	addwfc	(??_isalpha+3)& (0+255),f,b
 22420  009618  5109               	movf	(??_isalpha+3)& (0+255),w,b
 22421  00961A  E106               	bnz	u16450
 22422  00961C  0E1A               	movlw	26
 22423  00961E  5D08               	subwf	(??_isalpha+2)& (0+255),w,b
 22424  009620  B0D8               	btfsc	status,0,c
 22425  009622  D002               	goto	u16450
 22426  009624  0E01               	movlw	1
 22427  009626  D001               	goto	u16460
 22428  009628                     u16450:
 22429  009628  0E00               	movlw	0
 22430  00962A                     u16460:
 22431  00962A  6F04               	movwf	?_isalpha& (0+255),b
 22432  00962C  6B05               	clrf	(?_isalpha+1)& (0+255),b
 22433                           
 22434                           ; BSR set to: 1
 22435  00962E  0012               	return		;funcret
 22436  009630                     __end_of_isalpha:
 22437                           	opt callstack 0
 22438                           
 22439 ;; *************** function _stoa *****************
 22440 ;; Defined at:
 22441 ;;		line 546 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 22442 ;; Parameters:    Size  Location     Type
 22443 ;;  fp              2   15[BANK1 ] PTR struct _IO_FILE
 22444 ;;		 -> sprintf@f(6), NULL(0), 
 22445 ;;  s               2   17[BANK1 ] PTR unsigned char 
 22446 ;;		 -> ?_printf(2), ?_sprintf(2), adcVOffset(2), adcOffset(2), 
 22447 ;;		 -> STR_29(3), STR_28(3), STR_27(3), STR_26(3), 
 22448 ;;		 -> alarmData(399), STR_11(3), 
 22449 ;; Auto vars:     Size  Location     Type
 22450 ;;  nuls            7   20[BANK1 ] unsigned char [7]
 22451 ;;  l               2   35[BANK1 ] int 
 22452 ;;  p               2   33[BANK1 ] int 
 22453 ;;  cp              2   31[BANK1 ] PTR unsigned char 
 22454 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), adcVOffset(2), 
 22455 ;;		 -> adcOffset(2), STR_29(3), STR_28(3), STR_27(3), 
 22456 ;;		 -> STR_26(3), alarmData(399), STR_11(3), 
 22457 ;;  w               2   29[BANK1 ] int 
 22458 ;;  i               2   27[BANK1 ] int 
 22459 ;; Return value:  Size  Location     Type
 22460 ;;                  2   15[BANK1 ] int 
 22461 ;; Registers used:
 22462 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22463 ;; Tracked objects:
 22464 ;;		On entry : 3F/1
 22465 ;;		On exit  : 3F/1
 22466 ;;		Unchanged: 0/0
 22467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22468 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22469 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22470 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22471 ;;      Totals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22472 ;;Total ram usage:       22 bytes
 22473 ;; Hardware stack levels used:    1
 22474 ;; Hardware stack levels required when called:   19
 22475 ;; This function calls:
 22476 ;;		_fputc
 22477 ;;		_strlen
 22478 ;; This function is called by:
 22479 ;;		_vfpfcnvrt
 22480 ;; This function uses a non-reentrant model
 22481 ;;
 22482                           
 22483                           	psect	text170
 22484  0052AA                     __ptext170:
 22485                           	opt callstack 0
 22486  0052AA                     _stoa:
 22487                           	opt callstack 8
 22488                           
 22489                           ; BSR set to: 1
 22490                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa
      +                          (FILE *fp, char *s);/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 5
      +                          47: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *
      +                          cp, nuls[] = "(null)";
 22491                           
 22492                           ; BSR set to: 1
 22493                           ;incstack = 0
 22494  0052AA  EE20  F2D0         	lfsr	2,stoa@F1144
 22495  0052AE  EE10  F114         	lfsr	1,stoa@nuls
 22496  0052B2  0E06               	movlw	6
 22497  0052B4                     u16981:
 22498  0052B4  006F FF6F FFE3     	movff	plusw2,plusw1
 22499  0052BA  06E8               	decf	wreg,f,c
 22500  0052BC  E2FB               	bc	u16981
 22501                           
 22502                           ; BSR set to: 1
 22503                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p
      +                          , w;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 22504  0052BE  0060  F444  F11F   	movff	stoa@s,stoa@cp
 22505  0052C4  0060  F448  F120   	movff	stoa@s+1,stoa@cp+1
 22506                           
 22507                           ; BSR set to: 1
 22508                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 22509  0052CA  511F               	movf	stoa@cp& (0+255),w,b
 22510  0052CC  1120               	iorwf	(stoa@cp+1)& (0+255),w,b
 22511  0052CE  A4D8               	btfss	status,2,c
 22512  0052D0  D004               	goto	l17723
 22513                           
 22514                           ; BSR set to: 1
 22515                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nu
      +                          ls;
 22516  0052D2  0E14               	movlw	low stoa@nuls
 22517  0052D4  6F1F               	movwf	stoa@cp& (0+255),b
 22518  0052D6  0E01               	movlw	high stoa@nuls
 22519  0052D8  6F20               	movwf	(stoa@cp+1)& (0+255),b
 22520  0052DA                     l17723:
 22521                           
 22522                           ; BSR set to: 1
 22523                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(
      +                          cp);
 22524  0052DA  0060  F47C  F104   	movff	stoa@cp,strlen@s
 22525  0052E0  0060  F480  F105   	movff	stoa@cp+1,strlen@s+1
 22526  0052E6  ECE5  F046         	call	_strlen	;wreg free
 22527  0052EA  0060  F410  F123   	movff	?_strlen,stoa@l
 22528  0052F0  0060  F414  F124   	movff	?_strlen+1,stoa@l+1
 22529                           
 22530                           ; BSR set to: 1
 22531                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 22532  0052F6  0060  F724  F121   	movff	_prec,stoa@p
 22533  0052FC  0060  F728  F122   	movff	_prec+1,stoa@p+1
 22534                           
 22535                           ; BSR set to: 1
 22536                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 
      +                          0) && (p < l)) ? p : l;
 22537  005302  BF22               	btfsc	(stoa@p+1)& (0+255),7,b
 22538  005304  D010               	goto	l3520
 22539                           
 22540                           ; BSR set to: 1
 22541  005306  5123               	movf	stoa@l& (0+255),w,b
 22542  005308  5D21               	subwf	stoa@p& (0+255),w,b
 22543  00530A  5122               	movf	(stoa@p+1)& (0+255),w,b
 22544  00530C  0A80               	xorlw	128
 22545  00530E  6F13               	movwf	??_stoa& (0+255),b
 22546  005310  5124               	movf	(stoa@l+1)& (0+255),w,b
 22547  005312  0A80               	xorlw	128
 22548  005314  5913               	subwfb	??_stoa& (0+255),w,b
 22549  005316  B0D8               	btfsc	status,0,c
 22550  005318  D006               	goto	l3520
 22551                           
 22552                           ; BSR set to: 1
 22553  00531A  0060  F484  F123   	movff	stoa@p,stoa@l
 22554  005320  0060  F488  F124   	movff	stoa@p+1,stoa@l+1
 22555  005326                     l3520:
 22556                           
 22557                           ; BSR set to: 1
 22558                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 22559  005326  0060  F48C  F121   	movff	stoa@l,stoa@p
 22560  00532C  0060  F490  F122   	movff	stoa@l+1,stoa@p+1
 22561                           
 22562                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 22563  005332  0060  F71C  F11D   	movff	_width,stoa@w
 22564  005338  0060  F720  F11E   	movff	_width+1,stoa@w+1
 22565                           
 22566                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags
      +                           & (1 << 0))) {
 22567  00533E  A1CB               	btfss	_flags& (0+255),0,b
 22568  005340  D00F               	goto	l17737
 22569  005342  D018               	goto	u17030
 22570  005344                     l17733:
 22571                           
 22572                           ; BSR set to: 1
 22573                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fpu
      +                          tc(' ', fp);
 22574  005344  0E00               	movlw	0
 22575  005346  6F07               	movwf	(fputc@c+1)& (0+255),b
 22576  005348  0E20               	movlw	32
 22577  00534A  6F06               	movwf	fputc@c& (0+255),b
 22578  00534C  0060  F43C  F108   	movff	stoa@fp,fputc@fp
 22579  005352  0060  F440  F109   	movff	stoa@fp+1,fputc@fp+1
 22580  005358  ECCF  F037         	call	_fputc	;wreg free
 22581                           
 22582                           ; BSR set to: 1
 22583                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l
      +                          ;
 22584  00535C  4B23               	infsnz	stoa@l& (0+255),f,b
 22585  00535E  2B24               	incf	(stoa@l+1)& (0+255),f,b
 22586  005360                     l17737:
 22587                           
 22588                           ; BSR set to: 1
 22589                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (
      +                          l < w) {
 22590  005360  511D               	movf	stoa@w& (0+255),w,b
 22591  005362  5D23               	subwf	stoa@l& (0+255),w,b
 22592  005364  5124               	movf	(stoa@l+1)& (0+255),w,b
 22593  005366  0A80               	xorlw	128
 22594  005368  6F13               	movwf	??_stoa& (0+255),b
 22595  00536A  511E               	movf	(stoa@w+1)& (0+255),w,b
 22596  00536C  0A80               	xorlw	128
 22597  00536E  5913               	subwfb	??_stoa& (0+255),w,b
 22598  005370  A0D8               	btfss	status,0,c
 22599  005372  D7E8               	goto	l17733
 22600  005374                     u17030:
 22601                           
 22602                           ; BSR set to: 1
 22603                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 22604  005374  0E00               	movlw	0
 22605  005376  6F1C               	movwf	(stoa@i+1)& (0+255),b
 22606  005378  0E00               	movlw	0
 22607  00537A  6F1B               	movwf	stoa@i& (0+255),b
 22608                           
 22609                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < 
      +                          p) {
 22610  00537C  D026               	goto	l17747
 22611  00537E                     l17741:
 22612                           
 22613                           ; BSR set to: 1
 22614                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*
      +                          cp, fp);
 22615  00537E  0060  F47F  FFF6   	movff	stoa@cp,tblptrl
 22616  005384  0060  F483  FFF7   	movff	stoa@cp+1,tblptrh
 22617  00538A  0E00               	movlw	low (__mediumconst shr (0+16))
 22618  00538C  6EF8               	movwf	tblptru,c
 22619  00538E  0E0F               	movlw	(high __ramtop+-1)
 22620  005390  64F7               	cpfsgt	tblptrh,c
 22621  005392  D003               	bra	u17047
 22622  005394  0008               	tblrd		*
 22623  005396  50F5               	movf	tablat,w,c
 22624  005398  D007               	bra	u17040
 22625  00539A                     u17047:
 22626  00539A  006F FFDB FFE1     	movff	tblptrl,fsr1l
 22627  0053A0  006F FFDF FFE2     	movff	tblptrh,fsr1h
 22628  0053A6  50E7               	movf	indf1,w,c
 22629  0053A8                     u17040:
 22630  0053A8  0101               	movlb	1	; () banked
 22631  0053AA  6F13               	movwf	??_stoa& (0+255),b
 22632  0053AC  5113               	movf	??_stoa& (0+255),w,b
 22633  0053AE  6F06               	movwf	fputc@c& (0+255),b
 22634  0053B0  6B07               	clrf	(fputc@c+1)& (0+255),b
 22635  0053B2  0060  F43C  F108   	movff	stoa@fp,fputc@fp
 22636  0053B8  0060  F440  F109   	movff	stoa@fp+1,fputc@fp+1
 22637  0053BE  ECCF  F037         	call	_fputc	;wreg free
 22638                           
 22639                           ; BSR set to: 1
 22640                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 22641  0053C2  4B1F               	infsnz	stoa@cp& (0+255),f,b
 22642  0053C4  2B20               	incf	(stoa@cp+1)& (0+255),f,b
 22643                           
 22644                           ; BSR set to: 1
 22645                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 22646  0053C6  4B1B               	infsnz	stoa@i& (0+255),f,b
 22647  0053C8  2B1C               	incf	(stoa@i+1)& (0+255),f,b
 22648  0053CA                     l17747:
 22649                           
 22650                           ; BSR set to: 1
 22651                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < 
      +                          p) {
 22652  0053CA  5121               	movf	stoa@p& (0+255),w,b
 22653  0053CC  5D1B               	subwf	stoa@i& (0+255),w,b
 22654  0053CE  511C               	movf	(stoa@i+1)& (0+255),w,b
 22655  0053D0  0A80               	xorlw	128
 22656  0053D2  6F13               	movwf	??_stoa& (0+255),b
 22657  0053D4  5122               	movf	(stoa@p+1)& (0+255),w,b
 22658  0053D6  0A80               	xorlw	128
 22659  0053D8  5913               	subwfb	??_stoa& (0+255),w,b
 22660  0053DA  A0D8               	btfss	status,0,c
 22661  0053DC  D7D0               	goto	l17741
 22662                           
 22663                           ; BSR set to: 1
 22664                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags &
      +                           (1 << 0)) {
 22665  0053DE  B1CB               	btfsc	_flags& (0+255),0,b
 22666  0053E0  D00F               	goto	l17755
 22667  0053E2  D018               	goto	u17070
 22668  0053E4                     l17751:
 22669                           
 22670                           ; BSR set to: 1
 22671                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fpu
      +                          tc(' ', fp);
 22672  0053E4  0E00               	movlw	0
 22673  0053E6  6F07               	movwf	(fputc@c+1)& (0+255),b
 22674  0053E8  0E20               	movlw	32
 22675  0053EA  6F06               	movwf	fputc@c& (0+255),b
 22676  0053EC  0060  F43C  F108   	movff	stoa@fp,fputc@fp
 22677  0053F2  0060  F440  F109   	movff	stoa@fp+1,fputc@fp+1
 22678  0053F8  ECCF  F037         	call	_fputc	;wreg free
 22679                           
 22680                           ; BSR set to: 1
 22681                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l
      +                          ;
 22682  0053FC  4B23               	infsnz	stoa@l& (0+255),f,b
 22683  0053FE  2B24               	incf	(stoa@l+1)& (0+255),f,b
 22684  005400                     l17755:
 22685                           
 22686                           ; BSR set to: 1
 22687                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (
      +                          l < w) {
 22688  005400  511D               	movf	stoa@w& (0+255),w,b
 22689  005402  5D23               	subwf	stoa@l& (0+255),w,b
 22690  005404  5124               	movf	(stoa@l+1)& (0+255),w,b
 22691  005406  0A80               	xorlw	128
 22692  005408  6F13               	movwf	??_stoa& (0+255),b
 22693  00540A  511E               	movf	(stoa@w+1)& (0+255),w,b
 22694  00540C  0A80               	xorlw	128
 22695  00540E  5913               	subwfb	??_stoa& (0+255),w,b
 22696  005410  A0D8               	btfss	status,0,c
 22697  005412  D7E8               	goto	l17751
 22698  005414                     u17070:
 22699                           
 22700                           ; BSR set to: 1
 22701                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 22702                           
 22703                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 586:     }
 22704  005414  0060  F48C  F10F   	movff	stoa@l,?_stoa
 22705  00541A  0060  F490  F110   	movff	stoa@l+1,?_stoa+1
 22706                           
 22707                           ; BSR set to: 1
 22708  005420  0012               	return		;funcret
 22709  005422                     __end_of_stoa:
 22710                           	opt callstack 0
 22711                           
 22712 ;; *************** function _dtoa *****************
 22713 ;; Defined at:
 22714 ;;		line 274 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 22715 ;; Parameters:    Size  Location     Type
 22716 ;;  fp              2   33[BANK1 ] PTR struct _IO_FILE
 22717 ;;		 -> sprintf@f(6), NULL(0), 
 22718 ;;  d               8   35[BANK1 ] long long 
 22719 ;; Auto vars:     Size  Location     Type
 22720 ;;  n               8   59[BANK1 ] long long 
 22721 ;;  i               2   67[BANK1 ] int 
 22722 ;;  s               2   57[BANK1 ] int 
 22723 ;;  w               2   55[BANK1 ] int 
 22724 ;;  p               2   53[BANK1 ] int 
 22725 ;; Return value:  Size  Location     Type
 22726 ;;                  2   33[BANK1 ] int 
 22727 ;; Registers used:
 22728 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22729 ;; Tracked objects:
 22730 ;;		On entry : 3F/1
 22731 ;;		On exit  : 3F/1
 22732 ;;		Unchanged: 0/0
 22733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22734 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22735 ;;      Locals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22736 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22737 ;;      Totals:         0       0      36       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22738 ;;Total ram usage:       36 bytes
 22739 ;; Hardware stack levels used:    1
 22740 ;; Hardware stack levels required when called:   21
 22741 ;; This function calls:
 22742 ;;		___aodiv
 22743 ;;		___aomod
 22744 ;;		_abs
 22745 ;;		_pad
 22746 ;; This function is called by:
 22747 ;;		_vfpfcnvrt
 22748 ;; This function uses a non-reentrant model
 22749 ;;
 22750                           
 22751                           	psect	text171
 22752  003716                     __ptext171:
 22753                           	opt callstack 0
 22754  003716                     _dtoa:
 22755                           	opt callstack 6
 22756                           
 22757                           ; BSR set to: 1
 22758                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa
      +                          (FILE *fp, long long d);/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.
      +                          c: 275: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     in
      +                          t i, p, s, w;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:   
      +                            long long n;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 280:  
      +                             n = d;
 22759                           
 22760                           ; BSR set to: 1
 22761                           ;incstack = 0
 22762  003716  0060  F48C  F13B   	movff	dtoa@d,dtoa@n
 22763  00371C  0060  F490  F13C   	movff	dtoa@d+1,dtoa@n+1
 22764  003722  0060  F494  F13D   	movff	dtoa@d+2,dtoa@n+2
 22765  003728  0060  F498  F13E   	movff	dtoa@d+3,dtoa@n+3
 22766  00372E  0060  F49C  F13F   	movff	dtoa@d+4,dtoa@n+4
 22767  003734  0060  F4A0  F140   	movff	dtoa@d+5,dtoa@n+5
 22768  00373A  0060  F4A4  F141   	movff	dtoa@d+6,dtoa@n+6
 22769  003740  0060  F4A8  F142   	movff	dtoa@d+7,dtoa@n+7
 22770                           
 22771                           ; BSR set to: 1
 22772                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ?
      +                           1 : 0;
 22773  003746  AF42               	btfss	(dtoa@n+7)& (0+255),7,b
 22774  003748  D002               	goto	u16830
 22775  00374A  0E01               	movlw	1
 22776  00374C  D001               	goto	u16840
 22777  00374E                     u16830:
 22778  00374E  0E00               	movlw	0
 22779  003750                     u16840:
 22780  003750  6F39               	movwf	dtoa@s& (0+255),b
 22781  003752  6B3A               	clrf	(dtoa@s+1)& (0+255),b
 22782                           
 22783                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 22784  003754  5139               	movf	dtoa@s& (0+255),w,b
 22785  003756  113A               	iorwf	(dtoa@s+1)& (0+255),w,b
 22786  003758  B4D8               	btfsc	status,2,c
 22787  00375A  D010               	goto	l17659
 22788                           
 22789                           ; BSR set to: 1
 22790                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 22791  00375C  1F42               	comf	(dtoa@n+7)& (0+255),f,b
 22792  00375E  1F41               	comf	(dtoa@n+6)& (0+255),f,b
 22793  003760  1F40               	comf	(dtoa@n+5)& (0+255),f,b
 22794  003762  1F3F               	comf	(dtoa@n+4)& (0+255),f,b
 22795  003764  1F3E               	comf	(dtoa@n+3)& (0+255),f,b
 22796  003766  1F3D               	comf	(dtoa@n+2)& (0+255),f,b
 22797  003768  1F3C               	comf	(dtoa@n+1)& (0+255),f,b
 22798  00376A  6D3B               	negf	dtoa@n& (0+255),b
 22799  00376C  0E00               	movlw	0
 22800  00376E  233C               	addwfc	(dtoa@n+1)& (0+255),f,b
 22801  003770  233D               	addwfc	(dtoa@n+2)& (0+255),f,b
 22802  003772  233E               	addwfc	(dtoa@n+3)& (0+255),f,b
 22803  003774  233F               	addwfc	(dtoa@n+4)& (0+255),f,b
 22804  003776  2340               	addwfc	(dtoa@n+5)& (0+255),f,b
 22805  003778  2341               	addwfc	(dtoa@n+6)& (0+255),f,b
 22806  00377A  2342               	addwfc	(dtoa@n+7)& (0+255),f,b
 22807  00377C                     l17659:
 22808                           
 22809                           ; BSR set to: 1
 22810                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec 
      +                          < 0)) {
 22811  00377C  AFCA               	btfss	(_prec+1)& (0+255),7,b
 22812                           
 22813                           ; BSR set to: 1
 22814                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &
      +                          = ~(1 << 1);
 22815  00377E  93CB               	bcf	_flags& (0+255),1,b
 22816                           
 22817                           ; BSR set to: 1
 22818                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < pr
      +                          ec) ? prec : 1;
 22819  003780  BFCA               	btfsc	(_prec+1)& (0+255),7,b
 22820  003782  D005               	goto	u16870
 22821  003784  51CA               	movf	(_prec+1)& (0+255),w,b
 22822  003786  E108               	bnz	l3491
 22823  003788  05C9               	decf	_prec& (0+255),w,b
 22824  00378A  B0D8               	btfsc	status,0,c
 22825  00378C  D005               	goto	l3491
 22826  00378E                     u16870:
 22827                           
 22828                           ; BSR set to: 1
 22829  00378E  0E00               	movlw	0
 22830  003790  6F36               	movwf	(dtoa@p+1)& (0+255),b
 22831  003792  0E01               	movlw	1
 22832  003794  6F35               	movwf	dtoa@p& (0+255),b
 22833  003796  D006               	goto	l3493
 22834  003798                     l3491:
 22835                           
 22836                           ; BSR set to: 1
 22837  003798  0060  F724  F135   	movff	_prec,dtoa@p
 22838  00379E  0060  F728  F136   	movff	_prec+1,dtoa@p+1
 22839  0037A4                     l3493:
 22840                           
 22841                           ; BSR set to: 1
 22842                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 22843  0037A4  0060  F71C  F137   	movff	_width,dtoa@w
 22844  0037AA  0060  F720  F138   	movff	_width+1,dtoa@w+1
 22845                           
 22846                           ; BSR set to: 1
 22847                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (f
      +                          lags & (1 << 2))) {
 22848  0037B0  5139               	movf	dtoa@s& (0+255),w,b
 22849  0037B2  113A               	iorwf	(dtoa@s+1)& (0+255),w,b
 22850  0037B4  A4D8               	btfss	status,2,c
 22851  0037B6  D002               	goto	u16890
 22852                           
 22853                           ; BSR set to: 1
 22854  0037B8  A5CB               	btfss	_flags& (0+255),2,b
 22855  0037BA  D003               	goto	l17673
 22856  0037BC                     u16890:
 22857                           
 22858                           ; BSR set to: 1
 22859                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 22860  0037BC  0737               	decf	dtoa@w& (0+255),f,b
 22861  0037BE  A0D8               	btfss	status,0,c
 22862  0037C0  0738               	decf	(dtoa@w+1)& (0+255),f,b
 22863  0037C2                     l17673:
 22864                           
 22865                           ; BSR set to: 1
 22866                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(
      +                          dbuf) - 1;
 22867  0037C2  0E00               	movlw	0
 22868  0037C4  6F44               	movwf	(dtoa@i+1)& (0+255),b
 22869  0037C6  0E1F               	movlw	31
 22870  0037C8  6F43               	movwf	dtoa@i& (0+255),b
 22871                           
 22872                           ; BSR set to: 1
 22873                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '
      +                          \0';
 22874  0037CA  0E00               	movlw	0
 22875  0037CC  0103               	movlb	3	; () banked
 22876  0037CE  6FA8               	movwf	(_dbuf+31)& (0+255),b
 22877                           
 22878                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 22879  0037D0  D09E               	goto	l17687
 22880  0037D2                     l17677:
 22881                           
 22882                           ; BSR set to: 1
 22883                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 22884  0037D2  0743               	decf	dtoa@i& (0+255),f,b
 22885  0037D4  A0D8               	btfss	status,0,c
 22886  0037D6  0744               	decf	(dtoa@i+1)& (0+255),f,b
 22887                           
 22888                           ; BSR set to: 1
 22889                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i]
      +                           = '0' + abs(n % 10);
 22890  0037D8  0E89               	movlw	low _dbuf
 22891  0037DA  2543               	addwf	dtoa@i& (0+255),w,b
 22892  0037DC  6ED9               	movwf	fsr2l,c
 22893  0037DE  0E03               	movlw	high _dbuf
 22894  0037E0  2144               	addwfc	(dtoa@i+1)& (0+255),w,b
 22895  0037E2  6EDA               	movwf	fsr2h,c
 22896  0037E4  0060  F4EC  F104   	movff	dtoa@n,___aomod@dividend
 22897  0037EA  0060  F4F0  F105   	movff	dtoa@n+1,___aomod@dividend+1
 22898  0037F0  0060  F4F4  F106   	movff	dtoa@n+2,___aomod@dividend+2
 22899  0037F6  0060  F4F8  F107   	movff	dtoa@n+3,___aomod@dividend+3
 22900  0037FC  0060  F4FC  F108   	movff	dtoa@n+4,___aomod@dividend+4
 22901  003802  0060  F500  F109   	movff	dtoa@n+5,___aomod@dividend+5
 22902  003808  0060  F504  F10A   	movff	dtoa@n+6,___aomod@dividend+6
 22903  00380E  0060  F508  F10B   	movff	dtoa@n+7,___aomod@dividend+7
 22904  003814  0E0A               	movlw	10
 22905  003816  6F0C               	movwf	___aomod@divisor& (0+255),b
 22906  003818  0E00               	movlw	0
 22907  00381A  6F0D               	movwf	(___aomod@divisor+1)& (0+255),b
 22908  00381C  0E00               	movlw	0
 22909  00381E  6F0E               	movwf	(___aomod@divisor+2)& (0+255),b
 22910  003820  0E00               	movlw	0
 22911  003822  6F0F               	movwf	(___aomod@divisor+3)& (0+255),b
 22912  003824  0E00               	movlw	0
 22913  003826  6F10               	movwf	(___aomod@divisor+4)& (0+255),b
 22914  003828  0E00               	movlw	0
 22915  00382A  6F11               	movwf	(___aomod@divisor+5)& (0+255),b
 22916  00382C  0E00               	movlw	0
 22917  00382E  6F12               	movwf	(___aomod@divisor+6)& (0+255),b
 22918  003830  0E00               	movlw	0
 22919  003832  6F13               	movwf	(___aomod@divisor+7)& (0+255),b
 22920  003834  EC8E  F02F         	call	___aomod	;wreg free
 22921  003838  0060  F410  F12B   	movff	?___aomod,??_dtoa
 22922  00383E  0060  F414  F12C   	movff	?___aomod+1,??_dtoa+1
 22923  003844  0060  F418  F12D   	movff	?___aomod+2,??_dtoa+2
 22924  00384A  0060  F41C  F12E   	movff	?___aomod+3,??_dtoa+3
 22925  003850  0060  F420  F12F   	movff	?___aomod+4,??_dtoa+4
 22926  003856  0060  F424  F130   	movff	?___aomod+5,??_dtoa+5
 22927  00385C  0060  F428  F131   	movff	?___aomod+6,??_dtoa+6
 22928  003862  0060  F42C  F132   	movff	?___aomod+7,??_dtoa+7
 22929  003868  0060  F4AC  F116   	movff	??_dtoa,abs@a
 22930  00386E  0060  F4B4  F117   	movff	??_dtoa+2,abs@a+1
 22931  003874  ECF1  F049         	call	_abs	;wreg free
 22932  003878  5116               	movf	?_abs& (0+255),w,b
 22933  00387A  0F30               	addlw	48
 22934  00387C  6EDF               	movwf	indf2,c
 22935                           
 22936                           ; BSR set to: 1
 22937                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 22938  00387E  0735               	decf	dtoa@p& (0+255),f,b
 22939  003880  A0D8               	btfss	status,0,c
 22940  003882  0736               	decf	(dtoa@p+1)& (0+255),f,b
 22941                           
 22942                           ; BSR set to: 1
 22943                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 22944  003884  0737               	decf	dtoa@w& (0+255),f,b
 22945  003886  A0D8               	btfss	status,0,c
 22946  003888  0738               	decf	(dtoa@w+1)& (0+255),f,b
 22947                           
 22948                           ; BSR set to: 1
 22949                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n /
      +                           10;
 22950  00388A  0060  F4EC  F104   	movff	dtoa@n,___aodiv@dividend
 22951  003890  0060  F4F0  F105   	movff	dtoa@n+1,___aodiv@dividend+1
 22952  003896  0060  F4F4  F106   	movff	dtoa@n+2,___aodiv@dividend+2
 22953  00389C  0060  F4F8  F107   	movff	dtoa@n+3,___aodiv@dividend+3
 22954  0038A2  0060  F4FC  F108   	movff	dtoa@n+4,___aodiv@dividend+4
 22955  0038A8  0060  F500  F109   	movff	dtoa@n+5,___aodiv@dividend+5
 22956  0038AE  0060  F504  F10A   	movff	dtoa@n+6,___aodiv@dividend+6
 22957  0038B4  0060  F508  F10B   	movff	dtoa@n+7,___aodiv@dividend+7
 22958  0038BA  0E0A               	movlw	10
 22959  0038BC  6F0C               	movwf	___aodiv@divisor& (0+255),b
 22960  0038BE  0E00               	movlw	0
 22961  0038C0  6F0D               	movwf	(___aodiv@divisor+1)& (0+255),b
 22962  0038C2  0E00               	movlw	0
 22963  0038C4  6F0E               	movwf	(___aodiv@divisor+2)& (0+255),b
 22964  0038C6  0E00               	movlw	0
 22965  0038C8  6F0F               	movwf	(___aodiv@divisor+3)& (0+255),b
 22966  0038CA  0E00               	movlw	0
 22967  0038CC  6F10               	movwf	(___aodiv@divisor+4)& (0+255),b
 22968  0038CE  0E00               	movlw	0
 22969  0038D0  6F11               	movwf	(___aodiv@divisor+5)& (0+255),b
 22970  0038D2  0E00               	movlw	0
 22971  0038D4  6F12               	movwf	(___aodiv@divisor+6)& (0+255),b
 22972  0038D6  0E00               	movlw	0
 22973  0038D8  6F13               	movwf	(___aodiv@divisor+7)& (0+255),b
 22974  0038DA  ECF4  F02C         	call	___aodiv	;wreg free
 22975  0038DE  0060  F410  F13B   	movff	?___aodiv,dtoa@n
 22976  0038E4  0060  F414  F13C   	movff	?___aodiv+1,dtoa@n+1
 22977  0038EA  0060  F418  F13D   	movff	?___aodiv+2,dtoa@n+2
 22978  0038F0  0060  F41C  F13E   	movff	?___aodiv+3,dtoa@n+3
 22979  0038F6  0060  F420  F13F   	movff	?___aodiv+4,dtoa@n+4
 22980  0038FC  0060  F424  F140   	movff	?___aodiv+5,dtoa@n+5
 22981  003902  0060  F428  F141   	movff	?___aodiv+6,dtoa@n+6
 22982  003908  0060  F42C  F142   	movff	?___aodiv+7,dtoa@n+7
 22983  00390E                     l17687:
 22984                           
 22985                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 22986  00390E  0101               	movlb	1	; () banked
 22987  003910  BF44               	btfsc	(dtoa@i+1)& (0+255),7,b
 22988  003912  D01F               	goto	u16940
 22989  003914  5144               	movf	(dtoa@i+1)& (0+255),w,b
 22990  003916  E103               	bnz	u16900
 22991  003918  0543               	decf	dtoa@i& (0+255),w,b
 22992  00391A  A0D8               	btfss	status,0,c
 22993  00391C  D01A               	goto	u16940
 22994  00391E                     u16900:
 22995                           
 22996                           ; BSR set to: 1
 22997  00391E  513B               	movf	dtoa@n& (0+255),w,b
 22998  003920  113C               	iorwf	(dtoa@n+1)& (0+255),w,b
 22999  003922  113D               	iorwf	(dtoa@n+2)& (0+255),w,b
 23000  003924  113E               	iorwf	(dtoa@n+3)& (0+255),w,b
 23001  003926  113F               	iorwf	(dtoa@n+4)& (0+255),w,b
 23002  003928  1140               	iorwf	(dtoa@n+5)& (0+255),w,b
 23003  00392A  1141               	iorwf	(dtoa@n+6)& (0+255),w,b
 23004  00392C  1142               	iorwf	(dtoa@n+7)& (0+255),w,b
 23005  00392E  A4D8               	btfss	status,2,c
 23006  003930  D750               	goto	l17677
 23007                           
 23008                           ; BSR set to: 1
 23009  003932  BF36               	btfsc	(dtoa@p+1)& (0+255),7,b
 23010  003934  D005               	goto	u16920
 23011  003936  5136               	movf	(dtoa@p+1)& (0+255),w,b
 23012  003938  E102               	bnz	u16921
 23013  00393A  0535               	decf	dtoa@p& (0+255),w,b
 23014  00393C  B0D8               	btfsc	status,0,c
 23015  00393E                     u16921:
 23016  00393E  D749               	goto	l17677
 23017  003940                     u16920:
 23018                           
 23019                           ; BSR set to: 1
 23020  003940  BF38               	btfsc	(dtoa@w+1)& (0+255),7,b
 23021  003942  D007               	goto	u16940
 23022  003944  5138               	movf	(dtoa@w+1)& (0+255),w,b
 23023  003946  E103               	bnz	u16930
 23024  003948  0537               	decf	dtoa@w& (0+255),w,b
 23025  00394A  A0D8               	btfss	status,0,c
 23026  00394C  D002               	goto	u16940
 23027  00394E                     u16930:
 23028                           
 23029                           ; BSR set to: 1
 23030  00394E  B3CB               	btfsc	_flags& (0+255),1,b
 23031  003950  D740               	goto	l17677
 23032  003952                     u16940:
 23033                           
 23034                           ; BSR set to: 1
 23035                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (f
      +                          lags & (1 << 2))) {
 23036  003952  5139               	movf	dtoa@s& (0+255),w,b
 23037  003954  113A               	iorwf	(dtoa@s+1)& (0+255),w,b
 23038  003956  A4D8               	btfss	status,2,c
 23039  003958  D002               	goto	u16960
 23040                           
 23041                           ; BSR set to: 1
 23042  00395A  A5CB               	btfss	_flags& (0+255),2,b
 23043  00395C  D018               	goto	l17711
 23044  00395E                     u16960:
 23045                           
 23046                           ; BSR set to: 1
 23047                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 23048  00395E  0743               	decf	dtoa@i& (0+255),f,b
 23049  003960  A0D8               	btfss	status,0,c
 23050  003962  0744               	decf	(dtoa@i+1)& (0+255),f,b
 23051                           
 23052                           ; BSR set to: 1
 23053                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i]
      +                           = s ? '-' : '+';
 23054  003964  5139               	movf	dtoa@s& (0+255),w,b
 23055  003966  113A               	iorwf	(dtoa@s+1)& (0+255),w,b
 23056  003968  A4D8               	btfss	status,2,c
 23057  00396A  D004               	goto	l17707
 23058                           
 23059                           ; BSR set to: 1
 23060  00396C  0E00               	movlw	0
 23061  00396E  6F34               	movwf	(_dtoa$5178+1)& (0+255),b
 23062  003970  0E2B               	movlw	43
 23063  003972  D003               	goto	L6
 23064  003974                     l17707:
 23065                           
 23066                           ; BSR set to: 1
 23067  003974  0E00               	movlw	0
 23068  003976  6F34               	movwf	(_dtoa$5178+1)& (0+255),b
 23069  003978  0E2D               	movlw	45
 23070  00397A                     L6:
 23071  00397A  6F33               	movwf	_dtoa$5178& (0+255),b
 23072                           
 23073                           ; BSR set to: 1
 23074  00397C  0E89               	movlw	low _dbuf
 23075  00397E  2543               	addwf	dtoa@i& (0+255),w,b
 23076  003980  6ED9               	movwf	fsr2l,c
 23077  003982  0E03               	movlw	high _dbuf
 23078  003984  2144               	addwfc	(dtoa@i+1)& (0+255),w,b
 23079  003986  6EDA               	movwf	fsr2h,c
 23080  003988  0060  F4CF  FFDF   	movff	_dtoa$5178,indf2
 23081  00398E                     l17711:
 23082                           
 23083                           ; BSR set to: 1
 23084                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(
      +                          fp, &dbuf[i], w);
 23085  00398E  0060  F484  F116   	movff	dtoa@fp,pad@fp
 23086  003994  0060  F488  F117   	movff	dtoa@fp+1,pad@fp+1
 23087  00399A  0E89               	movlw	low _dbuf
 23088  00399C  2543               	addwf	dtoa@i& (0+255),w,b
 23089  00399E  6F18               	movwf	pad@buf& (0+255),b
 23090  0039A0  0E03               	movlw	high _dbuf
 23091  0039A2  2144               	addwfc	(dtoa@i+1)& (0+255),w,b
 23092  0039A4  6F19               	movwf	(pad@buf+1)& (0+255),b
 23093  0039A6  0060  F4DC  F11A   	movff	dtoa@w,pad@p
 23094  0039AC  0060  F4E0  F11B   	movff	dtoa@w+1,pad@p+1
 23095  0039B2  EC38  F039         	call	_pad	;wreg free
 23096  0039B6  0060  F458  F121   	movff	?_pad,?_dtoa
 23097  0039BC  0060  F45C  F122   	movff	?_pad+1,?_dtoa+1
 23098                           
 23099                           ; BSR set to: 1
 23100  0039C2  0012               	return		;funcret
 23101  0039C4                     __end_of_dtoa:
 23102                           	opt callstack 0
 23103                           
 23104 ;; *************** function _abs *****************
 23105 ;; Defined at:
 23106 ;;		line 1 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 23107 ;; Parameters:    Size  Location     Type
 23108 ;;  a               2   22[BANK1 ] int 
 23109 ;; Auto vars:     Size  Location     Type
 23110 ;;		None
 23111 ;; Return value:  Size  Location     Type
 23112 ;;                  2   22[BANK1 ] int 
 23113 ;; Registers used:
 23114 ;;		wreg, status,2, status,0
 23115 ;; Tracked objects:
 23116 ;;		On entry : 3F/1
 23117 ;;		On exit  : 3F/1
 23118 ;;		Unchanged: 0/0
 23119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23120 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23122 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23123 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23124 ;;Total ram usage:        4 bytes
 23125 ;; Hardware stack levels used:    1
 23126 ;; Hardware stack levels required when called:   16
 23127 ;; This function calls:
 23128 ;;		Nothing
 23129 ;; This function is called by:
 23130 ;;		_dtoa
 23131 ;; This function uses a non-reentrant model
 23132 ;;
 23133                           
 23134                           	psect	text172
 23135  0093E2                     __ptext172:
 23136                           	opt callstack 0
 23137  0093E2                     _abs:
 23138                           	opt callstack 10
 23139                           
 23140                           ; BSR set to: 1
 23141                           
 23142                           ; BSR set to: 1
 23143                           ;incstack = 0
 23144  0093E2  BF17               	btfsc	(abs@a+1)& (0+255),7,b
 23145  0093E4  D005               	goto	u16420
 23146  0093E6  5117               	movf	(abs@a+1)& (0+255),w,b
 23147  0093E8  E114               	bnz	l4283
 23148  0093EA  0516               	decf	abs@a& (0+255),w,b
 23149  0093EC  B0D8               	btfsc	status,0,c
 23150  0093EE  D011               	goto	l4283
 23151  0093F0                     u16420:
 23152                           
 23153                           ; BSR set to: 1
 23154  0093F0  0060  F458  F118   	movff	abs@a,??_abs
 23155  0093F6  0060  F45C  F119   	movff	abs@a+1,??_abs+1
 23156  0093FC  1F18               	comf	??_abs& (0+255),f,b
 23157  0093FE  1F19               	comf	(??_abs+1)& (0+255),f,b
 23158  009400  4B18               	infsnz	??_abs& (0+255),f,b
 23159  009402  2B19               	incf	(??_abs+1)& (0+255),f,b
 23160  009404  0060  F460  F116   	movff	??_abs,?_abs
 23161  00940A  0060  F464  F117   	movff	??_abs+1,?_abs+1
 23162  009410  0012               	return	
 23163  009412                     l4283:
 23164                           
 23165                           ; BSR set to: 1
 23166  009412  0060  F458  F116   	movff	abs@a,?_abs
 23167  009418  0060  F45C  F117   	movff	abs@a+1,?_abs+1
 23168                           
 23169                           ; BSR set to: 1
 23170  00941E  0012               	return		;funcret
 23171  009420                     __end_of_abs:
 23172                           	opt callstack 0
 23173                           
 23174 ;; *************** function ___aomod *****************
 23175 ;; Defined at:
 23176 ;;		line 9 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 23177 ;; Parameters:    Size  Location     Type
 23178 ;;  dividend        8    4[BANK1 ] long long 
 23179 ;;  divisor         8   12[BANK1 ] long long 
 23180 ;; Auto vars:     Size  Location     Type
 23181 ;;  sign            1   21[BANK1 ] unsigned char 
 23182 ;;  counter         1   20[BANK1 ] unsigned char 
 23183 ;; Return value:  Size  Location     Type
 23184 ;;                  8    4[BANK1 ] long long 
 23185 ;; Registers used:
 23186 ;;		wreg, status,2, status,0
 23187 ;; Tracked objects:
 23188 ;;		On entry : 3F/1
 23189 ;;		On exit  : 3F/1
 23190 ;;		Unchanged: 0/0
 23191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23192 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23193 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23195 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23196 ;;Total ram usage:       18 bytes
 23197 ;; Hardware stack levels used:    1
 23198 ;; Hardware stack levels required when called:   16
 23199 ;; This function calls:
 23200 ;;		Nothing
 23201 ;; This function is called by:
 23202 ;;		_dtoa
 23203 ;; This function uses a non-reentrant model
 23204 ;;
 23205                           
 23206                           	psect	text173
 23207  005F1C                     __ptext173:
 23208                           	opt callstack 0
 23209  005F1C                     ___aomod:
 23210                           	opt callstack 10
 23211                           
 23212                           ; BSR set to: 1
 23213                           
 23214                           ; BSR set to: 1
 23215                           ;incstack = 0
 23216  005F1C  0E00               	movlw	0
 23217  005F1E  6F15               	movwf	___aomod@sign& (0+255),b
 23218                           
 23219                           ; BSR set to: 1
 23220  005F20  AF0B               	btfss	(___aomod@dividend+7)& (0+255),7,b
 23221  005F22  D012               	goto	l17471
 23222                           
 23223                           ; BSR set to: 1
 23224  005F24  1F0B               	comf	(___aomod@dividend+7)& (0+255),f,b
 23225  005F26  1F0A               	comf	(___aomod@dividend+6)& (0+255),f,b
 23226  005F28  1F09               	comf	(___aomod@dividend+5)& (0+255),f,b
 23227  005F2A  1F08               	comf	(___aomod@dividend+4)& (0+255),f,b
 23228  005F2C  1F07               	comf	(___aomod@dividend+3)& (0+255),f,b
 23229  005F2E  1F06               	comf	(___aomod@dividend+2)& (0+255),f,b
 23230  005F30  1F05               	comf	(___aomod@dividend+1)& (0+255),f,b
 23231  005F32  6D04               	negf	___aomod@dividend& (0+255),b
 23232  005F34  0E00               	movlw	0
 23233  005F36  2305               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 23234  005F38  2306               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 23235  005F3A  2307               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 23236  005F3C  2308               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 23237  005F3E  2309               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 23238  005F40  230A               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 23239  005F42  230B               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 23240                           
 23241                           ; BSR set to: 1
 23242  005F44  0E01               	movlw	1
 23243  005F46  6F15               	movwf	___aomod@sign& (0+255),b
 23244  005F48                     l17471:
 23245                           
 23246                           ; BSR set to: 1
 23247  005F48  AF13               	btfss	(___aomod@divisor+7)& (0+255),7,b
 23248  005F4A  D010               	goto	l17475
 23249                           
 23250                           ; BSR set to: 1
 23251  005F4C  1F13               	comf	(___aomod@divisor+7)& (0+255),f,b
 23252  005F4E  1F12               	comf	(___aomod@divisor+6)& (0+255),f,b
 23253  005F50  1F11               	comf	(___aomod@divisor+5)& (0+255),f,b
 23254  005F52  1F10               	comf	(___aomod@divisor+4)& (0+255),f,b
 23255  005F54  1F0F               	comf	(___aomod@divisor+3)& (0+255),f,b
 23256  005F56  1F0E               	comf	(___aomod@divisor+2)& (0+255),f,b
 23257  005F58  1F0D               	comf	(___aomod@divisor+1)& (0+255),f,b
 23258  005F5A  6D0C               	negf	___aomod@divisor& (0+255),b
 23259  005F5C  0E00               	movlw	0
 23260  005F5E  230D               	addwfc	(___aomod@divisor+1)& (0+255),f,b
 23261  005F60  230E               	addwfc	(___aomod@divisor+2)& (0+255),f,b
 23262  005F62  230F               	addwfc	(___aomod@divisor+3)& (0+255),f,b
 23263  005F64  2310               	addwfc	(___aomod@divisor+4)& (0+255),f,b
 23264  005F66  2311               	addwfc	(___aomod@divisor+5)& (0+255),f,b
 23265  005F68  2312               	addwfc	(___aomod@divisor+6)& (0+255),f,b
 23266  005F6A  2313               	addwfc	(___aomod@divisor+7)& (0+255),f,b
 23267  005F6C                     l17475:
 23268                           
 23269                           ; BSR set to: 1
 23270  005F6C  510C               	movf	___aomod@divisor& (0+255),w,b
 23271  005F6E  110D               	iorwf	(___aomod@divisor+1)& (0+255),w,b
 23272  005F70  110E               	iorwf	(___aomod@divisor+2)& (0+255),w,b
 23273  005F72  110F               	iorwf	(___aomod@divisor+3)& (0+255),w,b
 23274  005F74  1110               	iorwf	(___aomod@divisor+4)& (0+255),w,b
 23275  005F76  1111               	iorwf	(___aomod@divisor+5)& (0+255),w,b
 23276  005F78  1112               	iorwf	(___aomod@divisor+6)& (0+255),w,b
 23277  005F7A  1113               	iorwf	(___aomod@divisor+7)& (0+255),w,b
 23278  005F7C  B4D8               	btfsc	status,2,c
 23279  005F7E  D03C               	goto	l17491
 23280                           
 23281                           ; BSR set to: 1
 23282  005F80  0E01               	movlw	1
 23283  005F82  6F14               	movwf	___aomod@counter& (0+255),b
 23284  005F84  D00A               	goto	l17481
 23285  005F86                     l17479:
 23286                           
 23287                           ; BSR set to: 1
 23288  005F86  90D8               	bcf	status,0,c
 23289  005F88  370C               	rlcf	___aomod@divisor& (0+255),f,b
 23290  005F8A  370D               	rlcf	(___aomod@divisor+1)& (0+255),f,b
 23291  005F8C  370E               	rlcf	(___aomod@divisor+2)& (0+255),f,b
 23292  005F8E  370F               	rlcf	(___aomod@divisor+3)& (0+255),f,b
 23293  005F90  3710               	rlcf	(___aomod@divisor+4)& (0+255),f,b
 23294  005F92  3711               	rlcf	(___aomod@divisor+5)& (0+255),f,b
 23295  005F94  3712               	rlcf	(___aomod@divisor+6)& (0+255),f,b
 23296  005F96  3713               	rlcf	(___aomod@divisor+7)& (0+255),f,b
 23297  005F98  2B14               	incf	___aomod@counter& (0+255),f,b
 23298  005F9A                     l17481:
 23299                           
 23300                           ; BSR set to: 1
 23301  005F9A  AF13               	btfss	(___aomod@divisor+7)& (0+255),7,b
 23302  005F9C  D7F4               	goto	l17479
 23303  005F9E                     u16620:
 23304                           
 23305                           ; BSR set to: 1
 23306  005F9E  510C               	movf	___aomod@divisor& (0+255),w,b
 23307  005FA0  5D04               	subwf	___aomod@dividend& (0+255),w,b
 23308  005FA2  510D               	movf	(___aomod@divisor+1)& (0+255),w,b
 23309  005FA4  5905               	subwfb	(___aomod@dividend+1)& (0+255),w,b
 23310  005FA6  510E               	movf	(___aomod@divisor+2)& (0+255),w,b
 23311  005FA8  5906               	subwfb	(___aomod@dividend+2)& (0+255),w,b
 23312  005FAA  510F               	movf	(___aomod@divisor+3)& (0+255),w,b
 23313  005FAC  5907               	subwfb	(___aomod@dividend+3)& (0+255),w,b
 23314  005FAE  5110               	movf	(___aomod@divisor+4)& (0+255),w,b
 23315  005FB0  5908               	subwfb	(___aomod@dividend+4)& (0+255),w,b
 23316  005FB2  5111               	movf	(___aomod@divisor+5)& (0+255),w,b
 23317  005FB4  5909               	subwfb	(___aomod@dividend+5)& (0+255),w,b
 23318  005FB6  5112               	movf	(___aomod@divisor+6)& (0+255),w,b
 23319  005FB8  590A               	subwfb	(___aomod@dividend+6)& (0+255),w,b
 23320  005FBA  5113               	movf	(___aomod@divisor+7)& (0+255),w,b
 23321  005FBC  590B               	subwfb	(___aomod@dividend+7)& (0+255),w,b
 23322  005FBE  A0D8               	btfss	status,0,c
 23323  005FC0  D010               	goto	l17487
 23324                           
 23325                           ; BSR set to: 1
 23326  005FC2  510C               	movf	___aomod@divisor& (0+255),w,b
 23327  005FC4  5F04               	subwf	___aomod@dividend& (0+255),f,b
 23328  005FC6  510D               	movf	(___aomod@divisor+1)& (0+255),w,b
 23329  005FC8  5B05               	subwfb	(___aomod@dividend+1)& (0+255),f,b
 23330  005FCA  510E               	movf	(___aomod@divisor+2)& (0+255),w,b
 23331  005FCC  5B06               	subwfb	(___aomod@dividend+2)& (0+255),f,b
 23332  005FCE  510F               	movf	(___aomod@divisor+3)& (0+255),w,b
 23333  005FD0  5B07               	subwfb	(___aomod@dividend+3)& (0+255),f,b
 23334  005FD2  5110               	movf	(___aomod@divisor+4)& (0+255),w,b
 23335  005FD4  5B08               	subwfb	(___aomod@dividend+4)& (0+255),f,b
 23336  005FD6  5111               	movf	(___aomod@divisor+5)& (0+255),w,b
 23337  005FD8  5B09               	subwfb	(___aomod@dividend+5)& (0+255),f,b
 23338  005FDA  5112               	movf	(___aomod@divisor+6)& (0+255),w,b
 23339  005FDC  5B0A               	subwfb	(___aomod@dividend+6)& (0+255),f,b
 23340  005FDE  5113               	movf	(___aomod@divisor+7)& (0+255),w,b
 23341  005FE0  5B0B               	subwfb	(___aomod@dividend+7)& (0+255),f,b
 23342  005FE2                     l17487:
 23343                           
 23344                           ; BSR set to: 1
 23345  005FE2  90D8               	bcf	status,0,c
 23346  005FE4  3313               	rrcf	(___aomod@divisor+7)& (0+255),f,b
 23347  005FE6  3312               	rrcf	(___aomod@divisor+6)& (0+255),f,b
 23348  005FE8  3311               	rrcf	(___aomod@divisor+5)& (0+255),f,b
 23349  005FEA  3310               	rrcf	(___aomod@divisor+4)& (0+255),f,b
 23350  005FEC  330F               	rrcf	(___aomod@divisor+3)& (0+255),f,b
 23351  005FEE  330E               	rrcf	(___aomod@divisor+2)& (0+255),f,b
 23352  005FF0  330D               	rrcf	(___aomod@divisor+1)& (0+255),f,b
 23353  005FF2  330C               	rrcf	___aomod@divisor& (0+255),f,b
 23354                           
 23355                           ; BSR set to: 1
 23356  005FF4  2F14               	decfsz	___aomod@counter& (0+255),f,b
 23357  005FF6  D7D3               	goto	u16620
 23358  005FF8                     l17491:
 23359                           
 23360                           ; BSR set to: 1
 23361  005FF8  5115               	movf	___aomod@sign& (0+255),w,b
 23362  005FFA  B4D8               	btfsc	status,2,c
 23363  005FFC  D010               	goto	l17495
 23364                           
 23365                           ; BSR set to: 1
 23366  005FFE  1F0B               	comf	(___aomod@dividend+7)& (0+255),f,b
 23367  006000  1F0A               	comf	(___aomod@dividend+6)& (0+255),f,b
 23368  006002  1F09               	comf	(___aomod@dividend+5)& (0+255),f,b
 23369  006004  1F08               	comf	(___aomod@dividend+4)& (0+255),f,b
 23370  006006  1F07               	comf	(___aomod@dividend+3)& (0+255),f,b
 23371  006008  1F06               	comf	(___aomod@dividend+2)& (0+255),f,b
 23372  00600A  1F05               	comf	(___aomod@dividend+1)& (0+255),f,b
 23373  00600C  6D04               	negf	___aomod@dividend& (0+255),b
 23374  00600E  0E00               	movlw	0
 23375  006010  2305               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 23376  006012  2306               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 23377  006014  2307               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 23378  006016  2308               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 23379  006018  2309               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 23380  00601A  230A               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 23381  00601C  230B               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 23382  00601E                     l17495:
 23383                           
 23384                           ; BSR set to: 1
 23385  00601E  0060  F410  F104   	movff	___aomod@dividend,?___aomod
 23386  006024  0060  F414  F105   	movff	___aomod@dividend+1,?___aomod+1
 23387  00602A  0060  F418  F106   	movff	___aomod@dividend+2,?___aomod+2
 23388  006030  0060  F41C  F107   	movff	___aomod@dividend+3,?___aomod+3
 23389  006036  0060  F420  F108   	movff	___aomod@dividend+4,?___aomod+4
 23390  00603C  0060  F424  F109   	movff	___aomod@dividend+5,?___aomod+5
 23391  006042  0060  F428  F10A   	movff	___aomod@dividend+6,?___aomod+6
 23392  006048  0060  F42C  F10B   	movff	___aomod@dividend+7,?___aomod+7
 23393                           
 23394                           ; BSR set to: 1
 23395  00604E  0012               	return		;funcret
 23396  006050                     __end_of___aomod:
 23397                           	opt callstack 0
 23398                           
 23399 ;; *************** function ___aodiv *****************
 23400 ;; Defined at:
 23401 ;;		line 9 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 23402 ;; Parameters:    Size  Location     Type
 23403 ;;  dividend        8    4[BANK1 ] long long 
 23404 ;;  divisor         8   12[BANK1 ] long long 
 23405 ;; Auto vars:     Size  Location     Type
 23406 ;;  quotient        8   22[BANK1 ] long long 
 23407 ;;  sign            1   21[BANK1 ] unsigned char 
 23408 ;;  counter         1   20[BANK1 ] unsigned char 
 23409 ;; Return value:  Size  Location     Type
 23410 ;;                  8    4[BANK1 ] long long 
 23411 ;; Registers used:
 23412 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23413 ;; Tracked objects:
 23414 ;;		On entry : 3F/1
 23415 ;;		On exit  : 3F/1
 23416 ;;		Unchanged: 0/0
 23417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23418 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23419 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23421 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23422 ;;Total ram usage:       26 bytes
 23423 ;; Hardware stack levels used:    1
 23424 ;; Hardware stack levels required when called:   16
 23425 ;; This function calls:
 23426 ;;		Nothing
 23427 ;; This function is called by:
 23428 ;;		_dtoa
 23429 ;; This function uses a non-reentrant model
 23430 ;;
 23431                           
 23432                           	psect	text174
 23433  0059E8                     __ptext174:
 23434                           	opt callstack 0
 23435  0059E8                     ___aodiv:
 23436                           	opt callstack 10
 23437                           
 23438                           ; BSR set to: 1
 23439                           
 23440                           ; BSR set to: 1
 23441                           ;incstack = 0
 23442  0059E8  0E00               	movlw	0
 23443  0059EA  6F15               	movwf	___aodiv@sign& (0+255),b
 23444                           
 23445                           ; BSR set to: 1
 23446  0059EC  AF13               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 23447  0059EE  D012               	goto	l17427
 23448                           
 23449                           ; BSR set to: 1
 23450  0059F0  1F13               	comf	(___aodiv@divisor+7)& (0+255),f,b
 23451  0059F2  1F12               	comf	(___aodiv@divisor+6)& (0+255),f,b
 23452  0059F4  1F11               	comf	(___aodiv@divisor+5)& (0+255),f,b
 23453  0059F6  1F10               	comf	(___aodiv@divisor+4)& (0+255),f,b
 23454  0059F8  1F0F               	comf	(___aodiv@divisor+3)& (0+255),f,b
 23455  0059FA  1F0E               	comf	(___aodiv@divisor+2)& (0+255),f,b
 23456  0059FC  1F0D               	comf	(___aodiv@divisor+1)& (0+255),f,b
 23457  0059FE  6D0C               	negf	___aodiv@divisor& (0+255),b
 23458  005A00  0E00               	movlw	0
 23459  005A02  230D               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
 23460  005A04  230E               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
 23461  005A06  230F               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
 23462  005A08  2310               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
 23463  005A0A  2311               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
 23464  005A0C  2312               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
 23465  005A0E  2313               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
 23466                           
 23467                           ; BSR set to: 1
 23468  005A10  0E01               	movlw	1
 23469  005A12  6F15               	movwf	___aodiv@sign& (0+255),b
 23470  005A14                     l17427:
 23471                           
 23472                           ; BSR set to: 1
 23473  005A14  AF0B               	btfss	(___aodiv@dividend+7)& (0+255),7,b
 23474  005A16  D012               	goto	l17433
 23475                           
 23476                           ; BSR set to: 1
 23477  005A18  1F0B               	comf	(___aodiv@dividend+7)& (0+255),f,b
 23478  005A1A  1F0A               	comf	(___aodiv@dividend+6)& (0+255),f,b
 23479  005A1C  1F09               	comf	(___aodiv@dividend+5)& (0+255),f,b
 23480  005A1E  1F08               	comf	(___aodiv@dividend+4)& (0+255),f,b
 23481  005A20  1F07               	comf	(___aodiv@dividend+3)& (0+255),f,b
 23482  005A22  1F06               	comf	(___aodiv@dividend+2)& (0+255),f,b
 23483  005A24  1F05               	comf	(___aodiv@dividend+1)& (0+255),f,b
 23484  005A26  6D04               	negf	___aodiv@dividend& (0+255),b
 23485  005A28  0E00               	movlw	0
 23486  005A2A  2305               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
 23487  005A2C  2306               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
 23488  005A2E  2307               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
 23489  005A30  2308               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
 23490  005A32  2309               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
 23491  005A34  230A               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
 23492  005A36  230B               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
 23493                           
 23494                           ; BSR set to: 1
 23495  005A38  0E01               	movlw	1
 23496  005A3A  1B15               	xorwf	___aodiv@sign& (0+255),f,b
 23497  005A3C                     l17433:
 23498                           
 23499                           ; BSR set to: 1
 23500  005A3C  EE20  F116         	lfsr	2,___aodiv@quotient
 23501  005A40  0E07               	movlw	7
 23502  005A42                     u16541:
 23503  005A42  6ADE               	clrf	postinc2,c
 23504  005A44  06E8               	decf	wreg,f,c
 23505  005A46  E2FD               	bc	u16541
 23506                           
 23507                           ; BSR set to: 1
 23508  005A48  510C               	movf	___aodiv@divisor& (0+255),w,b
 23509  005A4A  110D               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
 23510  005A4C  110E               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
 23511  005A4E  110F               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
 23512  005A50  1110               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
 23513  005A52  1111               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
 23514  005A54  1112               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
 23515  005A56  1113               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
 23516  005A58  B4D8               	btfsc	status,2,c
 23517  005A5A  D046               	goto	l17455
 23518                           
 23519                           ; BSR set to: 1
 23520  005A5C  0E01               	movlw	1
 23521  005A5E  6F14               	movwf	___aodiv@counter& (0+255),b
 23522  005A60  D00A               	goto	l17441
 23523  005A62                     l17439:
 23524                           
 23525                           ; BSR set to: 1
 23526  005A62  90D8               	bcf	status,0,c
 23527  005A64  370C               	rlcf	___aodiv@divisor& (0+255),f,b
 23528  005A66  370D               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
 23529  005A68  370E               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
 23530  005A6A  370F               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
 23531  005A6C  3710               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
 23532  005A6E  3711               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
 23533  005A70  3712               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
 23534  005A72  3713               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
 23535  005A74  2B14               	incf	___aodiv@counter& (0+255),f,b
 23536  005A76                     l17441:
 23537                           
 23538                           ; BSR set to: 1
 23539  005A76  AF13               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 23540  005A78  D7F4               	goto	l17439
 23541  005A7A                     u16560:
 23542                           
 23543                           ; BSR set to: 1
 23544  005A7A  90D8               	bcf	status,0,c
 23545  005A7C  3716               	rlcf	___aodiv@quotient& (0+255),f,b
 23546  005A7E  3717               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
 23547  005A80  3718               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
 23548  005A82  3719               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
 23549  005A84  371A               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
 23550  005A86  371B               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
 23551  005A88  371C               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
 23552  005A8A  371D               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
 23553                           
 23554                           ; BSR set to: 1
 23555  005A8C  510C               	movf	___aodiv@divisor& (0+255),w,b
 23556  005A8E  5D04               	subwf	___aodiv@dividend& (0+255),w,b
 23557  005A90  510D               	movf	(___aodiv@divisor+1)& (0+255),w,b
 23558  005A92  5905               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
 23559  005A94  510E               	movf	(___aodiv@divisor+2)& (0+255),w,b
 23560  005A96  5906               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
 23561  005A98  510F               	movf	(___aodiv@divisor+3)& (0+255),w,b
 23562  005A9A  5907               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
 23563  005A9C  5110               	movf	(___aodiv@divisor+4)& (0+255),w,b
 23564  005A9E  5908               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
 23565  005AA0  5111               	movf	(___aodiv@divisor+5)& (0+255),w,b
 23566  005AA2  5909               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
 23567  005AA4  5112               	movf	(___aodiv@divisor+6)& (0+255),w,b
 23568  005AA6  590A               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
 23569  005AA8  5113               	movf	(___aodiv@divisor+7)& (0+255),w,b
 23570  005AAA  590B               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
 23571  005AAC  A0D8               	btfss	status,0,c
 23572  005AAE  D011               	goto	l17451
 23573                           
 23574                           ; BSR set to: 1
 23575  005AB0  510C               	movf	___aodiv@divisor& (0+255),w,b
 23576  005AB2  5F04               	subwf	___aodiv@dividend& (0+255),f,b
 23577  005AB4  510D               	movf	(___aodiv@divisor+1)& (0+255),w,b
 23578  005AB6  5B05               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
 23579  005AB8  510E               	movf	(___aodiv@divisor+2)& (0+255),w,b
 23580  005ABA  5B06               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
 23581  005ABC  510F               	movf	(___aodiv@divisor+3)& (0+255),w,b
 23582  005ABE  5B07               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
 23583  005AC0  5110               	movf	(___aodiv@divisor+4)& (0+255),w,b
 23584  005AC2  5B08               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
 23585  005AC4  5111               	movf	(___aodiv@divisor+5)& (0+255),w,b
 23586  005AC6  5B09               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
 23587  005AC8  5112               	movf	(___aodiv@divisor+6)& (0+255),w,b
 23588  005ACA  5B0A               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
 23589  005ACC  5113               	movf	(___aodiv@divisor+7)& (0+255),w,b
 23590  005ACE  5B0B               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
 23591                           
 23592                           ; BSR set to: 1
 23593  005AD0  8116               	bsf	___aodiv@quotient& (0+255),0,b
 23594  005AD2                     l17451:
 23595                           
 23596                           ; BSR set to: 1
 23597  005AD2  90D8               	bcf	status,0,c
 23598  005AD4  3313               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
 23599  005AD6  3312               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
 23600  005AD8  3311               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
 23601  005ADA  3310               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
 23602  005ADC  330F               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
 23603  005ADE  330E               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
 23604  005AE0  330D               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
 23605  005AE2  330C               	rrcf	___aodiv@divisor& (0+255),f,b
 23606                           
 23607                           ; BSR set to: 1
 23608  005AE4  2F14               	decfsz	___aodiv@counter& (0+255),f,b
 23609  005AE6  D7C9               	goto	u16560
 23610  005AE8                     l17455:
 23611                           
 23612                           ; BSR set to: 1
 23613  005AE8  5115               	movf	___aodiv@sign& (0+255),w,b
 23614  005AEA  B4D8               	btfsc	status,2,c
 23615  005AEC  D010               	goto	l17459
 23616                           
 23617                           ; BSR set to: 1
 23618  005AEE  1F1D               	comf	(___aodiv@quotient+7)& (0+255),f,b
 23619  005AF0  1F1C               	comf	(___aodiv@quotient+6)& (0+255),f,b
 23620  005AF2  1F1B               	comf	(___aodiv@quotient+5)& (0+255),f,b
 23621  005AF4  1F1A               	comf	(___aodiv@quotient+4)& (0+255),f,b
 23622  005AF6  1F19               	comf	(___aodiv@quotient+3)& (0+255),f,b
 23623  005AF8  1F18               	comf	(___aodiv@quotient+2)& (0+255),f,b
 23624  005AFA  1F17               	comf	(___aodiv@quotient+1)& (0+255),f,b
 23625  005AFC  6D16               	negf	___aodiv@quotient& (0+255),b
 23626  005AFE  0E00               	movlw	0
 23627  005B00  2317               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
 23628  005B02  2318               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
 23629  005B04  2319               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
 23630  005B06  231A               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
 23631  005B08  231B               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
 23632  005B0A  231C               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
 23633  005B0C  231D               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
 23634  005B0E                     l17459:
 23635                           
 23636                           ; BSR set to: 1
 23637  005B0E  0060  F458  F104   	movff	___aodiv@quotient,?___aodiv
 23638  005B14  0060  F45C  F105   	movff	___aodiv@quotient+1,?___aodiv+1
 23639  005B1A  0060  F460  F106   	movff	___aodiv@quotient+2,?___aodiv+2
 23640  005B20  0060  F464  F107   	movff	___aodiv@quotient+3,?___aodiv+3
 23641  005B26  0060  F468  F108   	movff	___aodiv@quotient+4,?___aodiv+4
 23642  005B2C  0060  F46C  F109   	movff	___aodiv@quotient+5,?___aodiv+5
 23643  005B32  0060  F470  F10A   	movff	___aodiv@quotient+6,?___aodiv+6
 23644  005B38  0060  F474  F10B   	movff	___aodiv@quotient+7,?___aodiv+7
 23645                           
 23646                           ; BSR set to: 1
 23647  005B3E  0012               	return		;funcret
 23648  005B40                     __end_of___aodiv:
 23649                           	opt callstack 0
 23650                           
 23651 ;; *************** function _ctoa *****************
 23652 ;; Defined at:
 23653 ;;		line 259 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 23654 ;; Parameters:    Size  Location     Type
 23655 ;;  fp              2   33[BANK1 ] PTR struct _IO_FILE
 23656 ;;		 -> sprintf@f(6), NULL(0), 
 23657 ;;  c               1   35[BANK1 ] unsigned char 
 23658 ;; Auto vars:     Size  Location     Type
 23659 ;;  w               2   36[BANK1 ] int 
 23660 ;;  l               2    0        int 
 23661 ;; Return value:  Size  Location     Type
 23662 ;;                  2   33[BANK1 ] int 
 23663 ;; Registers used:
 23664 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23665 ;; Tracked objects:
 23666 ;;		On entry : 3F/1
 23667 ;;		On exit  : 3F/1
 23668 ;;		Unchanged: 0/0
 23669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23670 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23671 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23673 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23674 ;;Total ram usage:        5 bytes
 23675 ;; Hardware stack levels used:    1
 23676 ;; Hardware stack levels required when called:   21
 23677 ;; This function calls:
 23678 ;;		_pad
 23679 ;; This function is called by:
 23680 ;;		_vfpfcnvrt
 23681 ;; This function uses a non-reentrant model
 23682 ;;
 23683                           
 23684                           	psect	text175
 23685  008A9A                     __ptext175:
 23686                           	opt callstack 0
 23687  008A9A                     _ctoa:
 23688                           	opt callstack 6
 23689                           
 23690                           ; BSR set to: 1
 23691                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa
      +                          (FILE *fp, char c);/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 26
      +                          0: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, 
      +                          w;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 264:     w = width
      +                           ? width - 1 : width;
 23692                           
 23693                           ; BSR set to: 1
 23694                           ;incstack = 0
 23695  008A9A  51C7               	movf	_width& (0+255),w,b
 23696  008A9C  11C8               	iorwf	(_width+1)& (0+255),w,b
 23697  008A9E  A4D8               	btfss	status,2,c
 23698  008AA0  D007               	goto	l17643
 23699                           
 23700                           ; BSR set to: 1
 23701  008AA2  0060  F71C  F124   	movff	_width,ctoa@w
 23702  008AA8  0060  F720  F125   	movff	_width+1,ctoa@w+1
 23703  008AAE  D006               	goto	l17645
 23704  008AB0                     l17643:
 23705                           
 23706                           ; BSR set to: 1
 23707  008AB0  0EFF               	movlw	255
 23708  008AB2  25C7               	addwf	_width& (0+255),w,b
 23709  008AB4  6F24               	movwf	ctoa@w& (0+255),b
 23710  008AB6  0EFF               	movlw	255
 23711  008AB8  21C8               	addwfc	(_width+1)& (0+255),w,b
 23712  008ABA  6F25               	movwf	(ctoa@w+1)& (0+255),b
 23713  008ABC                     l17645:
 23714                           
 23715                           ; BSR set to: 1
 23716                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c
      +                          ;
 23717  008ABC  0060  F48C  F389   	movff	ctoa@c,_dbuf
 23718                           
 23719                           ; BSR set to: 1
 23720                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '
      +                          \0';
 23721  008AC2  0E00               	movlw	0
 23722  008AC4  0103               	movlb	3	; () banked
 23723  008AC6  6F8A               	movwf	(_dbuf+1)& (0+255),b
 23724                           
 23725                           ; BSR set to: 3
 23726                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(
      +                          fp, &dbuf[0], w);
 23727  008AC8  0060  F484  F116   	movff	ctoa@fp,pad@fp
 23728  008ACE  0060  F488  F117   	movff	ctoa@fp+1,pad@fp+1
 23729  008AD4  0E89               	movlw	low _dbuf
 23730  008AD6  0101               	movlb	1	; () banked
 23731  008AD8  6F18               	movwf	pad@buf& (0+255),b
 23732  008ADA  0E03               	movlw	high _dbuf
 23733  008ADC  6F19               	movwf	(pad@buf+1)& (0+255),b
 23734  008ADE  0060  F490  F11A   	movff	ctoa@w,pad@p
 23735  008AE4  0060  F494  F11B   	movff	ctoa@w+1,pad@p+1
 23736  008AEA  EC38  F039         	call	_pad	;wreg free
 23737  008AEE  0060  F458  F121   	movff	?_pad,?_ctoa
 23738  008AF4  0060  F45C  F122   	movff	?_pad+1,?_ctoa+1
 23739                           
 23740                           ; BSR set to: 1
 23741  008AFA  0012               	return		;funcret
 23742  008AFC                     __end_of_ctoa:
 23743                           	opt callstack 0
 23744                           
 23745 ;; *************** function _pad *****************
 23746 ;; Defined at:
 23747 ;;		line 72 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 23748 ;; Parameters:    Size  Location     Type
 23749 ;;  fp              2   22[BANK1 ] PTR struct _IO_FILE
 23750 ;;		 -> sprintf@f(6), NULL(0), 
 23751 ;;  buf             2   24[BANK1 ] PTR unsigned char 
 23752 ;;		 -> dbuf(32), 
 23753 ;;  p               2   26[BANK1 ] int 
 23754 ;; Auto vars:     Size  Location     Type
 23755 ;;  w               2   31[BANK1 ] int 
 23756 ;;  i               2   29[BANK1 ] int 
 23757 ;; Return value:  Size  Location     Type
 23758 ;;                  2   22[BANK1 ] int 
 23759 ;; Registers used:
 23760 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23761 ;; Tracked objects:
 23762 ;;		On entry : 3F/1
 23763 ;;		On exit  : 3F/1
 23764 ;;		Unchanged: 0/0
 23765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23766 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23767 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23768 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23769 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23770 ;;Total ram usage:       11 bytes
 23771 ;; Hardware stack levels used:    1
 23772 ;; Hardware stack levels required when called:   20
 23773 ;; This function calls:
 23774 ;;		_fputc
 23775 ;;		_fputs
 23776 ;;		_strlen
 23777 ;; This function is called by:
 23778 ;;		_ctoa
 23779 ;;		_dtoa
 23780 ;;		_xtoa
 23781 ;; This function uses a non-reentrant model
 23782 ;;
 23783                           
 23784                           	psect	text176
 23785  007270                     __ptext176:
 23786                           	opt callstack 0
 23787  007270                     _pad:
 23788                           	opt callstack 6
 23789                           
 23790                           ; BSR set to: 1
 23791                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(F
      +                          ILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.10/pic/sources/c99/common/dopr
      +                          nt.c: 73: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     i
      +                          nt i, w;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 77:     if (
      +                          flags & (1 << 0)) {
 23792                           
 23793                           ; BSR set to: 1
 23794                           ;incstack = 0
 23795  007270  A1CB               	btfss	_flags& (0+255),0,b
 23796  007272  D00E               	goto	l17369
 23797                           
 23798                           ; BSR set to: 1
 23799                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((c
      +                          onst char *)buf, fp);
 23800  007274  0060  F460  F10F   	movff	pad@buf,fputs@s
 23801  00727A  0060  F464  F110   	movff	pad@buf+1,fputs@s+1
 23802  007280  0060  F458  F111   	movff	pad@fp,fputs@fp
 23803  007286  0060  F45C  F112   	movff	pad@fp+1,fputs@fp+1
 23804  00728C  EC10  F04A         	call	_fputs	;wreg free
 23805  007290                     l17369:
 23806                           
 23807                           ; BSR set to: 1
 23808                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) 
      +                          ? 0 : p;
 23809  007290  BF1B               	btfsc	(pad@p+1)& (0+255),7,b
 23810  007292  D007               	goto	l17373
 23811                           
 23812                           ; BSR set to: 1
 23813  007294  0060  F468  F11F   	movff	pad@p,pad@w
 23814  00729A  0060  F46C  F120   	movff	pad@p+1,pad@w+1
 23815  0072A0  D004               	goto	l3473
 23816  0072A2                     l17373:
 23817                           
 23818                           ; BSR set to: 1
 23819  0072A2  0E00               	movlw	0
 23820  0072A4  6F20               	movwf	(pad@w+1)& (0+255),b
 23821  0072A6  0E00               	movlw	0
 23822  0072A8  6F1F               	movwf	pad@w& (0+255),b
 23823  0072AA                     l3473:
 23824                           
 23825                           ; BSR set to: 1
 23826                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 23827  0072AA  0E00               	movlw	0
 23828  0072AC  6F1E               	movwf	(pad@i+1)& (0+255),b
 23829  0072AE  0E00               	movlw	0
 23830  0072B0  6F1D               	movwf	pad@i& (0+255),b
 23831                           
 23832                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
 23833  0072B2  D00E               	goto	l17379
 23834  0072B4                     l17375:
 23835                           
 23836                           ; BSR set to: 1
 23837                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' 
      +                          ', fp);
 23838  0072B4  0E00               	movlw	0
 23839  0072B6  6F07               	movwf	(fputc@c+1)& (0+255),b
 23840  0072B8  0E20               	movlw	32
 23841  0072BA  6F06               	movwf	fputc@c& (0+255),b
 23842  0072BC  0060  F458  F108   	movff	pad@fp,fputc@fp
 23843  0072C2  0060  F45C  F109   	movff	pad@fp+1,fputc@fp+1
 23844  0072C8  ECCF  F037         	call	_fputc	;wreg free
 23845                           
 23846                           ; BSR set to: 1
 23847                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 23848  0072CC  4B1D               	infsnz	pad@i& (0+255),f,b
 23849  0072CE  2B1E               	incf	(pad@i+1)& (0+255),f,b
 23850  0072D0                     l17379:
 23851                           
 23852                           ; BSR set to: 1
 23853                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
 23854  0072D0  511F               	movf	pad@w& (0+255),w,b
 23855  0072D2  5D1D               	subwf	pad@i& (0+255),w,b
 23856  0072D4  511E               	movf	(pad@i+1)& (0+255),w,b
 23857  0072D6  0A80               	xorlw	128
 23858  0072D8  6F1C               	movwf	??_pad& (0+255),b
 23859  0072DA  5120               	movf	(pad@w+1)& (0+255),w,b
 23860  0072DC  0A80               	xorlw	128
 23861  0072DE  591C               	subwfb	??_pad& (0+255),w,b
 23862  0072E0  A0D8               	btfss	status,0,c
 23863  0072E2  D7E8               	goto	l17375
 23864                           
 23865                           ; BSR set to: 1
 23866                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags 
      +                          & (1 << 0))) {
 23867  0072E4  B1CB               	btfsc	_flags& (0+255),0,b
 23868  0072E6  D00E               	goto	l17383
 23869                           
 23870                           ; BSR set to: 1
 23871                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((c
      +                          onst char *)buf, fp);
 23872  0072E8  0060  F460  F10F   	movff	pad@buf,fputs@s
 23873  0072EE  0060  F464  F110   	movff	pad@buf+1,fputs@s+1
 23874  0072F4  0060  F458  F111   	movff	pad@fp,fputs@fp
 23875  0072FA  0060  F45C  F112   	movff	pad@fp+1,fputs@fp+1
 23876  007300  EC10  F04A         	call	_fputs	;wreg free
 23877  007304                     l17383:
 23878                           
 23879                           ; BSR set to: 1
 23880                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strle
      +                          n(buf) + w;
 23881  007304  0060  F460  F104   	movff	pad@buf,strlen@s
 23882  00730A  0060  F464  F105   	movff	pad@buf+1,strlen@s+1
 23883  007310  ECE5  F046         	call	_strlen	;wreg free
 23884  007314  511F               	movf	pad@w& (0+255),w,b
 23885  007316  2504               	addwf	?_strlen& (0+255),w,b
 23886  007318  6F16               	movwf	?_pad& (0+255),b
 23887  00731A  5120               	movf	(pad@w+1)& (0+255),w,b
 23888  00731C  2105               	addwfc	(?_strlen+1)& (0+255),w,b
 23889  00731E  6F17               	movwf	(?_pad+1)& (0+255),b
 23890                           
 23891                           ; BSR set to: 1
 23892  007320  0012               	return		;funcret
 23893  007322                     __end_of_pad:
 23894                           	opt callstack 0
 23895                           
 23896 ;; *************** function _strlen *****************
 23897 ;; Defined at:
 23898 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 23899 ;; Parameters:    Size  Location     Type
 23900 ;;  s               2    4[BANK1 ] PTR const unsigned char 
 23901 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
 23902 ;;		 -> adcVOffset(2), adcOffset(2), STR_29(3), STR_28(3), 
 23903 ;;		 -> STR_27(3), STR_26(3), alarmData(399), msg3(20), 
 23904 ;;		 -> STR_11(3), msg2(20), msg1(20), msg4(20), 
 23905 ;;		 -> LCDTest@msg2(17), LCDTest@msg1(17), STR_6(17), STR_5(17), 
 23906 ;; Auto vars:     Size  Location     Type
 23907 ;;  a               2    6[BANK1 ] PTR const unsigned char 
 23908 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
 23909 ;;		 -> adcVOffset(2), adcOffset(2), STR_29(3), STR_28(3), 
 23910 ;;		 -> STR_27(3), STR_26(3), alarmData(399), msg3(20), 
 23911 ;;		 -> STR_11(3), msg2(20), msg1(20), msg4(20), 
 23912 ;;		 -> LCDTest@msg2(17), LCDTest@msg1(17), STR_6(17), STR_5(17), 
 23913 ;; Return value:  Size  Location     Type
 23914 ;;                  2    4[BANK1 ] unsigned int 
 23915 ;; Registers used:
 23916 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 23917 ;; Tracked objects:
 23918 ;;		On entry : 3F/1
 23919 ;;		On exit  : 3F/1
 23920 ;;		Unchanged: 0/0
 23921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23922 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23923 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23925 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23926 ;;Total ram usage:        4 bytes
 23927 ;; Hardware stack levels used:    1
 23928 ;; Hardware stack levels required when called:   16
 23929 ;; This function calls:
 23930 ;;		Nothing
 23931 ;; This function is called by:
 23932 ;;		_LCDMessage
 23933 ;;		_pad
 23934 ;;		_stoa
 23935 ;; This function uses a non-reentrant model
 23936 ;;
 23937                           
 23938                           	psect	text177
 23939  008DCA                     __ptext177:
 23940                           	opt callstack 0
 23941  008DCA                     _strlen:
 23942                           	opt callstack 9
 23943                           
 23944                           ; BSR set to: 1
 23945                           
 23946                           ; BSR set to: 1
 23947                           ;incstack = 0
 23948  008DCA  0060  F410  F106   	movff	strlen@s,strlen@a
 23949  008DD0  0060  F414  F107   	movff	strlen@s+1,strlen@a+1
 23950  008DD6  D003               	goto	l17119
 23951  008DD8                     l17117:
 23952  008DD8  0101               	movlb	1	; () banked
 23953  008DDA  4B04               	infsnz	strlen@s& (0+255),f,b
 23954  008DDC  2B05               	incf	(strlen@s+1)& (0+255),f,b
 23955  008DDE                     l17119:
 23956                           
 23957                           ; BSR set to: 1
 23958  008DDE  0060  F413  FFF6   	movff	strlen@s,tblptrl
 23959  008DE4  0060  F417  FFF7   	movff	strlen@s+1,tblptrh
 23960  008DEA  0E00               	movlw	low (__mediumconst shr (0+16))
 23961  008DEC  6EF8               	movwf	tblptru,c
 23962  008DEE  0E0F               	movlw	(high __ramtop+-1)
 23963  008DF0  64F7               	cpfsgt	tblptrh,c
 23964  008DF2  D003               	bra	u15837
 23965  008DF4  0008               	tblrd		*
 23966  008DF6  50F5               	movf	tablat,w,c
 23967  008DF8  D007               	bra	u15830
 23968  008DFA                     u15837:
 23969  008DFA  006F FFDB FFE1     	movff	tblptrl,fsr1l
 23970  008E00  006F FFDF FFE2     	movff	tblptrh,fsr1h
 23971  008E06  50E7               	movf	indf1,w,c
 23972  008E08                     u15830:
 23973  008E08  0900               	iorlw	0
 23974  008E0A  A4D8               	btfss	status,2,c
 23975  008E0C  D7E5               	goto	l17117
 23976  008E0E  0101               	movlb	1	; () banked
 23977  008E10  5106               	movf	strlen@a& (0+255),w,b
 23978  008E12  5D04               	subwf	strlen@s& (0+255),w,b
 23979  008E14  6F04               	movwf	?_strlen& (0+255),b
 23980  008E16  5107               	movf	(strlen@a+1)& (0+255),w,b
 23981  008E18  5905               	subwfb	(strlen@s+1)& (0+255),w,b
 23982  008E1A  6F05               	movwf	(?_strlen+1)& (0+255),b
 23983                           
 23984                           ; BSR set to: 1
 23985  008E1C  0012               	return		;funcret
 23986  008E1E                     __end_of_strlen:
 23987                           	opt callstack 0
 23988                           
 23989 ;; *************** function _fputs *****************
 23990 ;; Defined at:
 23991 ;;		line 8 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 23992 ;; Parameters:    Size  Location     Type
 23993 ;;  s               2   15[BANK1 ] PTR const unsigned char 
 23994 ;;		 -> dbuf(32), 
 23995 ;;  fp              2   17[BANK1 ] PTR struct _IO_FILE
 23996 ;;		 -> sprintf@f(6), NULL(0), 
 23997 ;; Auto vars:     Size  Location     Type
 23998 ;;  i               2   20[BANK1 ] int 
 23999 ;;  c               1   19[BANK1 ] unsigned char 
 24000 ;; Return value:  Size  Location     Type
 24001 ;;                  2   15[BANK1 ] int 
 24002 ;; Registers used:
 24003 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 24004 ;; Tracked objects:
 24005 ;;		On entry : 3F/1
 24006 ;;		On exit  : 3F/1
 24007 ;;		Unchanged: 0/0
 24008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24009 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24010 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24012 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24013 ;;Total ram usage:        7 bytes
 24014 ;; Hardware stack levels used:    1
 24015 ;; Hardware stack levels required when called:   19
 24016 ;; This function calls:
 24017 ;;		_fputc
 24018 ;; This function is called by:
 24019 ;;		_pad
 24020 ;; This function uses a non-reentrant model
 24021 ;;
 24022                           
 24023                           	psect	text178
 24024  009420                     __ptext178:
 24025                           	opt callstack 0
 24026  009420                     _fputs:
 24027                           	opt callstack 6
 24028                           
 24029                           ; BSR set to: 1
 24030                           
 24031                           ; BSR set to: 1
 24032                           ;incstack = 0
 24033  009420  0E00               	movlw	0
 24034  009422  6F15               	movwf	(fputs@i+1)& (0+255),b
 24035  009424  0E00               	movlw	0
 24036  009426  6F14               	movwf	fputs@i& (0+255),b
 24037  009428  D00E               	goto	l17131
 24038  00942A                     l17127:
 24039                           
 24040                           ; BSR set to: 1
 24041  00942A  0060  F44C  F106   	movff	fputs@c,fputc@c
 24042  009430  6B07               	clrf	(fputc@c+1)& (0+255),b
 24043  009432  0060  F444  F108   	movff	fputs@fp,fputc@fp
 24044  009438  0060  F448  F109   	movff	fputs@fp+1,fputc@fp+1
 24045  00943E  ECCF  F037         	call	_fputc	;wreg free
 24046                           
 24047                           ; BSR set to: 1
 24048  009442  4B14               	infsnz	fputs@i& (0+255),f,b
 24049  009444  2B15               	incf	(fputs@i+1)& (0+255),f,b
 24050  009446                     l17131:
 24051                           
 24052                           ; BSR set to: 1
 24053  009446  5114               	movf	fputs@i& (0+255),w,b
 24054  009448  250F               	addwf	fputs@s& (0+255),w,b
 24055  00944A  6ED9               	movwf	fsr2l,c
 24056  00944C  5115               	movf	(fputs@i+1)& (0+255),w,b
 24057  00944E  2110               	addwfc	(fputs@s+1)& (0+255),w,b
 24058  009450  6EDA               	movwf	fsr2h,c
 24059  009452  50DF               	movf	indf2,w,c
 24060  009454  6F13               	movwf	fputs@c& (0+255),b
 24061  009456  5113               	movf	fputs@c& (0+255),w,b
 24062  009458  B4D8               	btfsc	status,2,c
 24063  00945A  0012               	return	
 24064  00945C  D7E6               	goto	l17127
 24065  00945E                     __end_of_fputs:
 24066                           	opt callstack 0
 24067                           
 24068 ;; *************** function _fputc *****************
 24069 ;; Defined at:
 24070 ;;		line 8 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 24071 ;; Parameters:    Size  Location     Type
 24072 ;;  c               2    6[BANK1 ] int 
 24073 ;;  fp              2    8[BANK1 ] PTR struct _IO_FILE
 24074 ;;		 -> sprintf@f(6), NULL(0), 
 24075 ;; Auto vars:     Size  Location     Type
 24076 ;;		None
 24077 ;; Return value:  Size  Location     Type
 24078 ;;                  2    6[BANK1 ] int 
 24079 ;; Registers used:
 24080 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 24081 ;; Tracked objects:
 24082 ;;		On entry : 3F/1
 24083 ;;		On exit  : 3F/1
 24084 ;;		Unchanged: 0/0
 24085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24086 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24088 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24089 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24090 ;;Total ram usage:        9 bytes
 24091 ;; Hardware stack levels used:    1
 24092 ;; Hardware stack levels required when called:   18
 24093 ;; This function calls:
 24094 ;;		_putch
 24095 ;; This function is called by:
 24096 ;;		_pad
 24097 ;;		_stoa
 24098 ;;		_vfpfcnvrt
 24099 ;;		_fputs
 24100 ;;		_putchar
 24101 ;; This function uses a non-reentrant model
 24102 ;;
 24103                           
 24104                           	psect	text179
 24105  006F9E                     __ptext179:
 24106                           	opt callstack 0
 24107  006F9E                     _fputc:
 24108                           	opt callstack 6
 24109                           
 24110                           ; BSR set to: 1
 24111                           
 24112                           ; BSR set to: 1
 24113                           ;incstack = 0
 24114  006F9E  5108               	movf	fputc@fp& (0+255),w,b
 24115  006FA0  1109               	iorwf	(fputc@fp+1)& (0+255),w,b
 24116  006FA2  B4D8               	btfsc	status,2,c
 24117  006FA4  D004               	goto	u15510
 24118                           
 24119                           ; BSR set to: 1
 24120  006FA6  5108               	movf	fputc@fp& (0+255),w,b
 24121  006FA8  1109               	iorwf	(fputc@fp+1)& (0+255),w,b
 24122  006FAA  A4D8               	btfss	status,2,c
 24123  006FAC  D004               	goto	l16959
 24124  006FAE                     u15510:
 24125                           
 24126                           ; BSR set to: 1
 24127  006FAE  5106               	movf	fputc@c& (0+255),w,b
 24128  006FB0  EC04  F052         	call	_putch
 24129  006FB4  D04A               	goto	l16965
 24130  006FB6                     l16959:
 24131                           
 24132                           ; BSR set to: 1
 24133  006FB6  EE20 F004          	lfsr	2,4
 24134  006FBA  5108               	movf	fputc@fp& (0+255),w,b
 24135  006FBC  26D9               	addwf	fsr2l,f,c
 24136  006FBE  5109               	movf	(fputc@fp+1)& (0+255),w,b
 24137  006FC0  22DA               	addwfc	fsr2h,f,c
 24138  006FC2  50DE               	movf	postinc2,w,c
 24139  006FC4  10DE               	iorwf	postinc2,w,c
 24140  006FC6  B4D8               	btfsc	status,2,c
 24141  006FC8  D016               	goto	u15530
 24142                           
 24143                           ; BSR set to: 1
 24144  006FCA  EE20 F004          	lfsr	2,4
 24145  006FCE  5108               	movf	fputc@fp& (0+255),w,b
 24146  006FD0  26D9               	addwf	fsr2l,f,c
 24147  006FD2  5109               	movf	(fputc@fp+1)& (0+255),w,b
 24148  006FD4  22DA               	addwfc	fsr2h,f,c
 24149  006FD6  EE10 F002          	lfsr	1,2
 24150  006FDA  5108               	movf	fputc@fp& (0+255),w,b
 24151  006FDC  26E1               	addwf	fsr1l,f,c
 24152  006FDE  5109               	movf	(fputc@fp+1)& (0+255),w,b
 24153  006FE0  22E2               	addwfc	fsr1h,f,c
 24154  006FE2  50DE               	movf	postinc2,w,c
 24155  006FE4  5CE6               	subwf	postinc1,w,c
 24156  006FE6  50E6               	movf	postinc1,w,c
 24157  006FE8  0A80               	xorlw	128
 24158  006FEA  6F0E               	movwf	(??_fputc+4)& (0+255),b
 24159  006FEC  50DE               	movf	postinc2,w,c
 24160  006FEE  0A80               	xorlw	128
 24161  006FF0  590E               	subwfb	(??_fputc+4)& (0+255),w,b
 24162  006FF2  B0D8               	btfsc	status,0,c
 24163  006FF4  D02A               	goto	l16965
 24164  006FF6                     u15530:
 24165                           
 24166                           ; BSR set to: 1
 24167  006FF6  EE20 F002          	lfsr	2,2
 24168  006FFA  5108               	movf	fputc@fp& (0+255),w,b
 24169  006FFC  26D9               	addwf	fsr2l,f,c
 24170  006FFE  5109               	movf	(fputc@fp+1)& (0+255),w,b
 24171  007000  22DA               	addwfc	fsr2h,f,c
 24172  007002  006F FF78  F10A    	movff	postinc2,??_fputc
 24173  007008  006F FF74  F10B    	movff	postdec2,??_fputc+1
 24174  00700E  0060  F423  FFD9   	movff	fputc@fp,fsr2l
 24175  007014  0060  F427  FFDA   	movff	fputc@fp+1,fsr2h
 24176  00701A  006F FF78  F10C    	movff	postinc2,??_fputc+2
 24177  007020  006F FF74  F10D    	movff	postdec2,??_fputc+3
 24178  007026  510A               	movf	??_fputc& (0+255),w,b
 24179  007028  250C               	addwf	(??_fputc+2)& (0+255),w,b
 24180  00702A  6ED9               	movwf	fsr2l,c
 24181  00702C  510B               	movf	(??_fputc+1)& (0+255),w,b
 24182  00702E  210D               	addwfc	(??_fputc+3)& (0+255),w,b
 24183  007030  6EDA               	movwf	fsr2h,c
 24184  007032  0060  F41B  FFDF   	movff	fputc@c,indf2
 24185  007038  EE20 F002          	lfsr	2,2
 24186  00703C  5108               	movf	fputc@fp& (0+255),w,b
 24187  00703E  26D9               	addwf	fsr2l,f,c
 24188  007040  5109               	movf	(fputc@fp+1)& (0+255),w,b
 24189  007042  22DA               	addwfc	fsr2h,f,c
 24190  007044  2ADE               	incf	postinc2,f,c
 24191  007046  0E00               	movlw	0
 24192  007048  22DD               	addwfc	postdec2,f,c
 24193  00704A                     l16965:
 24194  00704A  0060  F418  F106   	movff	fputc@c,?_fputc
 24195  007050  0101               	movlb	1	; () banked
 24196  007052  6B07               	clrf	(?_fputc+1)& (0+255),b
 24197                           
 24198                           ; BSR set to: 1
 24199  007054  0012               	return		;funcret
 24200  007056                     __end_of_fputc:
 24201                           	opt callstack 0
 24202                           
 24203 ;; *************** function _putch *****************
 24204 ;; Defined at:
 24205 ;;		line 229 in file "mcc_generated_files/uart1.c"
 24206 ;; Parameters:    Size  Location     Type
 24207 ;;  txData          1    wreg     unsigned char 
 24208 ;; Auto vars:     Size  Location     Type
 24209 ;;  txData          1    5[BANK1 ] unsigned char 
 24210 ;; Return value:  Size  Location     Type
 24211 ;;                  1    wreg      void 
 24212 ;; Registers used:
 24213 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24214 ;; Tracked objects:
 24215 ;;		On entry : 3F/1
 24216 ;;		On exit  : 3F/39
 24217 ;;		Unchanged: 0/0
 24218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24220 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24222 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24223 ;;Total ram usage:        1 bytes
 24224 ;; Hardware stack levels used:    1
 24225 ;; Hardware stack levels required when called:   17
 24226 ;; This function calls:
 24227 ;;		_UART1_Write
 24228 ;; This function is called by:
 24229 ;;		_fputc
 24230 ;; This function uses a non-reentrant model
 24231 ;;
 24232                           
 24233                           	psect	text180
 24234  00A408                     __ptext180:
 24235                           	opt callstack 0
 24236  00A408                     _putch:
 24237                           	opt callstack 6
 24238                           
 24239                           ; BSR set to: 1
 24240                           ;incstack = 0
 24241                           ;putch@txData stored from wreg
 24242  00A408  6F05               	movwf	putch@txData& (0+255),b
 24243                           
 24244                           ;mcc_generated_files/uart1.c: 229: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          230: {;mcc_generated_files/uart1.c: 231:     UART1_Write(txData);
 24245  00A40A  0101               	movlb	1	; () banked
 24246  00A40C  5105               	movf	putch@txData& (0+255),w,b
 24247  00A40E  EC39  F046         	call	_UART1_Write
 24248                           
 24249                           ; BSR set to: 57
 24250  00A412  0012               	return		;funcret
 24251  00A414                     __end_of_putch:
 24252                           	opt callstack 0
 24253                           
 24254 ;; *************** function _UART1_Write *****************
 24255 ;; Defined at:
 24256 ;;		line 201 in file "mcc_generated_files/uart1.c"
 24257 ;; Parameters:    Size  Location     Type
 24258 ;;  txData          1    wreg     unsigned char 
 24259 ;; Auto vars:     Size  Location     Type
 24260 ;;  txData          1    4[BANK1 ] unsigned char 
 24261 ;; Return value:  Size  Location     Type
 24262 ;;                  1    wreg      void 
 24263 ;; Registers used:
 24264 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24265 ;; Tracked objects:
 24266 ;;		On entry : 3F/1
 24267 ;;		On exit  : 3F/39
 24268 ;;		Unchanged: 0/0
 24269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24271 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24273 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24274 ;;Total ram usage:        1 bytes
 24275 ;; Hardware stack levels used:    1
 24276 ;; Hardware stack levels required when called:   16
 24277 ;; This function calls:
 24278 ;;		Nothing
 24279 ;; This function is called by:
 24280 ;;		_putch
 24281 ;; This function uses a non-reentrant model
 24282 ;;
 24283                           
 24284                           	psect	text181
 24285  008C72                     __ptext181:
 24286                           	opt callstack 0
 24287  008C72                     _UART1_Write:
 24288                           	opt callstack 6
 24289                           
 24290                           ; BSR set to: 57
 24291                           ;incstack = 0
 24292                           ;UART1_Write@txData stored from wreg
 24293  008C72  6F04               	movwf	UART1_Write@txData& (0+255),b
 24294  008C74                     
 24295                           ;mcc_generated_files/uart1.c: 203:     while(0 == uart1TxBufferRemaining)
 24296                           
 24297                           ;mcc_generated_files/uart1.c: 201: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 202: {;mcc_generated_files/uart1.c: 203:     while(0 == uart1TxBufferRemaining)
 24298  008C74  0102               	movlb	2	; () banked
 24299  008C76  51EB               	movf	_uart1TxBufferRemaining& (0+255),w,b	;volatile
 24300  008C78  11EC               	iorwf	(_uart1TxBufferRemaining+1)& (0+255),w,b	;volatile
 24301  008C7A  B4D8               	btfsc	status,2,c
 24302  008C7C  D7FB               	goto	l16897
 24303                           
 24304                           ; BSR set to: 2
 24305                           ;mcc_generated_files/uart1.c: 207:     if(0 == PIE3bits.U1TXIE)
 24306  008C7E  0139               	movlb	57	; () banked
 24307  008C80  B993               	btfsc	147,4,b	;volatile
 24308  008C82  D004               	goto	l657
 24309                           
 24310                           ; BSR set to: 57
 24311                           ;mcc_generated_files/uart1.c: 208:     {;mcc_generated_files/uart1.c: 209:         U1TXB
      +                           = txData;
 24312  008C84  0060  F413  FDEA   	movff	UART1_Write@txData,15850	;volatile
 24313                           
 24314                           ;mcc_generated_files/uart1.c: 210:     }
 24315  008C8A  D01B               	goto	l16913
 24316  008C8C                     l657:
 24317                           
 24318                           ; BSR set to: 57
 24319                           ;mcc_generated_files/uart1.c: 212:     {;mcc_generated_files/uart1.c: 213:         PIE3b
      +                          its.U1TXIE = 0;
 24320  008C8C  9993               	bcf	147,4,b	;volatile
 24321                           
 24322                           ; BSR set to: 57
 24323                           ;mcc_generated_files/uart1.c: 214:         uart1TxBuffer[uart1TxHead++] = txData;
 24324  008C8E  0E64               	movlw	low _uart1TxBuffer
 24325  008C90  0101               	movlb	1	; () banked
 24326  008C92  25ED               	addwf	_uart1TxHead& (0+255),w,b	;volatile
 24327  008C94  6ED9               	movwf	fsr2l,c
 24328  008C96  0E04               	movlw	high _uart1TxBuffer
 24329  008C98  21EE               	addwfc	(_uart1TxHead+1)& (0+255),w,b	;volatile
 24330  008C9A  6EDA               	movwf	fsr2h,c
 24331  008C9C  0060  F413  FFDF   	movff	UART1_Write@txData,indf2
 24332                           
 24333                           ; BSR set to: 1
 24334  008CA2  4BED               	infsnz	_uart1TxHead& (0+255),f,b	;volatile
 24335  008CA4  2BEE               	incf	(_uart1TxHead+1)& (0+255),f,b	;volatile
 24336                           
 24337                           ; BSR set to: 1
 24338                           ;mcc_generated_files/uart1.c: 215:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
 24339  008CA6  0EB0               	movlw	176
 24340  008CA8  5DED               	subwf	_uart1TxHead& (0+255),w,b	;volatile
 24341  008CAA  0E04               	movlw	4
 24342  008CAC  59EE               	subwfb	(_uart1TxHead+1)& (0+255),w,b	;volatile
 24343  008CAE  A0D8               	btfss	status,0,c
 24344  008CB0  D004               	goto	l16911
 24345                           
 24346                           ; BSR set to: 1
 24347                           ;mcc_generated_files/uart1.c: 216:         {;mcc_generated_files/uart1.c: 217:          
      +                             uart1TxHead = 0;
 24348  008CB2  0E00               	movlw	0
 24349  008CB4  6FEE               	movwf	(_uart1TxHead+1)& (0+255),b	;volatile
 24350  008CB6  0E00               	movlw	0
 24351  008CB8  6FED               	movwf	_uart1TxHead& (0+255),b	;volatile
 24352  008CBA                     l16911:
 24353                           
 24354                           ; BSR set to: 1
 24355                           ;mcc_generated_files/uart1.c: 219:         uart1TxBufferRemaining--;
 24356  008CBA  0102               	movlb	2	; () banked
 24357  008CBC  07EB               	decf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
 24358  008CBE  A0D8               	btfss	status,0,c
 24359  008CC0  07EC               	decf	(_uart1TxBufferRemaining+1)& (0+255),f,b	;volatile
 24360  008CC2                     l16913:
 24361                           
 24362                           ;mcc_generated_files/uart1.c: 221:     PIE3bits.U1TXIE = 1;
 24363  008CC2  0139               	movlb	57	; () banked
 24364  008CC4  8993               	bsf	147,4,b	;volatile
 24365                           
 24366                           ; BSR set to: 57
 24367  008CC6  0012               	return		;funcret
 24368  008CC8                     __end_of_UART1_Write:
 24369                           	opt callstack 0
 24370                           
 24371 ;; *************** function _atoi *****************
 24372 ;; Defined at:
 24373 ;;		line 4 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 24374 ;; Parameters:    Size  Location     Type
 24375 ;;  s               2   11[BANK1 ] PTR const unsigned char 
 24376 ;;		 -> STR_55(4), STR_54(4), STR_53(15), STR_52(16), 
 24377 ;;		 -> STR_51(32), STR_50(32), STR_49(13), STR_48(12), 
 24378 ;;		 -> STR_47(14), STR_46(4), STR_45(4), STR_44(2), 
 24379 ;;		 -> STR_43(10), STR_42(4), STR_41(55), STR_40(53), 
 24380 ;;		 -> STR_39(43), STR_38(54), STR_37(40), STR_36(36), 
 24381 ;;		 -> STR_35(41), STR_34(32), STR_33(65), STR_32(4), 
 24382 ;;		 -> STR_31(12), STR_30(4), STR_25(5), STR_24(3), 
 24383 ;;		 -> STR_23(7), STR_22(18), STR_21(15), STR_20(15), 
 24384 ;;		 -> STR_19(12), STR_18(5), STR_17(5), STR_16(5), 
 24385 ;;		 -> STR_15(5), STR_14(19), STR_13(8), STR_12(23), 
 24386 ;;		 -> STR_10(26), STR_9(17), STR_8(17), STR_7(15), 
 24387 ;;		 -> STR_4(45), STR_3(4), STR_2(15), STR_1(13), 
 24388 ;; Auto vars:     Size  Location     Type
 24389 ;;  n               2   24[BANK1 ] int 
 24390 ;;  neg             2   17[BANK1 ] int 
 24391 ;; Return value:  Size  Location     Type
 24392 ;;                  2   11[BANK1 ] int 
 24393 ;; Registers used:
 24394 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24395 ;; Tracked objects:
 24396 ;;		On entry : 3F/1
 24397 ;;		On exit  : 3F/1
 24398 ;;		Unchanged: 0/0
 24399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24400 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24401 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24402 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24403 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24404 ;;Total ram usage:       15 bytes
 24405 ;; Hardware stack levels used:    1
 24406 ;; Hardware stack levels required when called:   17
 24407 ;; This function calls:
 24408 ;;		___wmul
 24409 ;;		_isdigit
 24410 ;;		_isspace
 24411 ;; This function is called by:
 24412 ;;		_vfpfcnvrt
 24413 ;; This function uses a non-reentrant model
 24414 ;;
 24415                           
 24416                           	psect	text182
 24417  00559A                     __ptext182:
 24418                           	opt callstack 0
 24419  00559A                     _atoi:
 24420                           	opt callstack 10
 24421                           
 24422                           ; BSR set to: 1
 24423                           
 24424                           ; BSR set to: 57
 24425                           ;incstack = 0
 24426  00559A  0E00               	movlw	0
 24427  00559C  6F19               	movwf	(atoi@n+1)& (0+255),b
 24428  00559E  0E00               	movlw	0
 24429  0055A0  6F18               	movwf	atoi@n& (0+255),b
 24430  0055A2  0E00               	movlw	0
 24431  0055A4  6F12               	movwf	(atoi@neg+1)& (0+255),b
 24432  0055A6  0E00               	movlw	0
 24433  0055A8  6F11               	movwf	atoi@neg& (0+255),b
 24434  0055AA  D002               	goto	l17827
 24435  0055AC                     l17825:
 24436                           
 24437                           ; BSR set to: 1
 24438  0055AC  4B0B               	infsnz	atoi@s& (0+255),f,b
 24439  0055AE  2B0C               	incf	(atoi@s+1)& (0+255),f,b
 24440  0055B0                     l17827:
 24441                           
 24442                           ; BSR set to: 1
 24443  0055B0  0E01               	movlw	1
 24444  0055B2  6F17               	movwf	_atoi$5675& (0+255),b
 24445                           
 24446                           ; BSR set to: 1
 24447  0055B4  0060  F42F  FFF6   	movff	atoi@s,tblptrl
 24448  0055BA  0060  F433  FFF7   	movff	atoi@s+1,tblptrh
 24449  0055C0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24450  0055C0  6AF8               	clrf	tblptru,c
 24451  0055C2                     	endif
 24452  0055C2                     	if	0	;tblptru may be non-zero
 24453  0055C2                     	endif
 24454  0055C2  0008               	tblrd		*
 24455  0055C4  50F5               	movf	tablat,w,c
 24456  0055C6  0A20               	xorlw	32
 24457  0055C8  B4D8               	btfsc	status,2,c
 24458  0055CA  D01B               	goto	l17835
 24459                           
 24460                           ; BSR set to: 1
 24461  0055CC  0EF7               	movlw	247
 24462  0055CE  6F0D               	movwf	??_atoi& (0+255),b
 24463  0055D0  0EFF               	movlw	255
 24464  0055D2  6F0E               	movwf	(??_atoi+1)& (0+255),b
 24465  0055D4  0060  F42F  FFF6   	movff	atoi@s,tblptrl
 24466  0055DA  0060  F433  FFF7   	movff	atoi@s+1,tblptrh
 24467  0055E0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24468  0055E0  6AF8               	clrf	tblptru,c
 24469  0055E2                     	endif
 24470  0055E2                     	if	0	;tblptru may be non-zero
 24471  0055E2                     	endif
 24472  0055E2  0008               	tblrd		*
 24473  0055E4  50F5               	movf	tablat,w,c
 24474  0055E6  6F0F               	movwf	(??_atoi+2)& (0+255),b
 24475  0055E8  6B10               	clrf	(??_atoi+3)& (0+255),b
 24476  0055EA  510D               	movf	??_atoi& (0+255),w,b
 24477  0055EC  270F               	addwf	(??_atoi+2)& (0+255),f,b
 24478  0055EE  510E               	movf	(??_atoi+1)& (0+255),w,b
 24479  0055F0  2310               	addwfc	(??_atoi+3)& (0+255),f,b
 24480  0055F2  5110               	movf	(??_atoi+3)& (0+255),w,b
 24481  0055F4  E104               	bnz	u17260
 24482  0055F6  0E05               	movlw	5
 24483  0055F8  5D0F               	subwf	(??_atoi+2)& (0+255),w,b
 24484  0055FA  A0D8               	btfss	status,0,c
 24485  0055FC  D002               	goto	l17835
 24486  0055FE                     u17260:
 24487                           
 24488                           ; BSR set to: 1
 24489  0055FE  0E00               	movlw	0
 24490  005600  6F17               	movwf	_atoi$5675& (0+255),b
 24491  005602                     l17835:
 24492                           
 24493                           ; BSR set to: 1
 24494  005602  0060  F45C  F113   	movff	_atoi$5675,_atoi$5674
 24495  005608  6B14               	clrf	(_atoi$5674+1)& (0+255),b
 24496                           
 24497                           ; BSR set to: 1
 24498  00560A  5113               	movf	_atoi$5674& (0+255),w,b
 24499  00560C  1114               	iorwf	(_atoi$5674+1)& (0+255),w,b
 24500  00560E  B4D8               	btfsc	status,2,c
 24501  005610  D008               	goto	l17845
 24502  005612  D7CC               	goto	l17825
 24503  005614                     l17841:
 24504                           
 24505                           ; BSR set to: 1
 24506  005614  0E00               	movlw	0
 24507  005616  6F12               	movwf	(atoi@neg+1)& (0+255),b
 24508  005618  0E01               	movlw	1
 24509  00561A  6F11               	movwf	atoi@neg& (0+255),b
 24510  00561C                     l17843:
 24511                           
 24512                           ; BSR set to: 1
 24513  00561C  4B0B               	infsnz	atoi@s& (0+255),f,b
 24514  00561E  2B0C               	incf	(atoi@s+1)& (0+255),f,b
 24515  005620  D036               	goto	l17851
 24516  005622                     l17845:
 24517                           
 24518                           ; BSR set to: 1
 24519  005622  0060  F42F  FFF6   	movff	atoi@s,tblptrl
 24520  005628  0060  F433  FFF7   	movff	atoi@s+1,tblptrh
 24521  00562E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24522  00562E  6AF8               	clrf	tblptru,c
 24523  005630                     	endif
 24524  005630                     	if	0	;tblptru may be non-zero
 24525  005630                     	endif
 24526  005630  0008               	tblrd		*
 24527  005632  50F5               	movf	tablat,w,c
 24528  005634  6F0D               	movwf	??_atoi& (0+255),b
 24529  005636  6B0E               	clrf	(??_atoi+1)& (0+255),b
 24530                           
 24531                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24532                           ; Switch size 1, requested type "simple"
 24533                           ; Number of cases is 1, Range of values is 0 to 0
 24534                           ; switch strategies available:
 24535                           ; Name         Instructions Cycles
 24536                           ; simple_byte            4     3 (average)
 24537                           ;	Chosen strategy is simple_byte
 24538  005638  510E               	movf	(??_atoi+1)& (0+255),w,b
 24539  00563A  0A00               	xorlw	0	; case 0
 24540  00563C  A4D8               	btfss	status,2,c
 24541  00563E  D027               	goto	l17851
 24542                           
 24543                           ; BSR set to: 1
 24544                           ; Switch size 1, requested type "simple"
 24545                           ; Number of cases is 2, Range of values is 43 to 45
 24546                           ; switch strategies available:
 24547                           ; Name         Instructions Cycles
 24548                           ; simple_byte            7     4 (average)
 24549                           ;	Chosen strategy is simple_byte
 24550  005640  510D               	movf	??_atoi& (0+255),w,b
 24551  005642  0A2B               	xorlw	43	; case 43
 24552  005644  B4D8               	btfsc	status,2,c
 24553  005646  D7EA               	goto	l17843
 24554  005648  0A06               	xorlw	6	; case 45
 24555  00564A  B4D8               	btfsc	status,2,c
 24556  00564C  D7E3               	goto	l17841
 24557  00564E  D01F               	goto	l17851
 24558  005650                     l17847:
 24559                           
 24560                           ; BSR set to: 1
 24561  005650  0060  F460  F104   	movff	atoi@n,___wmul@multiplier
 24562  005656  0060  F464  F105   	movff	atoi@n+1,___wmul@multiplier+1
 24563  00565C  0E00               	movlw	0
 24564  00565E  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24565  005660  0E0A               	movlw	10
 24566  005662  6F06               	movwf	___wmul@multiplicand& (0+255),b
 24567  005664  EC7C  F04C         	call	___wmul	;wreg free
 24568  005668  0060  F42F  FFF6   	movff	atoi@s,tblptrl
 24569  00566E  0060  F433  FFF7   	movff	atoi@s+1,tblptrh
 24570  005674                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24571  005674  6AF8               	clrf	tblptru,c
 24572  005676                     	endif
 24573  005676                     	if	0	;tblptru may be non-zero
 24574  005676                     	endif
 24575  005676  0008               	tblrd		*
 24576  005678  50F5               	movf	tablat,w,c
 24577  00567A  5F04               	subwf	?___wmul& (0+255),f,b
 24578  00567C  0E00               	movlw	0
 24579  00567E  5B05               	subwfb	(?___wmul+1)& (0+255),f,b
 24580  005680  0E30               	movlw	48
 24581  005682  2504               	addwf	?___wmul& (0+255),w,b
 24582  005684  6F18               	movwf	atoi@n& (0+255),b
 24583  005686  0E00               	movlw	0
 24584  005688  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 24585  00568A  6F19               	movwf	(atoi@n+1)& (0+255),b
 24586  00568C  D7C7               	goto	l17843
 24587  00568E                     l17851:
 24588                           
 24589                           ; BSR set to: 1
 24590  00568E  0ED0               	movlw	208
 24591  005690  6F0D               	movwf	??_atoi& (0+255),b
 24592  005692  0EFF               	movlw	255
 24593  005694  6F0E               	movwf	(??_atoi+1)& (0+255),b
 24594  005696  0060  F42F  FFF6   	movff	atoi@s,tblptrl
 24595  00569C  0060  F433  FFF7   	movff	atoi@s+1,tblptrh
 24596  0056A2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24597  0056A2  6AF8               	clrf	tblptru,c
 24598  0056A4                     	endif
 24599  0056A4                     	if	0	;tblptru may be non-zero
 24600  0056A4                     	endif
 24601  0056A4  0008               	tblrd		*
 24602  0056A6  50F5               	movf	tablat,w,c
 24603  0056A8  6F0F               	movwf	(??_atoi+2)& (0+255),b
 24604  0056AA  6B10               	clrf	(??_atoi+3)& (0+255),b
 24605  0056AC  510D               	movf	??_atoi& (0+255),w,b
 24606  0056AE  270F               	addwf	(??_atoi+2)& (0+255),f,b
 24607  0056B0  510E               	movf	(??_atoi+1)& (0+255),w,b
 24608  0056B2  2310               	addwfc	(??_atoi+3)& (0+255),f,b
 24609  0056B4  5110               	movf	(??_atoi+3)& (0+255),w,b
 24610  0056B6  E106               	bnz	u17280
 24611  0056B8  0E0A               	movlw	10
 24612  0056BA  5D0F               	subwf	(??_atoi+2)& (0+255),w,b
 24613  0056BC  B0D8               	btfsc	status,0,c
 24614  0056BE  D002               	goto	u17280
 24615  0056C0  0E01               	movlw	1
 24616  0056C2  D001               	goto	u17290
 24617  0056C4                     u17280:
 24618  0056C4  0E00               	movlw	0
 24619  0056C6                     u17290:
 24620  0056C6  6F15               	movwf	_atoi$5676& (0+255),b
 24621  0056C8  6B16               	clrf	(_atoi$5676+1)& (0+255),b
 24622                           
 24623                           ; BSR set to: 1
 24624  0056CA  5115               	movf	_atoi$5676& (0+255),w,b
 24625  0056CC  1116               	iorwf	(_atoi$5676+1)& (0+255),w,b
 24626  0056CE  A4D8               	btfss	status,2,c
 24627  0056D0  D7BF               	goto	l17847
 24628                           
 24629                           ; BSR set to: 1
 24630  0056D2  5111               	movf	atoi@neg& (0+255),w,b
 24631  0056D4  1112               	iorwf	(atoi@neg+1)& (0+255),w,b
 24632  0056D6  A4D8               	btfss	status,2,c
 24633  0056D8  D011               	goto	l4314
 24634                           
 24635                           ; BSR set to: 1
 24636  0056DA  0060  F460  F10D   	movff	atoi@n,??_atoi
 24637  0056E0  0060  F464  F10E   	movff	atoi@n+1,??_atoi+1
 24638  0056E6  1F0D               	comf	??_atoi& (0+255),f,b
 24639  0056E8  1F0E               	comf	(??_atoi+1)& (0+255),f,b
 24640  0056EA  4B0D               	infsnz	??_atoi& (0+255),f,b
 24641  0056EC  2B0E               	incf	(??_atoi+1)& (0+255),f,b
 24642  0056EE  0060  F434  F10B   	movff	??_atoi,?_atoi
 24643  0056F4  0060  F438  F10C   	movff	??_atoi+1,?_atoi+1
 24644  0056FA  0012               	return	
 24645  0056FC                     l4314:
 24646                           
 24647                           ; BSR set to: 1
 24648  0056FC  0060  F460  F10B   	movff	atoi@n,?_atoi
 24649  005702  0060  F464  F10C   	movff	atoi@n+1,?_atoi+1
 24650                           
 24651                           ; BSR set to: 1
 24652  005708  0012               	return		;funcret
 24653  00570A                     __end_of_atoi:
 24654                           	opt callstack 0
 24655                           
 24656 ;; *************** function _isspace *****************
 24657 ;; Defined at:
 24658 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 24659 ;; Parameters:    Size  Location     Type
 24660 ;;  c               2    4[BANK1 ] int 
 24661 ;; Auto vars:     Size  Location     Type
 24662 ;;		None
 24663 ;; Return value:  Size  Location     Type
 24664 ;;                  2    4[BANK1 ] int 
 24665 ;; Registers used:
 24666 ;;		wreg, status,2, status,0
 24667 ;; Tracked objects:
 24668 ;;		On entry : 0/0
 24669 ;;		On exit  : 3F/1
 24670 ;;		Unchanged: 0/0
 24671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24672 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24673 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24674 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24675 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24676 ;;Total ram usage:        7 bytes
 24677 ;; Hardware stack levels used:    1
 24678 ;; Hardware stack levels required when called:   16
 24679 ;; This function calls:
 24680 ;;		Nothing
 24681 ;; This function is called by:
 24682 ;;		_atoi
 24683 ;; This function uses a non-reentrant model
 24684 ;;
 24685                           
 24686                           	psect	text183
 24687  00921C                     __ptext183:
 24688                           	opt callstack 0
 24689  00921C                     _isspace:
 24690                           	opt callstack 10
 24691                           
 24692                           ; BSR set to: 1
 24693                           ;incstack = 0
 24694  00921C  0E01               	movlw	1
 24695  00921E  0101               	movlb	1	; () banked
 24696  009220  6F0A               	movwf	_isspace$5701& (0+255),b
 24697                           
 24698                           ; BSR set to: 1
 24699  009222  0E20               	movlw	32
 24700  009224  1904               	xorwf	isspace@c& (0+255),w,b
 24701  009226  1105               	iorwf	(isspace@c+1)& (0+255),w,b
 24702  009228  B4D8               	btfsc	status,2,c
 24703  00922A  D016               	goto	l17507
 24704                           
 24705                           ; BSR set to: 1
 24706  00922C  0EF7               	movlw	247
 24707  00922E  6F06               	movwf	??_isspace& (0+255),b
 24708  009230  0EFF               	movlw	255
 24709  009232  6F07               	movwf	(??_isspace+1)& (0+255),b
 24710  009234  0060  F410  F108   	movff	isspace@c,??_isspace+2
 24711  00923A  0060  F414  F109   	movff	isspace@c+1,??_isspace+3
 24712  009240  5106               	movf	??_isspace& (0+255),w,b
 24713  009242  2708               	addwf	(??_isspace+2)& (0+255),f,b
 24714  009244  5107               	movf	(??_isspace+1)& (0+255),w,b
 24715  009246  2309               	addwfc	(??_isspace+3)& (0+255),f,b
 24716  009248  5109               	movf	(??_isspace+3)& (0+255),w,b
 24717  00924A  E104               	bnz	u16660
 24718  00924C  0E05               	movlw	5
 24719  00924E  5D08               	subwf	(??_isspace+2)& (0+255),w,b
 24720  009250  A0D8               	btfss	status,0,c
 24721  009252  D002               	goto	l17507
 24722  009254                     u16660:
 24723                           
 24724                           ; BSR set to: 1
 24725  009254  0E00               	movlw	0
 24726  009256  6F0A               	movwf	_isspace$5701& (0+255),b
 24727  009258                     l17507:
 24728                           
 24729                           ; BSR set to: 1
 24730  009258  0060  F428  F104   	movff	_isspace$5701,?_isspace
 24731  00925E  6B05               	clrf	(?_isspace+1)& (0+255),b
 24732                           
 24733                           ; BSR set to: 1
 24734  009260  0012               	return		;funcret
 24735  009262                     __end_of_isspace:
 24736                           	opt callstack 0
 24737                           
 24738 ;; *************** function _isdigit *****************
 24739 ;; Defined at:
 24740 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 24741 ;; Parameters:    Size  Location     Type
 24742 ;;  c               2    4[BANK1 ] int 
 24743 ;; Auto vars:     Size  Location     Type
 24744 ;;		None
 24745 ;; Return value:  Size  Location     Type
 24746 ;;                  2    4[BANK1 ] int 
 24747 ;; Registers used:
 24748 ;;		wreg, status,2, status,0
 24749 ;; Tracked objects:
 24750 ;;		On entry : 0/0
 24751 ;;		On exit  : 3F/1
 24752 ;;		Unchanged: 0/0
 24753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24754 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24756 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24757 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24758 ;;Total ram usage:        6 bytes
 24759 ;; Hardware stack levels used:    1
 24760 ;; Hardware stack levels required when called:   16
 24761 ;; This function calls:
 24762 ;;		Nothing
 24763 ;; This function is called by:
 24764 ;;		_vfpfcnvrt
 24765 ;;		_atoi
 24766 ;; This function uses a non-reentrant model
 24767 ;;
 24768                           
 24769                           	psect	text184
 24770  009630                     __ptext184:
 24771                           	opt callstack 0
 24772  009630                     _isdigit:
 24773                           	opt callstack 11
 24774                           
 24775                           ; BSR set to: 1
 24776                           ;incstack = 0
 24777  009630  0ED0               	movlw	208
 24778  009632  0101               	movlb	1	; () banked
 24779  009634  6F06               	movwf	??_isdigit& (0+255),b
 24780  009636  0EFF               	movlw	255
 24781  009638  6F07               	movwf	(??_isdigit+1)& (0+255),b
 24782  00963A  0060  F410  F108   	movff	isdigit@c,??_isdigit+2
 24783  009640  0060  F414  F109   	movff	isdigit@c+1,??_isdigit+3
 24784  009646  5106               	movf	??_isdigit& (0+255),w,b
 24785  009648  2708               	addwf	(??_isdigit+2)& (0+255),f,b
 24786  00964A  5107               	movf	(??_isdigit+1)& (0+255),w,b
 24787  00964C  2309               	addwfc	(??_isdigit+3)& (0+255),f,b
 24788  00964E  5109               	movf	(??_isdigit+3)& (0+255),w,b
 24789  009650  E106               	bnz	u16500
 24790  009652  0E0A               	movlw	10
 24791  009654  5D08               	subwf	(??_isdigit+2)& (0+255),w,b
 24792  009656  B0D8               	btfsc	status,0,c
 24793  009658  D002               	goto	u16500
 24794  00965A  0E01               	movlw	1
 24795  00965C  D001               	goto	u16510
 24796  00965E                     u16500:
 24797  00965E  0E00               	movlw	0
 24798  009660                     u16510:
 24799  009660  6F04               	movwf	?_isdigit& (0+255),b
 24800  009662  6B05               	clrf	(?_isdigit+1)& (0+255),b
 24801                           
 24802                           ; BSR set to: 1
 24803  009664  0012               	return		;funcret
 24804  009666                     __end_of_isdigit:
 24805                           	opt callstack 0
 24806                           
 24807 ;; *************** function ___wmul *****************
 24808 ;; Defined at:
 24809 ;;		line 15 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/Umul16.c"
 24810 ;; Parameters:    Size  Location     Type
 24811 ;;  multiplier      2    4[BANK1 ] unsigned int 
 24812 ;;  multiplicand    2    6[BANK1 ] unsigned int 
 24813 ;; Auto vars:     Size  Location     Type
 24814 ;;  product         2    8[BANK1 ] unsigned int 
 24815 ;; Return value:  Size  Location     Type
 24816 ;;                  2    4[BANK1 ] unsigned int 
 24817 ;; Registers used:
 24818 ;;		wreg, status,2, status,0, prodl, prodh
 24819 ;; Tracked objects:
 24820 ;;		On entry : 3F/1
 24821 ;;		On exit  : 3F/1
 24822 ;;		Unchanged: 0/0
 24823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24824 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24825 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24827 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24828 ;;Total ram usage:        6 bytes
 24829 ;; Hardware stack levels used:    1
 24830 ;; Hardware stack levels required when called:   16
 24831 ;; This function calls:
 24832 ;;		Nothing
 24833 ;; This function is called by:
 24834 ;;		_ValueDisplay
 24835 ;;		_HigherAlarm
 24836 ;;		_MuteAlarm
 24837 ;;		_AlarmUpdateLCD
 24838 ;;		_AlarmCheckTask
 24839 ;;		_atoi
 24840 ;;		_AdcInit
 24841 ;;		_AdcSeeData
 24842 ;;		_AdcGetData
 24843 ;;		_AdcDataReady
 24844 ;; This function uses a non-reentrant model
 24845 ;;
 24846                           
 24847                           	psect	text185
 24848  0098F8                     __ptext185:
 24849                           	opt callstack 0
 24850  0098F8                     ___wmul:
 24851                           	opt callstack 10
 24852                           
 24853                           ; BSR set to: 1
 24854                           
 24855                           ; BSR set to: 1
 24856                           ;incstack = 0
 24857  0098F8  5104               	movf	___wmul@multiplier& (0+255),w,b
 24858  0098FA  0306               	mulwf	___wmul@multiplicand& (0+255),b
 24859  0098FC  006F FFCC  F108    	movff	prodl,___wmul@product
 24860  009902  006F FFD0  F109    	movff	prodh,___wmul@product+1
 24861  009908  5104               	movf	___wmul@multiplier& (0+255),w,b
 24862  00990A  0307               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 24863  00990C  50F3               	movf	243,w,c
 24864  00990E  2709               	addwf	(___wmul@product+1)& (0+255),f,b
 24865  009910  5105               	movf	(___wmul@multiplier+1)& (0+255),w,b
 24866  009912  0306               	mulwf	___wmul@multiplicand& (0+255),b
 24867  009914  50F3               	movf	243,w,c
 24868  009916  2709               	addwf	(___wmul@product+1)& (0+255),f,b
 24869                           
 24870                           ; BSR set to: 1
 24871  009918  0060  F420  F104   	movff	___wmul@product,?___wmul
 24872  00991E  0060  F424  F105   	movff	___wmul@product+1,?___wmul+1
 24873                           
 24874                           ; BSR set to: 1
 24875  009924  0012               	return		;funcret
 24876  009926                     __end_of___wmul:
 24877                           	opt callstack 0
 24878                           
 24879 ;; *************** function ___awmod *****************
 24880 ;; Defined at:
 24881 ;;		line 7 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 24882 ;; Parameters:    Size  Location     Type
 24883 ;;  dividend        2    4[BANK1 ] int 
 24884 ;;  divisor         2    6[BANK1 ] int 
 24885 ;; Auto vars:     Size  Location     Type
 24886 ;;  sign            1    9[BANK1 ] unsigned char 
 24887 ;;  counter         1    8[BANK1 ] unsigned char 
 24888 ;; Return value:  Size  Location     Type
 24889 ;;                  2    4[BANK1 ] int 
 24890 ;; Registers used:
 24891 ;;		wreg, status,2, status,0
 24892 ;; Tracked objects:
 24893 ;;		On entry : 3F/1
 24894 ;;		On exit  : 3F/1
 24895 ;;		Unchanged: 0/0
 24896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24897 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24898 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24900 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24901 ;;Total ram usage:        6 bytes
 24902 ;; Hardware stack levels used:    1
 24903 ;; Hardware stack levels required when called:   16
 24904 ;; This function calls:
 24905 ;;		Nothing
 24906 ;; This function is called by:
 24907 ;;		_ValueDisplay
 24908 ;;		_AlarmDisplay
 24909 ;; This function uses a non-reentrant model
 24910 ;;
 24911                           
 24912                           	psect	text186
 24913  0082FE                     __ptext186:
 24914                           	opt callstack 0
 24915  0082FE                     ___awmod:
 24916                           	opt callstack 11
 24917                           
 24918                           ; BSR set to: 1
 24919                           
 24920                           ; BSR set to: 1
 24921                           ;incstack = 0
 24922  0082FE  0E00               	movlw	0
 24923  008300  6F09               	movwf	___awmod@sign& (0+255),b
 24924                           
 24925                           ; BSR set to: 1
 24926  008302  AF05               	btfss	(___awmod@dividend+1)& (0+255),7,b
 24927  008304  D006               	goto	l18801
 24928                           
 24929                           ; BSR set to: 1
 24930  008306  6D04               	negf	___awmod@dividend& (0+255),b
 24931  008308  1F05               	comf	(___awmod@dividend+1)& (0+255),f,b
 24932  00830A  B0D8               	btfsc	status,0,c
 24933  00830C  2B05               	incf	(___awmod@dividend+1)& (0+255),f,b
 24934                           
 24935                           ; BSR set to: 1
 24936  00830E  0E01               	movlw	1
 24937  008310  6F09               	movwf	___awmod@sign& (0+255),b
 24938  008312                     l18801:
 24939                           
 24940                           ; BSR set to: 1
 24941  008312  AF07               	btfss	(___awmod@divisor+1)& (0+255),7,b
 24942  008314  D004               	goto	l18805
 24943                           
 24944                           ; BSR set to: 1
 24945  008316  6D06               	negf	___awmod@divisor& (0+255),b
 24946  008318  1F07               	comf	(___awmod@divisor+1)& (0+255),f,b
 24947  00831A  B0D8               	btfsc	status,0,c
 24948  00831C  2B07               	incf	(___awmod@divisor+1)& (0+255),f,b
 24949  00831E                     l18805:
 24950                           
 24951                           ; BSR set to: 1
 24952  00831E  5106               	movf	___awmod@divisor& (0+255),w,b
 24953  008320  1107               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 24954  008322  B4D8               	btfsc	status,2,c
 24955  008324  D018               	goto	l18821
 24956                           
 24957                           ; BSR set to: 1
 24958  008326  0E01               	movlw	1
 24959  008328  6F08               	movwf	___awmod@counter& (0+255),b
 24960  00832A  D004               	goto	l18811
 24961  00832C                     l18809:
 24962                           
 24963                           ; BSR set to: 1
 24964  00832C  90D8               	bcf	status,0,c
 24965  00832E  3706               	rlcf	___awmod@divisor& (0+255),f,b
 24966  008330  3707               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 24967  008332  2B08               	incf	___awmod@counter& (0+255),f,b
 24968  008334                     l18811:
 24969                           
 24970                           ; BSR set to: 1
 24971  008334  AF07               	btfss	(___awmod@divisor+1)& (0+255),7,b
 24972  008336  D7FA               	goto	l18809
 24973  008338                     u18360:
 24974                           
 24975                           ; BSR set to: 1
 24976  008338  5106               	movf	___awmod@divisor& (0+255),w,b
 24977  00833A  5D04               	subwf	___awmod@dividend& (0+255),w,b
 24978  00833C  5107               	movf	(___awmod@divisor+1)& (0+255),w,b
 24979  00833E  5905               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 24980  008340  A0D8               	btfss	status,0,c
 24981  008342  D004               	goto	l18817
 24982                           
 24983                           ; BSR set to: 1
 24984  008344  5106               	movf	___awmod@divisor& (0+255),w,b
 24985  008346  5F04               	subwf	___awmod@dividend& (0+255),f,b
 24986  008348  5107               	movf	(___awmod@divisor+1)& (0+255),w,b
 24987  00834A  5B05               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 24988  00834C                     l18817:
 24989                           
 24990                           ; BSR set to: 1
 24991  00834C  90D8               	bcf	status,0,c
 24992  00834E  3307               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 24993  008350  3306               	rrcf	___awmod@divisor& (0+255),f,b
 24994                           
 24995                           ; BSR set to: 1
 24996  008352  2F08               	decfsz	___awmod@counter& (0+255),f,b
 24997  008354  D7F1               	goto	u18360
 24998  008356                     l18821:
 24999                           
 25000                           ; BSR set to: 1
 25001  008356  5109               	movf	___awmod@sign& (0+255),w,b
 25002  008358  B4D8               	btfsc	status,2,c
 25003  00835A  D004               	goto	l18825
 25004                           
 25005                           ; BSR set to: 1
 25006  00835C  6D04               	negf	___awmod@dividend& (0+255),b
 25007  00835E  1F05               	comf	(___awmod@dividend+1)& (0+255),f,b
 25008  008360  B0D8               	btfsc	status,0,c
 25009  008362  2B05               	incf	(___awmod@dividend+1)& (0+255),f,b
 25010  008364                     l18825:
 25011                           
 25012                           ; BSR set to: 1
 25013  008364  0060  F410  F104   	movff	___awmod@dividend,?___awmod
 25014  00836A  0060  F414  F105   	movff	___awmod@dividend+1,?___awmod+1
 25015                           
 25016                           ; BSR set to: 1
 25017  008370  0012               	return		;funcret
 25018  008372                     __end_of___awmod:
 25019                           	opt callstack 0
 25020                           
 25021 ;; *************** function _GetVolume *****************
 25022 ;; Defined at:
 25023 ;;		line 169 in file "monitor.c"
 25024 ;; Parameters:    Size  Location     Type
 25025 ;;		None
 25026 ;; Auto vars:     Size  Location     Type
 25027 ;;		None
 25028 ;; Return value:  Size  Location     Type
 25029 ;;                  2    4[BANK1 ] short 
 25030 ;; Registers used:
 25031 ;;		None
 25032 ;; Tracked objects:
 25033 ;;		On entry : 3F/1
 25034 ;;		On exit  : 3F/1
 25035 ;;		Unchanged: 3F/0
 25036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25037 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25040 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25041 ;;Total ram usage:        2 bytes
 25042 ;; Hardware stack levels used:    1
 25043 ;; Hardware stack levels required when called:   16
 25044 ;; This function calls:
 25045 ;;		Nothing
 25046 ;; This function is called by:
 25047 ;;		_ValueDisplay
 25048 ;; This function uses a non-reentrant model
 25049 ;;
 25050                           
 25051                           	psect	text187
 25052  00A312                     __ptext187:
 25053                           	opt callstack 0
 25054  00A312                     _GetVolume:
 25055                           	opt callstack 11
 25056                           
 25057                           ; BSR set to: 1
 25058                           
 25059                           ; BSR set to: 1
 25060                           ;incstack = 0
 25061  00A312  0060  F378  F104   	movff	_volume,?_GetVolume
 25062  00A318  0060  F37C  F105   	movff	_volume+1,?_GetVolume+1
 25063                           
 25064                           ; BSR set to: 1
 25065  00A31E  0012               	return		;funcret
 25066  00A320                     __end_of_GetVolume:
 25067                           	opt callstack 0
 25068                           
 25069 ;; *************** function _GetTi *****************
 25070 ;; Defined at:
 25071 ;;		line 162 in file "monitor.c"
 25072 ;; Parameters:    Size  Location     Type
 25073 ;;		None
 25074 ;; Auto vars:     Size  Location     Type
 25075 ;;		None
 25076 ;; Return value:  Size  Location     Type
 25077 ;;                  2    4[BANK1 ] short 
 25078 ;; Registers used:
 25079 ;;		wreg, status,2, status,0
 25080 ;; Tracked objects:
 25081 ;;		On entry : 3F/1
 25082 ;;		On exit  : 3F/1
 25083 ;;		Unchanged: 0/0
 25084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25085 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25088 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25089 ;;Total ram usage:        2 bytes
 25090 ;; Hardware stack levels used:    1
 25091 ;; Hardware stack levels required when called:   16
 25092 ;; This function calls:
 25093 ;;		Nothing
 25094 ;; This function is called by:
 25095 ;;		_ValueDisplay
 25096 ;; This function uses a non-reentrant model
 25097 ;;
 25098                           
 25099                           	psect	text188
 25100  00A100                     __ptext188:
 25101                           	opt callstack 0
 25102  00A100                     _GetTi:
 25103                           	opt callstack 11
 25104                           
 25105                           ; BSR set to: 1
 25106                           
 25107                           ; BSR set to: 1
 25108                           ;incstack = 0
 25109  00A100  90D8               	bcf	status,0,c
 25110  00A102  0102               	movlb	2	; () banked
 25111  00A104  355A               	rlcf	_ti& (0+255),w,b
 25112  00A106  0101               	movlb	1	; () banked
 25113  00A108  6F04               	movwf	?_GetTi& (0+255),b
 25114  00A10A  0102               	movlb	2	; () banked
 25115  00A10C  355B               	rlcf	(_ti+1)& (0+255),w,b
 25116  00A10E  0101               	movlb	1	; () banked
 25117  00A110  6F05               	movwf	(?_GetTi+1)& (0+255),b
 25118                           
 25119                           ; BSR set to: 1
 25120  00A112  0012               	return		;funcret
 25121  00A114                     __end_of_GetTi:
 25122                           	opt callstack 0
 25123                           
 25124 ;; *************** function _GetTe *****************
 25125 ;; Defined at:
 25126 ;;		line 163 in file "monitor.c"
 25127 ;; Parameters:    Size  Location     Type
 25128 ;;		None
 25129 ;; Auto vars:     Size  Location     Type
 25130 ;;		None
 25131 ;; Return value:  Size  Location     Type
 25132 ;;                  2    4[BANK1 ] short 
 25133 ;; Registers used:
 25134 ;;		wreg, status,2, status,0
 25135 ;; Tracked objects:
 25136 ;;		On entry : 3F/1
 25137 ;;		On exit  : 3F/1
 25138 ;;		Unchanged: 0/0
 25139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25140 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25143 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25144 ;;Total ram usage:        2 bytes
 25145 ;; Hardware stack levels used:    1
 25146 ;; Hardware stack levels required when called:   16
 25147 ;; This function calls:
 25148 ;;		Nothing
 25149 ;; This function is called by:
 25150 ;;		_ValueDisplay
 25151 ;; This function uses a non-reentrant model
 25152 ;;
 25153                           
 25154                           	psect	text189
 25155  00A114                     __ptext189:
 25156                           	opt callstack 0
 25157  00A114                     _GetTe:
 25158                           	opt callstack 11
 25159                           
 25160                           ; BSR set to: 1
 25161                           
 25162                           ; BSR set to: 1
 25163                           ;incstack = 0
 25164  00A114  90D8               	bcf	status,0,c
 25165  00A116  0102               	movlb	2	; () banked
 25166  00A118  3558               	rlcf	_te& (0+255),w,b
 25167  00A11A  0101               	movlb	1	; () banked
 25168  00A11C  6F04               	movwf	?_GetTe& (0+255),b
 25169  00A11E  0102               	movlb	2	; () banked
 25170  00A120  3559               	rlcf	(_te+1)& (0+255),w,b
 25171  00A122  0101               	movlb	1	; () banked
 25172  00A124  6F05               	movwf	(?_GetTe+1)& (0+255),b
 25173                           
 25174                           ; BSR set to: 1
 25175  00A126  0012               	return		;funcret
 25176  00A128                     __end_of_GetTe:
 25177                           	opt callstack 0
 25178                           
 25179 ;; *************** function _GetTdi *****************
 25180 ;; Defined at:
 25181 ;;		line 161 in file "monitor.c"
 25182 ;; Parameters:    Size  Location     Type
 25183 ;;		None
 25184 ;; Auto vars:     Size  Location     Type
 25185 ;;		None
 25186 ;; Return value:  Size  Location     Type
 25187 ;;                  2    4[BANK1 ] short 
 25188 ;; Registers used:
 25189 ;;		wreg, status,2, status,0
 25190 ;; Tracked objects:
 25191 ;;		On entry : 3F/0
 25192 ;;		On exit  : 3F/1
 25193 ;;		Unchanged: 0/0
 25194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25195 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25198 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25199 ;;Total ram usage:        2 bytes
 25200 ;; Hardware stack levels used:    1
 25201 ;; Hardware stack levels required when called:   16
 25202 ;; This function calls:
 25203 ;;		Nothing
 25204 ;; This function is called by:
 25205 ;;		_ValueDisplay
 25206 ;; This function uses a non-reentrant model
 25207 ;;
 25208                           
 25209                           	psect	text190
 25210  00A320                     __ptext190:
 25211                           	opt callstack 0
 25212  00A320                     _GetTdi:
 25213                           	opt callstack 11
 25214                           
 25215                           ; BSR set to: 0
 25216                           
 25217                           ; BSR set to: 1
 25218                           ;incstack = 0
 25219  00A320  90D8               	bcf	status,0,c
 25220  00A322  0101               	movlb	1	; () banked
 25221  00A324  35DB               	rlcf	_tdi& (0+255),w,b
 25222  00A326  6F04               	movwf	?_GetTdi& (0+255),b
 25223  00A328  35DC               	rlcf	(_tdi+1)& (0+255),w,b
 25224  00A32A  6F05               	movwf	(?_GetTdi+1)& (0+255),b
 25225                           
 25226                           ; BSR set to: 1
 25227  00A32C  0012               	return		;funcret
 25228  00A32E                     __end_of_GetTdi:
 25229                           	opt callstack 0
 25230                           
 25231 ;; *************** function _GetTde *****************
 25232 ;; Defined at:
 25233 ;;		line 160 in file "monitor.c"
 25234 ;; Parameters:    Size  Location     Type
 25235 ;;		None
 25236 ;; Auto vars:     Size  Location     Type
 25237 ;;		None
 25238 ;; Return value:  Size  Location     Type
 25239 ;;                  2    4[BANK1 ] short 
 25240 ;; Registers used:
 25241 ;;		wreg, status,2, status,0
 25242 ;; Tracked objects:
 25243 ;;		On entry : 3F/1
 25244 ;;		On exit  : 3F/1
 25245 ;;		Unchanged: 0/0
 25246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25247 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25250 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25251 ;;Total ram usage:        2 bytes
 25252 ;; Hardware stack levels used:    1
 25253 ;; Hardware stack levels required when called:   16
 25254 ;; This function calls:
 25255 ;;		Nothing
 25256 ;; This function is called by:
 25257 ;;		_ValueDisplay
 25258 ;; This function uses a non-reentrant model
 25259 ;;
 25260                           
 25261                           	psect	text191
 25262  00A414                     __ptext191:
 25263                           	opt callstack 0
 25264  00A414                     _GetTde:
 25265                           	opt callstack 11
 25266                           
 25267                           ; BSR set to: 1
 25268                           
 25269                           ; BSR set to: 1
 25270                           ;incstack = 0
 25271  00A414  90D8               	bcf	status,0,c
 25272  00A416  35D9               	rlcf	_tde& (0+255),w,b
 25273  00A418  6F04               	movwf	?_GetTde& (0+255),b
 25274  00A41A  35DA               	rlcf	(_tde+1)& (0+255),w,b
 25275  00A41C  6F05               	movwf	(?_GetTde+1)& (0+255),b
 25276                           
 25277                           ; BSR set to: 1
 25278  00A41E  0012               	return		;funcret
 25279  00A420                     __end_of_GetTde:
 25280                           	opt callstack 0
 25281                           
 25282 ;; *************** function _GetTargetIp *****************
 25283 ;; Defined at:
 25284 ;;		line 189 in file "monitor.c"
 25285 ;; Parameters:    Size  Location     Type
 25286 ;;		None
 25287 ;; Auto vars:     Size  Location     Type
 25288 ;;		None
 25289 ;; Return value:  Size  Location     Type
 25290 ;;                  2   18[BANK1 ] short 
 25291 ;; Registers used:
 25292 ;;		wreg, status,2, status,0, cstack
 25293 ;; Tracked objects:
 25294 ;;		On entry : 3F/1
 25295 ;;		On exit  : 3F/1
 25296 ;;		Unchanged: 0/0
 25297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25298 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25301 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25302 ;;Total ram usage:        2 bytes
 25303 ;; Hardware stack levels used:    1
 25304 ;; Hardware stack levels required when called:   17
 25305 ;; This function calls:
 25306 ;;		___awdiv
 25307 ;; This function is called by:
 25308 ;;		_ValueDisplay
 25309 ;; This function uses a non-reentrant model
 25310 ;;
 25311                           
 25312                           	psect	text192
 25313  009B04                     __ptext192:
 25314                           	opt callstack 0
 25315  009B04                     _GetTargetIp:
 25316                           	opt callstack 10
 25317                           
 25318                           ; BSR set to: 1
 25319                           ;monitor.c: 190:     return targetHigh/5;
 25320                           
 25321                           ; BSR set to: 1
 25322                           ;incstack = 0
 25323  009B04  0060  F78C  F10A   	movff	_targetHigh,___awdiv@dividend
 25324  009B0A  0060  F790  F10B   	movff	_targetHigh+1,___awdiv@dividend+1
 25325  009B10  0E00               	movlw	0
 25326  009B12  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 25327  009B14  0E05               	movlw	5
 25328  009B16  6F0C               	movwf	___awdiv@divisor& (0+255),b
 25329  009B18  ECB9  F03F         	call	___awdiv	;wreg free
 25330  009B1C  0060  F428  F112   	movff	?___awdiv,?_GetTargetIp
 25331  009B22  0060  F42C  F113   	movff	?___awdiv+1,?_GetTargetIp+1
 25332                           
 25333                           ; BSR set to: 1
 25334  009B28  0012               	return		;funcret
 25335  009B2A                     __end_of_GetTargetIp:
 25336                           	opt callstack 0
 25337                           
 25338 ;; *************** function _GetTargetEp *****************
 25339 ;; Defined at:
 25340 ;;		line 193 in file "monitor.c"
 25341 ;; Parameters:    Size  Location     Type
 25342 ;;		None
 25343 ;; Auto vars:     Size  Location     Type
 25344 ;;		None
 25345 ;; Return value:  Size  Location     Type
 25346 ;;                  2   18[BANK1 ] short 
 25347 ;; Registers used:
 25348 ;;		wreg, status,2, status,0, cstack
 25349 ;; Tracked objects:
 25350 ;;		On entry : 3F/1
 25351 ;;		On exit  : 3F/1
 25352 ;;		Unchanged: 0/0
 25353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25354 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25357 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25358 ;;Total ram usage:        2 bytes
 25359 ;; Hardware stack levels used:    1
 25360 ;; Hardware stack levels required when called:   17
 25361 ;; This function calls:
 25362 ;;		___awdiv
 25363 ;; This function is called by:
 25364 ;;		_ValueDisplay
 25365 ;; This function uses a non-reentrant model
 25366 ;;
 25367                           
 25368                           	psect	text193
 25369  009B2A                     __ptext193:
 25370                           	opt callstack 0
 25371  009B2A                     _GetTargetEp:
 25372                           	opt callstack 10
 25373                           
 25374                           ; BSR set to: 1
 25375                           ;monitor.c: 194:     return targetLow/5;
 25376                           
 25377                           ; BSR set to: 1
 25378                           ;incstack = 0
 25379  009B2A  0060  F784  F10A   	movff	_targetLow,___awdiv@dividend
 25380  009B30  0060  F788  F10B   	movff	_targetLow+1,___awdiv@dividend+1
 25381  009B36  0E00               	movlw	0
 25382  009B38  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 25383  009B3A  0E05               	movlw	5
 25384  009B3C  6F0C               	movwf	___awdiv@divisor& (0+255),b
 25385  009B3E  ECB9  F03F         	call	___awdiv	;wreg free
 25386  009B42  0060  F428  F112   	movff	?___awdiv,?_GetTargetEp
 25387  009B48  0060  F42C  F113   	movff	?___awdiv+1,?_GetTargetEp+1
 25388                           
 25389                           ; BSR set to: 1
 25390  009B4E  0012               	return		;funcret
 25391  009B50                     __end_of_GetTargetEp:
 25392                           	opt callstack 0
 25393                           
 25394 ;; *************** function _GetSpr *****************
 25395 ;; Defined at:
 25396 ;;		line 60 in file "controller.c"
 25397 ;; Parameters:    Size  Location     Type
 25398 ;;		None
 25399 ;; Auto vars:     Size  Location     Type
 25400 ;;		None
 25401 ;; Return value:  Size  Location     Type
 25402 ;;                  2    4[BANK1 ] short 
 25403 ;; Registers used:
 25404 ;;		None
 25405 ;; Tracked objects:
 25406 ;;		On entry : 3F/1
 25407 ;;		On exit  : 3F/1
 25408 ;;		Unchanged: 3F/0
 25409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25410 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25413 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25414 ;;Total ram usage:        2 bytes
 25415 ;; Hardware stack levels used:    1
 25416 ;; Hardware stack levels required when called:   16
 25417 ;; This function calls:
 25418 ;;		Nothing
 25419 ;; This function is called by:
 25420 ;;		_ValueDisplay
 25421 ;; This function uses a non-reentrant model
 25422 ;;
 25423                           
 25424                           	psect	text194
 25425  00A32E                     __ptext194:
 25426                           	opt callstack 0
 25427  00A32E                     _GetSpr:
 25428                           	opt callstack 11
 25429                           
 25430                           ; BSR set to: 1
 25431                           
 25432                           ; BSR set to: 1
 25433                           ;incstack = 0
 25434  00A32E  0060  F8C8  F104   	movff	_spr,?_GetSpr
 25435  00A334  0060  F8CC  F105   	movff	_spr+1,?_GetSpr+1
 25436                           
 25437                           ; BSR set to: 1
 25438  00A33A  0012               	return		;funcret
 25439  00A33C                     __end_of_GetSpr:
 25440                           	opt callstack 0
 25441                           
 25442 ;; *************** function _GetPmax *****************
 25443 ;; Defined at:
 25444 ;;		line 170 in file "monitor.c"
 25445 ;; Parameters:    Size  Location     Type
 25446 ;;		None
 25447 ;; Auto vars:     Size  Location     Type
 25448 ;;		None
 25449 ;; Return value:  Size  Location     Type
 25450 ;;                  2   18[BANK1 ] short 
 25451 ;; Registers used:
 25452 ;;		wreg, status,2, status,0, cstack
 25453 ;; Tracked objects:
 25454 ;;		On entry : 3F/1
 25455 ;;		On exit  : 3F/1
 25456 ;;		Unchanged: 0/0
 25457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25458 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25461 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25462 ;;Total ram usage:        2 bytes
 25463 ;; Hardware stack levels used:    1
 25464 ;; Hardware stack levels required when called:   17
 25465 ;; This function calls:
 25466 ;;		___awdiv
 25467 ;; This function is called by:
 25468 ;;		_ValueDisplay
 25469 ;; This function uses a non-reentrant model
 25470 ;;
 25471                           
 25472                           	psect	text195
 25473  009B50                     __ptext195:
 25474                           	opt callstack 0
 25475  009B50                     _GetPmax:
 25476                           	opt callstack 10
 25477                           
 25478                           ; BSR set to: 1
 25479                           
 25480                           ; BSR set to: 1
 25481                           ;incstack = 0
 25482  009B50  0060  F360  F10A   	movff	_pmax,___awdiv@dividend
 25483  009B56  0060  F364  F10B   	movff	_pmax+1,___awdiv@dividend+1
 25484  009B5C  0E00               	movlw	0
 25485  009B5E  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 25486  009B60  0E05               	movlw	5
 25487  009B62  6F0C               	movwf	___awdiv@divisor& (0+255),b
 25488  009B64  ECB9  F03F         	call	___awdiv	;wreg free
 25489  009B68  0060  F428  F112   	movff	?___awdiv,?_GetPmax
 25490  009B6E  0060  F42C  F113   	movff	?___awdiv+1,?_GetPmax+1
 25491                           
 25492                           ; BSR set to: 1
 25493  009B74  0012               	return		;funcret
 25494  009B76                     __end_of_GetPmax:
 25495                           	opt callstack 0
 25496                           
 25497 ;; *************** function _GetIp *****************
 25498 ;; Defined at:
 25499 ;;		line 168 in file "monitor.c"
 25500 ;; Parameters:    Size  Location     Type
 25501 ;;		None
 25502 ;; Auto vars:     Size  Location     Type
 25503 ;;		None
 25504 ;; Return value:  Size  Location     Type
 25505 ;;                  2   18[BANK1 ] short 
 25506 ;; Registers used:
 25507 ;;		wreg, status,2, status,0, cstack
 25508 ;; Tracked objects:
 25509 ;;		On entry : 3F/1
 25510 ;;		On exit  : 3F/1
 25511 ;;		Unchanged: 0/0
 25512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25513 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25514 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25515 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25516 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25517 ;;Total ram usage:        9 bytes
 25518 ;; Hardware stack levels used:    1
 25519 ;; Hardware stack levels required when called:   17
 25520 ;; This function calls:
 25521 ;;		___awdiv
 25522 ;; This function is called by:
 25523 ;;		_ValueDisplay
 25524 ;; This function uses a non-reentrant model
 25525 ;;
 25526                           
 25527                           	psect	text196
 25528  004FB2                     __ptext196:
 25529                           	opt callstack 0
 25530  004FB2                     _GetIp:
 25531                           	opt callstack 10
 25532                           
 25533                           ; BSR set to: 1
 25534                           
 25535                           ; BSR set to: 1
 25536                           ;incstack = 0
 25537  004FB2  0060  F74C  F10A   	movff	_pHigh,___awdiv@dividend
 25538  004FB8  0060  F750  F10B   	movff	_pHigh+1,___awdiv@dividend+1
 25539  004FBE  0E00               	movlw	0
 25540  004FC0  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 25541  004FC2  0E05               	movlw	5
 25542  004FC4  6F0C               	movwf	___awdiv@divisor& (0+255),b
 25543  004FC6  ECB9  F03F         	call	___awdiv	;wreg free
 25544  004FCA  0060  F428  F114   	movff	?___awdiv,??_GetIp
 25545  004FD0  0060  F42C  F115   	movff	?___awdiv+1,??_GetIp+1
 25546  004FD6  0060  F744  F10A   	movff	_lrpi,___awdiv@dividend
 25547  004FDC  0060  F748  F10B   	movff	_lrpi+1,___awdiv@dividend+1
 25548  004FE2  0E00               	movlw	0
 25549  004FE4  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 25550  004FE6  0E05               	movlw	5
 25551  004FE8  6F0C               	movwf	___awdiv@divisor& (0+255),b
 25552  004FEA  ECB9  F03F         	call	___awdiv	;wreg free
 25553  004FEE  510A               	movf	?___awdiv& (0+255),w,b
 25554  004FF0  5D14               	subwf	??_GetIp& (0+255),w,b
 25555  004FF2  5115               	movf	(??_GetIp+1)& (0+255),w,b
 25556  004FF4  0A80               	xorlw	128
 25557  004FF6  6F16               	movwf	(??_GetIp+2)& (0+255),b
 25558  004FF8  510B               	movf	(?___awdiv+1)& (0+255),w,b
 25559  004FFA  0A80               	xorlw	128
 25560  004FFC  5916               	subwfb	(??_GetIp+2)& (0+255),w,b
 25561  004FFE  A0D8               	btfss	status,0,c
 25562  005000  D00D               	goto	l18687
 25563                           
 25564                           ; BSR set to: 1
 25565  005002  0060  F74C  F10A   	movff	_pHigh,___awdiv@dividend
 25566  005008  0060  F750  F10B   	movff	_pHigh+1,___awdiv@dividend+1
 25567  00500E  0E00               	movlw	0
 25568  005010  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 25569  005012  0E05               	movlw	5
 25570  005014  6F0C               	movwf	___awdiv@divisor& (0+255),b
 25571  005016  ECB9  F03F         	call	___awdiv	;wreg free
 25572  00501A  D00C               	goto	L7
 25573  00501C                     l18687:
 25574                           
 25575                           ; BSR set to: 1
 25576  00501C  0060  F744  F10A   	movff	_lrpi,___awdiv@dividend
 25577  005022  0060  F748  F10B   	movff	_lrpi+1,___awdiv@dividend+1
 25578  005028  0E00               	movlw	0
 25579  00502A  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 25580  00502C  0E05               	movlw	5
 25581  00502E  6F0C               	movwf	___awdiv@divisor& (0+255),b
 25582  005030  ECB9  F03F         	call	___awdiv	;wreg free
 25583  005034                     L7:
 25584  005034  0060  F428  F117   	movff	?___awdiv,_GetIp$4809
 25585  00503A  0060  F42C  F118   	movff	?___awdiv+1,_GetIp$4809+1
 25586                           
 25587                           ; BSR set to: 1
 25588  005040  0060  F75C  F10A   	movff	_pi,___awdiv@dividend
 25589  005046  0060  F760  F10B   	movff	_pi+1,___awdiv@dividend+1
 25590  00504C  0E00               	movlw	0
 25591  00504E  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 25592  005050  0E05               	movlw	5
 25593  005052  6F0C               	movwf	___awdiv@divisor& (0+255),b
 25594  005054  ECB9  F03F         	call	___awdiv	;wreg free
 25595  005058  5117               	movf	_GetIp$4809& (0+255),w,b
 25596  00505A  5D0A               	subwf	?___awdiv& (0+255),w,b
 25597  00505C  510B               	movf	(?___awdiv+1)& (0+255),w,b
 25598  00505E  0A80               	xorlw	128
 25599  005060  6F14               	movwf	??_GetIp& (0+255),b
 25600  005062  5118               	movf	(_GetIp$4809+1)& (0+255),w,b
 25601  005064  0A80               	xorlw	128
 25602  005066  5914               	subwfb	??_GetIp& (0+255),w,b
 25603  005068  A0D8               	btfss	status,0,c
 25604  00506A  D013               	goto	l18691
 25605                           
 25606                           ; BSR set to: 1
 25607  00506C  0060  F75C  F10A   	movff	_pi,___awdiv@dividend
 25608  005072  0060  F760  F10B   	movff	_pi+1,___awdiv@dividend+1
 25609  005078  0E00               	movlw	0
 25610  00507A  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 25611  00507C  0E05               	movlw	5
 25612  00507E  6F0C               	movwf	___awdiv@divisor& (0+255),b
 25613  005080  ECB9  F03F         	call	___awdiv	;wreg free
 25614  005084  0060  F428  F112   	movff	?___awdiv,?_GetIp
 25615  00508A  0060  F42C  F113   	movff	?___awdiv+1,?_GetIp+1
 25616  005090  0012               	return	
 25617  005092                     l18691:
 25618                           
 25619                           ; BSR set to: 1
 25620  005092  0060  F74C  F10A   	movff	_pHigh,___awdiv@dividend
 25621  005098  0060  F750  F10B   	movff	_pHigh+1,___awdiv@dividend+1
 25622  00509E  0E00               	movlw	0
 25623  0050A0  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 25624  0050A2  0E05               	movlw	5
 25625  0050A4  6F0C               	movwf	___awdiv@divisor& (0+255),b
 25626  0050A6  ECB9  F03F         	call	___awdiv	;wreg free
 25627  0050AA  0060  F428  F114   	movff	?___awdiv,??_GetIp
 25628  0050B0  0060  F42C  F115   	movff	?___awdiv+1,??_GetIp+1
 25629  0050B6  0060  F744  F10A   	movff	_lrpi,___awdiv@dividend
 25630  0050BC  0060  F748  F10B   	movff	_lrpi+1,___awdiv@dividend+1
 25631  0050C2  0E00               	movlw	0
 25632  0050C4  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 25633  0050C6  0E05               	movlw	5
 25634  0050C8  6F0C               	movwf	___awdiv@divisor& (0+255),b
 25635  0050CA  ECB9  F03F         	call	___awdiv	;wreg free
 25636  0050CE  510A               	movf	?___awdiv& (0+255),w,b
 25637  0050D0  5D14               	subwf	??_GetIp& (0+255),w,b
 25638  0050D2  5115               	movf	(??_GetIp+1)& (0+255),w,b
 25639  0050D4  0A80               	xorlw	128
 25640  0050D6  6F16               	movwf	(??_GetIp+2)& (0+255),b
 25641  0050D8  510B               	movf	(?___awdiv+1)& (0+255),w,b
 25642  0050DA  0A80               	xorlw	128
 25643  0050DC  5916               	subwfb	(??_GetIp+2)& (0+255),w,b
 25644  0050DE  A0D8               	btfss	status,0,c
 25645  0050E0  D00D               	goto	l18695
 25646                           
 25647                           ; BSR set to: 1
 25648  0050E2  0060  F74C  F10A   	movff	_pHigh,___awdiv@dividend
 25649  0050E8  0060  F750  F10B   	movff	_pHigh+1,___awdiv@dividend+1
 25650  0050EE  0E00               	movlw	0
 25651  0050F0  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 25652  0050F2  0E05               	movlw	5
 25653  0050F4  6F0C               	movwf	___awdiv@divisor& (0+255),b
 25654  0050F6  ECB9  F03F         	call	___awdiv	;wreg free
 25655  0050FA  D00C               	goto	L8
 25656  0050FC                     l18695:
 25657                           
 25658                           ; BSR set to: 1
 25659  0050FC  0060  F744  F10A   	movff	_lrpi,___awdiv@dividend
 25660  005102  0060  F748  F10B   	movff	_lrpi+1,___awdiv@dividend+1
 25661  005108  0E00               	movlw	0
 25662  00510A  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 25663  00510C  0E05               	movlw	5
 25664  00510E  6F0C               	movwf	___awdiv@divisor& (0+255),b
 25665  005110  ECB9  F03F         	call	___awdiv	;wreg free
 25666  005114                     L8:
 25667  005114  0060  F428  F119   	movff	?___awdiv,_GetIp$4810
 25668  00511A  0060  F42C  F11A   	movff	?___awdiv+1,_GetIp$4810+1
 25669                           
 25670                           ; BSR set to: 1
 25671  005120  0060  F464  F112   	movff	_GetIp$4810,?_GetIp
 25672  005126  0060  F468  F113   	movff	_GetIp$4810+1,?_GetIp+1
 25673                           
 25674                           ; BSR set to: 1
 25675  00512C  0012               	return		;funcret
 25676  00512E                     __end_of_GetIp:
 25677                           	opt callstack 0
 25678                           
 25679 ;; *************** function _GetEp *****************
 25680 ;; Defined at:
 25681 ;;		line 167 in file "monitor.c"
 25682 ;; Parameters:    Size  Location     Type
 25683 ;;		None
 25684 ;; Auto vars:     Size  Location     Type
 25685 ;;		None
 25686 ;; Return value:  Size  Location     Type
 25687 ;;                  2   18[BANK1 ] short 
 25688 ;; Registers used:
 25689 ;;		wreg, status,2, status,0, cstack
 25690 ;; Tracked objects:
 25691 ;;		On entry : 3F/1
 25692 ;;		On exit  : 3F/1
 25693 ;;		Unchanged: 0/0
 25694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25695 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25698 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25699 ;;Total ram usage:        2 bytes
 25700 ;; Hardware stack levels used:    1
 25701 ;; Hardware stack levels required when called:   17
 25702 ;; This function calls:
 25703 ;;		___awdiv
 25704 ;; This function is called by:
 25705 ;;		_ValueDisplay
 25706 ;; This function uses a non-reentrant model
 25707 ;;
 25708                           
 25709                           	psect	text197
 25710  009926                     __ptext197:
 25711                           	opt callstack 0
 25712  009926                     _GetEp:
 25713                           	opt callstack 10
 25714                           
 25715                           ; BSR set to: 1
 25716                           
 25717                           ; BSR set to: 1
 25718                           ;incstack = 0
 25719  009926  51D5               	movf	_pe& (0+255),w,b
 25720  009928  0100               	movlb	0	; () banked
 25721  00992A  25D4               	addwf	_lrpe& (0+255),w,b
 25722  00992C  0101               	movlb	1	; () banked
 25723  00992E  6F0A               	movwf	___awdiv@dividend& (0+255),b
 25724  009930  51D6               	movf	(_pe+1)& (0+255),w,b
 25725  009932  0100               	movlb	0	; () banked
 25726  009934  21D5               	addwfc	(_lrpe+1)& (0+255),w,b
 25727  009936  0101               	movlb	1	; () banked
 25728  009938  6F0B               	movwf	(___awdiv@dividend+1)& (0+255),b
 25729  00993A  0E00               	movlw	0
 25730  00993C  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 25731  00993E  0E0A               	movlw	10
 25732  009940  6F0C               	movwf	___awdiv@divisor& (0+255),b
 25733  009942  ECB9  F03F         	call	___awdiv	;wreg free
 25734  009946  0060  F428  F112   	movff	?___awdiv,?_GetEp
 25735  00994C  0060  F42C  F113   	movff	?___awdiv+1,?_GetEp+1
 25736                           
 25737                           ; BSR set to: 1
 25738  009952  0012               	return		;funcret
 25739  009954                     __end_of_GetEp:
 25740                           	opt callstack 0
 25741                           
 25742 ;; *************** function ___awdiv *****************
 25743 ;; Defined at:
 25744 ;;		line 7 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 25745 ;; Parameters:    Size  Location     Type
 25746 ;;  dividend        2   10[BANK1 ] int 
 25747 ;;  divisor         2   12[BANK1 ] int 
 25748 ;; Auto vars:     Size  Location     Type
 25749 ;;  quotient        2   16[BANK1 ] int 
 25750 ;;  sign            1   15[BANK1 ] unsigned char 
 25751 ;;  counter         1   14[BANK1 ] unsigned char 
 25752 ;; Return value:  Size  Location     Type
 25753 ;;                  2   10[BANK1 ] int 
 25754 ;; Registers used:
 25755 ;;		wreg, status,2, status,0
 25756 ;; Tracked objects:
 25757 ;;		On entry : 3F/1
 25758 ;;		On exit  : 3F/1
 25759 ;;		Unchanged: 0/0
 25760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25761 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25762 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25764 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25765 ;;Total ram usage:        8 bytes
 25766 ;; Hardware stack levels used:    1
 25767 ;; Hardware stack levels required when called:   16
 25768 ;; This function calls:
 25769 ;;		Nothing
 25770 ;; This function is called by:
 25771 ;;		_ValueDisplay
 25772 ;;		_GetEp
 25773 ;;		_GetIp
 25774 ;;		_GetPmax
 25775 ;;		_GetMaxPressure
 25776 ;;		_GetTargetIp
 25777 ;;		_GetTargetEp
 25778 ;;		_MonitorDump
 25779 ;;		_SetCalibrateState
 25780 ;;		_GetPressure_pa
 25781 ;;		_SeePressure_pa
 25782 ;;		_GetPressureV_pa
 25783 ;;		_SeePressureV_pa
 25784 ;; This function uses a non-reentrant model
 25785 ;;
 25786                           
 25787                           	psect	text198
 25788  007F72                     __ptext198:
 25789                           	opt callstack 0
 25790  007F72                     ___awdiv:
 25791                           	opt callstack 13
 25792                           
 25793                           ; BSR set to: 1
 25794                           
 25795                           ; BSR set to: 1
 25796                           ;incstack = 0
 25797  007F72  0E00               	movlw	0
 25798  007F74  6F0F               	movwf	___awdiv@sign& (0+255),b
 25799                           
 25800                           ; BSR set to: 1
 25801  007F76  AF0D               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 25802  007F78  D006               	goto	l18363
 25803                           
 25804                           ; BSR set to: 1
 25805  007F7A  6D0C               	negf	___awdiv@divisor& (0+255),b
 25806  007F7C  1F0D               	comf	(___awdiv@divisor+1)& (0+255),f,b
 25807  007F7E  B0D8               	btfsc	status,0,c
 25808  007F80  2B0D               	incf	(___awdiv@divisor+1)& (0+255),f,b
 25809                           
 25810                           ; BSR set to: 1
 25811  007F82  0E01               	movlw	1
 25812  007F84  6F0F               	movwf	___awdiv@sign& (0+255),b
 25813  007F86                     l18363:
 25814                           
 25815                           ; BSR set to: 1
 25816  007F86  AF0B               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 25817  007F88  D006               	goto	l18369
 25818                           
 25819                           ; BSR set to: 1
 25820  007F8A  6D0A               	negf	___awdiv@dividend& (0+255),b
 25821  007F8C  1F0B               	comf	(___awdiv@dividend+1)& (0+255),f,b
 25822  007F8E  B0D8               	btfsc	status,0,c
 25823  007F90  2B0B               	incf	(___awdiv@dividend+1)& (0+255),f,b
 25824                           
 25825                           ; BSR set to: 1
 25826  007F92  0E01               	movlw	1
 25827  007F94  1B0F               	xorwf	___awdiv@sign& (0+255),f,b
 25828  007F96                     l18369:
 25829                           
 25830                           ; BSR set to: 1
 25831  007F96  0E00               	movlw	0
 25832  007F98  6F11               	movwf	(___awdiv@quotient+1)& (0+255),b
 25833  007F9A  0E00               	movlw	0
 25834  007F9C  6F10               	movwf	___awdiv@quotient& (0+255),b
 25835                           
 25836                           ; BSR set to: 1
 25837  007F9E  510C               	movf	___awdiv@divisor& (0+255),w,b
 25838  007FA0  110D               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 25839  007FA2  B4D8               	btfsc	status,2,c
 25840  007FA4  D01C               	goto	l18391
 25841                           
 25842                           ; BSR set to: 1
 25843  007FA6  0E01               	movlw	1
 25844  007FA8  6F0E               	movwf	___awdiv@counter& (0+255),b
 25845  007FAA  D004               	goto	l18377
 25846  007FAC                     l18375:
 25847                           
 25848                           ; BSR set to: 1
 25849  007FAC  90D8               	bcf	status,0,c
 25850  007FAE  370C               	rlcf	___awdiv@divisor& (0+255),f,b
 25851  007FB0  370D               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 25852  007FB2  2B0E               	incf	___awdiv@counter& (0+255),f,b
 25853  007FB4                     l18377:
 25854                           
 25855                           ; BSR set to: 1
 25856  007FB4  AF0D               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 25857  007FB6  D7FA               	goto	l18375
 25858  007FB8                     u17950:
 25859                           
 25860                           ; BSR set to: 1
 25861  007FB8  90D8               	bcf	status,0,c
 25862  007FBA  3710               	rlcf	___awdiv@quotient& (0+255),f,b
 25863  007FBC  3711               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 25864                           
 25865                           ; BSR set to: 1
 25866  007FBE  510C               	movf	___awdiv@divisor& (0+255),w,b
 25867  007FC0  5D0A               	subwf	___awdiv@dividend& (0+255),w,b
 25868  007FC2  510D               	movf	(___awdiv@divisor+1)& (0+255),w,b
 25869  007FC4  590B               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 25870  007FC6  A0D8               	btfss	status,0,c
 25871  007FC8  D005               	goto	l18387
 25872                           
 25873                           ; BSR set to: 1
 25874  007FCA  510C               	movf	___awdiv@divisor& (0+255),w,b
 25875  007FCC  5F0A               	subwf	___awdiv@dividend& (0+255),f,b
 25876  007FCE  510D               	movf	(___awdiv@divisor+1)& (0+255),w,b
 25877  007FD0  5B0B               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 25878                           
 25879                           ; BSR set to: 1
 25880  007FD2  8110               	bsf	___awdiv@quotient& (0+255),0,b
 25881  007FD4                     l18387:
 25882                           
 25883                           ; BSR set to: 1
 25884  007FD4  90D8               	bcf	status,0,c
 25885  007FD6  330D               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 25886  007FD8  330C               	rrcf	___awdiv@divisor& (0+255),f,b
 25887                           
 25888                           ; BSR set to: 1
 25889  007FDA  2F0E               	decfsz	___awdiv@counter& (0+255),f,b
 25890  007FDC  D7ED               	goto	u17950
 25891  007FDE                     l18391:
 25892                           
 25893                           ; BSR set to: 1
 25894  007FDE  510F               	movf	___awdiv@sign& (0+255),w,b
 25895  007FE0  B4D8               	btfsc	status,2,c
 25896  007FE2  D004               	goto	l18395
 25897                           
 25898                           ; BSR set to: 1
 25899  007FE4  6D10               	negf	___awdiv@quotient& (0+255),b
 25900  007FE6  1F11               	comf	(___awdiv@quotient+1)& (0+255),f,b
 25901  007FE8  B0D8               	btfsc	status,0,c
 25902  007FEA  2B11               	incf	(___awdiv@quotient+1)& (0+255),f,b
 25903  007FEC                     l18395:
 25904                           
 25905                           ; BSR set to: 1
 25906  007FEC  0060  F440  F10A   	movff	___awdiv@quotient,?___awdiv
 25907  007FF2  0060  F444  F10B   	movff	___awdiv@quotient+1,?___awdiv+1
 25908                           
 25909                           ; BSR set to: 1
 25910  007FF8  0012               	return		;funcret
 25911  007FFA                     __end_of___awdiv:
 25912                           	opt callstack 0
 25913                           
 25914 ;; *************** function _GetDisableAlarmSV1 *****************
 25915 ;; Defined at:
 25916 ;;		line 881 in file "monitor.c"
 25917 ;; Parameters:    Size  Location     Type
 25918 ;;		None
 25919 ;; Auto vars:     Size  Location     Type
 25920 ;;		None
 25921 ;; Return value:  Size  Location     Type
 25922 ;;                  1    wreg      _Bool 
 25923 ;; Registers used:
 25924 ;;		wreg, status,2
 25925 ;; Tracked objects:
 25926 ;;		On entry : 3F/1
 25927 ;;		On exit  : 3F/0
 25928 ;;		Unchanged: 0/0
 25929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25934 ;;Total ram usage:        0 bytes
 25935 ;; Hardware stack levels used:    1
 25936 ;; Hardware stack levels required when called:   16
 25937 ;; This function calls:
 25938 ;;		Nothing
 25939 ;; This function is called by:
 25940 ;;		_ValueDisplay
 25941 ;; This function uses a non-reentrant model
 25942 ;;
 25943                           
 25944                           	psect	text199
 25945  00A610                     __ptext199:
 25946                           	opt callstack 0
 25947  00A610                     _GetDisableAlarmSV1:
 25948                           	opt callstack 11
 25949                           
 25950                           ; BSR set to: 1
 25951                           
 25952                           ; BSR set to: 1
 25953                           ;incstack = 0
 25954  00A610  0100               	movlb	0	; () banked
 25955  00A612  51F3               	movf	_disableAlarmSV1& (0+255),w,b
 25956                           
 25957                           ; BSR set to: 0
 25958  00A614  0012               	return		;funcret
 25959  00A616                     __end_of_GetDisableAlarmSV1:
 25960                           	opt callstack 0
 25961                           
 25962 ;; *************** function _GetBpm *****************
 25963 ;; Defined at:
 25964 ;;		line 165 in file "monitor.c"
 25965 ;; Parameters:    Size  Location     Type
 25966 ;;		None
 25967 ;; Auto vars:     Size  Location     Type
 25968 ;;		None
 25969 ;; Return value:  Size  Location     Type
 25970 ;;                  2    4[BANK1 ] short 
 25971 ;; Registers used:
 25972 ;;		None
 25973 ;; Tracked objects:
 25974 ;;		On entry : 3F/1
 25975 ;;		On exit  : 3F/1
 25976 ;;		Unchanged: 3F/0
 25977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25978 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25981 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25982 ;;Total ram usage:        2 bytes
 25983 ;; Hardware stack levels used:    1
 25984 ;; Hardware stack levels required when called:   16
 25985 ;; This function calls:
 25986 ;;		Nothing
 25987 ;; This function is called by:
 25988 ;;		_ValueDisplay
 25989 ;; This function uses a non-reentrant model
 25990 ;;
 25991                           
 25992                           	psect	text200
 25993  00A33C                     __ptext200:
 25994                           	opt callstack 0
 25995  00A33C                     _GetBpm:
 25996                           	opt callstack 11
 25997                           
 25998                           ; BSR set to: 1
 25999                           
 26000                           ; BSR set to: 0
 26001                           ;incstack = 0
 26002  00A33C  0060  F958  F104   	movff	_bpm,?_GetBpm
 26003  00A342  0060  F95C  F105   	movff	_bpm+1,?_GetBpm+1
 26004                           
 26005                           ; BSR set to: 1
 26006  00A348  0012               	return		;funcret
 26007  00A34A                     __end_of_GetBpm:
 26008                           	opt callstack 0
 26009                           
 26010 ;; *************** function _GetAlarmState *****************
 26011 ;; Defined at:
 26012 ;;		line 431 in file "alarm.c"
 26013 ;; Parameters:    Size  Location     Type
 26014 ;;		None
 26015 ;; Auto vars:     Size  Location     Type
 26016 ;;		None
 26017 ;; Return value:  Size  Location     Type
 26018 ;;                  2    8[BANK1 ] PTR unsigned char 
 26019 ;; Registers used:
 26020 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26021 ;; Tracked objects:
 26022 ;;		On entry : 3F/0
 26023 ;;		On exit  : 3F/1
 26024 ;;		Unchanged: 0/0
 26025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26026 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26029 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26030 ;;Total ram usage:        2 bytes
 26031 ;; Hardware stack levels used:    1
 26032 ;; Hardware stack levels required when called:   17
 26033 ;; This function calls:
 26034 ;;		_AnyAlarm
 26035 ;; This function is called by:
 26036 ;;		_ValueDisplay
 26037 ;; This function uses a non-reentrant model
 26038 ;;
 26039                           
 26040                           	psect	text201
 26041  008FB6                     __ptext201:
 26042                           	opt callstack 0
 26043  008FB6                     _GetAlarmState:
 26044                           	opt callstack 10
 26045                           
 26046                           ; BSR set to: 0
 26047                           ;alarm.c: 432:     if (displayStatus==2) return "Hi";
 26048                           
 26049                           ; BSR set to: 1
 26050                           ;incstack = 0
 26051  008FB6  0E02               	movlw	2
 26052  008FB8  19E0               	xorwf	_displayStatus& (0+255),w,b
 26053  008FBA  11E1               	iorwf	(_displayStatus+1)& (0+255),w,b
 26054  008FBC  A4D8               	btfss	status,2,c
 26055  008FBE  D006               	goto	l18733
 26056                           
 26057                           ; BSR set to: 0
 26058  008FC0  0EF0               	movlw	low STR_26
 26059  008FC2  0101               	movlb	1	; () banked
 26060  008FC4  6F08               	movwf	?_GetAlarmState& (0+255),b
 26061  008FC6  0EFF               	movlw	high STR_26
 26062  008FC8  6F09               	movwf	(?_GetAlarmState+1)& (0+255),b
 26063  008FCA  0012               	return	
 26064  008FCC                     l18733:
 26065                           
 26066                           ; BSR set to: 0
 26067                           ;alarm.c: 434:         if (AnyAlarm() && muteSec) return "Mu";
 26068  008FCC  EC8C  F04A         	call	_AnyAlarm	;wreg free
 26069  008FD0  0900               	iorlw	0
 26070  008FD2  B4D8               	btfsc	status,2,c
 26071  008FD4  D009               	goto	l18743
 26072                           
 26073                           ; BSR set to: 1
 26074  008FD6  51EB               	movf	_muteSec& (0+255),w,b
 26075  008FD8  11EC               	iorwf	(_muteSec+1)& (0+255),w,b
 26076  008FDA  B4D8               	btfsc	status,2,c
 26077  008FDC  D005               	goto	l18743
 26078                           
 26079                           ; BSR set to: 1
 26080  008FDE  0EF6               	movlw	low STR_27
 26081  008FE0  6F08               	movwf	?_GetAlarmState& (0+255),b
 26082  008FE2  0EFF               	movlw	high STR_27
 26083  008FE4  6F09               	movwf	(?_GetAlarmState+1)& (0+255),b
 26084  008FE6  0012               	return	
 26085  008FE8                     l18743:
 26086                           
 26087                           ; BSR set to: 1
 26088  008FE8  EC8C  F04A         	call	_AnyAlarm	;wreg free
 26089  008FEC  0900               	iorlw	0
 26090  008FEE  B4D8               	btfsc	status,2,c
 26091  008FF0  D005               	goto	l18749
 26092                           
 26093                           ; BSR set to: 1
 26094  008FF2  0EF3               	movlw	low STR_28
 26095  008FF4  6F08               	movwf	?_GetAlarmState& (0+255),b
 26096  008FF6  0EFF               	movlw	high STR_28
 26097  008FF8  6F09               	movwf	(?_GetAlarmState+1)& (0+255),b
 26098  008FFA  0012               	return	
 26099  008FFC                     l18749:
 26100                           
 26101                           ; BSR set to: 1
 26102                           ;alarm.c: 437:     return "  ";
 26103  008FFC  0EED               	movlw	low (STR_6+14)
 26104  008FFE  6F08               	movwf	?_GetAlarmState& (0+255),b
 26105  009000  0EFE               	movlw	high (STR_6+14)
 26106  009002  6F09               	movwf	(?_GetAlarmState+1)& (0+255),b
 26107                           
 26108                           ; BSR set to: 1
 26109  009004  0012               	return		;funcret
 26110  009006                     __end_of_GetAlarmState:
 26111                           	opt callstack 0
 26112                           
 26113 ;; *************** function _AnyAlarm *****************
 26114 ;; Defined at:
 26115 ;;		line 370 in file "alarm.c"
 26116 ;; Parameters:    Size  Location     Type
 26117 ;;		None
 26118 ;; Auto vars:     Size  Location     Type
 26119 ;;  i               2    6[BANK1 ] int 
 26120 ;; Return value:  Size  Location     Type
 26121 ;;                  1    wreg      _Bool 
 26122 ;; Registers used:
 26123 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26124 ;; Tracked objects:
 26125 ;;		On entry : 3C/1
 26126 ;;		On exit  : 3F/1
 26127 ;;		Unchanged: 0/0
 26128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26130 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26131 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26132 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26133 ;;Total ram usage:        4 bytes
 26134 ;; Hardware stack levels used:    1
 26135 ;; Hardware stack levels required when called:   16
 26136 ;; This function calls:
 26137 ;;		Nothing
 26138 ;; This function is called by:
 26139 ;;		_MuteAlarm
 26140 ;;		_GetAlarmState
 26141 ;;		_AlarmUpdateLCD
 26142 ;;		_AlarmCheckTask
 26143 ;; This function uses a non-reentrant model
 26144 ;;
 26145                           
 26146                           	psect	text202
 26147  009518                     __ptext202:
 26148                           	opt callstack 0
 26149  009518                     _AnyAlarm:
 26150                           	opt callstack 13
 26151                           
 26152                           ;alarm.c: 371:     for (int i=0; i<sizeof(alarmData)/sizeof(a); i++) {
 26153                           
 26154                           ; BSR set to: 1
 26155                           ;incstack = 0
 26156  009518  0E00               	movlw	0
 26157  00951A  0101               	movlb	1	; () banked
 26158  00951C  6F07               	movwf	(AnyAlarm@i+1)& (0+255),b
 26159  00951E  0E00               	movlw	0
 26160  009520  6F06               	movwf	AnyAlarm@i& (0+255),b
 26161  009522                     l18333:
 26162                           
 26163                           ; BSR set to: 1
 26164                           ;alarm.c: 372:         if (alarms[i]) return 1;
 26165  009522  90D8               	bcf	status,0,c
 26166  009524  3506               	rlcf	AnyAlarm@i& (0+255),w,b
 26167  009526  6ED9               	movwf	fsr2l,c
 26168  009528  3507               	rlcf	(AnyAlarm@i+1)& (0+255),w,b
 26169  00952A  6EDA               	movwf	fsr2h,c
 26170  00952C  0E00               	movlw	low _alarms
 26171  00952E  26D9               	addwf	fsr2l,f,c
 26172  009530  0E03               	movlw	high _alarms
 26173  009532  22DA               	addwfc	fsr2h,f,c
 26174  009534  50DE               	movf	postinc2,w,c
 26175  009536  10DE               	iorwf	postinc2,w,c
 26176  009538  B4D8               	btfsc	status,2,c
 26177  00953A  D002               	goto	l18339
 26178                           
 26179                           ; BSR set to: 1
 26180  00953C  0E01               	movlw	1
 26181  00953E  0012               	return	
 26182  009540                     l18339:
 26183                           
 26184                           ; BSR set to: 1
 26185                           ;alarm.c: 373:     }
 26186  009540  4B06               	infsnz	AnyAlarm@i& (0+255),f,b
 26187  009542  2B07               	incf	(AnyAlarm@i+1)& (0+255),f,b
 26188                           
 26189                           ; BSR set to: 1
 26190  009544  5107               	movf	(AnyAlarm@i+1)& (0+255),w,b
 26191  009546  E104               	bnz	u17900
 26192  009548  0E13               	movlw	19
 26193  00954A  5D06               	subwf	AnyAlarm@i& (0+255),w,b
 26194  00954C  A0D8               	btfss	status,0,c
 26195  00954E  D7E9               	goto	l18333
 26196  009550                     u17900:
 26197                           
 26198                           ; BSR set to: 1
 26199                           ;alarm.c: 374:     return 0;
 26200  009550  0E00               	movlw	0
 26201                           
 26202                           ; BSR set to: 1
 26203  009552  0012               	return		;funcret
 26204  009554                     __end_of_AnyAlarm:
 26205                           	opt callstack 0
 26206                           
 26207 ;; *************** function _AlarmSet *****************
 26208 ;; Defined at:
 26209 ;;		line 351 in file "alarm.c"
 26210 ;; Parameters:    Size  Location     Type
 26211 ;;  id              1    wreg     unsigned char 
 26212 ;; Auto vars:     Size  Location     Type
 26213 ;;  id              1    4[BANK1 ] unsigned char 
 26214 ;; Return value:  Size  Location     Type
 26215 ;;                  1    wreg      void 
 26216 ;; Registers used:
 26217 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26218 ;; Tracked objects:
 26219 ;;		On entry : 3F/2
 26220 ;;		On exit  : 3F/1
 26221 ;;		Unchanged: 0/0
 26222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26224 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26226 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26227 ;;Total ram usage:        1 bytes
 26228 ;; Hardware stack levels used:    1
 26229 ;; Hardware stack levels required when called:   16
 26230 ;; This function calls:
 26231 ;;		Nothing
 26232 ;; This function is called by:
 26233 ;;		_AlarmCheckTask
 26234 ;; This function uses a non-reentrant model
 26235 ;;
 26236                           
 26237                           	psect	text203
 26238  009DD4                     __ptext203:
 26239                           	opt callstack 0
 26240  009DD4                     _AlarmSet:
 26241                           	opt callstack 13
 26242                           
 26243                           ; BSR set to: 1
 26244                           ;incstack = 0
 26245                           ;AlarmSet@id stored from wreg
 26246  009DD4  0101               	movlb	1	; () banked
 26247  009DD6  6F04               	movwf	AlarmSet@id& (0+255),b
 26248                           
 26249                           ;alarm.c: 352:     alarms[id] = 1;
 26250  009DD8  0101               	movlb	1	; () banked
 26251  009DDA  5104               	movf	AlarmSet@id& (0+255),w,b
 26252  009DDC  0D02               	mullw	2
 26253  009DDE  0E00               	movlw	low _alarms
 26254  009DE0  24F3               	addwf	243,w,c
 26255  009DE2  6ED9               	movwf	fsr2l,c
 26256  009DE4  0E03               	movlw	high _alarms
 26257  009DE6  20F4               	addwfc	prodh,w,c
 26258  009DE8  6EDA               	movwf	fsr2h,c
 26259  009DEA  0E01               	movlw	1
 26260  009DEC  6EDE               	movwf	postinc2,c
 26261  009DEE  0E00               	movlw	0
 26262  009DF0  6EDD               	movwf	postdec2,c
 26263                           
 26264                           ; BSR set to: 1
 26265  009DF2  0012               	return		;funcret
 26266  009DF4                     __end_of_AlarmSet:
 26267                           	opt callstack 0
 26268                           
 26269 ;; *************** function _AlarmClear *****************
 26270 ;; Defined at:
 26271 ;;		line 355 in file "alarm.c"
 26272 ;; Parameters:    Size  Location     Type
 26273 ;;  id              1    wreg     unsigned char 
 26274 ;; Auto vars:     Size  Location     Type
 26275 ;;  id              1    4[BANK1 ] unsigned char 
 26276 ;; Return value:  Size  Location     Type
 26277 ;;                  1    wreg      void 
 26278 ;; Registers used:
 26279 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26280 ;; Tracked objects:
 26281 ;;		On entry : 3F/2
 26282 ;;		On exit  : 3F/1
 26283 ;;		Unchanged: 0/0
 26284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26286 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26288 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26289 ;;Total ram usage:        1 bytes
 26290 ;; Hardware stack levels used:    1
 26291 ;; Hardware stack levels required when called:   16
 26292 ;; This function calls:
 26293 ;;		Nothing
 26294 ;; This function is called by:
 26295 ;;		_AlarmCheckTask
 26296 ;; This function uses a non-reentrant model
 26297 ;;
 26298                           
 26299                           	psect	text204
 26300  009DF4                     __ptext204:
 26301                           	opt callstack 0
 26302  009DF4                     _AlarmClear:
 26303                           	opt callstack 13
 26304                           
 26305                           ; BSR set to: 1
 26306                           ;incstack = 0
 26307                           ;AlarmClear@id stored from wreg
 26308  009DF4  0101               	movlb	1	; () banked
 26309  009DF6  6F04               	movwf	AlarmClear@id& (0+255),b
 26310                           
 26311                           ;alarm.c: 356:     alarms[id] = 0;
 26312  009DF8  0101               	movlb	1	; () banked
 26313  009DFA  5104               	movf	AlarmClear@id& (0+255),w,b
 26314  009DFC  0D02               	mullw	2
 26315  009DFE  0E00               	movlw	low _alarms
 26316  009E00  24F3               	addwf	243,w,c
 26317  009E02  6ED9               	movwf	fsr2l,c
 26318  009E04  0E03               	movlw	high _alarms
 26319  009E06  20F4               	addwfc	prodh,w,c
 26320  009E08  6EDA               	movwf	fsr2h,c
 26321  009E0A  0E00               	movlw	0
 26322  009E0C  6EDE               	movwf	postinc2,c
 26323  009E0E  0E00               	movlw	0
 26324  009E10  6EDD               	movwf	postdec2,c
 26325                           
 26326                           ; BSR set to: 1
 26327  009E12  0012               	return		;funcret
 26328  009E14                     __end_of_AlarmClear:
 26329                           	opt callstack 0
 26330                           
 26331 ;; *************** function _INTERRUPT_InterruptManager *****************
 26332 ;; Defined at:
 26333 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 26334 ;; Parameters:    Size  Location     Type
 26335 ;;		None
 26336 ;; Auto vars:     Size  Location     Type
 26337 ;;		None
 26338 ;; Return value:  Size  Location     Type
 26339 ;;                  1    wreg      void 
 26340 ;; Registers used:
 26341 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26342 ;; Tracked objects:
 26343 ;;		On entry : 0/0
 26344 ;;		On exit  : 0/0
 26345 ;;		Unchanged: 0/0
 26346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26349 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26350 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26351 ;;Total ram usage:        4 bytes
 26352 ;; Hardware stack levels used:    1
 26353 ;; Hardware stack levels required when called:   15
 26354 ;; This function calls:
 26355 ;;		Absolute function
 26356 ;;		_ADCC_ThresholdISR
 26357 ;;		_CMP1_ISR
 26358 ;;		_I2C2_Isr
 26359 ;;		_TMR0_ISR
 26360 ;;		_TMR1_ISR
 26361 ;;		_TMR4_ISR
 26362 ;;		_TMR5_ISR
 26363 ;;		_TMR6_ISR
 26364 ;;		_UART1_Receive_ISR
 26365 ;;		_UART1_Transmit_ISR
 26366 ;; This function is called by:
 26367 ;;		Interrupt level 2
 26368 ;; This function uses a non-reentrant model
 26369 ;;
 26370                           
 26371                           	psect	text205
 26372  00680C                     __ptext205:
 26373                           	opt callstack 0
 26374  00680C                     _INTERRUPT_InterruptManager:
 26375                           	opt callstack 2
 26376                           
 26377                           ; BSR set to: 1
 26378                           ;incstack = 0
 26379  00680C  006F FFD8  F100    	movff	tblptrl,??_INTERRUPT_InterruptManager
 26380  006812  006F FFDC  F101    	movff	tblptrh,??_INTERRUPT_InterruptManager+1
 26381  006818  006F FFE0  F102    	movff	tblptru,??_INTERRUPT_InterruptManager+2
 26382  00681E  006F FFD4  F103    	movff	tablat,??_INTERRUPT_InterruptManager+3
 26383                           
 26384                           ;mcc_generated_files/interrupt_manager.c: 61:     if(PIE1bits.ADTIE == 1 && PIR1bits.ADT
      +                          IF == 1)
 26385  006824  0139               	movlb	57	; () banked
 26386  006826  B791               	btfsc	145,3,b	;volatile
 26387                           
 26388                           ; BSR set to: 57
 26389  006828  A7A1               	btfss	161,3,b	;volatile
 26390  00682A  D003               	goto	i2l264
 26391  00682C                     i2u2207_40:
 26392                           
 26393                           ; BSR set to: 57
 26394                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         ADCC_ThresholdISR();
 26395  00682C  EC74  F04E         	call	_ADCC_ThresholdISR	;wreg free
 26396                           
 26397                           ;mcc_generated_files/interrupt_manager.c: 64:     }
 26398  006830  D05A               	goto	i2l287
 26399  006832                     i2l264:
 26400                           
 26401                           ; BSR set to: 57
 26402  006832  B993               	btfsc	147,4,b	;volatile
 26403                           
 26404                           ; BSR set to: 57
 26405  006834  A9A3               	btfss	163,4,b	;volatile
 26406  006836  D009               	goto	i2l266
 26407                           
 26408                           ; BSR set to: 57
 26409                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         UART1_TxInterruptHandler();
 26410  006838  D801               	call	i2u2210_48
 26411  00683A  D055               	goto	i2l287
 26412  00683C                     i2u2210_48:
 26413  00683C  0005               	push	
 26414  00683E  6EFA               	movwf	pclath,c
 26415  006840  0102               	movlb	2	; () banked
 26416  006842  51EF               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 26417  006844  6EFD               	movwf	tosl,c
 26418  006846  51F0               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 26419  006848  D023               	goto	L10
 26420  00684A                     i2l266:
 26421                           
 26422                           ; BSR set to: 57
 26423  00684A  B793               	btfsc	147,3,b	;volatile
 26424                           
 26425                           ; BSR set to: 57
 26426  00684C  A7A3               	btfss	163,3,b	;volatile
 26427  00684E  D009               	goto	i2l268
 26428                           
 26429                           ; BSR set to: 57
 26430                           ;mcc_generated_files/interrupt_manager.c: 70:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 71:         UART1_RxInterruptHandler();
 26431  006850  D801               	call	i2u2213_48
 26432  006852  D049               	goto	i2l287
 26433  006854                     i2u2213_48:
 26434  006854  0005               	push	
 26435  006856  6EFA               	movwf	pclath,c
 26436  006858  0102               	movlb	2	; () banked
 26437  00685A  51F1               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 26438  00685C  6EFD               	movwf	tosl,c
 26439  00685E  51F2               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 26440  006860  D017               	goto	L10
 26441  006862                     i2l268:
 26442                           
 26443                           ; BSR set to: 57
 26444  006862  BF93               	btfsc	147,7,b	;volatile
 26445                           
 26446                           ; BSR set to: 57
 26447  006864  AFA3               	btfss	163,7,b	;volatile
 26448  006866  D003               	goto	i2l270
 26449                           
 26450                           ; BSR set to: 57
 26451                           ;mcc_generated_files/interrupt_manager.c: 74:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 75:         TMR0_ISR();
 26452  006868  ECA8  F04E         	call	_TMR0_ISR	;wreg free
 26453                           
 26454                           ;mcc_generated_files/interrupt_manager.c: 76:     }
 26455  00686C  D03C               	goto	i2l287
 26456  00686E                     i2l270:
 26457                           
 26458                           ; BSR set to: 57
 26459  00686E  B991               	btfsc	145,4,b	;volatile
 26460                           
 26461                           ; BSR set to: 57
 26462  006870  A9A1               	btfss	161,4,b	;volatile
 26463  006872  D003               	goto	i2l272
 26464                           
 26465                           ; BSR set to: 57
 26466                           ;mcc_generated_files/interrupt_manager.c: 78:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 79:         CMP1_ISR();
 26467  006874  ECB9  F04E         	call	_CMP1_ISR	;wreg free
 26468                           
 26469                           ;mcc_generated_files/interrupt_manager.c: 80:     }
 26470  006878  D036               	goto	i2l287
 26471  00687A                     i2l272:
 26472                           
 26473                           ; BSR set to: 57
 26474  00687A  B396               	btfsc	150,1,b	;volatile
 26475                           
 26476                           ; BSR set to: 57
 26477  00687C  A3A6               	btfss	166,1,b	;volatile
 26478  00687E  D00C               	goto	i2l274
 26479  006880                     i2u2219_40:
 26480                           
 26481                           ; BSR set to: 57
 26482                           ;mcc_generated_files/interrupt_manager.c: 82:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 83:         I2C2_InterruptHandler();
 26483  006880  D801               	call	i2u2220_48
 26484  006882  D031               	goto	i2l287
 26485  006884                     i2u2220_48:
 26486  006884  0005               	push	
 26487  006886  6EFA               	movwf	pclath,c
 26488  006888  0100               	movlb	0	; () banked
 26489  00688A  51EE               	movf	_I2C2_InterruptHandler& (0+255),w,b
 26490  00688C  6EFD               	movwf	tosl,c
 26491  00688E  51EF               	movf	(_I2C2_InterruptHandler+1)& (0+255),w,b
 26492  006890                     L10:
 26493  006890  6EFE               	movwf	tosh,c
 26494  006892  6AFF               	clrf	tosu,c
 26495  006894  50FA               	movf	pclath,w,c
 26496  006896  0012               	return		;indir
 26497  006898                     i2l274:
 26498                           
 26499                           ; BSR set to: 57
 26500  006898  AD95               	btfss	149,6,b	;volatile
 26501  00689A  D002               	goto	i2l276
 26502                           
 26503                           ; BSR set to: 57
 26504  00689C  BDA5               	btfsc	165,6,b	;volatile
 26505  00689E  D7F0               	goto	i2u2219_40
 26506  0068A0                     i2l276:
 26507                           
 26508                           ; BSR set to: 57
 26509  0068A0  A196               	btfss	150,0,b	;volatile
 26510  0068A2  D002               	goto	i2l278
 26511                           
 26512                           ; BSR set to: 57
 26513  0068A4  B1A6               	btfsc	166,0,b	;volatile
 26514  0068A6  D7EC               	goto	i2u2219_40
 26515  0068A8                     i2l278:
 26516                           
 26517                           ; BSR set to: 57
 26518  0068A8  AF95               	btfss	149,7,b	;volatile
 26519  0068AA  D002               	goto	i2l280
 26520                           
 26521                           ; BSR set to: 57
 26522  0068AC  BFA5               	btfsc	165,7,b	;volatile
 26523  0068AE  D7E8               	goto	i2u2219_40
 26524  0068B0                     i2l280:
 26525                           
 26526                           ; BSR set to: 57
 26527  0068B0  B199               	btfsc	153,0,b	;volatile
 26528                           
 26529                           ; BSR set to: 57
 26530  0068B2  A1A9               	btfss	169,0,b	;volatile
 26531  0068B4  D003               	goto	i2l282
 26532                           
 26533                           ; BSR set to: 57
 26534                           ;mcc_generated_files/interrupt_manager.c: 98:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 99:         TMR6_ISR();
 26535  0068B6  EC86  F04E         	call	_TMR6_ISR	;wreg free
 26536                           
 26537                           ;mcc_generated_files/interrupt_manager.c: 100:     }
 26538  0068BA  D015               	goto	i2l287
 26539  0068BC                     i2l282:
 26540                           
 26541                           ; BSR set to: 57
 26542  0068BC  BD98               	btfsc	152,6,b	;volatile
 26543                           
 26544                           ; BSR set to: 57
 26545  0068BE  ADA8               	btfss	168,6,b	;volatile
 26546  0068C0  D003               	goto	i2l284
 26547                           
 26548                           ; BSR set to: 57
 26549                           ;mcc_generated_files/interrupt_manager.c: 102:     {;mcc_generated_files/interrupt_manag
      +                          er.c: 103:         TMR5_ISR();
 26550  0068C2  EC04  F04C         	call	_TMR5_ISR	;wreg free
 26551                           
 26552                           ;mcc_generated_files/interrupt_manager.c: 104:     }
 26553  0068C6  D00F               	goto	i2l287
 26554  0068C8                     i2l284:
 26555                           
 26556                           ; BSR set to: 57
 26557  0068C8  B197               	btfsc	151,0,b	;volatile
 26558                           
 26559                           ; BSR set to: 57
 26560  0068CA  A1A7               	btfss	167,0,b	;volatile
 26561  0068CC  D003               	goto	i2l286
 26562                           
 26563                           ; BSR set to: 57
 26564                           ;mcc_generated_files/interrupt_manager.c: 106:     {;mcc_generated_files/interrupt_manag
      +                          er.c: 107:         TMR4_ISR();
 26565  0068CE  EC97  F04E         	call	_TMR4_ISR	;wreg free
 26566                           
 26567                           ;mcc_generated_files/interrupt_manager.c: 108:     }
 26568  0068D2  D009               	goto	i2l287
 26569  0068D4                     i2l286:
 26570                           
 26571                           ; BSR set to: 57
 26572  0068D4  A791               	btfss	145,3,b	;volatile
 26573  0068D6  D002               	goto	i2l288
 26574                           
 26575                           ; BSR set to: 57
 26576  0068D8  B7A1               	btfsc	161,3,b	;volatile
 26577  0068DA  D7A8               	goto	i2u2207_40
 26578  0068DC                     i2l288:
 26579                           
 26580                           ; BSR set to: 57
 26581  0068DC  B194               	btfsc	148,0,b	;volatile
 26582                           
 26583                           ; BSR set to: 57
 26584  0068DE  A1A4               	btfss	164,0,b	;volatile
 26585  0068E0  D002               	goto	i2l287
 26586                           
 26587                           ; BSR set to: 57
 26588                           ;mcc_generated_files/interrupt_manager.c: 114:     {;mcc_generated_files/interrupt_manag
      +                          er.c: 115:         TMR1_ISR();
 26589  0068E2  EC1D  F04C         	call	_TMR1_ISR	;wreg free
 26590  0068E6                     i2l287:
 26591                           
 26592                           ; BSR set to: 57
 26593  0068E6  0060  F40F  FFF5   	movff	??_INTERRUPT_InterruptManager+3,tablat
 26594  0068EC  0060  F40B  FFF8   	movff	??_INTERRUPT_InterruptManager+2,tblptru
 26595  0068F2  0060  F407  FFF7   	movff	??_INTERRUPT_InterruptManager+1,tblptrh
 26596  0068F8  0060  F403  FFF6   	movff	??_INTERRUPT_InterruptManager,tblptrl
 26597  0068FE  0011               	retfie		f
 26598  006900                     __end_of_INTERRUPT_InterruptManager:
 26599                           	opt callstack 0
 26600                           
 26601 ;; *************** function _UART1_Transmit_ISR *****************
 26602 ;; Defined at:
 26603 ;;		line 238 in file "mcc_generated_files/uart1.c"
 26604 ;; Parameters:    Size  Location     Type
 26605 ;;		None
 26606 ;; Auto vars:     Size  Location     Type
 26607 ;;		None
 26608 ;; Return value:  Size  Location     Type
 26609 ;;                  1    wreg      void 
 26610 ;; Registers used:
 26611 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26612 ;; Tracked objects:
 26613 ;;		On entry : 3F/2
 26614 ;;		On exit  : 4/0
 26615 ;;		Unchanged: 0/0
 26616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26621 ;;Total ram usage:        0 bytes
 26622 ;; Hardware stack levels used:    1
 26623 ;; This function calls:
 26624 ;;		Nothing
 26625 ;; This function is called by:
 26626 ;;		_UART1_Initialize
 26627 ;;		_INTERRUPT_InterruptManager
 26628 ;; This function uses a non-reentrant model
 26629 ;;
 26630                           
 26631                           	psect	text206
 26632  0091D4                     __ptext206:
 26633                           	opt callstack 0
 26634  0091D4                     _UART1_Transmit_ISR:
 26635                           	opt callstack 16
 26636                           
 26637                           ; BSR set to: 2
 26638                           ;mcc_generated_files/uart1.c: 241:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 26639                           
 26640                           ;incstack = 0
 26641  0091D4  0EB0               	movlw	176
 26642  0091D6  5DEB               	subwf	_uart1TxBufferRemaining& (0+255),w,b	;volatile
 26643  0091D8  0E04               	movlw	4
 26644  0091DA  59EC               	subwfb	(_uart1TxBufferRemaining+1)& (0+255),w,b	;volatile
 26645  0091DC  B0D8               	btfsc	status,0,c
 26646  0091DE  D01B               	goto	i2l669
 26647                           
 26648                           ; BSR set to: 2
 26649                           ;mcc_generated_files/uart1.c: 242:     {;mcc_generated_files/uart1.c: 243:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
 26650  0091E0  0E64               	movlw	low _uart1TxBuffer
 26651  0091E2  0100               	movlb	0	; () banked
 26652  0091E4  25EC               	addwf	_uart1TxTail& (0+255),w,b	;volatile
 26653  0091E6  6ED9               	movwf	fsr2l,c
 26654  0091E8  0E04               	movlw	high _uart1TxBuffer
 26655  0091EA  21ED               	addwfc	(_uart1TxTail+1)& (0+255),w,b	;volatile
 26656  0091EC  6EDA               	movwf	fsr2h,c
 26657  0091EE  50DF               	movf	indf2,w,c
 26658  0091F0  013D               	movlb	61	; () banked
 26659  0091F2  6FEA               	movwf	234,b	;volatile
 26660                           
 26661                           ; BSR set to: 61
 26662  0091F4  0100               	movlb	0	; () banked
 26663  0091F6  4BEC               	infsnz	_uart1TxTail& (0+255),f,b	;volatile
 26664  0091F8  2BED               	incf	(_uart1TxTail+1)& (0+255),f,b	;volatile
 26665                           
 26666                           ; BSR set to: 0
 26667                           ;mcc_generated_files/uart1.c: 244:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 26668  0091FA  0EB0               	movlw	176
 26669  0091FC  5DEC               	subwf	_uart1TxTail& (0+255),w,b	;volatile
 26670  0091FE  0E04               	movlw	4
 26671  009200  59ED               	subwfb	(_uart1TxTail+1)& (0+255),w,b	;volatile
 26672  009202  A0D8               	btfss	status,0,c
 26673  009204  D004               	goto	i2l15719
 26674                           
 26675                           ; BSR set to: 0
 26676                           ;mcc_generated_files/uart1.c: 245:         {;mcc_generated_files/uart1.c: 246:          
      +                             uart1TxTail = 0;
 26677  009206  0E00               	movlw	0
 26678  009208  6FED               	movwf	(_uart1TxTail+1)& (0+255),b	;volatile
 26679  00920A  0E00               	movlw	0
 26680  00920C  6FEC               	movwf	_uart1TxTail& (0+255),b	;volatile
 26681  00920E                     i2l15719:
 26682                           
 26683                           ; BSR set to: 0
 26684                           ;mcc_generated_files/uart1.c: 248:         uart1TxBufferRemaining++;
 26685  00920E  0102               	movlb	2	; () banked
 26686  009210  4BEB               	infsnz	_uart1TxBufferRemaining& (0+255),f,b	;volatile
 26687  009212  2BEC               	incf	(_uart1TxBufferRemaining+1)& (0+255),f,b	;volatile
 26688                           
 26689                           ;mcc_generated_files/uart1.c: 249:     }
 26690  009214  0012               	return	
 26691  009216                     i2l669:
 26692                           
 26693                           ; BSR set to: 2
 26694                           ;mcc_generated_files/uart1.c: 251:     {;mcc_generated_files/uart1.c: 252:         PIE3b
      +                          its.U1TXIE = 0;
 26695  009216  0139               	movlb	57	; () banked
 26696  009218  9993               	bcf	147,4,b	;volatile
 26697  00921A  0012               	return		;funcret
 26698  00921C                     __end_of_UART1_Transmit_ISR:
 26699                           	opt callstack 0
 26700                           
 26701 ;; *************** function _UART1_Receive_ISR *****************
 26702 ;; Defined at:
 26703 ;;		line 258 in file "mcc_generated_files/uart1.c"
 26704 ;; Parameters:    Size  Location     Type
 26705 ;;		None
 26706 ;; Auto vars:     Size  Location     Type
 26707 ;;		None
 26708 ;; Return value:  Size  Location     Type
 26709 ;;                  1    wreg      void 
 26710 ;; Registers used:
 26711 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 26712 ;; Tracked objects:
 26713 ;;		On entry : 3F/2
 26714 ;;		On exit  : 0/0
 26715 ;;		Unchanged: 0/0
 26716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26721 ;;Total ram usage:        0 bytes
 26722 ;; Hardware stack levels used:    1
 26723 ;; Hardware stack levels required when called:    2
 26724 ;; This function calls:
 26725 ;;		Absolute function
 26726 ;;		_UART1_DefaultErrorHandler
 26727 ;;		_UART1_DefaultFramingErrorHandler
 26728 ;;		_UART1_DefaultOverrunErrorHandler
 26729 ;;		_UART1_RxDataHandler
 26730 ;; This function is called by:
 26731 ;;		_UART1_Initialize
 26732 ;;		_INTERRUPT_InterruptManager
 26733 ;; This function uses a non-reentrant model
 26734 ;;
 26735                           
 26736                           	psect	text207
 26737  00786A                     __ptext207:
 26738                           	opt callstack 0
 26739  00786A                     _UART1_Receive_ISR:
 26740                           	opt callstack 14
 26741                           
 26742                           ; BSR set to: 2
 26743                           ;mcc_generated_files/uart1.c: 261:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 26744                           
 26745                           ;incstack = 0
 26746  00786A  0E0A               	movlw	low _uart1RxStatusBuffer
 26747  00786C  0101               	movlb	1	; () banked
 26748  00786E  25F3               	addwf	_uart1RxHead& (0+255),w,b	;volatile
 26749  007870  6ED9               	movwf	fsr2l,c
 26750  007872  6ADA               	clrf	fsr2h,c
 26751  007874  0E02               	movlw	high _uart1RxStatusBuffer
 26752  007876  22DA               	addwfc	fsr2h,f,c
 26753  007878  0E00               	movlw	0
 26754  00787A  6EDF               	movwf	indf2,c
 26755                           
 26756                           ; BSR set to: 1
 26757                           ;mcc_generated_files/uart1.c: 263:     if(U1ERRIRbits.FERIF){
 26758  00787C  013D               	movlb	61	; () banked
 26759  00787E  A7F9               	btfss	249,3,b	;volatile
 26760  007880  D014               	goto	i2u1388_49
 26761                           
 26762                           ; BSR set to: 61
 26763                           ;mcc_generated_files/uart1.c: 264:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 26764  007882  0E0A               	movlw	low _uart1RxStatusBuffer
 26765  007884  0101               	movlb	1	; () banked
 26766  007886  25F3               	addwf	_uart1RxHead& (0+255),w,b	;volatile
 26767  007888  6ED9               	movwf	fsr2l,c
 26768  00788A  6ADA               	clrf	fsr2h,c
 26769  00788C  0E02               	movlw	high _uart1RxStatusBuffer
 26770  00788E  22DA               	addwfc	fsr2h,f,c
 26771  007890  0102               	movlb	2	; () banked
 26772  007892  82DF               	bsf	indf2,1,c
 26773                           
 26774                           ; BSR set to: 2
 26775                           ;mcc_generated_files/uart1.c: 265:         UART1_FramingErrorHandler();
 26776  007894  D801               	call	i2u1388_48
 26777  007896  D009               	goto	i2u1388_49
 26778  007898                     i2u1388_48:
 26779  007898  0005               	push	
 26780  00789A  6EFA               	movwf	pclath,c
 26781  00789C  51E9               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 26782  00789E  6EFD               	movwf	tosl,c
 26783  0078A0  51EA               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 26784  0078A2  6EFE               	movwf	tosh,c
 26785  0078A4  6AFF               	clrf	tosu,c
 26786  0078A6  50FA               	movf	pclath,w,c
 26787  0078A8  0012               	return		;indir
 26788  0078AA                     i2u1388_49:
 26789                           
 26790                           ;mcc_generated_files/uart1.c: 268:     if(U1ERRIRbits.RXFOIF){
 26791  0078AA  013D               	movlb	61	; () banked
 26792  0078AC  A3F9               	btfss	249,1,b	;volatile
 26793  0078AE  D014               	goto	i2u1390_49
 26794                           
 26795                           ; BSR set to: 61
 26796                           ;mcc_generated_files/uart1.c: 269:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 26797  0078B0  0E0A               	movlw	low _uart1RxStatusBuffer
 26798  0078B2  0101               	movlb	1	; () banked
 26799  0078B4  25F3               	addwf	_uart1RxHead& (0+255),w,b	;volatile
 26800  0078B6  6ED9               	movwf	fsr2l,c
 26801  0078B8  6ADA               	clrf	fsr2h,c
 26802  0078BA  0E02               	movlw	high _uart1RxStatusBuffer
 26803  0078BC  22DA               	addwfc	fsr2h,f,c
 26804  0078BE  0102               	movlb	2	; () banked
 26805  0078C0  84DF               	bsf	indf2,2,c
 26806                           
 26807                           ; BSR set to: 2
 26808                           ;mcc_generated_files/uart1.c: 270:         UART1_OverrunErrorHandler();
 26809  0078C2  D801               	call	i2u1390_48
 26810  0078C4  D009               	goto	i2u1390_49
 26811  0078C6                     i2u1390_48:
 26812  0078C6  0005               	push	
 26813  0078C8  6EFA               	movwf	pclath,c
 26814  0078CA  51E7               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 26815  0078CC  6EFD               	movwf	tosl,c
 26816  0078CE  51E8               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 26817  0078D0  6EFE               	movwf	tosh,c
 26818  0078D2  6AFF               	clrf	tosu,c
 26819  0078D4  50FA               	movf	pclath,w,c
 26820  0078D6  0012               	return		;indir
 26821  0078D8                     i2u1390_49:
 26822                           
 26823                           ;mcc_generated_files/uart1.c: 273:     if(uart1RxStatusBuffer[uart1RxHead].status){
 26824  0078D8  0E0A               	movlw	low _uart1RxStatusBuffer
 26825  0078DA  0101               	movlb	1	; () banked
 26826  0078DC  25F3               	addwf	_uart1RxHead& (0+255),w,b	;volatile
 26827  0078DE  6ED9               	movwf	fsr2l,c
 26828  0078E0  6ADA               	clrf	fsr2h,c
 26829  0078E2  0E02               	movlw	high _uart1RxStatusBuffer
 26830  0078E4  22DA               	addwfc	fsr2h,f,c
 26831  0078E6  50DF               	movf	indf2,w,c
 26832  0078E8  B4D8               	btfsc	status,2,c
 26833  0078EA  D00C               	goto	i2l15739
 26834                           
 26835                           ; BSR set to: 1
 26836                           ;mcc_generated_files/uart1.c: 274:         UART1_ErrorHandler();
 26837  0078EC  D801               	call	i2u1392_48
 26838  0078EE  0012               	return	
 26839  0078F0                     i2u1392_48:
 26840  0078F0  0005               	push	
 26841  0078F2  6EFA               	movwf	pclath,c
 26842  0078F4  0102               	movlb	2	; () banked
 26843  0078F6  51E5               	movf	_UART1_ErrorHandler& (0+255),w,b
 26844  0078F8  6EFD               	movwf	tosl,c
 26845  0078FA  51E6               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 26846  0078FC  6EFE               	movwf	tosh,c
 26847  0078FE  6AFF               	clrf	tosu,c
 26848  007900  50FA               	movf	pclath,w,c
 26849  007902  0012               	return		;indir
 26850  007904                     i2l15739:
 26851                           
 26852                           ; BSR set to: 1
 26853                           ;mcc_generated_files/uart1.c: 276:         UART1_RxDataHandler();
 26854  007904  EC3E  F04E         	call	_UART1_RxDataHandler	;wreg free
 26855  007908  0012               	return		;funcret
 26856  00790A                     __end_of_UART1_Receive_ISR:
 26857                           	opt callstack 0
 26858                           
 26859 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 26860 ;; Defined at:
 26861 ;;		line 294 in file "mcc_generated_files/uart1.c"
 26862 ;; Parameters:    Size  Location     Type
 26863 ;;		None
 26864 ;; Auto vars:     Size  Location     Type
 26865 ;;		None
 26866 ;; Return value:  Size  Location     Type
 26867 ;;                  1    wreg      void 
 26868 ;; Registers used:
 26869 ;;		None
 26870 ;; Tracked objects:
 26871 ;;		On entry : 3F/2
 26872 ;;		On exit  : 3F/2
 26873 ;;		Unchanged: 3F/0
 26874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26879 ;;Total ram usage:        0 bytes
 26880 ;; Hardware stack levels used:    1
 26881 ;; This function calls:
 26882 ;;		Nothing
 26883 ;; This function is called by:
 26884 ;;		_UART1_Initialize
 26885 ;;		_UART1_Receive_ISR
 26886 ;; This function uses a non-reentrant model
 26887 ;;
 26888                           
 26889                           	psect	text208
 26890  00A6EC                     __ptext208:
 26891                           	opt callstack 0
 26892  00A6EC                     _UART1_DefaultOverrunErrorHandler:
 26893                           	opt callstack 15
 26894                           
 26895                           ; BSR set to: 2
 26896                           
 26897                           ;incstack = 0
 26898  00A6EC  0012               	return		;funcret
 26899  00A6EE                     __end_of_UART1_DefaultOverrunErrorHandler:
 26900                           	opt callstack 0
 26901                           
 26902 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 26903 ;; Defined at:
 26904 ;;		line 292 in file "mcc_generated_files/uart1.c"
 26905 ;; Parameters:    Size  Location     Type
 26906 ;;		None
 26907 ;; Auto vars:     Size  Location     Type
 26908 ;;		None
 26909 ;; Return value:  Size  Location     Type
 26910 ;;                  1    wreg      void 
 26911 ;; Registers used:
 26912 ;;		None
 26913 ;; Tracked objects:
 26914 ;;		On entry : 3F/2
 26915 ;;		On exit  : 3F/2
 26916 ;;		Unchanged: 3F/0
 26917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26922 ;;Total ram usage:        0 bytes
 26923 ;; Hardware stack levels used:    1
 26924 ;; This function calls:
 26925 ;;		Nothing
 26926 ;; This function is called by:
 26927 ;;		_UART1_Initialize
 26928 ;;		_UART1_Receive_ISR
 26929 ;; This function uses a non-reentrant model
 26930 ;;
 26931                           
 26932                           	psect	text209
 26933  00A6EE                     __ptext209:
 26934                           	opt callstack 0
 26935  00A6EE                     _UART1_DefaultFramingErrorHandler:
 26936                           	opt callstack 15
 26937                           
 26938                           ; BSR set to: 2
 26939                           
 26940                           ; BSR set to: 2
 26941                           ;incstack = 0
 26942  00A6EE  0012               	return		;funcret
 26943  00A6F0                     __end_of_UART1_DefaultFramingErrorHandler:
 26944                           	opt callstack 0
 26945                           
 26946 ;; *************** function _UART1_DefaultErrorHandler *****************
 26947 ;; Defined at:
 26948 ;;		line 296 in file "mcc_generated_files/uart1.c"
 26949 ;; Parameters:    Size  Location     Type
 26950 ;;		None
 26951 ;; Auto vars:     Size  Location     Type
 26952 ;;		None
 26953 ;; Return value:  Size  Location     Type
 26954 ;;                  1    wreg      void 
 26955 ;; Registers used:
 26956 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26957 ;; Tracked objects:
 26958 ;;		On entry : 3F/2
 26959 ;;		On exit  : 3F/1
 26960 ;;		Unchanged: 0/0
 26961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26966 ;;Total ram usage:        0 bytes
 26967 ;; Hardware stack levels used:    1
 26968 ;; Hardware stack levels required when called:    1
 26969 ;; This function calls:
 26970 ;;		_UART1_RxDataHandler
 26971 ;; This function is called by:
 26972 ;;		_UART1_Initialize
 26973 ;;		_UART1_Receive_ISR
 26974 ;; This function uses a non-reentrant model
 26975 ;;
 26976                           
 26977                           	psect	text210
 26978  00A616                     __ptext210:
 26979                           	opt callstack 0
 26980  00A616                     _UART1_DefaultErrorHandler:
 26981                           	opt callstack 14
 26982                           
 26983                           ; BSR set to: 2
 26984                           ;mcc_generated_files/uart1.c: 297:     UART1_RxDataHandler();
 26985                           
 26986                           ; BSR set to: 2
 26987                           ;incstack = 0
 26988  00A616  EC3E  F04E         	call	_UART1_RxDataHandler	;wreg free
 26989                           
 26990                           ; BSR set to: 1
 26991  00A61A  0012               	return		;funcret
 26992  00A61C                     __end_of_UART1_DefaultErrorHandler:
 26993                           	opt callstack 0
 26994                           
 26995 ;; *************** function _UART1_RxDataHandler *****************
 26996 ;; Defined at:
 26997 ;;		line 282 in file "mcc_generated_files/uart1.c"
 26998 ;; Parameters:    Size  Location     Type
 26999 ;;		None
 27000 ;; Auto vars:     Size  Location     Type
 27001 ;;		None
 27002 ;; Return value:  Size  Location     Type
 27003 ;;                  1    wreg      void 
 27004 ;; Registers used:
 27005 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27006 ;; Tracked objects:
 27007 ;;		On entry : 3C/1
 27008 ;;		On exit  : 3F/1
 27009 ;;		Unchanged: 0/0
 27010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27015 ;;Total ram usage:        0 bytes
 27016 ;; Hardware stack levels used:    1
 27017 ;; This function calls:
 27018 ;;		Nothing
 27019 ;; This function is called by:
 27020 ;;		_UART1_Receive_ISR
 27021 ;;		_UART1_DefaultErrorHandler
 27022 ;; This function uses a non-reentrant model
 27023 ;;
 27024                           
 27025                           	psect	text211
 27026  009C7C                     __ptext211:
 27027                           	opt callstack 0
 27028  009C7C                     _UART1_RxDataHandler:
 27029                           	opt callstack 15
 27030                           
 27031                           ;mcc_generated_files/uart1.c: 284:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 27032                           
 27033                           ; BSR set to: 1
 27034                           ;incstack = 0
 27035  009C7C  0E12               	movlw	low _uart1RxBuffer
 27036  009C7E  0101               	movlb	1	; () banked
 27037  009C80  25F3               	addwf	_uart1RxHead& (0+255),w,b	;volatile
 27038  009C82  6ED9               	movwf	fsr2l,c
 27039  009C84  6ADA               	clrf	fsr2h,c
 27040  009C86  0E02               	movlw	high _uart1RxBuffer
 27041  009C88  22DA               	addwfc	fsr2h,f,c
 27042  009C8A  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 27043                           
 27044                           ; BSR set to: 1
 27045  009C90  2BF3               	incf	_uart1RxHead& (0+255),f,b	;volatile
 27046                           
 27047                           ; BSR set to: 1
 27048                           ;mcc_generated_files/uart1.c: 285:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 27049  009C92  0E07               	movlw	7
 27050  009C94  65F3               	cpfsgt	_uart1RxHead& (0+255),b
 27051  009C96  D002               	goto	i2l13117
 27052                           
 27053                           ; BSR set to: 1
 27054                           ;mcc_generated_files/uart1.c: 286:     {;mcc_generated_files/uart1.c: 287:         uart1
      +                          RxHead = 0;
 27055  009C98  0E00               	movlw	0
 27056  009C9A  6FF3               	movwf	_uart1RxHead& (0+255),b	;volatile
 27057  009C9C                     i2l13117:
 27058                           
 27059                           ; BSR set to: 1
 27060                           ;mcc_generated_files/uart1.c: 289:     uart1RxCount++;
 27061  009C9C  2BF1               	incf	_uart1RxCount& (0+255),f,b	;volatile
 27062                           
 27063                           ; BSR set to: 1
 27064  009C9E  0012               	return		;funcret
 27065  009CA0                     __end_of_UART1_RxDataHandler:
 27066                           	opt callstack 0
 27067                           
 27068 ;; *************** function _TMR6_ISR *****************
 27069 ;; Defined at:
 27070 ;;		line 165 in file "mcc_generated_files/tmr6.c"
 27071 ;; Parameters:    Size  Location     Type
 27072 ;;		None
 27073 ;; Auto vars:     Size  Location     Type
 27074 ;;		None
 27075 ;; Return value:  Size  Location     Type
 27076 ;;                  1    wreg      void 
 27077 ;; Registers used:
 27078 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27079 ;; Tracked objects:
 27080 ;;		On entry : 3F/39
 27081 ;;		On exit  : 0/0
 27082 ;;		Unchanged: 0/0
 27083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27088 ;;Total ram usage:        0 bytes
 27089 ;; Hardware stack levels used:    1
 27090 ;; Hardware stack levels required when called:   10
 27091 ;; This function calls:
 27092 ;;		Absolute function
 27093 ;;		_ControllerTimerHandler
 27094 ;;		_TMR6_DefaultInterruptHandler
 27095 ;; This function is called by:
 27096 ;;		_INTERRUPT_InterruptManager
 27097 ;; This function uses a non-reentrant model
 27098 ;;
 27099                           
 27100                           	psect	text212
 27101  009D0C                     __ptext212:
 27102                           	opt callstack 0
 27103  009D0C                     _TMR6_ISR:
 27104                           	opt callstack 6
 27105                           
 27106                           ; BSR set to: 57
 27107                           ;mcc_generated_files/tmr6.c: 169:     PIR9bits.TMR6IF = 0;
 27108                           
 27109                           ; BSR set to: 1
 27110                           ;incstack = 0
 27111  009D0C  91A9               	bcf	169,0,b	;volatile
 27112                           
 27113                           ; BSR set to: 57
 27114                           ;mcc_generated_files/tmr6.c: 171:     if(TMR6_InterruptHandler)
 27115  009D0E  0102               	movlb	2	; () banked
 27116  009D10  51D9               	movf	_TMR6_InterruptHandler& (0+255),w,b
 27117  009D12  11DA               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 27118  009D14  B4D8               	btfsc	status,2,c
 27119  009D16  0012               	return	
 27120                           
 27121                           ; BSR set to: 2
 27122                           ;mcc_generated_files/tmr6.c: 172:     {;mcc_generated_files/tmr6.c: 173:         TMR6_In
      +                          terruptHandler();
 27123  009D18  D801               	call	i2u2124_48
 27124  009D1A  0012               	return	
 27125  009D1C                     i2u2124_48:
 27126  009D1C  0005               	push	
 27127  009D1E  6EFA               	movwf	pclath,c
 27128  009D20  51D9               	movf	_TMR6_InterruptHandler& (0+255),w,b
 27129  009D22  6EFD               	movwf	tosl,c
 27130  009D24  51DA               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 27131  009D26  6EFE               	movwf	tosh,c
 27132  009D28  6AFF               	clrf	tosu,c
 27133  009D2A  50FA               	movf	pclath,w,c
 27134  009D2C  0012               	return		;indir
 27135  009D2E                     __end_of_TMR6_ISR:
 27136                           	opt callstack 0
 27137                           
 27138 ;; *************** function _ControllerTimerHandler *****************
 27139 ;; Defined at:
 27140 ;;		line 193 in file "controller.c"
 27141 ;; Parameters:    Size  Location     Type
 27142 ;;		None
 27143 ;; Auto vars:     Size  Location     Type
 27144 ;;		None
 27145 ;; Return value:  Size  Location     Type
 27146 ;;                  1    wreg      void 
 27147 ;; Registers used:
 27148 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27149 ;; Tracked objects:
 27150 ;;		On entry : 3F/2
 27151 ;;		On exit  : 3F/2
 27152 ;;		Unchanged: 0/0
 27153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27158 ;;Total ram usage:        0 bytes
 27159 ;; Hardware stack levels used:    1
 27160 ;; Hardware stack levels required when called:    9
 27161 ;; This function calls:
 27162 ;;		_SetControlFailAlarm
 27163 ;;		i2_ClearControlFailAlarm
 27164 ;;		i2___awmod
 27165 ;;		i2_printf
 27166 ;; This function is called by:
 27167 ;;		_ControllerInit
 27168 ;;		_TMR6_ISR
 27169 ;; This function uses a non-reentrant model
 27170 ;;
 27171                           
 27172                           	psect	text213
 27173  008082                     __ptext213:
 27174                           	opt callstack 0
 27175  008082                     _ControllerTimerHandler:
 27176                           	opt callstack 6
 27177                           
 27178                           ; BSR set to: 2
 27179                           ;controller.c: 194:     static int errors=0;;controller.c: 195:     if (!commandReceived
      +                          ) {
 27180                           
 27181                           ;incstack = 0
 27182  008082  519B               	movf	_commandReceived& (0+255),w,b
 27183  008084  A4D8               	btfss	status,2,c
 27184  008086  D01A               	goto	i2l21679
 27185                           
 27186                           ; BSR set to: 2
 27187                           ;controller.c: 197:         if (run) {
 27188  008088  0100               	movlb	0	; () banked
 27189  00808A  51F0               	movf	_run& (0+255),w,b
 27190  00808C  B4D8               	btfsc	status,2,c
 27191  00808E  D013               	goto	i2l21677
 27192                           
 27193                           ; BSR set to: 0
 27194                           ;controller.c: 198:             printf("EC ");
 27195  008090  0ED4               	movlw	low STR_54
 27196  008092  6F77               	movwf	i2printf@fmt& (0+255),b
 27197  008094  0EFF               	movlw	high STR_54
 27198  008096  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 27199  008098  EC07  F04E         	call	i2_printf	;wreg free
 27200                           
 27201                           ; BSR set to: 2
 27202                           ;controller.c: 199:             errors++;
 27203  00809C  4B2E               	infsnz	ControllerTimerHandler@errors& (0+255),f,b
 27204  00809E  2B2F               	incf	(ControllerTimerHandler@errors+1)& (0+255),f,b
 27205                           
 27206                           ; BSR set to: 2
 27207                           ;controller.c: 200:             if (errors>10) SetControlFailAlarm();
 27208  0080A0  BF2F               	btfsc	(ControllerTimerHandler@errors+1)& (0+255),7,b
 27209  0080A2  D010               	goto	i2l21681
 27210  0080A4  512F               	movf	(ControllerTimerHandler@errors+1)& (0+255),w,b
 27211  0080A6  E104               	bnz	i2u2115_40
 27212  0080A8  0E0B               	movlw	11
 27213  0080AA  5D2E               	subwf	ControllerTimerHandler@errors& (0+255),w,b
 27214  0080AC  A0D8               	btfss	status,0,c
 27215  0080AE  D00A               	goto	i2l21681
 27216  0080B0                     i2u2115_40:
 27217                           
 27218                           ; BSR set to: 2
 27219  0080B0  ECB9  F052         	call	_SetControlFailAlarm	;wreg free
 27220  0080B4  D007               	goto	i2l21681
 27221  0080B6                     i2l21677:
 27222                           
 27223                           ; BSR set to: 0
 27224                           ;controller.c: 202:             ClearControlFailAlarm();
 27225  0080B6  ECD1  F052         	call	i2_ClearControlFailAlarm	;wreg free
 27226  0080BA  D004               	goto	i2l21681
 27227  0080BC                     i2l21679:
 27228                           
 27229                           ; BSR set to: 2
 27230                           ;controller.c: 206:         errors = 0;
 27231  0080BC  0E00               	movlw	0
 27232  0080BE  6F2F               	movwf	(ControllerTimerHandler@errors+1)& (0+255),b
 27233  0080C0  0E00               	movlw	0
 27234  0080C2  6F2E               	movwf	ControllerTimerHandler@errors& (0+255),b
 27235  0080C4                     i2l21681:
 27236                           
 27237                           ;controller.c: 208:     static int16_t cnt=0;;controller.c: 209:     cnt = (cnt+1)%100;
 27238  0080C4  0E01               	movlw	1
 27239  0080C6  0102               	movlb	2	; () banked
 27240  0080C8  252C               	addwf	ControllerTimerHandler@cnt& (0+255),w,b
 27241  0080CA  6E01               	movwf	i2___awmod@dividend^0,c
 27242  0080CC  0E00               	movlw	0
 27243  0080CE  212D               	addwfc	(ControllerTimerHandler@cnt+1)& (0+255),w,b
 27244  0080D0  6E02               	movwf	(i2___awmod@dividend+1)^0,c
 27245  0080D2  0E00               	movlw	0
 27246  0080D4  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 27247  0080D6  0E64               	movlw	100
 27248  0080D8  6E03               	movwf	i2___awmod@divisor^0,c
 27249  0080DA  ECB9  F041         	call	i2___awmod	;wreg free
 27250  0080DE  0060  F004  F22C   	movff	?i2___awmod,ControllerTimerHandler@cnt
 27251  0080E4  0060  F008  F22D   	movff	?i2___awmod+1,ControllerTimerHandler@cnt+1
 27252                           
 27253                           ;controller.c: 210:     if (cnt==0) printf("&\r\n");
 27254  0080EA  0102               	movlb	2	; () banked
 27255  0080EC  512C               	movf	ControllerTimerHandler@cnt& (0+255),w,b
 27256  0080EE  112D               	iorwf	(ControllerTimerHandler@cnt+1)& (0+255),w,b
 27257  0080F0  A4D8               	btfss	status,2,c
 27258  0080F2  D007               	goto	i2l21687
 27259                           
 27260                           ; BSR set to: 2
 27261  0080F4  0ED0               	movlw	low STR_55
 27262  0080F6  0100               	movlb	0	; () banked
 27263  0080F8  6F77               	movwf	i2printf@fmt& (0+255),b
 27264  0080FA  0EFF               	movlw	high STR_55
 27265  0080FC  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 27266  0080FE  EC07  F04E         	call	i2_printf	;wreg free
 27267  008102                     i2l21687:
 27268                           
 27269                           ; BSR set to: 2
 27270                           ;controller.c: 211:     commandReceived = 0;
 27271  008102  0E00               	movlw	0
 27272  008104  6F9B               	movwf	_commandReceived& (0+255),b
 27273                           
 27274                           ; BSR set to: 2
 27275  008106  0012               	return		;funcret
 27276  008108                     __end_of_ControllerTimerHandler:
 27277                           	opt callstack 0
 27278                           
 27279 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 27280 ;; Defined at:
 27281 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 27282 ;; Parameters:    Size  Location     Type
 27283 ;;		None
 27284 ;; Auto vars:     Size  Location     Type
 27285 ;;		None
 27286 ;; Return value:  Size  Location     Type
 27287 ;;                  1    wreg      void 
 27288 ;; Registers used:
 27289 ;;		None
 27290 ;; Tracked objects:
 27291 ;;		On entry : 3F/2
 27292 ;;		On exit  : 3F/2
 27293 ;;		Unchanged: 3F/0
 27294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27299 ;;Total ram usage:        0 bytes
 27300 ;; Hardware stack levels used:    1
 27301 ;; This function calls:
 27302 ;;		Nothing
 27303 ;; This function is called by:
 27304 ;;		_TMR6_Initialize
 27305 ;;		_TMR6_ISR
 27306 ;; This function uses a non-reentrant model
 27307 ;;
 27308                           
 27309                           	psect	text214
 27310  00A6F0                     __ptext214:
 27311                           	opt callstack 0
 27312  00A6F0                     _TMR6_DefaultInterruptHandler:
 27313                           	opt callstack 15
 27314                           
 27315                           ; BSR set to: 2
 27316                           
 27317                           ; BSR set to: 2
 27318                           ;incstack = 0
 27319  00A6F0  0012               	return		;funcret
 27320  00A6F2                     __end_of_TMR6_DefaultInterruptHandler:
 27321                           	opt callstack 0
 27322                           
 27323 ;; *************** function _TMR5_ISR *****************
 27324 ;; Defined at:
 27325 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 27326 ;; Parameters:    Size  Location     Type
 27327 ;;		None
 27328 ;; Auto vars:     Size  Location     Type
 27329 ;;		None
 27330 ;; Return value:  Size  Location     Type
 27331 ;;                  1    wreg      void 
 27332 ;; Registers used:
 27333 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27334 ;; Tracked objects:
 27335 ;;		On entry : 3F/39
 27336 ;;		On exit  : 0/0
 27337 ;;		Unchanged: 0/0
 27338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27343 ;;Total ram usage:        0 bytes
 27344 ;; Hardware stack levels used:    1
 27345 ;; Hardware stack levels required when called:   10
 27346 ;; This function calls:
 27347 ;;		Absolute function
 27348 ;;		_AlarmHandler
 27349 ;;		_TMR5_DefaultInterruptHandler
 27350 ;;		_TMR5_WriteTimer
 27351 ;; This function is called by:
 27352 ;;		_INTERRUPT_InterruptManager
 27353 ;; This function uses a non-reentrant model
 27354 ;;
 27355                           
 27356                           	psect	text215
 27357  009808                     __ptext215:
 27358                           	opt callstack 0
 27359  009808                     _TMR5_ISR:
 27360                           	opt callstack 6
 27361                           
 27362                           ; BSR set to: 57
 27363                           ;mcc_generated_files/tmr5.c: 168:     PIR8bits.TMR5IF = 0;
 27364                           
 27365                           ; BSR set to: 2
 27366                           ;incstack = 0
 27367  009808  9DA8               	bcf	168,6,b	;volatile
 27368                           
 27369                           ; BSR set to: 57
 27370                           ;mcc_generated_files/tmr5.c: 169:     TMR5_WriteTimer(timer5ReloadVal);
 27371  00980A  0060  FB8C  F001   	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 27372  009810  0060  FB90  F002   	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 27373  009816  EC50  F04E         	call	_TMR5_WriteTimer	;wreg free
 27374                           
 27375                           ; BSR set to: 57
 27376                           ;mcc_generated_files/tmr5.c: 171:     if(TMR5_InterruptHandler)
 27377  00981A  0102               	movlb	2	; () banked
 27378  00981C  51E1               	movf	_TMR5_InterruptHandler& (0+255),w,b
 27379  00981E  11E2               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 27380  009820  B4D8               	btfsc	status,2,c
 27381  009822  0012               	return	
 27382                           
 27383                           ; BSR set to: 2
 27384                           ;mcc_generated_files/tmr5.c: 172:     {;mcc_generated_files/tmr5.c: 173:         TMR5_In
      +                          terruptHandler();
 27385  009824  D801               	call	i2u2126_48
 27386  009826  0012               	return	
 27387  009828                     i2u2126_48:
 27388  009828  0005               	push	
 27389  00982A  6EFA               	movwf	pclath,c
 27390  00982C  51E1               	movf	_TMR5_InterruptHandler& (0+255),w,b
 27391  00982E  6EFD               	movwf	tosl,c
 27392  009830  51E2               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 27393  009832  6EFE               	movwf	tosh,c
 27394  009834  6AFF               	clrf	tosu,c
 27395  009836  50FA               	movf	pclath,w,c
 27396  009838  0012               	return		;indir
 27397  00983A                     __end_of_TMR5_ISR:
 27398                           	opt callstack 0
 27399                           
 27400 ;; *************** function _TMR5_WriteTimer *****************
 27401 ;; Defined at:
 27402 ;;		line 127 in file "mcc_generated_files/tmr5.c"
 27403 ;; Parameters:    Size  Location     Type
 27404 ;;  timerVal        2    0[COMRAM] unsigned short 
 27405 ;; Auto vars:     Size  Location     Type
 27406 ;;		None
 27407 ;; Return value:  Size  Location     Type
 27408 ;;                  1    wreg      void 
 27409 ;; Registers used:
 27410 ;;		None
 27411 ;; Tracked objects:
 27412 ;;		On entry : 3F/39
 27413 ;;		On exit  : 3F/39
 27414 ;;		Unchanged: 3E/0
 27415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27416 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27419 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27420 ;;Total ram usage:        2 bytes
 27421 ;; Hardware stack levels used:    1
 27422 ;; This function calls:
 27423 ;;		Nothing
 27424 ;; This function is called by:
 27425 ;;		_TMR5_ISR
 27426 ;; This function uses a non-reentrant model
 27427 ;;
 27428                           
 27429                           	psect	text216
 27430  009CA0                     __ptext216:
 27431                           	opt callstack 0
 27432  009CA0                     _TMR5_WriteTimer:
 27433                           	opt callstack 15
 27434                           
 27435                           ; BSR set to: 57
 27436                           ;mcc_generated_files/tmr5.c: 127: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 128: {;mcc_generated_files/tmr5.c: 129:     if (T5CONbits.NOT_SYNC == 1)
 27437                           
 27438                           ;incstack = 0
 27439  009CA0  A49A               	btfss	154,2,c	;volatile
 27440  009CA2  D009               	goto	i2l750
 27441                           
 27442                           ; BSR set to: 57
 27443                           ;mcc_generated_files/tmr5.c: 130:     {;mcc_generated_files/tmr5.c: 132:         T5CONbi
      +                          ts.TMR5ON = 0;
 27444  009CA4  909A               	bcf	154,0,c	;volatile
 27445                           
 27446                           ;mcc_generated_files/tmr5.c: 135:         TMR5H = (timerVal >> 8);
 27447  009CA6  0060  F00B  FF99   	movff	TMR5_WriteTimer@timerVal+1,16281	;volatile
 27448                           
 27449                           ;mcc_generated_files/tmr5.c: 136:         TMR5L = timerVal;
 27450  009CAC  0060  F007  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 27451                           
 27452                           ;mcc_generated_files/tmr5.c: 139:         T5CONbits.TMR5ON =1;
 27453  009CB2  809A               	bsf	154,0,c	;volatile
 27454                           
 27455                           ;mcc_generated_files/tmr5.c: 140:     }
 27456  009CB4  0012               	return	
 27457  009CB6                     i2l750:
 27458                           
 27459                           ; BSR set to: 57
 27460                           ;mcc_generated_files/tmr5.c: 142:     {;mcc_generated_files/tmr5.c: 144:         TMR5H =
      +                           (timerVal >> 8);
 27461  009CB6  0060  F00B  FF99   	movff	TMR5_WriteTimer@timerVal+1,16281	;volatile
 27462                           
 27463                           ;mcc_generated_files/tmr5.c: 145:         TMR5L = timerVal;
 27464  009CBC  0060  F007  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 27465                           
 27466                           ; BSR set to: 57
 27467  009CC2  0012               	return		;funcret
 27468  009CC4                     __end_of_TMR5_WriteTimer:
 27469                           	opt callstack 0
 27470                           
 27471 ;; *************** function _AlarmHandler *****************
 27472 ;; Defined at:
 27473 ;;		line 557 in file "alarm.c"
 27474 ;; Parameters:    Size  Location     Type
 27475 ;;		None
 27476 ;; Auto vars:     Size  Location     Type
 27477 ;;		None
 27478 ;; Return value:  Size  Location     Type
 27479 ;;                  1    wreg      void 
 27480 ;; Registers used:
 27481 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27482 ;; Tracked objects:
 27483 ;;		On entry : 3F/2
 27484 ;;		On exit  : 3F/2
 27485 ;;		Unchanged: 0/0
 27486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27489 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27490 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27491 ;;Total ram usage:        2 bytes
 27492 ;; Hardware stack levels used:    1
 27493 ;; Hardware stack levels required when called:    9
 27494 ;; This function calls:
 27495 ;;		i2_AnyAlarm
 27496 ;;		i2_printf
 27497 ;; This function is called by:
 27498 ;;		_AlarmInit
 27499 ;;		_TMR5_ISR
 27500 ;; This function uses a non-reentrant model
 27501 ;;
 27502                           
 27503                           	psect	text217
 27504  008834                     __ptext217:
 27505                           	opt callstack 0
 27506  008834                     _AlarmHandler:
 27507                           	opt callstack 6
 27508                           
 27509                           ; BSR set to: 2
 27510                           ;alarm.c: 560:     if (muteSec && AnyAlarm()) muteSec--;
 27511                           
 27512                           ; BSR set to: 57
 27513                           ;incstack = 0
 27514  008834  0101               	movlb	1	; () banked
 27515  008836  51EB               	movf	_muteSec& (0+255),w,b
 27516  008838  11EC               	iorwf	(_muteSec+1)& (0+255),w,b
 27517  00883A  B4D8               	btfsc	status,2,c
 27518  00883C  D00A               	goto	i2l21005
 27519                           
 27520                           ; BSR set to: 1
 27521  00883E  ECAA  F04A         	call	i2_AnyAlarm	;wreg free
 27522  008842  0900               	iorlw	0
 27523  008844  B4D8               	btfsc	status,2,c
 27524  008846  D005               	goto	i2l21005
 27525  008848  0101               	movlb	1	; () banked
 27526  00884A  07EB               	decf	_muteSec& (0+255),f,b
 27527  00884C  A0D8               	btfss	status,0,c
 27528  00884E  07EC               	decf	(_muteSec+1)& (0+255),f,b
 27529  008850  D005               	goto	i2l21007
 27530  008852                     i2l21005:
 27531  008852  0E00               	movlw	0
 27532  008854  0101               	movlb	1	; () banked
 27533  008856  6FEC               	movwf	(_muteSec+1)& (0+255),b
 27534  008858  0E00               	movlw	0
 27535  00885A  6FEB               	movwf	_muteSec& (0+255),b
 27536  00885C                     i2l21007:
 27537                           
 27538                           ; BSR set to: 1
 27539                           ;alarm.c: 562:     if (histSec) histSec--;
 27540  00885C  51E9               	movf	_histSec& (0+255),w,b
 27541  00885E  11EA               	iorwf	(_histSec+1)& (0+255),w,b
 27542  008860  B4D8               	btfsc	status,2,c
 27543  008862  D003               	goto	i2l21011
 27544                           
 27545                           ; BSR set to: 1
 27546  008864  07E9               	decf	_histSec& (0+255),f,b
 27547  008866  A0D8               	btfss	status,0,c
 27548  008868  07EA               	decf	(_histSec+1)& (0+255),f,b
 27549  00886A                     i2l21011:
 27550                           
 27551                           ; BSR set to: 1
 27552                           ;alarm.c: 564:     alarmCheck = 1;
 27553  00886A  0E01               	movlw	1
 27554  00886C  0102               	movlb	2	; () banked
 27555  00886E  6FA3               	movwf	_alarmCheck& (0+255),b
 27556                           
 27557                           ; BSR set to: 2
 27558                           ;alarm.c: 566:     static int16_t cnt = 0;;alarm.c: 567:     if (cnt==0) printf("A\r\n")
      +                          ;
 27559  008870  5172               	movf	AlarmHandler@cnt& (0+255),w,b
 27560  008872  1173               	iorwf	(AlarmHandler@cnt+1)& (0+255),w,b
 27561  008874  A4D8               	btfss	status,2,c
 27562  008876  D007               	goto	i2l21017
 27563                           
 27564                           ; BSR set to: 2
 27565  008878  0EE8               	movlw	low STR_30
 27566  00887A  0100               	movlb	0	; () banked
 27567  00887C  6F77               	movwf	i2printf@fmt& (0+255),b
 27568  00887E  0EFF               	movlw	high STR_30
 27569  008880  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 27570  008882  EC07  F04E         	call	i2_printf	;wreg free
 27571  008886                     i2l21017:
 27572                           
 27573                           ; BSR set to: 2
 27574                           ;alarm.c: 568:     cnt = (cnt+1)%2;
 27575  008886  0E01               	movlw	1
 27576  008888  2572               	addwf	AlarmHandler@cnt& (0+255),w,b
 27577  00888A  6E5B               	movwf	??_AlarmHandler^0,c
 27578  00888C  0E00               	movlw	0
 27579  00888E  2173               	addwfc	(AlarmHandler@cnt+1)& (0+255),w,b
 27580  008890  6E5C               	movwf	(??_AlarmHandler+1)^0,c
 27581  008892  0E01               	movlw	1
 27582  008894  145B               	andwf	??_AlarmHandler^0,w,c
 27583  008896  6F72               	movwf	AlarmHandler@cnt& (0+255),b
 27584  008898  6B73               	clrf	(AlarmHandler@cnt+1)& (0+255),b
 27585                           
 27586                           ; BSR set to: 2
 27587  00889A  0012               	return		;funcret
 27588  00889C                     __end_of_AlarmHandler:
 27589                           	opt callstack 0
 27590                           
 27591 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 27592 ;; Defined at:
 27593 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 27594 ;; Parameters:    Size  Location     Type
 27595 ;;		None
 27596 ;; Auto vars:     Size  Location     Type
 27597 ;;		None
 27598 ;; Return value:  Size  Location     Type
 27599 ;;                  1    wreg      void 
 27600 ;; Registers used:
 27601 ;;		None
 27602 ;; Tracked objects:
 27603 ;;		On entry : 3F/2
 27604 ;;		On exit  : 3F/2
 27605 ;;		Unchanged: 3F/0
 27606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27611 ;;Total ram usage:        0 bytes
 27612 ;; Hardware stack levels used:    1
 27613 ;; This function calls:
 27614 ;;		Nothing
 27615 ;; This function is called by:
 27616 ;;		_TMR5_Initialize
 27617 ;;		_TMR5_ISR
 27618 ;; This function uses a non-reentrant model
 27619 ;;
 27620                           
 27621                           	psect	text218
 27622  00A6F2                     __ptext218:
 27623                           	opt callstack 0
 27624  00A6F2                     _TMR5_DefaultInterruptHandler:
 27625                           	opt callstack 15
 27626                           
 27627                           ; BSR set to: 2
 27628                           
 27629                           ; BSR set to: 2
 27630                           ;incstack = 0
 27631  00A6F2  0012               	return		;funcret
 27632  00A6F4                     __end_of_TMR5_DefaultInterruptHandler:
 27633                           	opt callstack 0
 27634                           
 27635 ;; *************** function _TMR4_ISR *****************
 27636 ;; Defined at:
 27637 ;;		line 165 in file "mcc_generated_files/tmr4.c"
 27638 ;; Parameters:    Size  Location     Type
 27639 ;;		None
 27640 ;; Auto vars:     Size  Location     Type
 27641 ;;		None
 27642 ;; Return value:  Size  Location     Type
 27643 ;;                  1    wreg      void 
 27644 ;; Registers used:
 27645 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27646 ;; Tracked objects:
 27647 ;;		On entry : 3F/39
 27648 ;;		On exit  : 0/0
 27649 ;;		Unchanged: 0/0
 27650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27655 ;;Total ram usage:        0 bytes
 27656 ;; Hardware stack levels used:    1
 27657 ;; Hardware stack levels required when called:   11
 27658 ;; This function calls:
 27659 ;;		Absolute function
 27660 ;;		_BuzzerHandler
 27661 ;;		_BuzzerTestHandler
 27662 ;;		_TMR4_DefaultInterruptHandler
 27663 ;; This function is called by:
 27664 ;;		_INTERRUPT_InterruptManager
 27665 ;; This function uses a non-reentrant model
 27666 ;;
 27667                           
 27668                           	psect	text219
 27669  009D2E                     __ptext219:
 27670                           	opt callstack 0
 27671  009D2E                     _TMR4_ISR:
 27672                           	opt callstack 5
 27673                           
 27674                           ; BSR set to: 57
 27675                           ;mcc_generated_files/tmr4.c: 169:     PIR7bits.TMR4IF = 0;
 27676                           
 27677                           ; BSR set to: 2
 27678                           ;incstack = 0
 27679  009D2E  91A7               	bcf	167,0,b	;volatile
 27680                           
 27681                           ; BSR set to: 57
 27682                           ;mcc_generated_files/tmr4.c: 171:     if(TMR4_InterruptHandler)
 27683  009D30  0102               	movlb	2	; () banked
 27684  009D32  51ED               	movf	_TMR4_InterruptHandler& (0+255),w,b
 27685  009D34  11EE               	iorwf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 27686  009D36  B4D8               	btfsc	status,2,c
 27687  009D38  0012               	return	
 27688                           
 27689                           ; BSR set to: 2
 27690                           ;mcc_generated_files/tmr4.c: 172:     {;mcc_generated_files/tmr4.c: 173:         TMR4_In
      +                          terruptHandler();
 27691  009D3A  D801               	call	i2u2128_48
 27692  009D3C  0012               	return	
 27693  009D3E                     i2u2128_48:
 27694  009D3E  0005               	push	
 27695  009D40  6EFA               	movwf	pclath,c
 27696  009D42  51ED               	movf	_TMR4_InterruptHandler& (0+255),w,b
 27697  009D44  6EFD               	movwf	tosl,c
 27698  009D46  51EE               	movf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 27699  009D48  6EFE               	movwf	tosh,c
 27700  009D4A  6AFF               	clrf	tosu,c
 27701  009D4C  50FA               	movf	pclath,w,c
 27702  009D4E  0012               	return		;indir
 27703  009D50                     __end_of_TMR4_ISR:
 27704                           	opt callstack 0
 27705                           
 27706 ;; *************** function _BuzzerTestHandler *****************
 27707 ;; Defined at:
 27708 ;;		line 82 in file "buzzer.c"
 27709 ;; Parameters:    Size  Location     Type
 27710 ;;		None
 27711 ;; Auto vars:     Size  Location     Type
 27712 ;;		None
 27713 ;; Return value:  Size  Location     Type
 27714 ;;                  1    wreg      void 
 27715 ;; Registers used:
 27716 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27717 ;; Tracked objects:
 27718 ;;		On entry : 3F/2
 27719 ;;		On exit  : 3F/39
 27720 ;;		Unchanged: 0/0
 27721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27726 ;;Total ram usage:        0 bytes
 27727 ;; Hardware stack levels used:    1
 27728 ;; Hardware stack levels required when called:    9
 27729 ;; This function calls:
 27730 ;;		i2_BuzzerOff
 27731 ;;		i2_printf
 27732 ;; This function is called by:
 27733 ;;		_BuzzerTest
 27734 ;;		_TMR4_ISR
 27735 ;; This function uses a non-reentrant model
 27736 ;;
 27737                           
 27738                           	psect	text220
 27739  009954                     __ptext220:
 27740                           	opt callstack 0
 27741  009954                     _BuzzerTestHandler:
 27742                           	opt callstack 6
 27743                           
 27744                           ; BSR set to: 2
 27745                           ;buzzer.c: 84:     if (on) {
 27746                           
 27747                           ;incstack = 0
 27748  009954  0100               	movlb	0	; () banked
 27749  009956  51F9               	movf	_on& (0+255),w,b
 27750  009958  B4D8               	btfsc	status,2,c
 27751  00995A  D010               	goto	i2l20729
 27752                           
 27753                           ; BSR set to: 0
 27754                           ;buzzer.c: 86:         if (detected) {
 27755  00995C  51F8               	movf	_detected& (0+255),w,b
 27756  00995E  B4D8               	btfsc	status,2,c
 27757  009960  D007               	goto	i2l20727
 27758                           
 27759                           ; BSR set to: 0
 27760                           ;buzzer.c: 88:             printf("_DB_");
 27761  009962  0EC6               	movlw	low STR_15
 27762  009964  6F77               	movwf	i2printf@fmt& (0+255),b
 27763  009966  0EFF               	movlw	high STR_15
 27764  009968  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 27765  00996A  EC07  F04E         	call	i2_printf	;wreg free
 27766                           
 27767                           ;buzzer.c: 89:         } else {
 27768  00996E  D006               	goto	i2l20729
 27769  009970                     i2l20727:
 27770                           
 27771                           ; BSR set to: 0
 27772                           ;buzzer.c: 91:             printf("_EB_");
 27773  009970  0ECB               	movlw	low STR_16
 27774  009972  6F77               	movwf	i2printf@fmt& (0+255),b
 27775  009974  0EFF               	movlw	high STR_16
 27776  009976  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 27777  009978  EC07  F04E         	call	i2_printf	;wreg free
 27778  00997C                     i2l20729:
 27779                           
 27780                           ;buzzer.c: 94:     BuzzerOff();
 27781  00997C  ECD7  F050         	call	i2_BuzzerOff	;wreg free
 27782                           
 27783                           ; BSR set to: 57
 27784  009980  0012               	return		;funcret
 27785  009982                     __end_of_BuzzerTestHandler:
 27786                           	opt callstack 0
 27787                           
 27788 ;; *************** function _BuzzerHandler *****************
 27789 ;; Defined at:
 27790 ;;		line 77 in file "buzzer.c"
 27791 ;; Parameters:    Size  Location     Type
 27792 ;;		None
 27793 ;; Auto vars:     Size  Location     Type
 27794 ;;		None
 27795 ;; Return value:  Size  Location     Type
 27796 ;;                  1    wreg      void 
 27797 ;; Registers used:
 27798 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27799 ;; Tracked objects:
 27800 ;;		On entry : 3F/2
 27801 ;;		On exit  : 4/0
 27802 ;;		Unchanged: 0/0
 27803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27808 ;;Total ram usage:        0 bytes
 27809 ;; Hardware stack levels used:    1
 27810 ;; Hardware stack levels required when called:   10
 27811 ;; This function calls:
 27812 ;;		i2_BuzzerTask
 27813 ;; This function is called by:
 27814 ;;		_BuzzerTask
 27815 ;;		_BuzzerInit
 27816 ;;		i2_BuzzerTask
 27817 ;;		_TMR4_ISR
 27818 ;; This function uses a non-reentrant model
 27819 ;;
 27820                           
 27821                           	psect	text221
 27822  00A61C                     __ptext221:
 27823                           	opt callstack 0
 27824  00A61C                     _BuzzerHandler:
 27825                           	opt callstack 5
 27826                           
 27827                           ; BSR set to: 2
 27828                           ;buzzer.c: 79:     BuzzerTask();
 27829                           
 27830                           ; BSR set to: 57
 27831                           ;incstack = 0
 27832  00A61C  EC19  F013         	call	i2_BuzzerTask	;wreg free
 27833  00A620  0012               	return		;funcret
 27834  00A622                     __end_of_BuzzerHandler:
 27835                           	opt callstack 0
 27836                           
 27837 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 27838 ;; Defined at:
 27839 ;;		line 182 in file "mcc_generated_files/tmr4.c"
 27840 ;; Parameters:    Size  Location     Type
 27841 ;;		None
 27842 ;; Auto vars:     Size  Location     Type
 27843 ;;		None
 27844 ;; Return value:  Size  Location     Type
 27845 ;;                  1    wreg      void 
 27846 ;; Registers used:
 27847 ;;		None
 27848 ;; Tracked objects:
 27849 ;;		On entry : 3F/2
 27850 ;;		On exit  : 3F/2
 27851 ;;		Unchanged: 3F/0
 27852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27857 ;;Total ram usage:        0 bytes
 27858 ;; Hardware stack levels used:    1
 27859 ;; This function calls:
 27860 ;;		Nothing
 27861 ;; This function is called by:
 27862 ;;		_TMR4_Initialize
 27863 ;;		_TMR4_ISR
 27864 ;; This function uses a non-reentrant model
 27865 ;;
 27866                           
 27867                           	psect	text222
 27868  00A6F4                     __ptext222:
 27869                           	opt callstack 0
 27870  00A6F4                     _TMR4_DefaultInterruptHandler:
 27871                           	opt callstack 15
 27872                           
 27873                           ; BSR set to: 2
 27874                           
 27875                           ;incstack = 0
 27876  00A6F4  0012               	return		;funcret
 27877  00A6F6                     __end_of_TMR4_DefaultInterruptHandler:
 27878                           	opt callstack 0
 27879                           
 27880 ;; *************** function i2_BuzzerTask *****************
 27881 ;; Defined at:
 27882 ;;		line 132 in file "buzzer.c"
 27883 ;; Parameters:    Size  Location     Type
 27884 ;;		None
 27885 ;; Auto vars:     Size  Location     Type
 27886 ;;		None
 27887 ;; Return value:  Size  Location     Type
 27888 ;;                  1    wreg      void 
 27889 ;; Registers used:
 27890 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27891 ;; Tracked objects:
 27892 ;;		On entry : 3F/2
 27893 ;;		On exit  : 4/0
 27894 ;;		Unchanged: 0/0
 27895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27898 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27899 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27900 ;;Total ram usage:        2 bytes
 27901 ;; Hardware stack levels used:    1
 27902 ;; Hardware stack levels required when called:    9
 27903 ;; This function calls:
 27904 ;;		i2_BuzzerOff
 27905 ;;		i2_BuzzerOn
 27906 ;;		i2_ClearMonitorFailAlarm
 27907 ;;		i2_SetMonitorFailAlarm
 27908 ;;		i2_TMR4_Period8BitSet
 27909 ;;		i2_TMR4_SetInterruptHandler
 27910 ;;		i2_TMR4_Start
 27911 ;;		i2_TMR4_Stop
 27912 ;;		i2_printf
 27913 ;; This function is called by:
 27914 ;;		_BuzzerHandler
 27915 ;; This function uses a non-reentrant model
 27916 ;;
 27917                           
 27918                           	psect	text223
 27919  002632                     __ptext223:
 27920                           	opt callstack 0
 27921  002632                     i2_BuzzerTask:
 27922                           	opt callstack 5
 27923                           
 27924                           ; BSR set to: 2
 27925                           ;buzzer.c: 133:     static int noDetections = 0;;buzzer.c: 134:     if (on) {
 27926                           
 27927                           ; BSR set to: 2
 27928                           ;incstack = 0
 27929  002632  0100               	movlb	0	; () banked
 27930  002634  51F9               	movf	_on& (0+255),w,b
 27931  002636  B4D8               	btfsc	status,2,c
 27932  002638  D026               	goto	i2l19873
 27933                           
 27934                           ; BSR set to: 0
 27935                           ;buzzer.c: 136:         if (detected) {
 27936  00263A  51F8               	movf	_detected& (0+255),w,b
 27937  00263C  B4D8               	btfsc	status,2,c
 27938  00263E  D00E               	goto	i2l19865
 27939                           
 27940                           ; BSR set to: 0
 27941                           ;buzzer.c: 138:             ClearMonitorFailAlarm();
 27942  002640  ECC5  F052         	call	i2_ClearMonitorFailAlarm	;wreg free
 27943                           
 27944                           ; BSR set to: 2
 27945                           ;buzzer.c: 139:             noDetections = 0;
 27946  002644  0E00               	movlw	0
 27947  002646  6F83               	movwf	(BuzzerTask@noDetections+1)& (0+255),b
 27948  002648  0E00               	movlw	0
 27949  00264A  6F82               	movwf	BuzzerTask@noDetections& (0+255),b
 27950                           
 27951                           ; BSR set to: 2
 27952                           ;buzzer.c: 140:             printf("_DB_");
 27953  00264C  0EC6               	movlw	low STR_15
 27954  00264E  0100               	movlb	0	; () banked
 27955  002650  6F77               	movwf	i2printf@fmt& (0+255),b
 27956  002652  0EFF               	movlw	high STR_15
 27957  002654  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 27958  002656  EC07  F04E         	call	i2_printf	;wreg free
 27959                           
 27960                           ;buzzer.c: 141:         } else {
 27961  00265A  D015               	goto	i2l19873
 27962  00265C                     i2l19865:
 27963                           
 27964                           ; BSR set to: 0
 27965                           ;buzzer.c: 144:             if (noDetections>=3) {
 27966  00265C  0102               	movlb	2	; () banked
 27967  00265E  BF83               	btfsc	(BuzzerTask@noDetections+1)& (0+255),7,b
 27968  002660  D009               	goto	i2l19869
 27969  002662  5183               	movf	(BuzzerTask@noDetections+1)& (0+255),w,b
 27970  002664  E104               	bnz	i2u1923_40
 27971  002666  0E03               	movlw	3
 27972  002668  5D82               	subwf	BuzzerTask@noDetections& (0+255),w,b
 27973  00266A  A0D8               	btfss	status,0,c
 27974  00266C  D003               	goto	i2l19869
 27975  00266E                     i2u1923_40:
 27976                           
 27977                           ; BSR set to: 2
 27978                           ;buzzer.c: 145:                 SetMonitorFailAlarm();
 27979  00266E  EC11  F053         	call	i2_SetMonitorFailAlarm	;wreg free
 27980                           
 27981                           ;buzzer.c: 146:             } else {
 27982  002672  D002               	goto	i2l19871
 27983  002674                     i2l19869:
 27984                           
 27985                           ; BSR set to: 2
 27986                           ;buzzer.c: 147:                 noDetections ++;
 27987  002674  4B82               	infsnz	BuzzerTask@noDetections& (0+255),f,b
 27988  002676  2B83               	incf	(BuzzerTask@noDetections+1)& (0+255),f,b
 27989  002678                     i2l19871:
 27990                           
 27991                           ; BSR set to: 2
 27992                           ;buzzer.c: 149:             printf("_EB_");
 27993  002678  0ECB               	movlw	low STR_16
 27994  00267A  0100               	movlb	0	; () banked
 27995  00267C  6F77               	movwf	i2printf@fmt& (0+255),b
 27996  00267E  0EFF               	movlw	high STR_16
 27997  002680  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 27998  002682  EC07  F04E         	call	i2_printf	;wreg free
 27999  002686                     i2l19873:
 28000                           
 28001                           ;buzzer.c: 152:     BuzzerOff();
 28002  002686  ECD7  F050         	call	i2_BuzzerOff	;wreg free
 28003                           
 28004                           ; BSR set to: 57
 28005                           ;buzzer.c: 153:     TMR4_Stop();
 28006  00268A  EC67  F053         	call	i2_TMR4_Stop	;wreg free
 28007                           
 28008                           ; BSR set to: 57
 28009                           ;buzzer.c: 154:     TMR4_SetInterruptHandler(BuzzerHandler);
 28010  00268E  0E1C               	movlw	low _BuzzerHandler
 28011  002690  6E01               	movwf	i2TMR4_SetInterruptHandler@InterruptHandler^0,c
 28012  002692  0EA6               	movlw	high _BuzzerHandler
 28013  002694  6E02               	movwf	(i2TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
 28014  002696  ECA5  F051         	call	i2_TMR4_SetInterruptHandler	;wreg free
 28015                           
 28016                           ;buzzer.c: 155:     switch(alarmState) {
 28017  00269A  D18A               	goto	i2l20141
 28018  00269C                     i2l19879:
 28019                           
 28020                           ; BSR set to: 1
 28021                           ;buzzer.c: 159:                     BuzzerOn(0xBD);
 28022  00269C  0EBD               	movlw	189
 28023  00269E  EC97  F04F         	call	i2_BuzzerOn
 28024                           
 28025                           ; BSR set to: 57
 28026                           ;buzzer.c: 160:                     TMR4_Period8BitSet(51);
 28027  0026A2  0E33               	movlw	51
 28028  0026A4  EC36  F052         	call	i2_TMR4_Period8BitSet
 28029  0026A8                     i2l19883:
 28030                           
 28031                           ;buzzer.c: 161:                     alarmStep++;
 28032  0026A8  0101               	movlb	1	; () banked
 28033  0026AA  2BEF               	incf	_alarmStep& (0+255),f,b
 28034  0026AC                     i2l19885:
 28035                           
 28036                           ; BSR set to: 1
 28037                           ;buzzer.c: 162:                     TMR4_Start();
 28038  0026AC  EC65  F053         	call	i2_TMR4_Start	;wreg free
 28039                           
 28040                           ;buzzer.c: 163:                     break;
 28041  0026B0  0012               	return	
 28042  0026B2                     i2l19887:
 28043                           
 28044                           ; BSR set to: 1
 28045                           ;buzzer.c: 165:                     TMR4_Period8BitSet(51);
 28046  0026B2  0E33               	movlw	51
 28047  0026B4  EC36  F052         	call	i2_TMR4_Period8BitSet
 28048  0026B8  D7F7               	goto	i2l19883
 28049  0026BA                     i2l19893:
 28050                           
 28051                           ; BSR set to: 1
 28052                           ;buzzer.c: 170:                     BuzzerOn(0xEE);
 28053  0026BA  0EEE               	movlw	238
 28054  0026BC  EC97  F04F         	call	i2_BuzzerOn
 28055                           
 28056                           ; BSR set to: 57
 28057                           ;buzzer.c: 171:                     TMR4_Period8BitSet(51);
 28058  0026C0  0E33               	movlw	51
 28059  0026C2  EC36  F052         	call	i2_TMR4_Period8BitSet
 28060  0026C6  D7F0               	goto	i2l19883
 28061  0026C8                     i2l2116:
 28062                           
 28063                           ; BSR set to: 1
 28064                           ;buzzer.c: 190:                     TMR4_Period8BitSet(255);
 28065                           
 28066                           ; BSR set to: 1
 28067  0026C8  0EFF               	movlw	255
 28068  0026CA  EC36  F052         	call	i2_TMR4_Period8BitSet
 28069  0026CE  D7EC               	goto	i2l19883
 28070  0026D0                     i2l19907:
 28071                           
 28072                           ; BSR set to: 1
 28073                           ;buzzer.c: 195:                     TMR4_Period8BitSet(255);
 28074  0026D0  0EFF               	movlw	255
 28075  0026D2  EC36  F052         	call	i2_TMR4_Period8BitSet
 28076  0026D6                     i2l19909:
 28077                           
 28078                           ;buzzer.c: 196:                     alarmStep=0;
 28079  0026D6  0E00               	movlw	0
 28080  0026D8  0101               	movlb	1	; () banked
 28081  0026DA  6FEF               	movwf	_alarmStep& (0+255),b
 28082  0026DC  D7E7               	goto	i2l19885
 28083  0026DE                     i2l19913:
 28084                           
 28085                           ; BSR set to: 1
 28086                           ;buzzer.c: 200:                     TMR4_Period8BitSet(51);
 28087  0026DE  0E33               	movlw	51
 28088  0026E0  EC36  F052         	call	i2_TMR4_Period8BitSet
 28089  0026E4  D7F8               	goto	i2l19909
 28090  0026E6                     i2l19921:
 28091                           
 28092                           ; BSR set to: 0
 28093  0026E6  0101               	movlb	1	; () banked
 28094  0026E8  51EF               	movf	_alarmStep& (0+255),w,b
 28095  0026EA  6E5B               	movwf	??i2_BuzzerTask^0,c
 28096  0026EC  6A5C               	clrf	(??i2_BuzzerTask+1)^0,c
 28097                           
 28098                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28099                           ; Switch size 1, requested type "simple"
 28100                           ; Number of cases is 1, Range of values is 0 to 0
 28101                           ; switch strategies available:
 28102                           ; Name         Instructions Cycles
 28103                           ; simple_byte            4     3 (average)
 28104                           ;	Chosen strategy is simple_byte
 28105  0026EE  505C               	movf	(??i2_BuzzerTask+1)^0,w,c
 28106  0026F0  0A00               	xorlw	0	; case 0
 28107  0026F2  A4D8               	btfss	status,2,c
 28108  0026F4  D7F4               	goto	i2l19913
 28109                           
 28110                           ; BSR set to: 1
 28111                           ; Switch size 1, requested type "simple"
 28112                           ; Number of cases is 19, Range of values is 0 to 18
 28113                           ; switch strategies available:
 28114                           ; Name         Instructions Cycles
 28115                           ; simple_byte           58    30 (average)
 28116                           ;	Chosen strategy is simple_byte
 28117  0026F6  505B               	movf	??i2_BuzzerTask^0,w,c
 28118  0026F8  0A00               	xorlw	0	; case 0
 28119  0026FA  B4D8               	btfsc	status,2,c
 28120  0026FC  D7CF               	goto	i2l19879
 28121  0026FE  0A01               	xorlw	1	; case 1
 28122  002700  B4D8               	btfsc	status,2,c
 28123  002702  D7D7               	goto	i2l19887
 28124  002704  0A03               	xorlw	3	; case 2
 28125  002706  B4D8               	btfsc	status,2,c
 28126  002708  D7D8               	goto	i2l19893
 28127  00270A  0A01               	xorlw	1	; case 3
 28128  00270C  B4D8               	btfsc	status,2,c
 28129  00270E  D7DC               	goto	i2l2116
 28130  002710  0A07               	xorlw	7	; case 4
 28131  002712  B4D8               	btfsc	status,2,c
 28132  002714  D7D9               	goto	i2l2116
 28133  002716  0A01               	xorlw	1	; case 5
 28134  002718  B4D8               	btfsc	status,2,c
 28135  00271A  D7D6               	goto	i2l2116
 28136  00271C  0A03               	xorlw	3	; case 6
 28137  00271E  B4D8               	btfsc	status,2,c
 28138  002720  D7D3               	goto	i2l2116
 28139  002722  0A01               	xorlw	1	; case 7
 28140  002724  B4D8               	btfsc	status,2,c
 28141  002726  D7D0               	goto	i2l2116
 28142  002728  0A0F               	xorlw	15	; case 8
 28143  00272A  B4D8               	btfsc	status,2,c
 28144  00272C  D7CD               	goto	i2l2116
 28145  00272E  0A01               	xorlw	1	; case 9
 28146  002730  B4D8               	btfsc	status,2,c
 28147  002732  D7CA               	goto	i2l2116
 28148  002734  0A03               	xorlw	3	; case 10
 28149  002736  B4D8               	btfsc	status,2,c
 28150  002738  D7C7               	goto	i2l2116
 28151  00273A  0A01               	xorlw	1	; case 11
 28152  00273C  B4D8               	btfsc	status,2,c
 28153  00273E  D7C4               	goto	i2l2116
 28154  002740  0A07               	xorlw	7	; case 12
 28155  002742  B4D8               	btfsc	status,2,c
 28156  002744  D7C1               	goto	i2l2116
 28157  002746  0A01               	xorlw	1	; case 13
 28158  002748  B4D8               	btfsc	status,2,c
 28159  00274A  D7BE               	goto	i2l2116
 28160  00274C  0A03               	xorlw	3	; case 14
 28161  00274E  B4D8               	btfsc	status,2,c
 28162  002750  D7BB               	goto	i2l2116
 28163  002752  0A01               	xorlw	1	; case 15
 28164  002754  B4D8               	btfsc	status,2,c
 28165  002756  D7B8               	goto	i2l2116
 28166  002758  0A1F               	xorlw	31	; case 16
 28167  00275A  B4D8               	btfsc	status,2,c
 28168  00275C  D7B5               	goto	i2l2116
 28169  00275E  0A01               	xorlw	1	; case 17
 28170  002760  B4D8               	btfsc	status,2,c
 28171  002762  D7B2               	goto	i2l2116
 28172  002764  0A03               	xorlw	3	; case 18
 28173  002766  B4D8               	btfsc	status,2,c
 28174  002768  D7B3               	goto	i2l19907
 28175  00276A  D7B9               	goto	i2l19913
 28176  00276C                     i2l19923:
 28177                           
 28178                           ; BSR set to: 1
 28179                           ;buzzer.c: 209:                     BuzzerOn(0xEE);
 28180  00276C  0EEE               	movlw	238
 28181  00276E  EC97  F04F         	call	i2_BuzzerOn
 28182                           
 28183                           ; BSR set to: 57
 28184                           ;buzzer.c: 210:                     TMR4_Period8BitSet(51);
 28185  002772  0E33               	movlw	51
 28186  002774  EC36  F052         	call	i2_TMR4_Period8BitSet
 28187  002778  D797               	goto	i2l19883
 28188  00277A                     i2l19931:
 28189                           
 28190                           ; BSR set to: 1
 28191                           ;buzzer.c: 215:                     TMR4_Period8BitSet(51);
 28192  00277A  0E33               	movlw	51
 28193  00277C  EC36  F052         	call	i2_TMR4_Period8BitSet
 28194  002780  D793               	goto	i2l19883
 28195  002782                     i2l19937:
 28196                           
 28197                           ; BSR set to: 1
 28198                           ;buzzer.c: 220:                     BuzzerOn(0x8D);
 28199  002782  0E8D               	movlw	141
 28200  002784  EC97  F04F         	call	i2_BuzzerOn
 28201                           
 28202                           ; BSR set to: 57
 28203                           ;buzzer.c: 221:                     TMR4_Period8BitSet(51);
 28204  002788  0E33               	movlw	51
 28205  00278A  EC36  F052         	call	i2_TMR4_Period8BitSet
 28206  00278E  D78C               	goto	i2l19883
 28207  002790                     i2l19945:
 28208                           
 28209                           ; BSR set to: 1
 28210                           ;buzzer.c: 226:                     TMR4_Period8BitSet(51);
 28211  002790  0E33               	movlw	51
 28212  002792  EC36  F052         	call	i2_TMR4_Period8BitSet
 28213  002796  D788               	goto	i2l19883
 28214  002798                     i2l19951:
 28215                           
 28216                           ; BSR set to: 1
 28217                           ;buzzer.c: 231:                     BuzzerOn(0xB2);
 28218  002798  0EB2               	movlw	178
 28219  00279A  EC97  F04F         	call	i2_BuzzerOn
 28220                           
 28221                           ; BSR set to: 57
 28222                           ;buzzer.c: 232:                     TMR4_Period8BitSet(51);
 28223  00279E  0E33               	movlw	51
 28224  0027A0  EC36  F052         	call	i2_TMR4_Period8BitSet
 28225  0027A4  D781               	goto	i2l19883
 28226  0027A6                     i2l2142:
 28227                           
 28228                           ; BSR set to: 1
 28229                           ;buzzer.c: 243:                     TMR4_Period8BitSet(255);
 28230                           
 28231                           ; BSR set to: 1
 28232  0027A6  0EFF               	movlw	255
 28233  0027A8  EC36  F052         	call	i2_TMR4_Period8BitSet
 28234  0027AC  D77D               	goto	i2l19883
 28235  0027AE                     i2l19965:
 28236                           
 28237                           ; BSR set to: 1
 28238                           ;buzzer.c: 248:                     TMR4_Period8BitSet(255);
 28239  0027AE  0EFF               	movlw	255
 28240  0027B0  EC36  F052         	call	i2_TMR4_Period8BitSet
 28241  0027B4  D790               	goto	i2l19909
 28242  0027B6                     i2l19971:
 28243                           
 28244                           ; BSR set to: 1
 28245                           ;buzzer.c: 253:                     TMR4_Period8BitSet(51);
 28246  0027B6  0E33               	movlw	51
 28247  0027B8  EC36  F052         	call	i2_TMR4_Period8BitSet
 28248  0027BC  D78C               	goto	i2l19909
 28249  0027BE                     i2l19979:
 28250                           
 28251                           ; BSR set to: 0
 28252  0027BE  0101               	movlb	1	; () banked
 28253  0027C0  51EF               	movf	_alarmStep& (0+255),w,b
 28254  0027C2  6E5B               	movwf	??i2_BuzzerTask^0,c
 28255  0027C4  6A5C               	clrf	(??i2_BuzzerTask+1)^0,c
 28256                           
 28257                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28258                           ; Switch size 1, requested type "simple"
 28259                           ; Number of cases is 1, Range of values is 0 to 0
 28260                           ; switch strategies available:
 28261                           ; Name         Instructions Cycles
 28262                           ; simple_byte            4     3 (average)
 28263                           ;	Chosen strategy is simple_byte
 28264  0027C6  505C               	movf	(??i2_BuzzerTask+1)^0,w,c
 28265  0027C8  0A00               	xorlw	0	; case 0
 28266  0027CA  A4D8               	btfss	status,2,c
 28267  0027CC  D7F4               	goto	i2l19971
 28268                           
 28269                           ; BSR set to: 1
 28270                           ; Switch size 1, requested type "simple"
 28271                           ; Number of cases is 13, Range of values is 0 to 12
 28272                           ; switch strategies available:
 28273                           ; Name         Instructions Cycles
 28274                           ; simple_byte           40    21 (average)
 28275                           ;	Chosen strategy is simple_byte
 28276  0027CE  505B               	movf	??i2_BuzzerTask^0,w,c
 28277  0027D0  0A00               	xorlw	0	; case 0
 28278  0027D2  B4D8               	btfsc	status,2,c
 28279  0027D4  D7CB               	goto	i2l19923
 28280  0027D6  0A01               	xorlw	1	; case 1
 28281  0027D8  B4D8               	btfsc	status,2,c
 28282  0027DA  D7CF               	goto	i2l19931
 28283  0027DC  0A03               	xorlw	3	; case 2
 28284  0027DE  B4D8               	btfsc	status,2,c
 28285  0027E0  D7D0               	goto	i2l19937
 28286  0027E2  0A01               	xorlw	1	; case 3
 28287  0027E4  B4D8               	btfsc	status,2,c
 28288  0027E6  D7D4               	goto	i2l19945
 28289  0027E8  0A07               	xorlw	7	; case 4
 28290  0027EA  B4D8               	btfsc	status,2,c
 28291  0027EC  D7D5               	goto	i2l19951
 28292  0027EE  0A01               	xorlw	1	; case 5
 28293  0027F0  B4D8               	btfsc	status,2,c
 28294  0027F2  D7D9               	goto	i2l2142
 28295  0027F4  0A03               	xorlw	3	; case 6
 28296  0027F6  B4D8               	btfsc	status,2,c
 28297  0027F8  D7D6               	goto	i2l2142
 28298  0027FA  0A01               	xorlw	1	; case 7
 28299  0027FC  B4D8               	btfsc	status,2,c
 28300  0027FE  D7D3               	goto	i2l2142
 28301  002800  0A0F               	xorlw	15	; case 8
 28302  002802  B4D8               	btfsc	status,2,c
 28303  002804  D7D0               	goto	i2l2142
 28304  002806  0A01               	xorlw	1	; case 9
 28305  002808  B4D8               	btfsc	status,2,c
 28306  00280A  D7CD               	goto	i2l2142
 28307  00280C  0A03               	xorlw	3	; case 10
 28308  00280E  B4D8               	btfsc	status,2,c
 28309  002810  D7CA               	goto	i2l2142
 28310  002812  0A01               	xorlw	1	; case 11
 28311  002814  B4D8               	btfsc	status,2,c
 28312  002816  D7C7               	goto	i2l2142
 28313  002818  0A07               	xorlw	7	; case 12
 28314  00281A  B4D8               	btfsc	status,2,c
 28315  00281C  D7C8               	goto	i2l19965
 28316  00281E  D7CB               	goto	i2l19971
 28317  002820                     i2l19981:
 28318                           
 28319                           ; BSR set to: 1
 28320                           ;buzzer.c: 262:                     BuzzerOn(0xEE);
 28321  002820  0EEE               	movlw	238
 28322  002822  EC97  F04F         	call	i2_BuzzerOn
 28323                           
 28324                           ; BSR set to: 57
 28325                           ;buzzer.c: 263:                     TMR4_Period8BitSet(46);
 28326  002826  0E2E               	movlw	46
 28327  002828  EC36  F052         	call	i2_TMR4_Period8BitSet
 28328  00282C  D73D               	goto	i2l19883
 28329  00282E                     i2l19989:
 28330                           
 28331                           ; BSR set to: 1
 28332                           ;buzzer.c: 268:                     TMR4_Period8BitSet(26);
 28333  00282E  0E1A               	movlw	26
 28334  002830  EC36  F052         	call	i2_TMR4_Period8BitSet
 28335  002834  D739               	goto	i2l19883
 28336  002836                     i2l19995:
 28337                           
 28338                           ; BSR set to: 1
 28339                           ;buzzer.c: 273:                     BuzzerOn(0x8D);
 28340  002836  0E8D               	movlw	141
 28341  002838  EC97  F04F         	call	i2_BuzzerOn
 28342                           
 28343                           ; BSR set to: 57
 28344                           ;buzzer.c: 274:                     TMR4_Period8BitSet(46);
 28345  00283C  0E2E               	movlw	46
 28346  00283E  EC36  F052         	call	i2_TMR4_Period8BitSet
 28347  002842  D732               	goto	i2l19883
 28348  002844                     i2l20003:
 28349                           
 28350                           ; BSR set to: 1
 28351                           ;buzzer.c: 279:                     TMR4_Period8BitSet(26);
 28352  002844  0E1A               	movlw	26
 28353  002846  EC36  F052         	call	i2_TMR4_Period8BitSet
 28354  00284A  D72E               	goto	i2l19883
 28355  00284C                     i2l20009:
 28356                           
 28357                           ; BSR set to: 1
 28358                           ;buzzer.c: 284:                     BuzzerOn(0xB2);
 28359  00284C  0EB2               	movlw	178
 28360  00284E  EC97  F04F         	call	i2_BuzzerOn
 28361                           
 28362                           ; BSR set to: 57
 28363                           ;buzzer.c: 285:                     TMR4_Period8BitSet(46);
 28364  002852  0E2E               	movlw	46
 28365  002854  EC36  F052         	call	i2_TMR4_Period8BitSet
 28366  002858  D727               	goto	i2l19883
 28367  00285A                     i2l20017:
 28368                           
 28369                           ; BSR set to: 1
 28370                           ;buzzer.c: 290:                     TMR4_Period8BitSet(102);
 28371  00285A  0E66               	movlw	102
 28372  00285C  EC36  F052         	call	i2_TMR4_Period8BitSet
 28373  002860  D723               	goto	i2l19883
 28374  002862                     i2l20023:
 28375                           
 28376                           ; BSR set to: 1
 28377                           ;buzzer.c: 295:                     BuzzerOn(0x8D);
 28378  002862  0E8D               	movlw	141
 28379  002864  EC97  F04F         	call	i2_BuzzerOn
 28380                           
 28381                           ; BSR set to: 57
 28382                           ;buzzer.c: 296:                     TMR4_Period8BitSet(46);
 28383  002868  0E2E               	movlw	46
 28384  00286A  EC36  F052         	call	i2_TMR4_Period8BitSet
 28385  00286E  D71C               	goto	i2l19883
 28386  002870                     i2l20031:
 28387                           
 28388                           ; BSR set to: 1
 28389                           ;buzzer.c: 301:                     TMR4_Period8BitSet(26);
 28390  002870  0E1A               	movlw	26
 28391  002872  EC36  F052         	call	i2_TMR4_Period8BitSet
 28392  002876  D718               	goto	i2l19883
 28393  002878                     i2l20037:
 28394                           
 28395                           ; BSR set to: 1
 28396                           ;buzzer.c: 306:                     BuzzerOn(0xB2);
 28397  002878  0EB2               	movlw	178
 28398  00287A  EC97  F04F         	call	i2_BuzzerOn
 28399                           
 28400                           ; BSR set to: 57
 28401                           ;buzzer.c: 307:                     TMR4_Period8BitSet(46);
 28402  00287E  0E2E               	movlw	46
 28403  002880  EC36  F052         	call	i2_TMR4_Period8BitSet
 28404  002884  D711               	goto	i2l19883
 28405  002886                     i2l20045:
 28406                           
 28407                           ; BSR set to: 1
 28408                           ;buzzer.c: 312:                     TMR4_Period8BitSet(255);
 28409  002886  0EFF               	movlw	255
 28410  002888  EC36  F052         	call	i2_TMR4_Period8BitSet
 28411  00288C  D70D               	goto	i2l19883
 28412  00288E                     i2l20051:
 28413                           
 28414                           ; BSR set to: 1
 28415                           ;buzzer.c: 317:                     BuzzerOn(0xEE);
 28416  00288E  0EEE               	movlw	238
 28417  002890  EC97  F04F         	call	i2_BuzzerOn
 28418                           
 28419                           ; BSR set to: 57
 28420                           ;buzzer.c: 318:                     TMR4_Period8BitSet(46);
 28421  002894  0E2E               	movlw	46
 28422  002896  EC36  F052         	call	i2_TMR4_Period8BitSet
 28423  00289A  D706               	goto	i2l19883
 28424  00289C                     i2l20059:
 28425                           
 28426                           ; BSR set to: 1
 28427                           ;buzzer.c: 323:                     TMR4_Period8BitSet(26);
 28428  00289C  0E1A               	movlw	26
 28429  00289E  EC36  F052         	call	i2_TMR4_Period8BitSet
 28430  0028A2  D702               	goto	i2l19883
 28431  0028A4                     i2l20065:
 28432                           
 28433                           ; BSR set to: 1
 28434                           ;buzzer.c: 328:                     BuzzerOn(0x8D);
 28435  0028A4  0E8D               	movlw	141
 28436  0028A6  EC97  F04F         	call	i2_BuzzerOn
 28437                           
 28438                           ; BSR set to: 57
 28439                           ;buzzer.c: 329:                     TMR4_Period8BitSet(46);
 28440  0028AA  0E2E               	movlw	46
 28441  0028AC  EC36  F052         	call	i2_TMR4_Period8BitSet
 28442  0028B0  D6FB               	goto	i2l19883
 28443  0028B2                     i2l20073:
 28444                           
 28445                           ; BSR set to: 1
 28446                           ;buzzer.c: 334:                     TMR4_Period8BitSet(26);
 28447  0028B2  0E1A               	movlw	26
 28448  0028B4  EC36  F052         	call	i2_TMR4_Period8BitSet
 28449  0028B8  D6F7               	goto	i2l19883
 28450  0028BA                     i2l20079:
 28451                           
 28452                           ; BSR set to: 1
 28453                           ;buzzer.c: 339:                     BuzzerOn(0xB2);
 28454  0028BA  0EB2               	movlw	178
 28455  0028BC  EC97  F04F         	call	i2_BuzzerOn
 28456                           
 28457                           ; BSR set to: 57
 28458                           ;buzzer.c: 340:                     TMR4_Period8BitSet(46);
 28459  0028C0  0E2E               	movlw	46
 28460  0028C2  EC36  F052         	call	i2_TMR4_Period8BitSet
 28461  0028C6  D6F0               	goto	i2l19883
 28462  0028C8                     i2l20087:
 28463                           
 28464                           ; BSR set to: 1
 28465                           ;buzzer.c: 345:                     TMR4_Period8BitSet(102);
 28466  0028C8  0E66               	movlw	102
 28467  0028CA  EC36  F052         	call	i2_TMR4_Period8BitSet
 28468  0028CE  D6EC               	goto	i2l19883
 28469  0028D0                     i2l20093:
 28470                           
 28471                           ; BSR set to: 1
 28472                           ;buzzer.c: 350:                     BuzzerOn(0x8D);
 28473  0028D0  0E8D               	movlw	141
 28474  0028D2  EC97  F04F         	call	i2_BuzzerOn
 28475                           
 28476                           ; BSR set to: 57
 28477                           ;buzzer.c: 351:                     TMR4_Period8BitSet(46);
 28478  0028D6  0E2E               	movlw	46
 28479  0028D8  EC36  F052         	call	i2_TMR4_Period8BitSet
 28480  0028DC  D6E5               	goto	i2l19883
 28481  0028DE                     i2l20101:
 28482                           
 28483                           ; BSR set to: 1
 28484                           ;buzzer.c: 356:                     TMR4_Period8BitSet(26);
 28485  0028DE  0E1A               	movlw	26
 28486  0028E0  EC36  F052         	call	i2_TMR4_Period8BitSet
 28487  0028E4  D6E1               	goto	i2l19883
 28488  0028E6                     i2l20107:
 28489                           
 28490                           ; BSR set to: 1
 28491                           ;buzzer.c: 361:                     BuzzerOn(0xB2);
 28492  0028E6  0EB2               	movlw	178
 28493  0028E8  EC97  F04F         	call	i2_BuzzerOn
 28494                           
 28495                           ; BSR set to: 57
 28496                           ;buzzer.c: 362:                     TMR4_Period8BitSet(46);
 28497  0028EC  0E2E               	movlw	46
 28498  0028EE  EC36  F052         	call	i2_TMR4_Period8BitSet
 28499  0028F2  D6DA               	goto	i2l19883
 28500  0028F4                     i2l20115:
 28501                           
 28502                           ; BSR set to: 1
 28503                           ;buzzer.c: 369:                     TMR4_Period8BitSet(255);
 28504  0028F4  0EFF               	movlw	255
 28505  0028F6  EC36  F052         	call	i2_TMR4_Period8BitSet
 28506  0028FA  D6D6               	goto	i2l19883
 28507  0028FC                     i2l20121:
 28508                           
 28509                           ; BSR set to: 1
 28510                           ;buzzer.c: 374:                     TMR4_Period8BitSet(255);
 28511  0028FC  0EFF               	movlw	255
 28512  0028FE  EC36  F052         	call	i2_TMR4_Period8BitSet
 28513  002902  D6E9               	goto	i2l19909
 28514  002904                     i2l20127:
 28515                           
 28516                           ; BSR set to: 1
 28517                           ;buzzer.c: 379:                     TMR4_Period8BitSet(51);
 28518  002904  0E33               	movlw	51
 28519  002906  EC36  F052         	call	i2_TMR4_Period8BitSet
 28520  00290A  D6E5               	goto	i2l19909
 28521  00290C                     i2l20135:
 28522                           
 28523                           ; BSR set to: 0
 28524  00290C  0101               	movlb	1	; () banked
 28525  00290E  51EF               	movf	_alarmStep& (0+255),w,b
 28526  002910  6E5B               	movwf	??i2_BuzzerTask^0,c
 28527  002912  6A5C               	clrf	(??i2_BuzzerTask+1)^0,c
 28528                           
 28529                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28530                           ; Switch size 1, requested type "simple"
 28531                           ; Number of cases is 1, Range of values is 0 to 0
 28532                           ; switch strategies available:
 28533                           ; Name         Instructions Cycles
 28534                           ; simple_byte            4     3 (average)
 28535                           ;	Chosen strategy is simple_byte
 28536  002914  505C               	movf	(??i2_BuzzerTask+1)^0,w,c
 28537  002916  0A00               	xorlw	0	; case 0
 28538  002918  A4D8               	btfss	status,2,c
 28539  00291A  D7F4               	goto	i2l20127
 28540                           
 28541                           ; BSR set to: 1
 28542                           ; Switch size 1, requested type "simple"
 28543                           ; Number of cases is 23, Range of values is 0 to 22
 28544                           ; switch strategies available:
 28545                           ; Name         Instructions Cycles
 28546                           ; simple_byte           70    36 (average)
 28547                           ;	Chosen strategy is simple_byte
 28548  00291C  505B               	movf	??i2_BuzzerTask^0,w,c
 28549  00291E  0A00               	xorlw	0	; case 0
 28550  002920  B4D8               	btfsc	status,2,c
 28551  002922  D77E               	goto	i2l19981
 28552  002924  0A01               	xorlw	1	; case 1
 28553  002926  B4D8               	btfsc	status,2,c
 28554  002928  D782               	goto	i2l19989
 28555  00292A  0A03               	xorlw	3	; case 2
 28556  00292C  B4D8               	btfsc	status,2,c
 28557  00292E  D783               	goto	i2l19995
 28558  002930  0A01               	xorlw	1	; case 3
 28559  002932  B4D8               	btfsc	status,2,c
 28560  002934  D787               	goto	i2l20003
 28561  002936  0A07               	xorlw	7	; case 4
 28562  002938  B4D8               	btfsc	status,2,c
 28563  00293A  D788               	goto	i2l20009
 28564  00293C  0A01               	xorlw	1	; case 5
 28565  00293E  B4D8               	btfsc	status,2,c
 28566  002940  D78C               	goto	i2l20017
 28567  002942  0A03               	xorlw	3	; case 6
 28568  002944  B4D8               	btfsc	status,2,c
 28569  002946  D78D               	goto	i2l20023
 28570  002948  0A01               	xorlw	1	; case 7
 28571  00294A  B4D8               	btfsc	status,2,c
 28572  00294C  D791               	goto	i2l20031
 28573  00294E  0A0F               	xorlw	15	; case 8
 28574  002950  B4D8               	btfsc	status,2,c
 28575  002952  D792               	goto	i2l20037
 28576  002954  0A01               	xorlw	1	; case 9
 28577  002956  B4D8               	btfsc	status,2,c
 28578  002958  D796               	goto	i2l20045
 28579  00295A  0A03               	xorlw	3	; case 10
 28580  00295C  B4D8               	btfsc	status,2,c
 28581  00295E  D797               	goto	i2l20051
 28582  002960  0A01               	xorlw	1	; case 11
 28583  002962  B4D8               	btfsc	status,2,c
 28584  002964  D79B               	goto	i2l20059
 28585  002966  0A07               	xorlw	7	; case 12
 28586  002968  B4D8               	btfsc	status,2,c
 28587  00296A  D79C               	goto	i2l20065
 28588  00296C  0A01               	xorlw	1	; case 13
 28589  00296E  B4D8               	btfsc	status,2,c
 28590  002970  D7A0               	goto	i2l20073
 28591  002972  0A03               	xorlw	3	; case 14
 28592  002974  B4D8               	btfsc	status,2,c
 28593  002976  D7A1               	goto	i2l20079
 28594  002978  0A01               	xorlw	1	; case 15
 28595  00297A  B4D8               	btfsc	status,2,c
 28596  00297C  D7A5               	goto	i2l20087
 28597  00297E  0A1F               	xorlw	31	; case 16
 28598  002980  B4D8               	btfsc	status,2,c
 28599  002982  D7A6               	goto	i2l20093
 28600  002984  0A01               	xorlw	1	; case 17
 28601  002986  B4D8               	btfsc	status,2,c
 28602  002988  D7AA               	goto	i2l20101
 28603  00298A  0A03               	xorlw	3	; case 18
 28604  00298C  B4D8               	btfsc	status,2,c
 28605  00298E  D7AB               	goto	i2l20107
 28606  002990  0A01               	xorlw	1	; case 19
 28607  002992  B4D8               	btfsc	status,2,c
 28608  002994  D7AF               	goto	i2l20115
 28609  002996  0A07               	xorlw	7	; case 20
 28610  002998  B4D8               	btfsc	status,2,c
 28611  00299A  D7AC               	goto	i2l20115
 28612  00299C  0A01               	xorlw	1	; case 21
 28613  00299E  B4D8               	btfsc	status,2,c
 28614  0029A0  D7A9               	goto	i2l20115
 28615  0029A2  0A03               	xorlw	3	; case 22
 28616  0029A4  B4D8               	btfsc	status,2,c
 28617  0029A6  D7AA               	goto	i2l20121
 28618  0029A8  D7AD               	goto	i2l20127
 28619  0029AA                     i2l20137:
 28620                           
 28621                           ; BSR set to: 0
 28622                           ;buzzer.c: 387:             BuzzerOff();
 28623  0029AA  ECD7  F050         	call	i2_BuzzerOff	;wreg free
 28624                           
 28625                           ;buzzer.c: 388:             break;
 28626  0029AE  0012               	return	
 28627  0029B0                     i2l20141:
 28628                           
 28629                           ; BSR set to: 57
 28630  0029B0  0100               	movlb	0	; () banked
 28631  0029B2  51FA               	movf	_alarmState& (0+255),w,b
 28632  0029B4  6E5B               	movwf	??i2_BuzzerTask^0,c
 28633  0029B6  6A5C               	clrf	(??i2_BuzzerTask+1)^0,c
 28634                           
 28635                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28636                           ; Switch size 1, requested type "simple"
 28637                           ; Number of cases is 1, Range of values is 0 to 0
 28638                           ; switch strategies available:
 28639                           ; Name         Instructions Cycles
 28640                           ; simple_byte            4     3 (average)
 28641                           ;	Chosen strategy is simple_byte
 28642  0029B8  505C               	movf	(??i2_BuzzerTask+1)^0,w,c
 28643  0029BA  0A00               	xorlw	0	; case 0
 28644  0029BC  A4D8               	btfss	status,2,c
 28645  0029BE  D7F5               	goto	i2l20137
 28646                           
 28647                           ; BSR set to: 0
 28648                           ; Switch size 1, requested type "simple"
 28649                           ; Number of cases is 4, Range of values is 0 to 4
 28650                           ; switch strategies available:
 28651                           ; Name         Instructions Cycles
 28652                           ; simple_byte           13     7 (average)
 28653                           ;	Chosen strategy is simple_byte
 28654  0029C0  505B               	movf	??i2_BuzzerTask^0,w,c
 28655  0029C2  0A00               	xorlw	0	; case 0
 28656  0029C4  B4D8               	btfsc	status,2,c
 28657  0029C6  D7F1               	goto	i2l20137
 28658  0029C8  0A01               	xorlw	1	; case 1
 28659  0029CA  B4D8               	btfsc	status,2,c
 28660  0029CC  D68C               	goto	i2l19921
 28661  0029CE  0A03               	xorlw	3	; case 2
 28662  0029D0  B4D8               	btfsc	status,2,c
 28663  0029D2  D6F5               	goto	i2l19979
 28664  0029D4  0A06               	xorlw	6	; case 4
 28665  0029D6  B4D8               	btfsc	status,2,c
 28666  0029D8  D799               	goto	i2l20135
 28667  0029DA  D7E7               	goto	i2l20137
 28668  0029DC                     __end_ofi2_BuzzerTask:
 28669                           	opt callstack 0
 28670                           
 28671 ;; *************** function i2_TMR4_Start *****************
 28672 ;; Defined at:
 28673 ;;		line 108 in file "mcc_generated_files/tmr4.c"
 28674 ;; Parameters:    Size  Location     Type
 28675 ;;		None
 28676 ;; Auto vars:     Size  Location     Type
 28677 ;;		None
 28678 ;; Return value:  Size  Location     Type
 28679 ;;                  1    wreg      void 
 28680 ;; Registers used:
 28681 ;;		None
 28682 ;; Tracked objects:
 28683 ;;		On entry : 3C/1
 28684 ;;		On exit  : 3C/0
 28685 ;;		Unchanged: 3C/0
 28686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28691 ;;Total ram usage:        0 bytes
 28692 ;; Hardware stack levels used:    1
 28693 ;; This function calls:
 28694 ;;		Nothing
 28695 ;; This function is called by:
 28696 ;;		i2_BuzzerTask
 28697 ;; This function uses a non-reentrant model
 28698 ;;
 28699                           
 28700                           	psect	text224
 28701  00A6CA                     __ptext224:
 28702                           	opt callstack 0
 28703  00A6CA                     i2_TMR4_Start:
 28704                           	opt callstack 13
 28705                           
 28706                           ;mcc_generated_files/tmr4.c: 111:     T4CONbits.TMR4ON = 1;
 28707                           
 28708                           ;incstack = 0
 28709  00A6CA  8EA0               	bsf	160,7,c	;volatile
 28710  00A6CC  0012               	return		;funcret
 28711  00A6CE                     __end_ofi2_TMR4_Start:
 28712                           	opt callstack 0
 28713                           
 28714 ;; *************** function i2_TMR4_SetInterruptHandler *****************
 28715 ;; Defined at:
 28716 ;;		line 178 in file "mcc_generated_files/tmr4.c"
 28717 ;; Parameters:    Size  Location     Type
 28718 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
 28719 ;;		 -> BuzzerTestHandler(1), BuzzerHandler(1), TMR4_DefaultInterruptHandler(1), 
 28720 ;; Auto vars:     Size  Location     Type
 28721 ;;		None
 28722 ;; Return value:  Size  Location     Type
 28723 ;;                  1    wreg      void 
 28724 ;; Registers used:
 28725 ;;		wreg, status,2, status,0
 28726 ;; Tracked objects:
 28727 ;;		On entry : 3F/39
 28728 ;;		On exit  : 3F/39
 28729 ;;		Unchanged: 3E/0
 28730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28731 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28734 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28735 ;;Total ram usage:        2 bytes
 28736 ;; Hardware stack levels used:    1
 28737 ;; This function calls:
 28738 ;;		Nothing
 28739 ;; This function is called by:
 28740 ;;		i2_BuzzerTask
 28741 ;; This function uses a non-reentrant model
 28742 ;;
 28743                           
 28744                           	psect	text225
 28745  00A34A                     __ptext225:
 28746                           	opt callstack 0
 28747  00A34A                     i2_TMR4_SetInterruptHandler:
 28748                           	opt callstack 13
 28749                           
 28750                           ; BSR set to: 57
 28751                           ;mcc_generated_files/tmr4.c: 179:     TMR4_InterruptHandler = InterruptHandler;
 28752                           
 28753                           ;incstack = 0
 28754  00A34A  0060  F004  F2ED   	movff	i2TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
 28755  00A350  0060  F008  F2EE   	movff	i2TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
 28756                           
 28757                           ; BSR set to: 57
 28758  00A356  0012               	return		;funcret
 28759  00A358                     __end_ofi2_TMR4_SetInterruptHandler:
 28760                           	opt callstack 0
 28761                           
 28762 ;; *************** function i2_TMR4_Period8BitSet *****************
 28763 ;; Defined at:
 28764 ;;		line 155 in file "mcc_generated_files/tmr4.c"
 28765 ;; Parameters:    Size  Location     Type
 28766 ;;  periodVal       1    wreg     unsigned char 
 28767 ;; Auto vars:     Size  Location     Type
 28768 ;;  periodVal       1    0[COMRAM] unsigned char 
 28769 ;; Return value:  Size  Location     Type
 28770 ;;                  1    wreg      void 
 28771 ;; Registers used:
 28772 ;;		wreg
 28773 ;; Tracked objects:
 28774 ;;		On entry : 4/39
 28775 ;;		On exit  : 0/0
 28776 ;;		Unchanged: 0/0
 28777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28779 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28781 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28782 ;;Total ram usage:        1 bytes
 28783 ;; Hardware stack levels used:    1
 28784 ;; This function calls:
 28785 ;;		Nothing
 28786 ;; This function is called by:
 28787 ;;		i2_BuzzerTask
 28788 ;; This function uses a non-reentrant model
 28789 ;;
 28790                           
 28791                           	psect	text226
 28792  00A46C                     __ptext226:
 28793                           	opt callstack 0
 28794  00A46C                     i2_TMR4_Period8BitSet:
 28795                           	opt callstack 13
 28796                           
 28797                           ; BSR set to: 57
 28798                           ;incstack = 0
 28799                           ;i2TMR4_Period8BitSet@periodVal stored from wreg
 28800  00A46C  6E01               	movwf	i2TMR4_Period8BitSet@periodVal^0,c
 28801                           
 28802                           ;mcc_generated_files/tmr4.c: 155: void TMR4_Period8BitSet(uint8_t periodVal);mcc_generat
      +                          ed_files/tmr4.c: 156: {;mcc_generated_files/tmr4.c: 157:    PR4 = periodVal;
 28803  00A46E  0060  F007  FF9F   	movff	i2TMR4_Period8BitSet@periodVal,16287	;volatile
 28804  00A474  0012               	return		;funcret
 28805  00A476                     __end_ofi2_TMR4_Period8BitSet:
 28806                           	opt callstack 0
 28807                           
 28808 ;; *************** function i2_SetMonitorFailAlarm *****************
 28809 ;; Defined at:
 28810 ;;		line 225 in file "alarm.c"
 28811 ;; Parameters:    Size  Location     Type
 28812 ;;		None
 28813 ;; Auto vars:     Size  Location     Type
 28814 ;;		None
 28815 ;; Return value:  Size  Location     Type
 28816 ;;                  1    wreg      void 
 28817 ;; Registers used:
 28818 ;;		wreg, status,2
 28819 ;; Tracked objects:
 28820 ;;		On entry : 3F/2
 28821 ;;		On exit  : 3F/2
 28822 ;;		Unchanged: 0/0
 28823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28828 ;;Total ram usage:        0 bytes
 28829 ;; Hardware stack levels used:    1
 28830 ;; This function calls:
 28831 ;;		Nothing
 28832 ;; This function is called by:
 28833 ;;		i2_BuzzerTask
 28834 ;; This function uses a non-reentrant model
 28835 ;;
 28836                           
 28837                           	psect	text227
 28838  00A622                     __ptext227:
 28839                           	opt callstack 0
 28840  00A622                     i2_SetMonitorFailAlarm:
 28841                           	opt callstack 13
 28842                           
 28843                           ; BSR set to: 2
 28844                           ;alarm.c: 226:     monitorFailAlarm = 1;
 28845                           
 28846                           ;incstack = 0
 28847  00A622  0E01               	movlw	1
 28848  00A624  6FB0               	movwf	_monitorFailAlarm& (0+255),b
 28849                           
 28850                           ; BSR set to: 2
 28851  00A626  0012               	return		;funcret
 28852  00A628                     __end_ofi2_SetMonitorFailAlarm:
 28853                           	opt callstack 0
 28854                           
 28855 ;; *************** function i2_BuzzerOn *****************
 28856 ;; Defined at:
 28857 ;;		line 446 in file "buzzer.c"
 28858 ;; Parameters:    Size  Location     Type
 28859 ;;  period          1    wreg     unsigned char 
 28860 ;; Auto vars:     Size  Location     Type
 28861 ;;  period          1    0[COMRAM] unsigned char 
 28862 ;; Return value:  Size  Location     Type
 28863 ;;                  1    wreg      void 
 28864 ;; Registers used:
 28865 ;;		wreg, status,2, cstack
 28866 ;; Tracked objects:
 28867 ;;		On entry : 3C/1
 28868 ;;		On exit  : 3F/39
 28869 ;;		Unchanged: 0/0
 28870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28872 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28874 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28875 ;;Total ram usage:        1 bytes
 28876 ;; Hardware stack levels used:    1
 28877 ;; Hardware stack levels required when called:    1
 28878 ;; This function calls:
 28879 ;;		i2_CMP1_Enable
 28880 ;; This function is called by:
 28881 ;;		i2_BuzzerTask
 28882 ;; This function uses a non-reentrant model
 28883 ;;
 28884                           
 28885                           	psect	text228
 28886  009F2E                     __ptext228:
 28887                           	opt callstack 0
 28888  009F2E                     i2_BuzzerOn:
 28889                           	opt callstack 12
 28890                           
 28891                           ; BSR set to: 2
 28892                           ;incstack = 0
 28893                           ;i2BuzzerOn@period stored from wreg
 28894  009F2E  6E01               	movwf	i2BuzzerOn@period^0,c
 28895                           
 28896                           ;buzzer.c: 448:     T2PR = period;
 28897  009F30  0060  F007  FFAB   	movff	i2BuzzerOn@period,16299	;volatile
 28898                           
 28899                           ;buzzer.c: 449:     PWM6CON = 0x80;
 28900  009F36  0E80               	movlw	128
 28901  009F38  6E6A               	movwf	106,c	;volatile
 28902                           
 28903                           ;buzzer.c: 451:     on = 1;
 28904  009F3A  0E01               	movlw	1
 28905  009F3C  0100               	movlb	0	; () banked
 28906  009F3E  6FF9               	movwf	_on& (0+255),b
 28907                           
 28908                           ; BSR set to: 0
 28909                           ;buzzer.c: 452:     detected = 0;
 28910  009F40  0E00               	movlw	0
 28911  009F42  6FF8               	movwf	_detected& (0+255),b
 28912                           
 28913                           ; BSR set to: 0
 28914                           ;buzzer.c: 454:     CMP1_Enable();
 28915  009F44  ECBD  F052         	call	i2_CMP1_Enable	;wreg free
 28916                           
 28917                           ; BSR set to: 57
 28918  009F48  0012               	return		;funcret
 28919  009F4A                     __end_ofi2_BuzzerOn:
 28920                           	opt callstack 0
 28921                           
 28922 ;; *************** function _TMR1_ISR *****************
 28923 ;; Defined at:
 28924 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 28925 ;; Parameters:    Size  Location     Type
 28926 ;;		None
 28927 ;; Auto vars:     Size  Location     Type
 28928 ;;		None
 28929 ;; Return value:  Size  Location     Type
 28930 ;;                  1    wreg      void 
 28931 ;; Registers used:
 28932 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28933 ;; Tracked objects:
 28934 ;;		On entry : 3F/39
 28935 ;;		On exit  : 0/0
 28936 ;;		Unchanged: 0/0
 28937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28942 ;;Total ram usage:        0 bytes
 28943 ;; Hardware stack levels used:    1
 28944 ;; Hardware stack levels required when called:   14
 28945 ;; This function calls:
 28946 ;;		Absolute function
 28947 ;;		_ButtonTask
 28948 ;;		_TMR1_DefaultInterruptHandler
 28949 ;;		_TMR1_WriteTimer
 28950 ;; This function is called by:
 28951 ;;		_INTERRUPT_InterruptManager
 28952 ;; This function uses a non-reentrant model
 28953 ;;
 28954                           
 28955                           	psect	text229
 28956  00983A                     __ptext229:
 28957                           	opt callstack 0
 28958  00983A                     _TMR1_ISR:
 28959                           	opt callstack 2
 28960                           
 28961                           ; BSR set to: 57
 28962                           ;mcc_generated_files/tmr1.c: 168:     PIR4bits.TMR1IF = 0;
 28963                           
 28964                           ; BSR set to: 57
 28965                           ;incstack = 0
 28966  00983A  91A4               	bcf	164,0,b	;volatile
 28967                           
 28968                           ; BSR set to: 57
 28969                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
 28970  00983C  0060  FB74  F001   	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
 28971  009842  0060  FB78  F002   	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
 28972  009848  EC62  F04E         	call	_TMR1_WriteTimer	;wreg free
 28973                           
 28974                           ; BSR set to: 57
 28975                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_InterruptHandler)
 28976  00984C  0102               	movlb	2	; () banked
 28977  00984E  51DB               	movf	_TMR1_InterruptHandler& (0+255),w,b
 28978  009850  11DC               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 28979  009852  B4D8               	btfsc	status,2,c
 28980  009854  0012               	return	
 28981                           
 28982                           ; BSR set to: 2
 28983                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_In
      +                          terruptHandler();
 28984  009856  D801               	call	i2u2130_48
 28985  009858  0012               	return	
 28986  00985A                     i2u2130_48:
 28987  00985A  0005               	push	
 28988  00985C  6EFA               	movwf	pclath,c
 28989  00985E  51DB               	movf	_TMR1_InterruptHandler& (0+255),w,b
 28990  009860  6EFD               	movwf	tosl,c
 28991  009862  51DC               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 28992  009864  6EFE               	movwf	tosh,c
 28993  009866  6AFF               	clrf	tosu,c
 28994  009868  50FA               	movf	pclath,w,c
 28995  00986A  0012               	return		;indir
 28996  00986C                     __end_of_TMR1_ISR:
 28997                           	opt callstack 0
 28998                           
 28999 ;; *************** function _TMR1_WriteTimer *****************
 29000 ;; Defined at:
 29001 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 29002 ;; Parameters:    Size  Location     Type
 29003 ;;  timerVal        2    0[COMRAM] unsigned short 
 29004 ;; Auto vars:     Size  Location     Type
 29005 ;;		None
 29006 ;; Return value:  Size  Location     Type
 29007 ;;                  1    wreg      void 
 29008 ;; Registers used:
 29009 ;;		None
 29010 ;; Tracked objects:
 29011 ;;		On entry : 3F/39
 29012 ;;		On exit  : 3F/39
 29013 ;;		Unchanged: 3E/0
 29014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29015 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29018 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29019 ;;Total ram usage:        2 bytes
 29020 ;; Hardware stack levels used:    1
 29021 ;; This function calls:
 29022 ;;		Nothing
 29023 ;; This function is called by:
 29024 ;;		_TMR1_ISR
 29025 ;; This function uses a non-reentrant model
 29026 ;;
 29027                           
 29028                           	psect	text230
 29029  009CC4                     __ptext230:
 29030                           	opt callstack 0
 29031  009CC4                     _TMR1_WriteTimer:
 29032                           	opt callstack 15
 29033                           
 29034                           ; BSR set to: 57
 29035                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.NOT_SYNC == 1)
 29036                           
 29037                           ;incstack = 0
 29038  009CC4  A4B2               	btfss	178,2,c	;volatile
 29039  009CC6  D009               	goto	i2l862
 29040                           
 29041                           ; BSR set to: 57
 29042                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
 29043  009CC8  90B2               	bcf	178,0,c	;volatile
 29044                           
 29045                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (timerVal >> 8);
 29046  009CCA  0060  F00B  FFB1   	movff	TMR1_WriteTimer@timerVal+1,16305	;volatile
 29047                           
 29048                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = timerVal;
 29049  009CD0  0060  F007  FFB0   	movff	TMR1_WriteTimer@timerVal,16304	;volatile
 29050                           
 29051                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
 29052  009CD6  80B2               	bsf	178,0,c	;volatile
 29053                           
 29054                           ;mcc_generated_files/tmr1.c: 140:     }
 29055  009CD8  0012               	return	
 29056  009CDA                     i2l862:
 29057                           
 29058                           ; BSR set to: 57
 29059                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (timerVal >> 8);
 29060  009CDA  0060  F00B  FFB1   	movff	TMR1_WriteTimer@timerVal+1,16305	;volatile
 29061                           
 29062                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = timerVal;
 29063  009CE0  0060  F007  FFB0   	movff	TMR1_WriteTimer@timerVal,16304	;volatile
 29064                           
 29065                           ; BSR set to: 57
 29066  009CE6  0012               	return		;funcret
 29067  009CE8                     __end_of_TMR1_WriteTimer:
 29068                           	opt callstack 0
 29069                           
 29070 ;; *************** function _ButtonTask *****************
 29071 ;; Defined at:
 29072 ;;		line 43 in file "buttons.c"
 29073 ;; Parameters:    Size  Location     Type
 29074 ;;		None
 29075 ;; Auto vars:     Size  Location     Type
 29076 ;;		None
 29077 ;; Return value:  Size  Location     Type
 29078 ;;                  1    wreg      void 
 29079 ;; Registers used:
 29080 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29081 ;; Tracked objects:
 29082 ;;		On entry : 3F/2
 29083 ;;		On exit  : 3F/0
 29084 ;;		Unchanged: 0/0
 29085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29088 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29089 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29090 ;;Total ram usage:        1 bytes
 29091 ;; Hardware stack levels used:    1
 29092 ;; Hardware stack levels required when called:   13
 29093 ;; This function calls:
 29094 ;;		i2_DisableAlarmSV1
 29095 ;;		i2_HistAlarm
 29096 ;;		i2_MuteAlarm
 29097 ;;		i2_printf
 29098 ;; This function is called by:
 29099 ;;		_ButtonInit
 29100 ;;		_TMR1_ISR
 29101 ;; This function uses a non-reentrant model
 29102 ;;
 29103                           
 29104                           	psect	text231
 29105  006608                     __ptext231:
 29106                           	opt callstack 0
 29107  006608                     _ButtonTask:
 29108                           	opt callstack 2
 29109                           
 29110                           ; BSR set to: 2
 29111                           ;buttons.c: 44:     static int cnt = 0;;buttons.c: 45:     cnt++;
 29112                           
 29113                           ; BSR set to: 57
 29114                           ;incstack = 0
 29115  006608  4B84               	infsnz	ButtonTask@cnt& (0+255),f,b
 29116  00660A  2B85               	incf	(ButtonTask@cnt+1)& (0+255),f,b
 29117                           
 29118                           ; BSR set to: 2
 29119                           ;buttons.c: 47:     muteButton = !PORTDbits.RD2 | (muteButton << 1);
 29120  00660C  0100               	movlb	0	; () banked
 29121  00660E  90D8               	bcf	status,0,c
 29122  006610  35FD               	rlcf	_muteButton& (0+255),w,b
 29123  006612  6FC7               	movwf	??_ButtonTask& (0+255),b
 29124  006614  B4CD               	btfsc	205,2,c	;volatile
 29125  006616  D002               	goto	i2u1959_40
 29126  006618  0E01               	movlw	1
 29127  00661A  D001               	goto	i2u1960_40
 29128  00661C                     i2u1959_40:
 29129  00661C  0E00               	movlw	0
 29130  00661E                     i2u1960_40:
 29131  00661E  11C7               	iorwf	??_ButtonTask& (0+255),w,b
 29132  006620  6FFD               	movwf	_muteButton& (0+255),b
 29133                           
 29134                           ; BSR set to: 0
 29135                           ;buttons.c: 48:     histButton = !PORTDbits.RD1 | (histButton << 1);
 29136  006622  90D8               	bcf	status,0,c
 29137  006624  35FC               	rlcf	_histButton& (0+255),w,b
 29138  006626  6FC7               	movwf	??_ButtonTask& (0+255),b
 29139  006628  B2CD               	btfsc	205,1,c	;volatile
 29140  00662A  D002               	goto	i2u1961_40
 29141  00662C  0E01               	movlw	1
 29142  00662E  D001               	goto	i2u1962_40
 29143  006630                     i2u1961_40:
 29144  006630  0E00               	movlw	0
 29145  006632                     i2u1962_40:
 29146  006632  11C7               	iorwf	??_ButtonTask& (0+255),w,b
 29147  006634  6FFC               	movwf	_histButton& (0+255),b
 29148                           
 29149                           ; BSR set to: 0
 29150                           ;buttons.c: 49:     if ((muteButton) == 0xF0) {
 29151  006636  0EF0               	movlw	240
 29152  006638  19FD               	xorwf	_muteButton& (0+255),w,b
 29153  00663A  A4D8               	btfss	status,2,c
 29154  00663C  D005               	goto	i2l20647
 29155                           
 29156                           ; BSR set to: 0
 29157                           ;buttons.c: 50:         MuteAlarm();
 29158  00663E  ECD3  F023         	call	i2_MuteAlarm	;wreg free
 29159                           
 29160                           ;buttons.c: 52:         muteButton = 0;
 29161  006642  0E00               	movlw	0
 29162  006644  0100               	movlb	0	; () banked
 29163  006646  6FFD               	movwf	_muteButton& (0+255),b
 29164  006648                     i2l20647:
 29165                           
 29166                           ; BSR set to: 0
 29167                           ;buttons.c: 54:     if ((histButton) == 0xF0) {
 29168  006648  0EF0               	movlw	240
 29169  00664A  19FC               	xorwf	_histButton& (0+255),w,b
 29170  00664C  A4D8               	btfss	status,2,c
 29171  00664E  D005               	goto	i2l20653
 29172                           
 29173                           ; BSR set to: 0
 29174                           ;buttons.c: 55:         HistAlarm();
 29175  006650  EC86  F033         	call	i2_HistAlarm	;wreg free
 29176                           
 29177                           ;buttons.c: 57:         histButton = 0;
 29178  006654  0E00               	movlw	0
 29179  006656  0100               	movlb	0	; () banked
 29180  006658  6FFC               	movwf	_histButton& (0+255),b
 29181  00665A                     i2l20653:
 29182                           
 29183                           ; BSR set to: 0
 29184                           ;buttons.c: 59:     if (muteButton == 0xFF && histButton == 0xFF) {
 29185  00665A  29FD               	incf	_muteButton& (0+255),w,b
 29186  00665C  A4D8               	btfss	status,2,c
 29187  00665E  D00C               	goto	i2l20663
 29188                           
 29189                           ; BSR set to: 0
 29190  006660  29FC               	incf	_histButton& (0+255),w,b
 29191  006662  A4D8               	btfss	status,2,c
 29192  006664  D009               	goto	i2l20663
 29193                           
 29194                           ; BSR set to: 0
 29195                           ;buttons.c: 60:         DisableAlarmSV1();
 29196  006666  EC14  F053         	call	i2_DisableAlarmSV1	;wreg free
 29197                           
 29198                           ; BSR set to: 0
 29199  00666A  82BA               	bsf	186,1,c	;volatile
 29200                           
 29201                           ; BSR set to: 0
 29202                           ;buttons.c: 62:         printf("\r\nDIS SV1 ALARM!\r\n");
 29203  00666C  0E98               	movlw	low STR_14
 29204  00666E  6F77               	movwf	i2printf@fmt& (0+255),b
 29205  006670  0EFE               	movlw	high STR_14
 29206  006672  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 29207  006674  EC07  F04E         	call	i2_printf	;wreg free
 29208  006678                     i2l20663:
 29209                           
 29210                           ;buttons.c: 64:     if (ledType!=0) {
 29211  006678  0100               	movlb	0	; () banked
 29212  00667A  51FB               	movf	_ledType& (0+255),w,b
 29213  00667C  B4D8               	btfsc	status,2,c
 29214  00667E  D040               	goto	i2l20695
 29215                           
 29216                           ; BSR set to: 0
 29217                           ;buttons.c: 65:         if (ledCnt == 0) do { LATDbits.LATD3 = 1; } while(0);
 29218  006680  51EA               	movf	_ledCnt& (0+255),w,b
 29219  006682  11EB               	iorwf	(_ledCnt+1)& (0+255),w,b
 29220  006684  B4D8               	btfsc	status,2,c
 29221                           
 29222                           ; BSR set to: 0
 29223  006686  86BD               	bsf	189,3,c	;volatile
 29224                           
 29225                           ; BSR set to: 0
 29226                           ;buttons.c: 67:         if ((ledCnt == 2 && ledType==1) ||
 29227  006688  0E02               	movlw	2
 29228  00668A  19EA               	xorwf	_ledCnt& (0+255),w,b
 29229  00668C  11EB               	iorwf	(_ledCnt+1)& (0+255),w,b
 29230  00668E  A4D8               	btfss	status,2,c
 29231  006690  D003               	goto	i2u1970_40
 29232                           
 29233                           ; BSR set to: 0
 29234  006692  05FB               	decf	_ledType& (0+255),w,b
 29235  006694  B4D8               	btfsc	status,2,c
 29236  006696  D011               	goto	i2u1974_40
 29237  006698                     i2u1970_40:
 29238                           
 29239                           ; BSR set to: 0
 29240  006698  0E0F               	movlw	15
 29241  00669A  19EA               	xorwf	_ledCnt& (0+255),w,b
 29242  00669C  11EB               	iorwf	(_ledCnt+1)& (0+255),w,b
 29243  00669E  A4D8               	btfss	status,2,c
 29244  0066A0  D004               	goto	i2u1972_40
 29245                           
 29246                           ; BSR set to: 0
 29247  0066A2  0E02               	movlw	2
 29248  0066A4  19FB               	xorwf	_ledType& (0+255),w,b
 29249  0066A6  B4D8               	btfsc	status,2,c
 29250  0066A8  D008               	goto	i2u1974_40
 29251  0066AA                     i2u1972_40:
 29252                           
 29253                           ; BSR set to: 0
 29254  0066AA  0E0F               	movlw	15
 29255  0066AC  19EA               	xorwf	_ledCnt& (0+255),w,b
 29256  0066AE  11EB               	iorwf	(_ledCnt+1)& (0+255),w,b
 29257  0066B0  A4D8               	btfss	status,2,c
 29258  0066B2  D004               	goto	i2l20679
 29259                           
 29260                           ; BSR set to: 0
 29261  0066B4  0E04               	movlw	4
 29262  0066B6  19FB               	xorwf	_ledType& (0+255),w,b
 29263  0066B8  B4D8               	btfsc	status,2,c
 29264  0066BA                     i2u1974_40:
 29265                           
 29266                           ; BSR set to: 0
 29267                           
 29268                           ;buttons.c: 70:         {;buttons.c: 71:             do { LATDbits.LATD3 = 0; } while(0)
      +                          ;
 29269  0066BA  96BD               	bcf	189,3,c	;volatile
 29270  0066BC                     i2l20679:
 29271                           
 29272                           ; BSR set to: 0
 29273                           ;buttons.c: 73:         if ((ledCnt == 75 && ledType==1) ||
 29274  0066BC  0E4B               	movlw	75
 29275  0066BE  19EA               	xorwf	_ledCnt& (0+255),w,b
 29276  0066C0  11EB               	iorwf	(_ledCnt+1)& (0+255),w,b
 29277  0066C2  A4D8               	btfss	status,2,c
 29278  0066C4  D003               	goto	i2u1976_40
 29279                           
 29280                           ; BSR set to: 0
 29281  0066C6  05FB               	decf	_ledType& (0+255),w,b
 29282  0066C8  B4D8               	btfsc	status,2,c
 29283  0066CA  D012               	goto	i2u1980_40
 29284  0066CC                     i2u1976_40:
 29285                           
 29286                           ; BSR set to: 0
 29287  0066CC  0E4B               	movlw	75
 29288  0066CE  19EA               	xorwf	_ledCnt& (0+255),w,b
 29289  0066D0  11EB               	iorwf	(_ledCnt+1)& (0+255),w,b
 29290  0066D2  A4D8               	btfss	status,2,c
 29291  0066D4  D004               	goto	i2u1978_40
 29292                           
 29293                           ; BSR set to: 0
 29294  0066D6  0E02               	movlw	2
 29295  0066D8  19FB               	xorwf	_ledType& (0+255),w,b
 29296  0066DA  B4D8               	btfsc	status,2,c
 29297  0066DC  D009               	goto	i2u1980_40
 29298  0066DE                     i2u1978_40:
 29299                           
 29300                           ; BSR set to: 0
 29301  0066DE  0E1E               	movlw	30
 29302  0066E0  19EA               	xorwf	_ledCnt& (0+255),w,b
 29303  0066E2  11EB               	iorwf	(_ledCnt+1)& (0+255),w,b
 29304  0066E4  A4D8               	btfss	status,2,c
 29305  0066E6  D009               	goto	i2l20693
 29306                           
 29307                           ; BSR set to: 0
 29308  0066E8  0E04               	movlw	4
 29309  0066EA  19FB               	xorwf	_ledType& (0+255),w,b
 29310  0066EC  A4D8               	btfss	status,2,c
 29311  0066EE  D005               	goto	i2l20693
 29312  0066F0                     i2u1980_40:
 29313                           
 29314                           ; BSR set to: 0
 29315                           ;buttons.c: 76:         {;buttons.c: 77:             ledCnt = 0;
 29316  0066F0  0E00               	movlw	0
 29317  0066F2  6FEB               	movwf	(_ledCnt+1)& (0+255),b
 29318  0066F4  0E00               	movlw	0
 29319  0066F6  6FEA               	movwf	_ledCnt& (0+255),b
 29320                           
 29321                           ;buttons.c: 78:         } else {
 29322  0066F8  0012               	return	
 29323  0066FA                     i2l20693:
 29324                           
 29325                           ; BSR set to: 0
 29326                           ;buttons.c: 79:             ledCnt++;
 29327  0066FA  4BEA               	infsnz	_ledCnt& (0+255),f,b
 29328  0066FC  2BEB               	incf	(_ledCnt+1)& (0+255),f,b
 29329  0066FE  0012               	return	
 29330  006700                     i2l20695:
 29331                           
 29332                           ; BSR set to: 0
 29333                           ;buttons.c: 82:         ledCnt=0;
 29334  006700  0E00               	movlw	0
 29335  006702  6FEB               	movwf	(_ledCnt+1)& (0+255),b
 29336  006704  0E00               	movlw	0
 29337  006706  6FEA               	movwf	_ledCnt& (0+255),b
 29338                           
 29339                           ; BSR set to: 0
 29340  006708  96BD               	bcf	189,3,c	;volatile
 29341                           
 29342                           ; BSR set to: 0
 29343  00670A  0012               	return		;funcret
 29344  00670C                     __end_of_ButtonTask:
 29345                           	opt callstack 0
 29346                           
 29347 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 29348 ;; Defined at:
 29349 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 29350 ;; Parameters:    Size  Location     Type
 29351 ;;		None
 29352 ;; Auto vars:     Size  Location     Type
 29353 ;;		None
 29354 ;; Return value:  Size  Location     Type
 29355 ;;                  1    wreg      void 
 29356 ;; Registers used:
 29357 ;;		None
 29358 ;; Tracked objects:
 29359 ;;		On entry : 3F/2
 29360 ;;		On exit  : 3F/2
 29361 ;;		Unchanged: 3F/0
 29362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29367 ;;Total ram usage:        0 bytes
 29368 ;; Hardware stack levels used:    1
 29369 ;; This function calls:
 29370 ;;		Nothing
 29371 ;; This function is called by:
 29372 ;;		_TMR1_Initialize
 29373 ;;		_TMR1_ISR
 29374 ;; This function uses a non-reentrant model
 29375 ;;
 29376                           
 29377                           	psect	text232
 29378  00A6F6                     __ptext232:
 29379                           	opt callstack 0
 29380  00A6F6                     _TMR1_DefaultInterruptHandler:
 29381                           	opt callstack 15
 29382                           
 29383                           ; BSR set to: 2
 29384                           
 29385                           ; BSR set to: 0
 29386                           ;incstack = 0
 29387  00A6F6  0012               	return		;funcret
 29388  00A6F8                     __end_of_TMR1_DefaultInterruptHandler:
 29389                           	opt callstack 0
 29390                           
 29391 ;; *************** function i2_MuteAlarm *****************
 29392 ;; Defined at:
 29393 ;;		line 377 in file "alarm.c"
 29394 ;; Parameters:    Size  Location     Type
 29395 ;;		None
 29396 ;; Auto vars:     Size  Location     Type
 29397 ;;  MuteAlarm       2   34[BANK0 ] int 
 29398 ;; Return value:  Size  Location     Type
 29399 ;;                  1    wreg      void 
 29400 ;; Registers used:
 29401 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29402 ;; Tracked objects:
 29403 ;;		On entry : 3F/0
 29404 ;;		On exit  : 3D/0
 29405 ;;		Unchanged: 0/0
 29406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29408 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29409 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29410 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29411 ;;Total ram usage:        5 bytes
 29412 ;; Hardware stack levels used:    1
 29413 ;; Hardware stack levels required when called:   10
 29414 ;; This function calls:
 29415 ;;		i2_AnyAlarm
 29416 ;;		i2_BuzzerClear
 29417 ;;		i2_ClearCircuitFailureAlarm
 29418 ;;		i2_ClearControlFailAlarm
 29419 ;;		i2_ClearGasFailureAlarm
 29420 ;;		i2_ClearHighPressureAlarmHigh
 29421 ;;		i2_ClearMonitorFailAlarm
 29422 ;;		i2_ClearVeryHighPressureAlarmHigh
 29423 ;;		i2_HigherAlarm
 29424 ;;		i2_SetAlarmSV1
 29425 ;;		i2___wmul
 29426 ;;		i2_printf
 29427 ;; This function is called by:
 29428 ;;		_ButtonTask
 29429 ;; This function uses a non-reentrant model
 29430 ;;
 29431                           
 29432                           	psect	text233
 29433  0047A6                     __ptext233:
 29434                           	opt callstack 0
 29435  0047A6                     i2_MuteAlarm:
 29436                           	opt callstack 4
 29437                           
 29438                           ; BSR set to: 0
 29439                           ;alarm.c: 378:     printf("MUTE");
 29440                           
 29441                           ; BSR set to: 2
 29442                           ;incstack = 0
 29443  0047A6  0EC1               	movlw	low STR_25
 29444  0047A8  6F77               	movwf	i2printf@fmt& (0+255),b
 29445  0047AA  0EFF               	movlw	high STR_25
 29446  0047AC  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 29447  0047AE  EC07  F04E         	call	i2_printf	;wreg free
 29448                           
 29449                           ; BSR set to: 2
 29450                           ;alarm.c: 380:     if (muteSec && muteSec<115) {
 29451  0047B2  0101               	movlb	1	; () banked
 29452  0047B4  51EB               	movf	_muteSec& (0+255),w,b
 29453  0047B6  11EC               	iorwf	(_muteSec+1)& (0+255),w,b
 29454  0047B8  B4D8               	btfsc	status,2,c
 29455  0047BA  D00C               	goto	i2l20175
 29456                           
 29457                           ; BSR set to: 1
 29458  0047BC  BFEC               	btfsc	(_muteSec+1)& (0+255),7,b
 29459  0047BE  D006               	goto	i2u1925_40
 29460  0047C0  51EC               	movf	(_muteSec+1)& (0+255),w,b
 29461  0047C2  E108               	bnz	i2l20175
 29462  0047C4  0E73               	movlw	115
 29463  0047C6  5DEB               	subwf	_muteSec& (0+255),w,b
 29464  0047C8  B0D8               	btfsc	status,0,c
 29465  0047CA  D004               	goto	i2l20175
 29466  0047CC                     i2u1925_40:
 29467                           
 29468                           ; BSR set to: 1
 29469                           ;alarm.c: 381:         muteSec = 0;
 29470  0047CC  0E00               	movlw	0
 29471  0047CE  6FEC               	movwf	(_muteSec+1)& (0+255),b
 29472  0047D0  0E00               	movlw	0
 29473  0047D2  6FEB               	movwf	_muteSec& (0+255),b
 29474  0047D4                     i2l20175:
 29475                           
 29476                           ; BSR set to: 1
 29477                           ;alarm.c: 384:     if (AnyAlarm()) {
 29478  0047D4  ECAA  F04A         	call	i2_AnyAlarm	;wreg free
 29479  0047D8  0900               	iorlw	0
 29480  0047DA  B4D8               	btfsc	status,2,c
 29481  0047DC  D0AB               	goto	i2l2632
 29482                           
 29483                           ;alarm.c: 386:         BuzzerClear();
 29484  0047DE  ECCF  F050         	call	i2_BuzzerClear	;wreg free
 29485                           
 29486                           ; BSR set to: 57
 29487                           ;alarm.c: 387:         muteSec = 120;
 29488  0047E2  0E00               	movlw	0
 29489  0047E4  0101               	movlb	1	; () banked
 29490  0047E6  6FEC               	movwf	(_muteSec+1)& (0+255),b
 29491  0047E8  0E78               	movlw	120
 29492  0047EA  6FEB               	movwf	_muteSec& (0+255),b
 29493                           
 29494                           ; BSR set to: 1
 29495                           ;alarm.c: 389:         int high = HigherAlarm();
 29496  0047EC  EC91  F039         	call	i2_HigherAlarm	;wreg free
 29497  0047F0  0060  F01C  F082   	movff	?i2_HigherAlarm,i2MuteAlarm@high
 29498  0047F6  0060  F020  F083   	movff	?i2_HigherAlarm+1,i2MuteAlarm@high+1
 29499                           
 29500                           ;alarm.c: 390:         if (alarmData[high].func==HighPressureAlarmHigh) {
 29501  0047FC  0060  F208  F001   	movff	i2MuteAlarm@high,i2___wmul@multiplier
 29502  004802  0060  F20C  F002   	movff	i2MuteAlarm@high+1,i2___wmul@multiplier+1
 29503  004808  0E00               	movlw	0
 29504  00480A  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 29505  00480C  0E15               	movlw	21
 29506  00480E  6E03               	movwf	i2___wmul@multiplicand^0,c
 29507  004810  EC06  F04D         	call	i2___wmul	;wreg free
 29508  004814  0E27               	movlw	low (_alarmData+19)
 29509  004816  2401               	addwf	?i2___wmul^0,w,c
 29510  004818  6ED9               	movwf	fsr2l,c
 29511  00481A  0E09               	movlw	high (_alarmData+19)
 29512  00481C  2002               	addwfc	(?i2___wmul+1)^0,w,c
 29513  00481E  6EDA               	movwf	fsr2h,c
 29514  004820  0EB6               	movlw	low _HighPressureAlarmHigh
 29515  004822  18DE               	xorwf	postinc2,w,c
 29516  004824  E105               	bnz	i2l20187
 29517  004826  0EA6               	movlw	high _HighPressureAlarmHigh
 29518  004828  18DE               	xorwf	postinc2,w,c
 29519  00482A  B4D8               	btfsc	status,2,c
 29520                           
 29521                           ;alarm.c: 392:             ClearHighPressureAlarmHigh();
 29522  00482C  ECC9  F052         	call	i2_ClearHighPressureAlarmHigh	;wreg free
 29523  004830                     i2l20187:
 29524                           
 29525                           ;alarm.c: 394:         if (alarmData[high].func==VeryHighPressureAlarmHigh) {
 29526  004830  0060  F208  F001   	movff	i2MuteAlarm@high,i2___wmul@multiplier
 29527  004836  0060  F20C  F002   	movff	i2MuteAlarm@high+1,i2___wmul@multiplier+1
 29528  00483C  0E00               	movlw	0
 29529  00483E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 29530  004840  0E15               	movlw	21
 29531  004842  6E03               	movwf	i2___wmul@multiplicand^0,c
 29532  004844  EC06  F04D         	call	i2___wmul	;wreg free
 29533  004848  0E27               	movlw	low (_alarmData+19)
 29534  00484A  2401               	addwf	?i2___wmul^0,w,c
 29535  00484C  6ED9               	movwf	fsr2l,c
 29536  00484E  0E09               	movlw	high (_alarmData+19)
 29537  004850  2002               	addwfc	(?i2___wmul+1)^0,w,c
 29538  004852  6EDA               	movwf	fsr2h,c
 29539  004854  0EBE               	movlw	low _VeryHighPressureAlarmHigh
 29540  004856  18DE               	xorwf	postinc2,w,c
 29541  004858  E105               	bnz	i2l20191
 29542  00485A  0EA6               	movlw	high _VeryHighPressureAlarmHigh
 29543  00485C  18DE               	xorwf	postinc2,w,c
 29544  00485E  B4D8               	btfsc	status,2,c
 29545                           
 29546                           ;alarm.c: 396:             ClearVeryHighPressureAlarmHigh();
 29547  004860  ECC1  F052         	call	i2_ClearVeryHighPressureAlarmHigh	;wreg free
 29548  004864                     i2l20191:
 29549                           
 29550                           ;alarm.c: 398:         if (alarmData[high].func==MonitorFailAlarm) {
 29551  004864  0060  F208  F001   	movff	i2MuteAlarm@high,i2___wmul@multiplier
 29552  00486A  0060  F20C  F002   	movff	i2MuteAlarm@high+1,i2___wmul@multiplier+1
 29553  004870  0E00               	movlw	0
 29554  004872  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 29555  004874  0E15               	movlw	21
 29556  004876  6E03               	movwf	i2___wmul@multiplicand^0,c
 29557  004878  EC06  F04D         	call	i2___wmul	;wreg free
 29558  00487C  0E27               	movlw	low (_alarmData+19)
 29559  00487E  2401               	addwf	?i2___wmul^0,w,c
 29560  004880  6ED9               	movwf	fsr2l,c
 29561  004882  0E09               	movlw	high (_alarmData+19)
 29562  004884  2002               	addwfc	(?i2___wmul+1)^0,w,c
 29563  004886  6EDA               	movwf	fsr2h,c
 29564  004888  0EC8               	movlw	low _MonitorFailAlarm
 29565  00488A  18DE               	xorwf	postinc2,w,c
 29566  00488C  E105               	bnz	i2l20195
 29567  00488E  0E6A               	movlw	high _MonitorFailAlarm
 29568  004890  18DE               	xorwf	postinc2,w,c
 29569  004892  B4D8               	btfsc	status,2,c
 29570                           
 29571                           ;alarm.c: 400:             ClearMonitorFailAlarm();
 29572  004894  ECC5  F052         	call	i2_ClearMonitorFailAlarm	;wreg free
 29573  004898                     i2l20195:
 29574                           
 29575                           ;alarm.c: 402:         if (alarmData[high].func==ControlFailAlarm) {
 29576  004898  0060  F208  F001   	movff	i2MuteAlarm@high,i2___wmul@multiplier
 29577  00489E  0060  F20C  F002   	movff	i2MuteAlarm@high+1,i2___wmul@multiplier+1
 29578  0048A4  0E00               	movlw	0
 29579  0048A6  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 29580  0048A8  0E15               	movlw	21
 29581  0048AA  6E03               	movwf	i2___wmul@multiplicand^0,c
 29582  0048AC  EC06  F04D         	call	i2___wmul	;wreg free
 29583  0048B0  0E27               	movlw	low (_alarmData+19)
 29584  0048B2  2401               	addwf	?i2___wmul^0,w,c
 29585  0048B4  6ED9               	movwf	fsr2l,c
 29586  0048B6  0E09               	movlw	high (_alarmData+19)
 29587  0048B8  2002               	addwfc	(?i2___wmul+1)^0,w,c
 29588  0048BA  6EDA               	movwf	fsr2h,c
 29589  0048BC  0EEC               	movlw	low _ControlFailAlarm
 29590  0048BE  18DE               	xorwf	postinc2,w,c
 29591  0048C0  E105               	bnz	i2l20199
 29592  0048C2  0EA0               	movlw	high _ControlFailAlarm
 29593  0048C4  18DE               	xorwf	postinc2,w,c
 29594  0048C6  B4D8               	btfsc	status,2,c
 29595                           
 29596                           ;alarm.c: 404:             ClearControlFailAlarm();
 29597  0048C8  ECD1  F052         	call	i2_ClearControlFailAlarm	;wreg free
 29598  0048CC                     i2l20199:
 29599                           
 29600                           ;alarm.c: 406:         if (alarmData[high].func==GasFailureAlarm) {
 29601  0048CC  0060  F208  F001   	movff	i2MuteAlarm@high,i2___wmul@multiplier
 29602  0048D2  0060  F20C  F002   	movff	i2MuteAlarm@high+1,i2___wmul@multiplier+1
 29603  0048D8  0E00               	movlw	0
 29604  0048DA  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 29605  0048DC  0E15               	movlw	21
 29606  0048DE  6E03               	movwf	i2___wmul@multiplicand^0,c
 29607  0048E0  EC06  F04D         	call	i2___wmul	;wreg free
 29608  0048E4  0E27               	movlw	low (_alarmData+19)
 29609  0048E6  2401               	addwf	?i2___wmul^0,w,c
 29610  0048E8  6ED9               	movwf	fsr2l,c
 29611  0048EA  0E09               	movlw	high (_alarmData+19)
 29612  0048EC  2002               	addwfc	(?i2___wmul+1)^0,w,c
 29613  0048EE  6EDA               	movwf	fsr2h,c
 29614  0048F0  0EBA               	movlw	low _GasFailureAlarm
 29615  0048F2  18DE               	xorwf	postinc2,w,c
 29616  0048F4  E105               	bnz	i2l20203
 29617  0048F6  0EA6               	movlw	high _GasFailureAlarm
 29618  0048F8  18DE               	xorwf	postinc2,w,c
 29619  0048FA  B4D8               	btfsc	status,2,c
 29620                           
 29621                           ;alarm.c: 408:             ClearGasFailureAlarm();
 29622  0048FC  ECCD  F052         	call	i2_ClearGasFailureAlarm	;wreg free
 29623  004900                     i2l20203:
 29624                           
 29625                           ;alarm.c: 410:         if (alarmData[high].func==CircuitFailureAlarm) {
 29626  004900  0060  F208  F001   	movff	i2MuteAlarm@high,i2___wmul@multiplier
 29627  004906  0060  F20C  F002   	movff	i2MuteAlarm@high+1,i2___wmul@multiplier+1
 29628  00490C  0E00               	movlw	0
 29629  00490E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 29630  004910  0E15               	movlw	21
 29631  004912  6E03               	movwf	i2___wmul@multiplicand^0,c
 29632  004914  EC06  F04D         	call	i2___wmul	;wreg free
 29633  004918  0E27               	movlw	low (_alarmData+19)
 29634  00491A  2401               	addwf	?i2___wmul^0,w,c
 29635  00491C  6ED9               	movwf	fsr2l,c
 29636  00491E  0E09               	movlw	high (_alarmData+19)
 29637  004920  2002               	addwfc	(?i2___wmul+1)^0,w,c
 29638  004922  6EDA               	movwf	fsr2h,c
 29639  004924  0EB2               	movlw	low _CircuitFailureAlarm
 29640  004926  18DE               	xorwf	postinc2,w,c
 29641  004928  E105               	bnz	i2l2632
 29642  00492A  0EA6               	movlw	high _CircuitFailureAlarm
 29643  00492C  18DE               	xorwf	postinc2,w,c
 29644  00492E  B4D8               	btfsc	status,2,c
 29645                           
 29646                           ;alarm.c: 412:             ClearCircuitFailureAlarm();
 29647  004930  ECD5  F052         	call	i2_ClearCircuitFailureAlarm	;wreg free
 29648  004934                     i2l2632:
 29649                           
 29650                           ;alarm.c: 417:     ClearVeryHighPressureAlarmHigh();
 29651  004934  ECC1  F052         	call	i2_ClearVeryHighPressureAlarmHigh	;wreg free
 29652                           
 29653                           ;alarm.c: 418:     ClearHighPressureAlarmHigh();
 29654  004938  ECC9  F052         	call	i2_ClearHighPressureAlarmHigh	;wreg free
 29655                           
 29656                           ;alarm.c: 419:     ClearCircuitFailureAlarm();
 29657  00493C  ECD5  F052         	call	i2_ClearCircuitFailureAlarm	;wreg free
 29658                           
 29659                           ;alarm.c: 420:     ClearGasFailureAlarm();
 29660  004940  ECCD  F052         	call	i2_ClearGasFailureAlarm	;wreg free
 29661                           
 29662                           ;alarm.c: 421:     ClearControlFailAlarm();
 29663  004944  ECD1  F052         	call	i2_ClearControlFailAlarm	;wreg free
 29664                           
 29665                           ;alarm.c: 422:     ClearMonitorFailAlarm();
 29666  004948  ECC5  F052         	call	i2_ClearMonitorFailAlarm	;wreg free
 29667                           
 29668                           ; BSR set to: 2
 29669                           ;alarm.c: 424:     controlSV1 = 1;
 29670  00494C  0E01               	movlw	1
 29671  00494E  0101               	movlb	1	; () banked
 29672  004950  6FF9               	movwf	_controlSV1& (0+255),b
 29673                           
 29674                           ; BSR set to: 1
 29675                           ;alarm.c: 425:     monitorSV1 = 1;
 29676  004952  0E01               	movlw	1
 29677  004954  6FF8               	movwf	_monitorSV1& (0+255),b
 29678                           
 29679                           ; BSR set to: 1
 29680                           ;alarm.c: 426:     veryHighSV1 = 1;
 29681  004956  0E01               	movlw	1
 29682  004958  6FFB               	movwf	_veryHighSV1& (0+255),b
 29683                           
 29684                           ; BSR set to: 1
 29685                           ;alarm.c: 428:     SetAlarmSV1(controlSV1 && monitorSV1 && veryHighSV1 && batterySV1);
 29686  00495A  0E00               	movlw	0
 29687  00495C  0100               	movlb	0	; () banked
 29688  00495E  6F81               	movwf	i2_MuteAlarm$4543& (0+255),b
 29689                           
 29690                           ; BSR set to: 0
 29691  004960  0101               	movlb	1	; () banked
 29692  004962  51F9               	movf	_controlSV1& (0+255),w,b
 29693  004964  B4D8               	btfsc	status,2,c
 29694  004966  D00C               	goto	i2l20225
 29695                           
 29696                           ; BSR set to: 1
 29697  004968  51F8               	movf	_monitorSV1& (0+255),w,b
 29698  00496A  B4D8               	btfsc	status,2,c
 29699  00496C  D009               	goto	i2l20225
 29700                           
 29701                           ; BSR set to: 1
 29702  00496E  51FB               	movf	_veryHighSV1& (0+255),w,b
 29703  004970  B4D8               	btfsc	status,2,c
 29704  004972  D006               	goto	i2l20225
 29705                           
 29706                           ; BSR set to: 1
 29707  004974  51FA               	movf	_batterySV1& (0+255),w,b
 29708  004976  B4D8               	btfsc	status,2,c
 29709  004978  D003               	goto	i2l20225
 29710                           
 29711                           ; BSR set to: 1
 29712  00497A  0E01               	movlw	1
 29713  00497C  0100               	movlb	0	; () banked
 29714  00497E  6F81               	movwf	i2_MuteAlarm$4543& (0+255),b
 29715  004980                     i2l20225:
 29716  004980  0100               	movlb	0	; () banked
 29717  004982  5181               	movf	i2_MuteAlarm$4543& (0+255),w,b
 29718  004984  B4D8               	btfsc	status,2,c
 29719  004986  D002               	goto	i2u1937_40
 29720  004988  0E01               	movlw	1
 29721  00498A  D001               	goto	i2u1938_40
 29722  00498C                     i2u1937_40:
 29723  00498C  0E00               	movlw	0
 29724  00498E                     i2u1938_40:
 29725  00498E  ECC1  F04C         	call	i2_SetAlarmSV1
 29726  004992  0012               	return		;funcret
 29727  004994                     __end_ofi2_MuteAlarm:
 29728                           	opt callstack 0
 29729                           
 29730 ;; *************** function i2_SetAlarmSV1 *****************
 29731 ;; Defined at:
 29732 ;;		line 883 in file "monitor.c"
 29733 ;; Parameters:    Size  Location     Type
 29734 ;;  value           1    wreg     _Bool 
 29735 ;; Auto vars:     Size  Location     Type
 29736 ;;  value           1   90[COMRAM] _Bool 
 29737 ;; Return value:  Size  Location     Type
 29738 ;;                  1    wreg      void 
 29739 ;; Registers used:
 29740 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29741 ;; Tracked objects:
 29742 ;;		On entry : 3F/0
 29743 ;;		On exit  : 3D/0
 29744 ;;		Unchanged: 0/0
 29745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29747 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29749 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29750 ;;Total ram usage:        1 bytes
 29751 ;; Hardware stack levels used:    1
 29752 ;; Hardware stack levels required when called:    9
 29753 ;; This function calls:
 29754 ;;		i2_printf
 29755 ;; This function is called by:
 29756 ;;		i2_MuteAlarm
 29757 ;; This function uses a non-reentrant model
 29758 ;;
 29759                           
 29760                           	psect	text234
 29761  009982                     __ptext234:
 29762                           	opt callstack 0
 29763  009982                     i2_SetAlarmSV1:
 29764                           	opt callstack 4
 29765                           
 29766                           ;incstack = 0
 29767                           ;i2SetAlarmSV1@value stored from wreg
 29768  009982  6E5B               	movwf	i2SetAlarmSV1@value^0,c
 29769                           
 29770                           ;monitor.c: 884:     static _Bool last= 0;;monitor.c: 885:     if (last!=value) printf("
      +                          \r\nAlSV1: %d\r\n", value);
 29771  009984  505B               	movf	i2SetAlarmSV1@value^0,w,c
 29772  009986  0100               	movlb	0	; () banked
 29773  009988  19F2               	xorwf	SetAlarmSV1@last& (0+255),w,b
 29774  00998A  B4D8               	btfsc	status,2,c
 29775  00998C  D00A               	goto	i2l19281
 29776                           
 29777                           ; BSR set to: 0
 29778  00998E  0E5C               	movlw	low STR_47
 29779  009990  6F77               	movwf	i2printf@fmt& (0+255),b
 29780  009992  0EFF               	movlw	high STR_47
 29781  009994  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 29782  009996  0060  F16C  F079   	movff	i2SetAlarmSV1@value,?i2_printf+2
 29783  00999C  6B7A               	clrf	(?i2_printf+3)& (0+255),b
 29784  00999E  EC07  F04E         	call	i2_printf	;wreg free
 29785  0099A2                     i2l19281:
 29786                           
 29787                           ;monitor.c: 886:     alarmSV1 = value;
 29788  0099A2  0060  F16C  F2A0   	movff	i2SetAlarmSV1@value,_alarmSV1
 29789                           
 29790                           ;monitor.c: 887:     last = value;
 29791  0099A8  0060  F16C  F0F2   	movff	i2SetAlarmSV1@value,SetAlarmSV1@last
 29792  0099AE  0012               	return		;funcret
 29793  0099B0                     __end_ofi2_SetAlarmSV1:
 29794                           	opt callstack 0
 29795                           
 29796 ;; *************** function i2_BuzzerClear *****************
 29797 ;; Defined at:
 29798 ;;		line 71 in file "buzzer.c"
 29799 ;; Parameters:    Size  Location     Type
 29800 ;;		None
 29801 ;; Auto vars:     Size  Location     Type
 29802 ;;		None
 29803 ;; Return value:  Size  Location     Type
 29804 ;;                  1    wreg      void 
 29805 ;; Registers used:
 29806 ;;		wreg, status,2, cstack
 29807 ;; Tracked objects:
 29808 ;;		On entry : 0/1
 29809 ;;		On exit  : 3F/39
 29810 ;;		Unchanged: 0/0
 29811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29816 ;;Total ram usage:        0 bytes
 29817 ;; Hardware stack levels used:    1
 29818 ;; Hardware stack levels required when called:    2
 29819 ;; This function calls:
 29820 ;;		i2_BuzzerOff
 29821 ;;		i2_TMR4_Stop
 29822 ;; This function is called by:
 29823 ;;		i2_MuteAlarm
 29824 ;; This function uses a non-reentrant model
 29825 ;;
 29826                           
 29827                           	psect	text235
 29828  00A19E                     __ptext235:
 29829                           	opt callstack 0
 29830  00A19E                     i2_BuzzerClear:
 29831                           	opt callstack 11
 29832                           
 29833                           ;buzzer.c: 72:     alarmState = 0;
 29834                           
 29835                           ;incstack = 0
 29836  00A19E  0E00               	movlw	0
 29837  00A1A0  0100               	movlb	0	; () banked
 29838  00A1A2  6FFA               	movwf	_alarmState& (0+255),b
 29839                           
 29840                           ; BSR set to: 0
 29841                           ;buzzer.c: 73:     BuzzerOff();
 29842  00A1A4  ECD7  F050         	call	i2_BuzzerOff	;wreg free
 29843                           
 29844                           ;buzzer.c: 74:     TMR4_Stop();
 29845  00A1A8  EC67  F053         	call	i2_TMR4_Stop	;wreg free
 29846                           
 29847                           ; BSR set to: 57
 29848  00A1AC  0012               	return		;funcret
 29849  00A1AE                     __end_ofi2_BuzzerClear:
 29850                           	opt callstack 0
 29851                           
 29852 ;; *************** function i2_TMR4_Stop *****************
 29853 ;; Defined at:
 29854 ;;		line 119 in file "mcc_generated_files/tmr4.c"
 29855 ;; Parameters:    Size  Location     Type
 29856 ;;		None
 29857 ;; Auto vars:     Size  Location     Type
 29858 ;;		None
 29859 ;; Return value:  Size  Location     Type
 29860 ;;                  1    wreg      void 
 29861 ;; Registers used:
 29862 ;;		None
 29863 ;; Tracked objects:
 29864 ;;		On entry : 3F/39
 29865 ;;		On exit  : 3F/39
 29866 ;;		Unchanged: 3E/0
 29867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29872 ;;Total ram usage:        0 bytes
 29873 ;; Hardware stack levels used:    1
 29874 ;; This function calls:
 29875 ;;		Nothing
 29876 ;; This function is called by:
 29877 ;;		i2_BuzzerClear
 29878 ;;		i2_BuzzerTask
 29879 ;; This function uses a non-reentrant model
 29880 ;;
 29881                           
 29882                           	psect	text236
 29883  00A6CE                     __ptext236:
 29884                           	opt callstack 0
 29885  00A6CE                     i2_TMR4_Stop:
 29886                           	opt callstack 13
 29887                           
 29888                           ; BSR set to: 57
 29889                           ;mcc_generated_files/tmr4.c: 122:     T4CONbits.TMR4ON = 0;
 29890                           
 29891                           ; BSR set to: 57
 29892                           ;incstack = 0
 29893  00A6CE  9EA0               	bcf	160,7,c	;volatile
 29894                           
 29895                           ; BSR set to: 57
 29896  00A6D0  0012               	return		;funcret
 29897  00A6D2                     __end_ofi2_TMR4_Stop:
 29898                           	opt callstack 0
 29899                           
 29900 ;; *************** function i2_BuzzerOff *****************
 29901 ;; Defined at:
 29902 ;;		line 458 in file "buzzer.c"
 29903 ;; Parameters:    Size  Location     Type
 29904 ;;		None
 29905 ;; Auto vars:     Size  Location     Type
 29906 ;;		None
 29907 ;; Return value:  Size  Location     Type
 29908 ;;                  1    wreg      void 
 29909 ;; Registers used:
 29910 ;;		wreg, status,2, cstack
 29911 ;; Tracked objects:
 29912 ;;		On entry : 3D/0
 29913 ;;		On exit  : 3F/39
 29914 ;;		Unchanged: 0/0
 29915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29920 ;;Total ram usage:        0 bytes
 29921 ;; Hardware stack levels used:    1
 29922 ;; Hardware stack levels required when called:    1
 29923 ;; This function calls:
 29924 ;;		i2_CMP1_Disable
 29925 ;; This function is called by:
 29926 ;;		_BuzzerTestHandler
 29927 ;;		i2_BuzzerClear
 29928 ;;		i2_BuzzerTask
 29929 ;; This function uses a non-reentrant model
 29930 ;;
 29931                           
 29932                           	psect	text237
 29933  00A1AE                     __ptext237:
 29934                           	opt callstack 0
 29935  00A1AE                     i2_BuzzerOff:
 29936                           	opt callstack 13
 29937                           
 29938                           ;buzzer.c: 459:     PWM6CON = 0x00;
 29939                           
 29940                           ; BSR set to: 57
 29941                           ;incstack = 0
 29942  00A1AE  0E00               	movlw	0
 29943  00A1B0  6E6A               	movwf	106,c	;volatile
 29944                           
 29945                           ;buzzer.c: 460:     on = 0;
 29946  00A1B2  0E00               	movlw	0
 29947  00A1B4  0100               	movlb	0	; () banked
 29948  00A1B6  6FF9               	movwf	_on& (0+255),b
 29949                           
 29950                           ; BSR set to: 0
 29951                           ;buzzer.c: 461:     CMP1_Disable();
 29952  00A1B8  ECE9  F052         	call	i2_CMP1_Disable	;wreg free
 29953                           
 29954                           ; BSR set to: 57
 29955  00A1BC  0012               	return		;funcret
 29956  00A1BE                     __end_ofi2_BuzzerOff:
 29957                           	opt callstack 0
 29958                           
 29959 ;; *************** function i2_HistAlarm *****************
 29960 ;; Defined at:
 29961 ;;		line 465 in file "alarm.c"
 29962 ;; Parameters:    Size  Location     Type
 29963 ;;		None
 29964 ;; Auto vars:     Size  Location     Type
 29965 ;;  HistAlarm       2   93[COMRAM] int 
 29966 ;; Return value:  Size  Location     Type
 29967 ;;                  1    wreg      void 
 29968 ;; Registers used:
 29969 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29970 ;; Tracked objects:
 29971 ;;		On entry : 3F/0
 29972 ;;		On exit  : 0/0
 29973 ;;		Unchanged: 0/0
 29974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29976 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29977 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29978 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29979 ;;Total ram usage:        4 bytes
 29980 ;; Hardware stack levels used:    1
 29981 ;; Hardware stack levels required when called:   12
 29982 ;; This function calls:
 29983 ;;		i2_AlarmUpdateLCD
 29984 ;;		i2_TMR5_StartTimer
 29985 ;;		i2_TMR5_StopTimer
 29986 ;; This function is called by:
 29987 ;;		_ButtonTask
 29988 ;; This function uses a non-reentrant model
 29989 ;;
 29990                           
 29991                           	psect	text238
 29992  00670C                     __ptext238:
 29993                           	opt callstack 0
 29994  00670C                     i2_HistAlarm:
 29995                           	opt callstack 2
 29996                           
 29997                           ; BSR set to: 0
 29998                           ;alarm.c: 466:     TMR5_StopTimer();
 29999                           
 30000                           ; BSR set to: 57
 30001                           ;incstack = 0
 30002  00670C  EC69  F053         	call	i2_TMR5_StopTimer	;wreg free
 30003                           
 30004                           ; BSR set to: 0
 30005                           ;alarm.c: 467:     int i;;alarm.c: 469:     if (histSec == 0 ) {
 30006  006710  0101               	movlb	1	; () banked
 30007  006712  51E9               	movf	_histSec& (0+255),w,b
 30008  006714  11EA               	iorwf	(_histSec+1)& (0+255),w,b
 30009  006716  A4D8               	btfss	status,2,c
 30010  006718  D02D               	goto	i2l20255
 30011                           
 30012                           ; BSR set to: 1
 30013                           ;alarm.c: 471:         for (i=0; i<sizeof(alarmData)/sizeof(a); i++) {
 30014  00671A  0E00               	movlw	0
 30015  00671C  6E5F               	movwf	(i2HistAlarm@i+1)^0,c
 30016  00671E  0E00               	movlw	0
 30017  006720  6E5E               	movwf	i2HistAlarm@i^0,c
 30018  006722                     i2l20237:
 30019                           
 30020                           ;alarm.c: 472:             if (alarms[i]) break;
 30021  006722  90D8               	bcf	status,0,c
 30022  006724  345E               	rlcf	i2HistAlarm@i^0,w,c
 30023  006726  6ED9               	movwf	fsr2l,c
 30024  006728  345F               	rlcf	(i2HistAlarm@i+1)^0,w,c
 30025  00672A  6EDA               	movwf	fsr2h,c
 30026  00672C  0E00               	movlw	low _alarms
 30027  00672E  26D9               	addwf	fsr2l,f,c
 30028  006730  0E03               	movlw	high _alarms
 30029  006732  22DA               	addwfc	fsr2h,f,c
 30030  006734  50DE               	movf	postinc2,w,c
 30031  006736  10DE               	iorwf	postinc2,w,c
 30032  006738  A4D8               	btfss	status,2,c
 30033  00673A  D008               	goto	i2u1941_40
 30034                           
 30035                           ;alarm.c: 473:         }
 30036  00673C  4A5E               	infsnz	i2HistAlarm@i^0,f,c
 30037  00673E  2A5F               	incf	(i2HistAlarm@i+1)^0,f,c
 30038  006740  505F               	movf	(i2HistAlarm@i+1)^0,w,c
 30039  006742  E104               	bnz	i2u1941_40
 30040  006744  0E13               	movlw	19
 30041  006746  5C5E               	subwf	i2HistAlarm@i^0,w,c
 30042  006748  A0D8               	btfss	status,0,c
 30043  00674A  D7EB               	goto	i2l20237
 30044  00674C                     i2u1941_40:
 30045                           
 30046                           ;alarm.c: 475:         if (i == sizeof(alarmData)/sizeof(a)) {
 30047  00674C  0E13               	movlw	19
 30048  00674E  185E               	xorwf	i2HistAlarm@i^0,w,c
 30049  006750  105F               	iorwf	(i2HistAlarm@i+1)^0,w,c
 30050  006752  A4D8               	btfss	status,2,c
 30051  006754  D003               	goto	i2l20251
 30052  006756                     i2u1942_40:
 30053                           
 30054                           ;alarm.c: 476:             TMR5_StartTimer();
 30055  006756  EC6B  F053         	call	i2_TMR5_StartTimer	;wreg free
 30056  00675A  0012               	return	
 30057  00675C                     i2l20251:
 30058                           
 30059                           ;alarm.c: 479:         histSec = 5;
 30060  00675C  0E00               	movlw	0
 30061  00675E  0101               	movlb	1	; () banked
 30062  006760  6FEA               	movwf	(_histSec+1)& (0+255),b
 30063  006762  0E05               	movlw	5
 30064  006764  6FE9               	movwf	_histSec& (0+255),b
 30065                           
 30066                           ; BSR set to: 1
 30067                           ;alarm.c: 480:         hist=i;
 30068  006766  0060  F178  F1E7   	movff	i2HistAlarm@i,_hist
 30069  00676C  0060  F17C  F1E8   	movff	i2HistAlarm@i+1,_hist+1
 30070                           
 30071                           ;alarm.c: 481:     } else {
 30072  006772  D049               	goto	i2l20295
 30073  006774                     i2l20255:
 30074                           
 30075                           ; BSR set to: 1
 30076                           ;alarm.c: 484:         for (i=hist+1; i<sizeof(alarmData)/sizeof(a); i++) {
 30077  006774  0E01               	movlw	1
 30078  006776  25E7               	addwf	_hist& (0+255),w,b
 30079  006778  6E5E               	movwf	i2HistAlarm@i^0,c
 30080  00677A  0E00               	movlw	0
 30081  00677C  21E8               	addwfc	(_hist+1)& (0+255),w,b
 30082  00677E  6E5F               	movwf	(i2HistAlarm@i+1)^0,c
 30083  006780  505F               	movf	(i2HistAlarm@i+1)^0,w,c
 30084  006782  E116               	bnz	i2l20267
 30085  006784  D011               	goto	L11
 30086  006786                     i2l20259:
 30087                           
 30088                           ;alarm.c: 485:             if (alarms[i]) break;
 30089  006786  90D8               	bcf	status,0,c
 30090  006788  345E               	rlcf	i2HistAlarm@i^0,w,c
 30091  00678A  6ED9               	movwf	fsr2l,c
 30092  00678C  345F               	rlcf	(i2HistAlarm@i+1)^0,w,c
 30093  00678E  6EDA               	movwf	fsr2h,c
 30094  006790  0E00               	movlw	low _alarms
 30095  006792  26D9               	addwf	fsr2l,f,c
 30096  006794  0E03               	movlw	high _alarms
 30097  006796  22DA               	addwfc	fsr2h,f,c
 30098  006798  50DE               	movf	postinc2,w,c
 30099  00679A  10DE               	iorwf	postinc2,w,c
 30100  00679C  A4D8               	btfss	status,2,c
 30101  00679E  D008               	goto	i2u1945_40
 30102                           
 30103                           ;alarm.c: 486:         }
 30104  0067A0  4A5E               	infsnz	i2HistAlarm@i^0,f,c
 30105  0067A2  2A5F               	incf	(i2HistAlarm@i+1)^0,f,c
 30106  0067A4  505F               	movf	(i2HistAlarm@i+1)^0,w,c
 30107  0067A6  E104               	bnz	i2u1945_40
 30108  0067A8                     L11:
 30109  0067A8  0E13               	movlw	19
 30110  0067AA  5C5E               	subwf	i2HistAlarm@i^0,w,c
 30111  0067AC  A0D8               	btfss	status,0,c
 30112  0067AE  D7EB               	goto	i2l20259
 30113  0067B0                     i2u1945_40:
 30114  0067B0                     i2l20267:
 30115                           
 30116                           ;alarm.c: 488:         if (i>=sizeof(alarmData)/sizeof(a)) {
 30117  0067B0  505F               	movf	(i2HistAlarm@i+1)^0,w,c
 30118  0067B2  E104               	bnz	i2u1946_40
 30119  0067B4  0E13               	movlw	19
 30120  0067B6  5C5E               	subwf	i2HistAlarm@i^0,w,c
 30121  0067B8  A0D8               	btfss	status,0,c
 30122  0067BA  D7D0               	goto	i2l20251
 30123  0067BC                     i2u1946_40:
 30124                           
 30125                           ;alarm.c: 490:             for (i=0; i<sizeof(alarmData)/sizeof(a); i++) {
 30126  0067BC  0E00               	movlw	0
 30127  0067BE  6E5F               	movwf	(i2HistAlarm@i+1)^0,c
 30128  0067C0  0E00               	movlw	0
 30129  0067C2  6E5E               	movwf	i2HistAlarm@i^0,c
 30130  0067C4                     i2l20275:
 30131                           
 30132                           ;alarm.c: 491:                 if (alarms[i]) break;
 30133  0067C4  90D8               	bcf	status,0,c
 30134  0067C6  345E               	rlcf	i2HistAlarm@i^0,w,c
 30135  0067C8  6ED9               	movwf	fsr2l,c
 30136  0067CA  345F               	rlcf	(i2HistAlarm@i+1)^0,w,c
 30137  0067CC  6EDA               	movwf	fsr2h,c
 30138  0067CE  0E00               	movlw	low _alarms
 30139  0067D0  26D9               	addwf	fsr2l,f,c
 30140  0067D2  0E03               	movlw	high _alarms
 30141  0067D4  22DA               	addwfc	fsr2h,f,c
 30142  0067D6  50DE               	movf	postinc2,w,c
 30143  0067D8  10DE               	iorwf	postinc2,w,c
 30144  0067DA  A4D8               	btfss	status,2,c
 30145  0067DC  D008               	goto	i2u1948_40
 30146                           
 30147                           ;alarm.c: 492:             }
 30148  0067DE  4A5E               	infsnz	i2HistAlarm@i^0,f,c
 30149  0067E0  2A5F               	incf	(i2HistAlarm@i+1)^0,f,c
 30150  0067E2  505F               	movf	(i2HistAlarm@i+1)^0,w,c
 30151  0067E4  E104               	bnz	i2u1948_40
 30152  0067E6  0E13               	movlw	19
 30153  0067E8  5C5E               	subwf	i2HistAlarm@i^0,w,c
 30154  0067EA  A0D8               	btfss	status,0,c
 30155  0067EC  D7EB               	goto	i2l20275
 30156  0067EE                     i2u1948_40:
 30157                           
 30158                           ;alarm.c: 494:             if (i >= sizeof(alarmData)/sizeof(a)) {
 30159  0067EE  505F               	movf	(i2HistAlarm@i+1)^0,w,c
 30160  0067F0  E104               	bnz	i2u1949_40
 30161  0067F2  0E13               	movlw	19
 30162  0067F4  5C5E               	subwf	i2HistAlarm@i^0,w,c
 30163  0067F6  A0D8               	btfss	status,0,c
 30164  0067F8  D7B1               	goto	i2l20251
 30165  0067FA                     i2u1949_40:
 30166                           
 30167                           ;alarm.c: 495:                 histSec = 0;
 30168  0067FA  0E00               	movlw	0
 30169  0067FC  0101               	movlb	1	; () banked
 30170  0067FE  6FEA               	movwf	(_histSec+1)& (0+255),b
 30171  006800  0E00               	movlw	0
 30172  006802  6FE9               	movwf	_histSec& (0+255),b
 30173  006804  D7A8               	goto	i2u1942_40
 30174  006806                     i2l20295:
 30175                           
 30176                           ; BSR set to: 1
 30177                           ;alarm.c: 505:     AlarmUpdateLCD();
 30178  006806  ECED  F02E         	call	i2_AlarmUpdateLCD	;wreg free
 30179  00680A  D7A5               	goto	i2u1942_40
 30180  00680C                     __end_ofi2_HistAlarm:
 30181                           	opt callstack 0
 30182                           
 30183 ;; *************** function i2_TMR5_StopTimer *****************
 30184 ;; Defined at:
 30185 ;;		line 105 in file "mcc_generated_files/tmr5.c"
 30186 ;; Parameters:    Size  Location     Type
 30187 ;;		None
 30188 ;; Auto vars:     Size  Location     Type
 30189 ;;		None
 30190 ;; Return value:  Size  Location     Type
 30191 ;;                  1    wreg      void 
 30192 ;; Registers used:
 30193 ;;		None
 30194 ;; Tracked objects:
 30195 ;;		On entry : 3F/0
 30196 ;;		On exit  : 3F/0
 30197 ;;		Unchanged: 3F/0
 30198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30203 ;;Total ram usage:        0 bytes
 30204 ;; Hardware stack levels used:    1
 30205 ;; This function calls:
 30206 ;;		Nothing
 30207 ;; This function is called by:
 30208 ;;		i2_HistAlarm
 30209 ;; This function uses a non-reentrant model
 30210 ;;
 30211                           
 30212                           	psect	text239
 30213  00A6D2                     __ptext239:
 30214                           	opt callstack 0
 30215  00A6D2                     i2_TMR5_StopTimer:
 30216                           	opt callstack 13
 30217                           
 30218                           ; BSR set to: 0
 30219                           ;mcc_generated_files/tmr5.c: 108:     T5CONbits.TMR5ON = 0;
 30220                           
 30221                           ;incstack = 0
 30222  00A6D2  909A               	bcf	154,0,c	;volatile
 30223                           
 30224                           ; BSR set to: 0
 30225  00A6D4  0012               	return		;funcret
 30226  00A6D6                     __end_ofi2_TMR5_StopTimer:
 30227                           	opt callstack 0
 30228                           
 30229 ;; *************** function i2_TMR5_StartTimer *****************
 30230 ;; Defined at:
 30231 ;;		line 99 in file "mcc_generated_files/tmr5.c"
 30232 ;; Parameters:    Size  Location     Type
 30233 ;;		None
 30234 ;; Auto vars:     Size  Location     Type
 30235 ;;		None
 30236 ;; Return value:  Size  Location     Type
 30237 ;;                  1    wreg      void 
 30238 ;; Registers used:
 30239 ;;		None
 30240 ;; Tracked objects:
 30241 ;;		On entry : 0/1
 30242 ;;		On exit  : 0/0
 30243 ;;		Unchanged: 0/0
 30244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30249 ;;Total ram usage:        0 bytes
 30250 ;; Hardware stack levels used:    1
 30251 ;; This function calls:
 30252 ;;		Nothing
 30253 ;; This function is called by:
 30254 ;;		i2_HistAlarm
 30255 ;; This function uses a non-reentrant model
 30256 ;;
 30257                           
 30258                           	psect	text240
 30259  00A6D6                     __ptext240:
 30260                           	opt callstack 0
 30261  00A6D6                     i2_TMR5_StartTimer:
 30262                           	opt callstack 13
 30263                           
 30264                           ;mcc_generated_files/tmr5.c: 102:     T5CONbits.TMR5ON = 1;
 30265                           
 30266                           ; BSR set to: 0
 30267                           ;incstack = 0
 30268  00A6D6  809A               	bsf	154,0,c	;volatile
 30269  00A6D8  0012               	return		;funcret
 30270  00A6DA                     __end_ofi2_TMR5_StartTimer:
 30271                           	opt callstack 0
 30272                           
 30273 ;; *************** function i2_AlarmUpdateLCD *****************
 30274 ;; Defined at:
 30275 ;;		line 440 in file "alarm.c"
 30276 ;; Parameters:    Size  Location     Type
 30277 ;;		None
 30278 ;; Auto vars:     Size  Location     Type
 30279 ;;  AlarmUpdateL    2   97[BANK0 ] int 
 30280 ;; Return value:  Size  Location     Type
 30281 ;;                  1    wreg      void 
 30282 ;; Registers used:
 30283 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30284 ;; Tracked objects:
 30285 ;;		On entry : 3F/1
 30286 ;;		On exit  : 0/0
 30287 ;;		Unchanged: 0/0
 30288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30290 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30292 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30293 ;;Total ram usage:        6 bytes
 30294 ;; Hardware stack levels used:    1
 30295 ;; Hardware stack levels required when called:   11
 30296 ;; This function calls:
 30297 ;;		i2_AlarmDisplay
 30298 ;;		i2_AnyAlarm
 30299 ;;		i2_HigherAlarm
 30300 ;;		i2_ValueDisplay
 30301 ;;		i2___wmul
 30302 ;; This function is called by:
 30303 ;;		i2_HistAlarm
 30304 ;; This function uses a non-reentrant model
 30305 ;;
 30306                           
 30307                           	psect	text241
 30308  005DDA                     __ptext241:
 30309                           	opt callstack 0
 30310  005DDA                     i2_AlarmUpdateLCD:
 30311                           	opt callstack 2
 30312                           
 30313                           ; BSR set to: 1
 30314                           ;alarm.c: 442:     if (histSec) {
 30315                           
 30316                           ;incstack = 0
 30317  005DDA  51E9               	movf	_histSec& (0+255),w,b
 30318  005DDC  11EA               	iorwf	(_histSec+1)& (0+255),w,b
 30319  005DDE  B4D8               	btfsc	status,2,c
 30320  005DE0  D03F               	goto	i2l19251
 30321                           
 30322                           ; BSR set to: 1
 30323                           ;alarm.c: 443:         displayStatus = 2;
 30324  005DE2  0E00               	movlw	0
 30325  005DE4  0100               	movlb	0	; () banked
 30326  005DE6  6FE1               	movwf	(_displayStatus+1)& (0+255),b
 30327  005DE8  0E02               	movlw	2
 30328  005DEA  6FE0               	movwf	_displayStatus& (0+255),b
 30329                           
 30330                           ; BSR set to: 0
 30331                           ;alarm.c: 444:         AlarmDisplay(alarmData[hist].type, alarmData[hist].name);
 30332  005DEC  0060  F79C  F001   	movff	_hist,i2___wmul@multiplier
 30333  005DF2  0060  F7A0  F002   	movff	_hist+1,i2___wmul@multiplier+1
 30334  005DF8  0E00               	movlw	0
 30335  005DFA  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 30336  005DFC  0E15               	movlw	21
 30337  005DFE  6E03               	movwf	i2___wmul@multiplicand^0,c
 30338  005E00  EC06  F04D         	call	i2___wmul	;wreg free
 30339  005E04  0E25               	movlw	low (_alarmData+17)
 30340  005E06  2401               	addwf	?i2___wmul^0,w,c
 30341  005E08  6ED9               	movwf	fsr2l,c
 30342  005E0A  0E09               	movlw	high (_alarmData+17)
 30343  005E0C  2002               	addwfc	(?i2___wmul+1)^0,w,c
 30344  005E0E  6EDA               	movwf	fsr2h,c
 30345  005E10  006F FF78  F0C3    	movff	postinc2,i2_AlarmUpdateLCD$7131
 30346  005E16  006F FF74  F0C4    	movff	postdec2,i2_AlarmUpdateLCD$7131+1
 30347                           
 30348                           ;alarm.c: 444:         AlarmDisplay(alarmData[hist].type, alarmData[hist].name);
 30349  005E1C  0060  F79C  F001   	movff	_hist,i2___wmul@multiplier
 30350  005E22  0060  F7A0  F002   	movff	_hist+1,i2___wmul@multiplier+1
 30351  005E28  0E00               	movlw	0
 30352  005E2A  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 30353  005E2C  0E15               	movlw	21
 30354  005E2E  6E03               	movwf	i2___wmul@multiplicand^0,c
 30355  005E30  EC06  F04D         	call	i2___wmul	;wreg free
 30356  005E34  0E14               	movlw	low _alarmData
 30357  005E36  2401               	addwf	?i2___wmul^0,w,c
 30358  005E38  0100               	movlb	0	; () banked
 30359  005E3A  6FC5               	movwf	i2_AlarmUpdateLCD$7132& (0+255),b
 30360  005E3C  0E09               	movlw	high _alarmData
 30361  005E3E  2002               	addwfc	(?i2___wmul+1)^0,w,c
 30362  005E40  6FC6               	movwf	(i2_AlarmUpdateLCD$7132+1)& (0+255),b
 30363                           
 30364                           ; BSR set to: 0
 30365                           ;alarm.c: 444:         AlarmDisplay(alarmData[hist].type, alarmData[hist].name);
 30366  005E42  0060  F30C  F0BD   	movff	i2_AlarmUpdateLCD$7131,i2AlarmDisplay@type
 30367  005E48  0060  F310  F0BE   	movff	i2_AlarmUpdateLCD$7131+1,i2AlarmDisplay@type+1
 30368  005E4E  0060  F314  F0BF   	movff	i2_AlarmUpdateLCD$7132,i2AlarmDisplay@alarm
 30369  005E54  0060  F318  F0C0   	movff	i2_AlarmUpdateLCD$7132+1,i2AlarmDisplay@alarm+1
 30370  005E5A  ECB9  F03D         	call	i2_AlarmDisplay	;wreg free
 30371                           
 30372                           ;alarm.c: 446:     } else {
 30373  005E5E  0012               	return	
 30374  005E60                     i2l19251:
 30375                           
 30376                           ; BSR set to: 1
 30377                           ;alarm.c: 447:         if (displayStatus==1 && AnyAlarm())
 30378  005E60  0100               	movlb	0	; () banked
 30379  005E62  05E0               	decf	_displayStatus& (0+255),w,b
 30380  005E64  11E1               	iorwf	(_displayStatus+1)& (0+255),w,b
 30381  005E66  A4D8               	btfss	status,2,c
 30382  005E68  D04C               	goto	i2l19265
 30383                           
 30384                           ; BSR set to: 0
 30385  005E6A  ECAA  F04A         	call	i2_AnyAlarm	;wreg free
 30386  005E6E  0900               	iorlw	0
 30387  005E70  B4D8               	btfsc	status,2,c
 30388  005E72  D047               	goto	i2l19265
 30389                           
 30390                           ;alarm.c: 448:         {;alarm.c: 449:             int id;;alarm.c: 451:             id 
      +                          = HigherAlarm();
 30391  005E74  EC91  F039         	call	i2_HigherAlarm	;wreg free
 30392  005E78  0060  F01C  F0C1   	movff	?i2_HigherAlarm,i2AlarmUpdateLCD@id
 30393  005E7E  0060  F020  F0C2   	movff	?i2_HigherAlarm+1,i2AlarmUpdateLCD@id+1
 30394                           
 30395                           ;alarm.c: 453:             AlarmDisplay(alarmData[id].type,alarmData[id].name);
 30396  005E84  0060  F304  F001   	movff	i2AlarmUpdateLCD@id,i2___wmul@multiplier
 30397  005E8A  0060  F308  F002   	movff	i2AlarmUpdateLCD@id+1,i2___wmul@multiplier+1
 30398  005E90  0E00               	movlw	0
 30399  005E92  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 30400  005E94  0E15               	movlw	21
 30401  005E96  6E03               	movwf	i2___wmul@multiplicand^0,c
 30402  005E98  EC06  F04D         	call	i2___wmul	;wreg free
 30403  005E9C  0E25               	movlw	low (_alarmData+17)
 30404  005E9E  2401               	addwf	?i2___wmul^0,w,c
 30405  005EA0  6ED9               	movwf	fsr2l,c
 30406  005EA2  0E09               	movlw	high (_alarmData+17)
 30407  005EA4  2002               	addwfc	(?i2___wmul+1)^0,w,c
 30408  005EA6  6EDA               	movwf	fsr2h,c
 30409  005EA8  006F FF78  F0C3    	movff	postinc2,i2_AlarmUpdateLCD$7131
 30410  005EAE  006F FF74  F0C4    	movff	postdec2,i2_AlarmUpdateLCD$7131+1
 30411                           
 30412                           ;alarm.c: 453:             AlarmDisplay(alarmData[id].type,alarmData[id].name);
 30413  005EB4  0060  F304  F001   	movff	i2AlarmUpdateLCD@id,i2___wmul@multiplier
 30414  005EBA  0060  F308  F002   	movff	i2AlarmUpdateLCD@id+1,i2___wmul@multiplier+1
 30415  005EC0  0E00               	movlw	0
 30416  005EC2  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 30417  005EC4  0E15               	movlw	21
 30418  005EC6  6E03               	movwf	i2___wmul@multiplicand^0,c
 30419  005EC8  EC06  F04D         	call	i2___wmul	;wreg free
 30420  005ECC  0E14               	movlw	low _alarmData
 30421  005ECE  2401               	addwf	?i2___wmul^0,w,c
 30422  005ED0  0100               	movlb	0	; () banked
 30423  005ED2  6FC5               	movwf	i2_AlarmUpdateLCD$7132& (0+255),b
 30424  005ED4  0E09               	movlw	high _alarmData
 30425  005ED6  2002               	addwfc	(?i2___wmul+1)^0,w,c
 30426  005ED8  6FC6               	movwf	(i2_AlarmUpdateLCD$7132+1)& (0+255),b
 30427                           
 30428                           ; BSR set to: 0
 30429                           ;alarm.c: 453:             AlarmDisplay(alarmData[id].type,alarmData[id].name);
 30430  005EDA  0060  F30C  F0BD   	movff	i2_AlarmUpdateLCD$7131,i2AlarmDisplay@type
 30431  005EE0  0060  F310  F0BE   	movff	i2_AlarmUpdateLCD$7131+1,i2AlarmDisplay@type+1
 30432  005EE6  0060  F314  F0BF   	movff	i2_AlarmUpdateLCD$7132,i2AlarmDisplay@alarm
 30433  005EEC  0060  F318  F0C0   	movff	i2_AlarmUpdateLCD$7132+1,i2AlarmDisplay@alarm+1
 30434  005EF2  ECB9  F03D         	call	i2_AlarmDisplay	;wreg free
 30435                           
 30436                           ;alarm.c: 454:             displayStatus = 0;
 30437  005EF6  0E00               	movlw	0
 30438  005EF8  0100               	movlb	0	; () banked
 30439  005EFA  6FE1               	movwf	(_displayStatus+1)& (0+255),b
 30440  005EFC  0E00               	movlw	0
 30441  005EFE  6FE0               	movwf	_displayStatus& (0+255),b
 30442                           
 30443                           ;alarm.c: 455:         } else {
 30444  005F00  0012               	return	
 30445  005F02                     i2l19265:
 30446                           
 30447                           ;alarm.c: 458:             ValueDisplay();
 30448  005F02  EC54  F00F         	call	i2_ValueDisplay	;wreg free
 30449                           
 30450                           ;alarm.c: 460:             if (AnyAlarm()) displayStatus = 1;
 30451  005F06  ECAA  F04A         	call	i2_AnyAlarm	;wreg free
 30452  005F0A  0900               	iorlw	0
 30453  005F0C  B4D8               	btfsc	status,2,c
 30454  005F0E  0012               	return	
 30455  005F10  0E00               	movlw	0
 30456  005F12  0100               	movlb	0	; () banked
 30457  005F14  6FE1               	movwf	(_displayStatus+1)& (0+255),b
 30458  005F16  0E01               	movlw	1
 30459  005F18  6FE0               	movwf	_displayStatus& (0+255),b
 30460  005F1A  0012               	return		;funcret
 30461  005F1C                     __end_ofi2_AlarmUpdateLCD:
 30462                           	opt callstack 0
 30463                           
 30464 ;; *************** function i2_HigherAlarm *****************
 30465 ;; Defined at:
 30466 ;;		line 359 in file "alarm.c"
 30467 ;; Parameters:    Size  Location     Type
 30468 ;;		None
 30469 ;; Auto vars:     Size  Location     Type
 30470 ;;  HigherAlarm     2   15[COMRAM] int 
 30471 ;;  HigherAlarm     2   13[COMRAM] int 
 30472 ;; Return value:  Size  Location     Type
 30473 ;;                  2    6[COMRAM] int 
 30474 ;; Registers used:
 30475 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30476 ;; Tracked objects:
 30477 ;;		On entry : 0/1
 30478 ;;		On exit  : 0/0
 30479 ;;		Unchanged: 0/0
 30480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30481 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30482 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30483 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30484 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30485 ;;Total ram usage:       11 bytes
 30486 ;; Hardware stack levels used:    1
 30487 ;; Hardware stack levels required when called:    1
 30488 ;; This function calls:
 30489 ;;		i2___wmul
 30490 ;; This function is called by:
 30491 ;;		i2_MuteAlarm
 30492 ;;		i2_AlarmUpdateLCD
 30493 ;; This function uses a non-reentrant model
 30494 ;;
 30495                           
 30496                           	psect	text242
 30497  007322                     __ptext242:
 30498                           	opt callstack 0
 30499  007322                     i2_HigherAlarm:
 30500                           	opt callstack 12
 30501                           
 30502                           ;alarm.c: 360:     int max=-1;
 30503                           
 30504                           ;incstack = 0
 30505  007322  680E               	setf	i2HigherAlarm@max^0,c
 30506  007324  680F               	setf	(i2HigherAlarm@max+1)^0,c
 30507                           
 30508                           ;alarm.c: 361:     for (int i=0; i<sizeof(alarmData)/sizeof(a); i++) {
 30509  007326  0E00               	movlw	0
 30510  007328  6E11               	movwf	(i2HigherAlarm@i+1)^0,c
 30511  00732A  0E00               	movlw	0
 30512  00732C  6E10               	movwf	i2HigherAlarm@i^0,c
 30513  00732E                     i2l18873:
 30514                           
 30515                           ;alarm.c: 362:         if (alarms[i]) {
 30516  00732E  90D8               	bcf	status,0,c
 30517  007330  3410               	rlcf	i2HigherAlarm@i^0,w,c
 30518  007332  6ED9               	movwf	fsr2l,c
 30519  007334  3411               	rlcf	(i2HigherAlarm@i+1)^0,w,c
 30520  007336  6EDA               	movwf	fsr2h,c
 30521  007338  0E00               	movlw	low _alarms
 30522  00733A  26D9               	addwf	fsr2l,f,c
 30523  00733C  0E03               	movlw	high _alarms
 30524  00733E  22DA               	addwfc	fsr2h,f,c
 30525  007340  50DE               	movf	postinc2,w,c
 30526  007342  10DE               	iorwf	postinc2,w,c
 30527  007344  B4D8               	btfsc	status,2,c
 30528  007346  D037               	goto	i2l18883
 30529                           
 30530                           ;alarm.c: 363:             if (max<0) max = i;
 30531  007348  AE0F               	btfss	(i2HigherAlarm@max+1)^0,7,c
 30532  00734A  D007               	goto	i2l18879
 30533  00734C                     i2u1842_40:
 30534  00734C  0060  F040  F00E   	movff	i2HigherAlarm@i,i2HigherAlarm@max
 30535  007352  0060  F044  F00F   	movff	i2HigherAlarm@i+1,i2HigherAlarm@max+1
 30536  007358  D02E               	goto	i2l18883
 30537  00735A                     i2l18879:
 30538  00735A  0060  F040  F001   	movff	i2HigherAlarm@i,i2___wmul@multiplier
 30539  007360  0060  F044  F002   	movff	i2HigherAlarm@i+1,i2___wmul@multiplier+1
 30540  007366  0E00               	movlw	0
 30541  007368  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 30542  00736A  0E15               	movlw	21
 30543  00736C  6E03               	movwf	i2___wmul@multiplicand^0,c
 30544  00736E  EC06  F04D         	call	i2___wmul	;wreg free
 30545  007372  0E25               	movlw	low (_alarmData+17)
 30546  007374  2401               	addwf	?i2___wmul^0,w,c
 30547  007376  6ED9               	movwf	fsr2l,c
 30548  007378  0E09               	movlw	high (_alarmData+17)
 30549  00737A  2002               	addwfc	(?i2___wmul+1)^0,w,c
 30550  00737C  6EDA               	movwf	fsr2h,c
 30551  00737E  0060  F038  F001   	movff	i2HigherAlarm@max,i2___wmul@multiplier
 30552  007384  0060  F03C  F002   	movff	i2HigherAlarm@max+1,i2___wmul@multiplier+1
 30553  00738A  0E00               	movlw	0
 30554  00738C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 30555  00738E  0E15               	movlw	21
 30556  007390  6E03               	movwf	i2___wmul@multiplicand^0,c
 30557  007392  EC06  F04D         	call	i2___wmul	;wreg free
 30558  007396  0E25               	movlw	low (_alarmData+17)
 30559  007398  2401               	addwf	?i2___wmul^0,w,c
 30560  00739A  6EE1               	movwf	fsr1l,c
 30561  00739C  0E09               	movlw	high (_alarmData+17)
 30562  00739E  2002               	addwfc	(?i2___wmul+1)^0,w,c
 30563  0073A0  6EE2               	movwf	fsr1h,c
 30564  0073A2  50DE               	movf	postinc2,w,c
 30565  0073A4  5CE6               	subwf	postinc1,w,c
 30566  0073A6  50E6               	movf	postinc1,w,c
 30567  0073A8  0A80               	xorlw	128
 30568  0073AA  6E0D               	movwf	(??i2_HigherAlarm+4)^0,c
 30569  0073AC  50DE               	movf	postinc2,w,c
 30570  0073AE  0A80               	xorlw	128
 30571  0073B0  580D               	subwfb	(??i2_HigherAlarm+4)^0,w,c
 30572  0073B2  A0D8               	btfss	status,0,c
 30573  0073B4  D7CB               	goto	i2u1842_40
 30574  0073B6                     i2l18883:
 30575                           
 30576                           ;alarm.c: 366:     }
 30577  0073B6  4A10               	infsnz	i2HigherAlarm@i^0,f,c
 30578  0073B8  2A11               	incf	(i2HigherAlarm@i+1)^0,f,c
 30579  0073BA  5011               	movf	(i2HigherAlarm@i+1)^0,w,c
 30580  0073BC  E104               	bnz	i2u1844_40
 30581  0073BE  0E13               	movlw	19
 30582  0073C0  5C10               	subwf	i2HigherAlarm@i^0,w,c
 30583  0073C2  A0D8               	btfss	status,0,c
 30584  0073C4  D7B4               	goto	i2l18873
 30585  0073C6                     i2u1844_40:
 30586                           
 30587                           ;alarm.c: 367:     return max;
 30588  0073C6  0060  F038  F007   	movff	i2HigherAlarm@max,?i2_HigherAlarm
 30589  0073CC  0060  F03C  F008   	movff	i2HigherAlarm@max+1,?i2_HigherAlarm+1
 30590  0073D2  0012               	return		;funcret
 30591  0073D4                     __end_ofi2_HigherAlarm:
 30592                           	opt callstack 0
 30593                           
 30594 ;; *************** function i2_AlarmDisplay *****************
 30595 ;; Defined at:
 30596 ;;		line 110 in file "display.c"
 30597 ;; Parameters:    Size  Location     Type
 30598 ;;  type            2   93[BANK0 ] int 
 30599 ;;  alarm           2   95[BANK0 ] PTR unsigned char 
 30600 ;;		 -> alarmData(399), 
 30601 ;; Auto vars:     Size  Location     Type
 30602 ;;  AlarmDisplay    1   86[COMRAM] unsigned char 
 30603 ;; Return value:  Size  Location     Type
 30604 ;;                  1    wreg      void 
 30605 ;; Registers used:
 30606 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30607 ;; Tracked objects:
 30608 ;;		On entry : 3F/0
 30609 ;;		On exit  : 3D/0
 30610 ;;		Unchanged: 0/0
 30611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30612 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30613 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30615 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30616 ;;Total ram usage:        9 bytes
 30617 ;; Hardware stack levels used:    1
 30618 ;; Hardware stack levels required when called:   10
 30619 ;; This function calls:
 30620 ;;		i2_ValueDisplay
 30621 ;;		i2___awmod
 30622 ;;		i2_sprintf
 30623 ;; This function is called by:
 30624 ;;		i2_AlarmUpdateLCD
 30625 ;; This function uses a non-reentrant model
 30626 ;;
 30627                           
 30628                           	psect	text243
 30629  007B72                     __ptext243:
 30630                           	opt callstack 0
 30631  007B72                     i2_AlarmDisplay:
 30632                           	opt callstack 2
 30633                           
 30634                           ; BSR set to: 0
 30635                           ;display.c: 111:     static int cnt = 0;;display.c: 112:     char t = (type==4) ? 'H' : 
      +                          ((type==2) ? 'M' : 'L');
 30636                           
 30637                           ;incstack = 0
 30638  007B72  0E04               	movlw	4
 30639  007B74  19BD               	xorwf	i2AlarmDisplay@type& (0+255),w,b
 30640  007B76  11BE               	iorwf	(i2AlarmDisplay@type+1)& (0+255),w,b
 30641  007B78  B4D8               	btfsc	status,2,c
 30642  007B7A  D014               	goto	i2l18849
 30643                           
 30644                           ; BSR set to: 0
 30645  007B7C  0E02               	movlw	2
 30646  007B7E  19BD               	xorwf	i2AlarmDisplay@type& (0+255),w,b
 30647  007B80  11BE               	iorwf	(i2AlarmDisplay@type+1)& (0+255),w,b
 30648  007B82  B4D8               	btfsc	status,2,c
 30649  007B84  D004               	goto	i2l18845
 30650                           
 30651                           ; BSR set to: 0
 30652  007B86  0E00               	movlw	0
 30653  007B88  6E5B               	movwf	(i2_AlarmDisplay$4016+1)^0,c
 30654  007B8A  0E4C               	movlw	76
 30655  007B8C  D003               	goto	L12
 30656  007B8E                     i2l18845:
 30657                           
 30658                           ; BSR set to: 0
 30659  007B8E  0E00               	movlw	0
 30660  007B90  6E5B               	movwf	(i2_AlarmDisplay$4016+1)^0,c
 30661  007B92  0E4D               	movlw	77
 30662  007B94                     L12:
 30663  007B94  6E5A               	movwf	i2_AlarmDisplay$4016^0,c
 30664                           
 30665                           ; BSR set to: 0
 30666  007B96  0060  F168  F058   	movff	i2_AlarmDisplay$4016,i2_AlarmDisplay$4015
 30667  007B9C  0060  F16C  F059   	movff	i2_AlarmDisplay$4016+1,i2_AlarmDisplay$4015+1
 30668  007BA2  D004               	goto	i2l18851
 30669  007BA4                     i2l18849:
 30670                           
 30671                           ; BSR set to: 0
 30672  007BA4  0E00               	movlw	0
 30673  007BA6  6E59               	movwf	(i2_AlarmDisplay$4015+1)^0,c
 30674  007BA8  0E48               	movlw	72
 30675  007BAA  6E58               	movwf	i2_AlarmDisplay$4015^0,c
 30676  007BAC                     i2l18851:
 30677                           
 30678                           ; BSR set to: 0
 30679  007BAC  0060  F160  F057   	movff	i2_AlarmDisplay$4015,i2AlarmDisplay@t
 30680                           
 30681                           ; BSR set to: 0
 30682                           ;display.c: 114:         sprintf(msg2, "%c %14s", t, alarm);
 30683  007BB2  0ED1               	movlw	low _msg2
 30684  007BB4  6F77               	movwf	i2sprintf@s& (0+255),b
 30685  007BB6  0E03               	movlw	high _msg2
 30686  007BB8  6F78               	movwf	(i2sprintf@s+1)& (0+255),b
 30687  007BBA  0EB2               	movlw	low STR_13
 30688  007BBC  6F79               	movwf	i2sprintf@fmt& (0+255),b
 30689  007BBE  0EFF               	movlw	high STR_13
 30690  007BC0  6F7A               	movwf	(i2sprintf@fmt+1)& (0+255),b
 30691  007BC2  0060  F15C  F07B   	movff	i2AlarmDisplay@t,?i2_sprintf+4
 30692  007BC8  6B7C               	clrf	(?i2_sprintf+5)& (0+255),b
 30693  007BCA  0060  F2FC  F07D   	movff	i2AlarmDisplay@alarm,?i2_sprintf+6
 30694  007BD0  0060  F300  F07E   	movff	i2AlarmDisplay@alarm+1,?i2_sprintf+7
 30695  007BD6  EC61  F047         	call	i2_sprintf	;wreg free
 30696                           
 30697                           ; BSR set to: 0
 30698                           ;display.c: 117:     ValueDisplay();
 30699  007BDA  EC54  F00F         	call	i2_ValueDisplay	;wreg free
 30700                           
 30701                           ;display.c: 118:     cnt++;
 30702  007BDE  0102               	movlb	2	; () banked
 30703  007BE0  4B86               	infsnz	AlarmDisplay@cnt& (0+255),f,b
 30704  007BE2  2B87               	incf	(AlarmDisplay@cnt+1)& (0+255),f,b
 30705                           
 30706                           ; BSR set to: 2
 30707                           ;display.c: 119:     cnt = cnt%10;
 30708  007BE4  0060  FA18  F001   	movff	AlarmDisplay@cnt,i2___awmod@dividend
 30709  007BEA  0060  FA1C  F002   	movff	AlarmDisplay@cnt+1,i2___awmod@dividend+1
 30710  007BF0  0E00               	movlw	0
 30711  007BF2  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 30712  007BF4  0E0A               	movlw	10
 30713  007BF6  6E03               	movwf	i2___awmod@divisor^0,c
 30714  007BF8  ECB9  F041         	call	i2___awmod	;wreg free
 30715  007BFC  0060  F004  F286   	movff	?i2___awmod,AlarmDisplay@cnt
 30716  007C02  0060  F008  F287   	movff	?i2___awmod+1,AlarmDisplay@cnt+1
 30717  007C08  0012               	return		;funcret
 30718  007C0A                     __end_ofi2_AlarmDisplay:
 30719                           	opt callstack 0
 30720                           
 30721 ;; *************** function i2_DisableAlarmSV1 *****************
 30722 ;; Defined at:
 30723 ;;		line 873 in file "monitor.c"
 30724 ;; Parameters:    Size  Location     Type
 30725 ;;		None
 30726 ;; Auto vars:     Size  Location     Type
 30727 ;;		None
 30728 ;; Return value:  Size  Location     Type
 30729 ;;                  1    wreg      void 
 30730 ;; Registers used:
 30731 ;;		wreg, status,2
 30732 ;; Tracked objects:
 30733 ;;		On entry : 3F/0
 30734 ;;		On exit  : 3F/0
 30735 ;;		Unchanged: 0/0
 30736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30741 ;;Total ram usage:        0 bytes
 30742 ;; Hardware stack levels used:    1
 30743 ;; This function calls:
 30744 ;;		Nothing
 30745 ;; This function is called by:
 30746 ;;		_ButtonTask
 30747 ;; This function uses a non-reentrant model
 30748 ;;
 30749                           
 30750                           	psect	text244
 30751  00A628                     __ptext244:
 30752                           	opt callstack 0
 30753  00A628                     i2_DisableAlarmSV1:
 30754                           	opt callstack 14
 30755                           
 30756                           ; BSR set to: 0
 30757                           ;monitor.c: 874:     disableAlarmSV1=1;
 30758                           
 30759                           ;incstack = 0
 30760  00A628  0E01               	movlw	1
 30761  00A62A  6FF3               	movwf	_disableAlarmSV1& (0+255),b
 30762                           
 30763                           ; BSR set to: 0
 30764  00A62C  0012               	return		;funcret
 30765  00A62E                     __end_ofi2_DisableAlarmSV1:
 30766                           	opt callstack 0
 30767                           
 30768 ;; *************** function _TMR0_ISR *****************
 30769 ;; Defined at:
 30770 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 30771 ;; Parameters:    Size  Location     Type
 30772 ;;		None
 30773 ;; Auto vars:     Size  Location     Type
 30774 ;;		None
 30775 ;; Return value:  Size  Location     Type
 30776 ;;                  1    wreg      void 
 30777 ;; Registers used:
 30778 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30779 ;; Tracked objects:
 30780 ;;		On entry : 3F/39
 30781 ;;		On exit  : 0/0
 30782 ;;		Unchanged: 0/0
 30783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30788 ;;Total ram usage:        0 bytes
 30789 ;; Hardware stack levels used:    1
 30790 ;; Hardware stack levels required when called:   11
 30791 ;; This function calls:
 30792 ;;		Absolute function
 30793 ;;		_MonitorPressureTask
 30794 ;;		_TMR0_DefaultInterruptHandler
 30795 ;; This function is called by:
 30796 ;;		_INTERRUPT_InterruptManager
 30797 ;; This function uses a non-reentrant model
 30798 ;;
 30799                           
 30800                           	psect	text245
 30801  009D50                     __ptext245:
 30802                           	opt callstack 0
 30803  009D50                     _TMR0_ISR:
 30804                           	opt callstack 5
 30805                           
 30806                           ; BSR set to: 57
 30807                           ;mcc_generated_files/tmr0.c: 124:     PIR3bits.TMR0IF = 0;
 30808                           
 30809                           ; BSR set to: 0
 30810                           ;incstack = 0
 30811  009D50  9FA3               	bcf	163,7,b	;volatile
 30812                           
 30813                           ; BSR set to: 57
 30814                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
 30815  009D52  0102               	movlb	2	; () banked
 30816  009D54  51DF               	movf	_TMR0_InterruptHandler& (0+255),w,b
 30817  009D56  11E0               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 30818  009D58  B4D8               	btfsc	status,2,c
 30819  009D5A  0012               	return	
 30820                           
 30821                           ; BSR set to: 2
 30822                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
 30823  009D5C  D801               	call	i2u2120_48
 30824  009D5E  0012               	return	
 30825  009D60                     i2u2120_48:
 30826  009D60  0005               	push	
 30827  009D62  6EFA               	movwf	pclath,c
 30828  009D64  51DF               	movf	_TMR0_InterruptHandler& (0+255),w,b
 30829  009D66  6EFD               	movwf	tosl,c
 30830  009D68  51E0               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 30831  009D6A  6EFE               	movwf	tosh,c
 30832  009D6C  6AFF               	clrf	tosu,c
 30833  009D6E  50FA               	movf	pclath,w,c
 30834  009D70  0012               	return		;indir
 30835  009D72                     __end_of_TMR0_ISR:
 30836                           	opt callstack 0
 30837                           
 30838 ;; *************** function _MonitorPressureTask *****************
 30839 ;; Defined at:
 30840 ;;		line 275 in file "monitor.c"
 30841 ;; Parameters:    Size  Location     Type
 30842 ;;		None
 30843 ;; Auto vars:     Size  Location     Type
 30844 ;;  i               2   89[BANK0 ] int 
 30845 ;;  i               2   87[BANK0 ] int 
 30846 ;;  i               2   95[BANK0 ] int 
 30847 ;;  i               2   93[BANK0 ] int 
 30848 ;;  tmp2            2   81[BANK0 ] unsigned short 
 30849 ;;  tmp             2   79[BANK0 ] unsigned short 
 30850 ;;  sqpr            4    0        unsigned long 
 30851 ;;  pr              2   97[BANK0 ] short 
 30852 ;;  temp            2   91[BANK0 ] unsigned short 
 30853 ;;  next            2   85[BANK0 ] int 
 30854 ;;  v2              2   83[BANK0 ] unsigned short 
 30855 ;;  adcv            2   77[BANK0 ] short 
 30856 ;;  v1              2   65[BANK0 ] unsigned short 
 30857 ;;  halfLimit       2   63[BANK0 ] short 
 30858 ;;  v5              2   61[BANK0 ] short 
 30859 ;;  v12             2   59[BANK0 ] short 
 30860 ;; Return value:  Size  Location     Type
 30861 ;;                  1    wreg      void 
 30862 ;; Registers used:
 30863 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30864 ;; Tracked objects:
 30865 ;;		On entry : 3F/2
 30866 ;;		On exit  : 1/0
 30867 ;;		Unchanged: 0/0
 30868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30870 ;;      Locals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30871 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30872 ;;      Totals:         5      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30873 ;;Total ram usage:       45 bytes
 30874 ;; Hardware stack levels used:    1
 30875 ;; Hardware stack levels required when called:   10
 30876 ;; This function calls:
 30877 ;;		_AdcReStartCycle
 30878 ;;		_AdcReady
 30879 ;;		_ClearTdeTooLongAlarm
 30880 ;;		_ClearTdiTooLongAlarm
 30881 ;;		_ClearVAboveMaxAlarm
 30882 ;;		_ClearVBelowMinAlarm
 30883 ;;		_DisplayCalibrate
 30884 ;;		_GetPressure_mbar02
 30885 ;;		_SetCircuitFailureAlarm
 30886 ;;		_SetEPAboveSetAlarm
 30887 ;;		_SetEPBelowSetAlarm
 30888 ;;		_SetGasFailureAlarm
 30889 ;;		_SetIPAboveSetAlarm
 30890 ;;		_SetIPBelowSetAlarm
 30891 ;;		_SetTdeTooLongAlarm
 30892 ;;		_SetTdiTooLongAlarm
 30893 ;;		_SetVAboveMaxAlarm
 30894 ;;		_SetVBelowMinAlarm
 30895 ;;		___lldiv
 30896 ;;		___lwdiv
 30897 ;;		_isqrt
 30898 ;;		i2_AdcDataReady
 30899 ;;		i2_ClearCircuitFailureAlarm
 30900 ;;		i2_ClearEPAboveSetAlarm
 30901 ;;		i2_ClearEPBelowSetAlarm
 30902 ;;		i2_ClearGasFailureAlarm
 30903 ;;		i2_ClearIPAboveSetAlarm
 30904 ;;		i2_ClearIPBelowSetAlarm
 30905 ;;		i2_ClearVars
 30906 ;;		i2_GetPressureV_pa
 30907 ;;		i2_GetPressure_pa
 30908 ;;		i2_See12V
 30909 ;;		i2_See5V
 30910 ;;		i2___aldiv
 30911 ;;		i2___awdiv
 30912 ;;		i2___awmod
 30913 ;;		i2___wmul
 30914 ;;		i2_printf
 30915 ;; This function is called by:
 30916 ;;		_MonitorInit
 30917 ;;		_TMR0_ISR
 30918 ;; This function uses a non-reentrant model
 30919 ;;
 30920                           
 30921                           	psect	text246
 30922  00001E                     __ptext246:
 30923                           	opt callstack 0
 30924  00001E                     _MonitorPressureTask:
 30925                           	opt callstack 5
 30926                           
 30927                           ; BSR set to: 2
 30928                           ;monitor.c: 276:     int16_t pr, v12, adcv, v5;;monitor.c: 277:     uint32_t sqpr;;monit
      +                          or.c: 279:     int next;;monitor.c: 280:     static _Bool measPi=0;;monitor.c: 281:     
      +                          static _Bool measPe=0;;monitor.c: 283:     next = state;
 30929                           
 30930                           ;incstack = 0
 30931  00001E  0060  F77C  F0B5   	movff	_state,MonitorPressureTask@next
 30932  000024  0060  F780  F0B6   	movff	_state+1,MonitorPressureTask@next+1
 30933                           
 30934                           ; BSR set to: 2
 30935                           ;monitor.c: 285:     uint16_t temp;;monitor.c: 288:     if (normalSV1 && (alarmSV1 || di
      +                          sableAlarmSV1)) do { LATAbits.LATA1 = 1; } while(0);
 30936  00002A  519F               	movf	_normalSV1& (0+255),w,b
 30937  00002C  B4D8               	btfsc	status,2,c
 30938  00002E  D009               	goto	i2l3062
 30939                           
 30940                           ; BSR set to: 2
 30941  000030  51A0               	movf	_alarmSV1& (0+255),w,b
 30942  000032  A4D8               	btfss	status,2,c
 30943  000034  D004               	goto	i2u2029_40
 30944                           
 30945                           ; BSR set to: 2
 30946  000036  0100               	movlb	0	; () banked
 30947  000038  51F3               	movf	_disableAlarmSV1& (0+255),w,b
 30948  00003A  B4D8               	btfsc	status,2,c
 30949  00003C  D002               	goto	i2l3062
 30950  00003E                     i2u2029_40:
 30951  00003E  82BA               	bsf	186,1,c	;volatile
 30952  000040  D001               	goto	i2l21159
 30953  000042                     i2l3062:
 30954  000042  92BA               	bcf	186,1,c	;volatile
 30955  000044                     i2l21159:
 30956                           
 30957                           ;monitor.c: 292:     static int16_t cnt=0;;monitor.c: 293:     if (cnt==0) printf("0\r\n
      +                          ");
 30958  000044  0102               	movlb	2	; () banked
 30959  000046  513A               	movf	MonitorPressureTask@cnt& (0+255),w,b
 30960  000048  113B               	iorwf	(MonitorPressureTask@cnt+1)& (0+255),w,b
 30961  00004A  A4D8               	btfss	status,2,c
 30962  00004C  D007               	goto	i2l21163
 30963                           
 30964                           ; BSR set to: 2
 30965  00004E  0ED8               	movlw	low STR_42
 30966  000050  0100               	movlb	0	; () banked
 30967  000052  6F77               	movwf	i2printf@fmt& (0+255),b
 30968  000054  0EFF               	movlw	high STR_42
 30969  000056  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 30970  000058  EC07  F04E         	call	i2_printf	;wreg free
 30971  00005C                     i2l21163:
 30972                           
 30973                           ; BSR set to: 2
 30974                           ;monitor.c: 294:     cnt = (cnt+1)%1000;
 30975  00005C  0E01               	movlw	1
 30976  00005E  253A               	addwf	MonitorPressureTask@cnt& (0+255),w,b
 30977  000060  6E01               	movwf	i2___awmod@dividend^0,c
 30978  000062  0E00               	movlw	0
 30979  000064  213B               	addwfc	(MonitorPressureTask@cnt+1)& (0+255),w,b
 30980  000066  6E02               	movwf	(i2___awmod@dividend+1)^0,c
 30981  000068  0E03               	movlw	3
 30982  00006A  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 30983  00006C  0EE8               	movlw	232
 30984  00006E  6E03               	movwf	i2___awmod@divisor^0,c
 30985  000070  ECB9  F041         	call	i2___awmod	;wreg free
 30986  000074  0060  F004  F23A   	movff	?i2___awmod,MonitorPressureTask@cnt
 30987  00007A  0060  F008  F23B   	movff	?i2___awmod+1,MonitorPressureTask@cnt+1
 30988                           
 30989                           ;monitor.c: 296:     if (!AdcDataReady(0)) {
 30990  000080  0E00               	movlw	0
 30991  000082  6E08               	movwf	(i2AdcDataReady@id+1)^0,c
 30992  000084  0E00               	movlw	0
 30993  000086  6E07               	movwf	i2AdcDataReady@id^0,c
 30994  000088  EC5B  F04D         	call	i2_AdcDataReady	;wreg free
 30995  00008C  0900               	iorlw	0
 30996  00008E  A4D8               	btfss	status,2,c
 30997  000090  D00A               	goto	i2l21173
 30998                           
 30999                           ;monitor.c: 297:         printf(" (ErrDR) ");
 31000  000092  0EA8               	movlw	low STR_43
 31001  000094  0100               	movlb	0	; () banked
 31002  000096  6F77               	movwf	i2printf@fmt& (0+255),b
 31003  000098  0EFF               	movlw	high STR_43
 31004  00009A  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 31005  00009C  EC07  F04E         	call	i2_printf	;wreg free
 31006  0000A0                     i2l21169:
 31007                           
 31008                           ;monitor.c: 299:         AdcReStartCycle();
 31009  0000A0  EC1B  F045         	call	_AdcReStartCycle	;wreg free
 31010  0000A4  0012               	return	
 31011  0000A6                     i2l21173:
 31012                           
 31013                           ;monitor.c: 306:     if (!AdcReady()) {
 31014  0000A6  EC38  F053         	call	_AdcReady	;wreg free
 31015  0000AA  0900               	iorlw	0
 31016  0000AC  A4D8               	btfss	status,2,c
 31017  0000AE  D007               	goto	i2l21177
 31018                           
 31019                           ; BSR set to: 62
 31020                           ;monitor.c: 307:             printf("=");
 31021  0000B0  0EFC               	movlw	low STR_44
 31022  0000B2  0100               	movlb	0	; () banked
 31023  0000B4  6F77               	movwf	i2printf@fmt& (0+255),b
 31024  0000B6  0EFF               	movlw	high STR_44
 31025  0000B8  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 31026  0000BA  EC07  F04E         	call	i2_printf	;wreg free
 31027  0000BE                     i2l21177:
 31028                           
 31029                           ;monitor.c: 313:     if (state == 1) {
 31030  0000BE  0101               	movlb	1	; () banked
 31031  0000C0  05DF               	decf	_state& (0+255),w,b
 31032  0000C2  11E0               	iorwf	(_state+1)& (0+255),w,b
 31033  0000C4  A4D8               	btfss	status,2,c
 31034  0000C6  D0AB               	goto	i2l21199
 31035                           
 31036                           ; BSR set to: 1
 31037                           ;monitor.c: 314:         static int cnt=0;;monitor.c: 315:         adc_result_t tmp, tmp
      +                          2;;monitor.c: 316:         tmp = GetPressure_pa();
 31038  0000C8  EC92  F025         	call	i2_GetPressure_pa	;wreg free
 31039  0000CC  0060  F06C  F0AF   	movff	?i2_GetPressure_pa,MonitorPressureTask@tmp
 31040  0000D2  0060  F070  F0B0   	movff	?i2_GetPressure_pa+1,MonitorPressureTask@tmp+1
 31041                           
 31042                           ;monitor.c: 317:         adcOffset = (7*adcOffset + 8*tmp)/8;
 31043  0000D8  0060  F2BC  F05B   	movff	MonitorPressureTask@tmp,??_MonitorPressureTask
 31044  0000DE  0060  F2C0  F05C   	movff	MonitorPressureTask@tmp+1,??_MonitorPressureTask+1
 31045  0000E4  90D8               	bcf	status,0,c
 31046  0000E6  365B               	rlcf	??_MonitorPressureTask^0,f,c
 31047  0000E8  365C               	rlcf	(??_MonitorPressureTask+1)^0,f,c
 31048  0000EA  90D8               	bcf	status,0,c
 31049  0000EC  365B               	rlcf	??_MonitorPressureTask^0,f,c
 31050  0000EE  365C               	rlcf	(??_MonitorPressureTask+1)^0,f,c
 31051  0000F0  90D8               	bcf	status,0,c
 31052  0000F2  365B               	rlcf	??_MonitorPressureTask^0,f,c
 31053  0000F4  365C               	rlcf	(??_MonitorPressureTask+1)^0,f,c
 31054  0000F6  0060  F7D8  F001   	movff	_adcOffset,i2___wmul@multiplier
 31055  0000FC  0060  F7DC  F002   	movff	_adcOffset+1,i2___wmul@multiplier+1
 31056  000102  0E00               	movlw	0
 31057  000104  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 31058  000106  0E07               	movlw	7
 31059  000108  6E03               	movwf	i2___wmul@multiplicand^0,c
 31060  00010A  EC06  F04D         	call	i2___wmul	;wreg free
 31061  00010E  505B               	movf	??_MonitorPressureTask^0,w,c
 31062  000110  2601               	addwf	?i2___wmul^0,f,c
 31063  000112  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 31064  000114  2202               	addwfc	(?i2___wmul+1)^0,f,c
 31065  000116  90D8               	bcf	status,0,c
 31066  000118  3202               	rrcf	(?i2___wmul+1)^0,f,c
 31067  00011A  3201               	rrcf	?i2___wmul^0,f,c
 31068  00011C  90D8               	bcf	status,0,c
 31069  00011E  3202               	rrcf	(?i2___wmul+1)^0,f,c
 31070  000120  3201               	rrcf	?i2___wmul^0,f,c
 31071  000122  90D8               	bcf	status,0,c
 31072  000124  3202               	rrcf	(?i2___wmul+1)^0,f,c
 31073  000126  3201               	rrcf	?i2___wmul^0,f,c
 31074  000128  0060  F004  F1F6   	movff	?i2___wmul,_adcOffset
 31075  00012E  0060  F008  F1F7   	movff	?i2___wmul+1,_adcOffset+1
 31076                           
 31077                           ;monitor.c: 318:         tmp2 = GetPressureV_pa();
 31078  000134  EC3F  F03B         	call	i2_GetPressureV_pa	;wreg free
 31079  000138  0060  F03C  F0B1   	movff	?i2_GetPressureV_pa,MonitorPressureTask@tmp2
 31080  00013E  0060  F040  F0B2   	movff	?i2_GetPressureV_pa+1,MonitorPressureTask@tmp2+1
 31081                           
 31082                           ;monitor.c: 319:         adcVOffset = (7*adcVOffset + 8*tmp2)/8;
 31083  000144  0060  F2C4  F05B   	movff	MonitorPressureTask@tmp2,??_MonitorPressureTask
 31084  00014A  0060  F2C8  F05C   	movff	MonitorPressureTask@tmp2+1,??_MonitorPressureTask+1
 31085  000150  90D8               	bcf	status,0,c
 31086  000152  365B               	rlcf	??_MonitorPressureTask^0,f,c
 31087  000154  365C               	rlcf	(??_MonitorPressureTask+1)^0,f,c
 31088  000156  90D8               	bcf	status,0,c
 31089  000158  365B               	rlcf	??_MonitorPressureTask^0,f,c
 31090  00015A  365C               	rlcf	(??_MonitorPressureTask+1)^0,f,c
 31091  00015C  90D8               	bcf	status,0,c
 31092  00015E  365B               	rlcf	??_MonitorPressureTask^0,f,c
 31093  000160  365C               	rlcf	(??_MonitorPressureTask+1)^0,f,c
 31094  000162  0060  F7D0  F001   	movff	_adcVOffset,i2___wmul@multiplier
 31095  000168  0060  F7D4  F002   	movff	_adcVOffset+1,i2___wmul@multiplier+1
 31096  00016E  0E00               	movlw	0
 31097  000170  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 31098  000172  0E07               	movlw	7
 31099  000174  6E03               	movwf	i2___wmul@multiplicand^0,c
 31100  000176  EC06  F04D         	call	i2___wmul	;wreg free
 31101  00017A  505B               	movf	??_MonitorPressureTask^0,w,c
 31102  00017C  2601               	addwf	?i2___wmul^0,f,c
 31103  00017E  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 31104  000180  2202               	addwfc	(?i2___wmul+1)^0,f,c
 31105  000182  90D8               	bcf	status,0,c
 31106  000184  3202               	rrcf	(?i2___wmul+1)^0,f,c
 31107  000186  3201               	rrcf	?i2___wmul^0,f,c
 31108  000188  90D8               	bcf	status,0,c
 31109  00018A  3202               	rrcf	(?i2___wmul+1)^0,f,c
 31110  00018C  3201               	rrcf	?i2___wmul^0,f,c
 31111  00018E  90D8               	bcf	status,0,c
 31112  000190  3202               	rrcf	(?i2___wmul+1)^0,f,c
 31113  000192  3201               	rrcf	?i2___wmul^0,f,c
 31114  000194  0060  F004  F1F4   	movff	?i2___wmul,_adcVOffset
 31115  00019A  0060  F008  F1F5   	movff	?i2___wmul+1,_adcVOffset+1
 31116                           
 31117                           ;monitor.c: 321:         cnt++;
 31118  0001A0  0102               	movlb	2	; () banked
 31119  0001A2  4B38               	infsnz	MonitorPressureTask@nt_4872& (0+255),f,b
 31120  0001A4  2B39               	incf	(MonitorPressureTask@nt_4872+1)& (0+255),f,b
 31121                           
 31122                           ; BSR set to: 2
 31123                           ;monitor.c: 322:         if (cnt==250) {
 31124  0001A6  0EFA               	movlw	250
 31125  0001A8  1938               	xorwf	MonitorPressureTask@nt_4872& (0+255),w,b
 31126  0001AA  1139               	iorwf	(MonitorPressureTask@nt_4872+1)& (0+255),w,b
 31127  0001AC  A4D8               	btfss	status,2,c
 31128  0001AE  D778               	goto	i2l21169
 31129                           
 31130                           ; BSR set to: 2
 31131                           ;monitor.c: 324:             cnt = 0;
 31132  0001B0  0E00               	movlw	0
 31133  0001B2  6F39               	movwf	(MonitorPressureTask@nt_4872+1)& (0+255),b
 31134  0001B4  0E00               	movlw	0
 31135  0001B6  6F38               	movwf	MonitorPressureTask@nt_4872& (0+255),b
 31136                           
 31137                           ; BSR set to: 2
 31138                           ;monitor.c: 327:             DisplayCalibrate(tmp, adcOffset/8, tmp2, adcVOffset/8);
 31139  0001B8  0060  F2BC  F093   	movff	MonitorPressureTask@tmp,DisplayCalibrate@pr
 31140  0001BE  0060  F2C0  F094   	movff	MonitorPressureTask@tmp+1,DisplayCalibrate@pr+1
 31141  0001C4  0060  F7D8  F007   	movff	_adcOffset,i2___awdiv@dividend
 31142  0001CA  0060  F7DC  F008   	movff	_adcOffset+1,i2___awdiv@dividend+1
 31143  0001D0  0E00               	movlw	0
 31144  0001D2  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 31145  0001D4  0E08               	movlw	8
 31146  0001D6  6E09               	movwf	i2___awdiv@divisor^0,c
 31147  0001D8  ECFD  F03F         	call	i2___awdiv	;wreg free
 31148  0001DC  0060  F01C  F095   	movff	?i2___awdiv,DisplayCalibrate@off
 31149  0001E2  0060  F020  F096   	movff	?i2___awdiv+1,DisplayCalibrate@off+1
 31150  0001E8  0060  F2C4  F097   	movff	MonitorPressureTask@tmp2,DisplayCalibrate@prv
 31151  0001EE  0060  F2C8  F098   	movff	MonitorPressureTask@tmp2+1,DisplayCalibrate@prv+1
 31152  0001F4  0060  F7D0  F007   	movff	_adcVOffset,i2___awdiv@dividend
 31153  0001FA  0060  F7D4  F008   	movff	_adcVOffset+1,i2___awdiv@dividend+1
 31154  000200  0E00               	movlw	0
 31155  000202  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 31156  000204  0E08               	movlw	8
 31157  000206  6E09               	movwf	i2___awdiv@divisor^0,c
 31158  000208  ECFD  F03F         	call	i2___awdiv	;wreg free
 31159  00020C  0060  F01C  F099   	movff	?i2___awdiv,DisplayCalibrate@offv
 31160  000212  0060  F020  F09A   	movff	?i2___awdiv+1,DisplayCalibrate@offv+1
 31161  000218  EC82  F04B         	call	_DisplayCalibrate	;wreg free
 31162  00021C  D741               	goto	i2l21169
 31163  00021E                     i2l21199:
 31164                           
 31165                           ; BSR set to: 1
 31166                           ;monitor.c: 336:         pr = GetPressure_mbar02();
 31167  00021E  EC33  F04B         	call	_GetPressure_mbar02	;wreg free
 31168  000222  0060  F0AC  F0C1   	movff	?_GetPressure_mbar02,MonitorPressureTask@pr
 31169  000228  0060  F0B0  F0C2   	movff	?_GetPressure_mbar02+1,MonitorPressureTask@pr+1
 31170                           
 31171                           ;monitor.c: 337:         if (pr<0) pr = 0;
 31172  00022E  0100               	movlb	0	; () banked
 31173  000230  AFC2               	btfss	(MonitorPressureTask@pr+1)& (0+255),7,b
 31174  000232  D004               	goto	i2l21205
 31175                           
 31176                           ; BSR set to: 0
 31177  000234  0E00               	movlw	0
 31178  000236  6FC2               	movwf	(MonitorPressureTask@pr+1)& (0+255),b
 31179  000238  0E00               	movlw	0
 31180  00023A  6FC1               	movwf	MonitorPressureTask@pr& (0+255),b
 31181  00023C                     i2l21205:
 31182                           
 31183                           ; BSR set to: 0
 31184                           ;monitor.c: 338:         if (pr>100*5) pr = 0;
 31185  00023C  BFC2               	btfsc	(MonitorPressureTask@pr+1)& (0+255),7,b
 31186  00023E  D00A               	goto	i2l21209
 31187  000240  0EF5               	movlw	245
 31188  000242  5DC1               	subwf	MonitorPressureTask@pr& (0+255),w,b
 31189  000244  0E01               	movlw	1
 31190  000246  59C2               	subwfb	(MonitorPressureTask@pr+1)& (0+255),w,b
 31191  000248  A0D8               	btfss	status,0,c
 31192  00024A  D004               	goto	i2l21209
 31193                           
 31194                           ; BSR set to: 0
 31195  00024C  0E00               	movlw	0
 31196  00024E  6FC2               	movwf	(MonitorPressureTask@pr+1)& (0+255),b
 31197  000250  0E00               	movlw	0
 31198  000252  6FC1               	movwf	MonitorPressureTask@pr& (0+255),b
 31199  000254                     i2l21209:
 31200                           
 31201                           ; BSR set to: 0
 31202                           ;monitor.c: 340:         v12 = See12V();
 31203  000254  EC6C  F03D         	call	i2_See12V	;wreg free
 31204  000258  0060  F06C  F09B   	movff	?i2_See12V,MonitorPressureTask@v12
 31205  00025E  0060  F070  F09C   	movff	?i2_See12V+1,MonitorPressureTask@v12+1
 31206                           
 31207                           ;monitor.c: 341:         v5 = See5V();
 31208  000264  EC42  F043         	call	i2_See5V	;wreg free
 31209  000268  0060  F06C  F09D   	movff	?i2_See5V,MonitorPressureTask@v5
 31210  00026E  0060  F070  F09E   	movff	?i2_See5V+1,MonitorPressureTask@v5+1
 31211                           
 31212                           ;monitor.c: 343:         AdcReStartCycle();
 31213  000274  EC1B  F045         	call	_AdcReStartCycle	;wreg free
 31214                           
 31215                           ; BSR set to: 62
 31216                           ;monitor.c: 347:     if (!enable) {
 31217  000278  0102               	movlb	2	; () banked
 31218  00027A  51A2               	movf	monitor@enable& (0+255),w,b
 31219  00027C  A4D8               	btfss	status,2,c
 31220  00027E  D020               	goto	i2l21251
 31221                           
 31222                           ; BSR set to: 2
 31223                           ;monitor.c: 348:         ClearVars();
 31224  000280  ECB5  F021         	call	i2_ClearVars	;wreg free
 31225                           
 31226                           ; BSR set to: 2
 31227                           ;monitor.c: 349:         ClearVAboveMaxAlarm();
 31228  000284  ECDD  F052         	call	_ClearVAboveMaxAlarm	;wreg free
 31229                           
 31230                           ; BSR set to: 2
 31231                           ;monitor.c: 350:         ClearVBelowMinAlarm();
 31232  000288  EC29  F053         	call	_ClearVBelowMinAlarm	;wreg free
 31233                           
 31234                           ; BSR set to: 2
 31235                           ;monitor.c: 351:         ClearTdiTooLongAlarm();
 31236  00028C  ECE1  F052         	call	_ClearTdiTooLongAlarm	;wreg free
 31237                           
 31238                           ; BSR set to: 2
 31239                           ;monitor.c: 352:         ClearTdeTooLongAlarm();
 31240  000290  ECE5  F052         	call	_ClearTdeTooLongAlarm	;wreg free
 31241                           
 31242                           ; BSR set to: 2
 31243                           ;monitor.c: 353:         ClearEPBelowSetAlarm();
 31244  000294  EC37  F050         	call	i2_ClearEPBelowSetAlarm	;wreg free
 31245                           
 31246                           ; BSR set to: 0
 31247                           ;monitor.c: 354:         ClearEPAboveSetAlarm();
 31248  000298  EC42  F050         	call	i2_ClearEPAboveSetAlarm	;wreg free
 31249                           
 31250                           ; BSR set to: 0
 31251                           ;monitor.c: 355:         ClearIPBelowSetAlarm();
 31252  00029C  EC21  F050         	call	i2_ClearIPBelowSetAlarm	;wreg free
 31253                           
 31254                           ; BSR set to: 0
 31255                           ;monitor.c: 356:         ClearIPAboveSetAlarm();
 31256  0002A0  EC2C  F050         	call	i2_ClearIPAboveSetAlarm	;wreg free
 31257                           
 31258                           ; BSR set to: 0
 31259                           ;monitor.c: 357:         ClearVAboveMaxAlarm();
 31260  0002A4  ECDD  F052         	call	_ClearVAboveMaxAlarm	;wreg free
 31261                           
 31262                           ; BSR set to: 2
 31263                           ;monitor.c: 358:         ClearVBelowMinAlarm();
 31264  0002A8  EC29  F053         	call	_ClearVBelowMinAlarm	;wreg free
 31265                           
 31266                           ; BSR set to: 2
 31267                           ;monitor.c: 359:         ClearCircuitFailureAlarm();
 31268  0002AC  ECD5  F052         	call	i2_ClearCircuitFailureAlarm	;wreg free
 31269                           
 31270                           ; BSR set to: 2
 31271                           ;monitor.c: 360:         ClearGasFailureAlarm();
 31272  0002B0  ECCD  F052         	call	i2_ClearGasFailureAlarm	;wreg free
 31273                           
 31274                           ; BSR set to: 2
 31275                           ;monitor.c: 361:         alarmSV1=1;
 31276  0002B4  0E01               	movlw	1
 31277  0002B6  6FA0               	movwf	_alarmSV1& (0+255),b
 31278                           
 31279                           ; BSR set to: 2
 31280                           ;monitor.c: 362:         enableAlarms=0;
 31281  0002B8  0E00               	movlw	0
 31282  0002BA  0100               	movlb	0	; () banked
 31283  0002BC  6FF4               	movwf	_enableAlarms& (0+255),b
 31284  0002BE  0012               	return	
 31285  0002C0                     i2l21251:
 31286                           
 31287                           ; BSR set to: 2
 31288                           ;monitor.c: 365:         static int ecnt = 0;;monitor.c: 366:         ecnt++;
 31289  0002C0  4B36               	infsnz	MonitorPressureTask@ecnt& (0+255),f,b
 31290  0002C2  2B37               	incf	(MonitorPressureTask@ecnt+1)& (0+255),f,b
 31291                           
 31292                           ; BSR set to: 2
 31293                           ;monitor.c: 367:         if (ecnt==0) printf("e\r\n");
 31294  0002C4  5136               	movf	MonitorPressureTask@ecnt& (0+255),w,b
 31295  0002C6  1137               	iorwf	(MonitorPressureTask@ecnt+1)& (0+255),w,b
 31296  0002C8  A4D8               	btfss	status,2,c
 31297  0002CA  D007               	goto	i2l21257
 31298                           
 31299                           ; BSR set to: 2
 31300  0002CC  0EE0               	movlw	low STR_45
 31301  0002CE  0100               	movlb	0	; () banked
 31302  0002D0  6F77               	movwf	i2printf@fmt& (0+255),b
 31303  0002D2  0EFF               	movlw	high STR_45
 31304  0002D4  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 31305  0002D6  EC07  F04E         	call	i2_printf	;wreg free
 31306  0002DA                     i2l21257:
 31307                           
 31308                           ; BSR set to: 2
 31309                           ;monitor.c: 368:         ecnt= (ecnt+1)%1000;
 31310  0002DA  0E01               	movlw	1
 31311  0002DC  2536               	addwf	MonitorPressureTask@ecnt& (0+255),w,b
 31312  0002DE  6E01               	movwf	i2___awmod@dividend^0,c
 31313  0002E0  0E00               	movlw	0
 31314  0002E2  2137               	addwfc	(MonitorPressureTask@ecnt+1)& (0+255),w,b
 31315  0002E4  6E02               	movwf	(i2___awmod@dividend+1)^0,c
 31316  0002E6  0E03               	movlw	3
 31317  0002E8  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 31318  0002EA  0EE8               	movlw	232
 31319  0002EC  6E03               	movwf	i2___awmod@divisor^0,c
 31320  0002EE  ECB9  F041         	call	i2___awmod	;wreg free
 31321  0002F2  0060  F004  F236   	movff	?i2___awmod,MonitorPressureTask@ecnt
 31322  0002F8  0060  F008  F237   	movff	?i2___awmod+1,MonitorPressureTask@ecnt+1
 31323                           
 31324                           ;monitor.c: 372:     static int16_t cnt2=0;;monitor.c: 373:     if (cnt2==0) printf("P\r
      +                          \n");
 31325  0002FE  0102               	movlb	2	; () banked
 31326  000300  5134               	movf	MonitorPressureTask@cnt2& (0+255),w,b
 31327  000302  1135               	iorwf	(MonitorPressureTask@cnt2+1)& (0+255),w,b
 31328  000304  A4D8               	btfss	status,2,c
 31329  000306  D007               	goto	i2l21263
 31330                           
 31331                           ; BSR set to: 2
 31332  000308  0EDC               	movlw	low STR_46
 31333  00030A  0100               	movlb	0	; () banked
 31334  00030C  6F77               	movwf	i2printf@fmt& (0+255),b
 31335  00030E  0EFF               	movlw	high STR_46
 31336  000310  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 31337  000312  EC07  F04E         	call	i2_printf	;wreg free
 31338  000316                     i2l21263:
 31339                           
 31340                           ; BSR set to: 2
 31341                           ;monitor.c: 374:     cnt2 = (cnt2+1)%1000;
 31342  000316  0E01               	movlw	1
 31343  000318  2534               	addwf	MonitorPressureTask@cnt2& (0+255),w,b
 31344  00031A  6E01               	movwf	i2___awmod@dividend^0,c
 31345  00031C  0E00               	movlw	0
 31346  00031E  2135               	addwfc	(MonitorPressureTask@cnt2+1)& (0+255),w,b
 31347  000320  6E02               	movwf	(i2___awmod@dividend+1)^0,c
 31348  000322  0E03               	movlw	3
 31349  000324  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 31350  000326  0EE8               	movlw	232
 31351  000328  6E03               	movwf	i2___awmod@divisor^0,c
 31352  00032A  ECB9  F041         	call	i2___awmod	;wreg free
 31353  00032E  0060  F004  F234   	movff	?i2___awmod,MonitorPressureTask@cnt2
 31354  000334  0060  F008  F235   	movff	?i2___awmod+1,MonitorPressureTask@cnt2+1
 31355                           
 31356                           ;monitor.c: 377:     tt++;
 31357  00033A  0E01               	movlw	1
 31358  00033C  0100               	movlb	0	; () banked
 31359  00033E  27C8               	addwf	_tt& (0+255),f,b
 31360  000340  0E00               	movlw	0
 31361  000342  23C9               	addwfc	(_tt+1)& (0+255),f,b
 31362  000344  23CA               	addwfc	(_tt+2)& (0+255),f,b
 31363  000346  23CB               	addwfc	(_tt+3)& (0+255),f,b
 31364                           
 31365                           ; BSR set to: 0
 31366                           ;monitor.c: 378:     ttExt++;
 31367  000348  0102               	movlb	2	; () banked
 31368  00034A  4B64               	infsnz	_ttExt& (0+255),f,b
 31369  00034C  2B65               	incf	(_ttExt+1)& (0+255),f,b
 31370                           
 31371                           ; BSR set to: 2
 31372                           ;monitor.c: 379:     ttNoAlarm++;
 31373  00034E  4B5E               	infsnz	_ttNoAlarm& (0+255),f,b
 31374  000350  2B5F               	incf	(_ttNoAlarm+1)& (0+255),f,b
 31375                           
 31376                           ; BSR set to: 2
 31377                           ;monitor.c: 380:     ttAlarm++;
 31378  000352  4B5C               	infsnz	_ttAlarm& (0+255),f,b
 31379  000354  2B5D               	incf	(_ttAlarm+1)& (0+255),f,b
 31380                           
 31381                           ; BSR set to: 2
 31382                           ;monitor.c: 383:     prFastBuffer[count%25]=pr;
 31383  000356  0060  F910  F001   	movff	_count,i2___awmod@dividend
 31384  00035C  0060  F914  F002   	movff	_count+1,i2___awmod@dividend+1
 31385  000362  0E00               	movlw	0
 31386  000364  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 31387  000366  0E19               	movlw	25
 31388  000368  6E03               	movwf	i2___awmod@divisor^0,c
 31389  00036A  ECB9  F041         	call	i2___awmod	;wreg free
 31390  00036E  90D8               	bcf	status,0,c
 31391  000370  3601               	rlcf	?i2___awmod^0,f,c
 31392  000372  3602               	rlcf	(?i2___awmod+1)^0,f,c
 31393  000374  0E00               	movlw	low _prFastBuffer
 31394  000376  2401               	addwf	?i2___awmod^0,w,c
 31395  000378  6ED9               	movwf	fsr2l,c
 31396  00037A  0E04               	movlw	high _prFastBuffer
 31397  00037C  2002               	addwfc	(?i2___awmod+1)^0,w,c
 31398  00037E  6EDA               	movwf	fsr2h,c
 31399  000380  0060  F307  FFDE   	movff	MonitorPressureTask@pr,postinc2
 31400  000386  0060  F30B  FFDD   	movff	MonitorPressureTask@pr+1,postdec2
 31401                           
 31402                           ;monitor.c: 384:     temp = 0;
 31403  00038C  0E00               	movlw	0
 31404  00038E  0100               	movlb	0	; () banked
 31405  000390  6FBC               	movwf	(MonitorPressureTask@temp+1)& (0+255),b
 31406  000392  0E00               	movlw	0
 31407  000394  6FBB               	movwf	MonitorPressureTask@temp& (0+255),b
 31408                           
 31409                           ; BSR set to: 0
 31410                           ;monitor.c: 385:     for (int i=0; i<25; i++) temp +=prFastBuffer[i];
 31411  000396  0E00               	movlw	0
 31412  000398  6FBE               	movwf	(MonitorPressureTask@i+1)& (0+255),b
 31413  00039A  0E00               	movlw	0
 31414  00039C  6FBD               	movwf	MonitorPressureTask@i& (0+255),b
 31415  00039E                     i2l21279:
 31416                           
 31417                           ; BSR set to: 0
 31418  00039E  BFBE               	btfsc	(MonitorPressureTask@i+1)& (0+255),7,b
 31419  0003A0  D006               	goto	i2l21283
 31420  0003A2  51BE               	movf	(MonitorPressureTask@i+1)& (0+255),w,b
 31421  0003A4  E114               	bnz	i2l21289
 31422  0003A6  0E19               	movlw	25
 31423  0003A8  5DBD               	subwf	MonitorPressureTask@i& (0+255),w,b
 31424  0003AA  B0D8               	btfsc	status,0,c
 31425  0003AC  D010               	goto	i2l21289
 31426  0003AE                     i2l21283:
 31427                           
 31428                           ; BSR set to: 0
 31429  0003AE  90D8               	bcf	status,0,c
 31430  0003B0  35BD               	rlcf	MonitorPressureTask@i& (0+255),w,b
 31431  0003B2  6ED9               	movwf	fsr2l,c
 31432  0003B4  35BE               	rlcf	(MonitorPressureTask@i+1)& (0+255),w,b
 31433  0003B6  6EDA               	movwf	fsr2h,c
 31434  0003B8  0E00               	movlw	low _prFastBuffer
 31435  0003BA  26D9               	addwf	fsr2l,f,c
 31436  0003BC  0E04               	movlw	high _prFastBuffer
 31437  0003BE  22DA               	addwfc	fsr2h,f,c
 31438  0003C0  50DE               	movf	postinc2,w,c
 31439  0003C2  27BB               	addwf	MonitorPressureTask@temp& (0+255),f,b
 31440  0003C4  50DD               	movf	postdec2,w,c
 31441  0003C6  23BC               	addwfc	(MonitorPressureTask@temp+1)& (0+255),f,b
 31442                           
 31443                           ; BSR set to: 0
 31444  0003C8  4BBD               	infsnz	MonitorPressureTask@i& (0+255),f,b
 31445  0003CA  2BBE               	incf	(MonitorPressureTask@i+1)& (0+255),f,b
 31446  0003CC  D7E8               	goto	i2l21279
 31447  0003CE                     i2l21289:
 31448                           
 31449                           ; BSR set to: 0
 31450                           ;monitor.c: 386:     prFast = temp/25;
 31451  0003CE  0060  F2EC  F001   	movff	MonitorPressureTask@temp,___lwdiv@dividend
 31452  0003D4  0060  F2F0  F002   	movff	MonitorPressureTask@temp+1,___lwdiv@dividend+1
 31453  0003DA  0E00               	movlw	0
 31454  0003DC  6E04               	movwf	(___lwdiv@divisor+1)^0,c
 31455  0003DE  0E19               	movlw	25
 31456  0003E0  6E03               	movwf	___lwdiv@divisor^0,c
 31457  0003E2  EC64  F046         	call	___lwdiv	;wreg free
 31458  0003E6  0060  F004  F23E   	movff	?___lwdiv,_prFast
 31459  0003EC  0060  F008  F23F   	movff	?___lwdiv+1,_prFast+1
 31460                           
 31461                           ;monitor.c: 387:     if (count%6==0) {
 31462  0003F2  0060  F910  F001   	movff	_count,i2___awmod@dividend
 31463  0003F8  0060  F914  F002   	movff	_count+1,i2___awmod@dividend+1
 31464  0003FE  0E00               	movlw	0
 31465  000400  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 31466  000402  0E06               	movlw	6
 31467  000404  6E03               	movwf	i2___awmod@divisor^0,c
 31468  000406  ECB9  F041         	call	i2___awmod	;wreg free
 31469  00040A  5001               	movf	?i2___awmod^0,w,c
 31470  00040C  1002               	iorwf	(?i2___awmod+1)^0,w,c
 31471  00040E  A4D8               	btfss	status,2,c
 31472  000410  D04E               	goto	i2l21309
 31473                           
 31474                           ;monitor.c: 388:         prSlowBuffer[count/6]=pr;
 31475  000412  0060  F910  F007   	movff	_count,i2___awdiv@dividend
 31476  000418  0060  F914  F008   	movff	_count+1,i2___awdiv@dividend+1
 31477  00041E  0E00               	movlw	0
 31478  000420  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 31479  000422  0E06               	movlw	6
 31480  000424  6E09               	movwf	i2___awdiv@divisor^0,c
 31481  000426  ECFD  F03F         	call	i2___awdiv	;wreg free
 31482  00042A  90D8               	bcf	status,0,c
 31483  00042C  3607               	rlcf	?i2___awdiv^0,f,c
 31484  00042E  3608               	rlcf	(?i2___awdiv+1)^0,f,c
 31485  000430  0E32               	movlw	low _prSlowBuffer
 31486  000432  2407               	addwf	?i2___awdiv^0,w,c
 31487  000434  6ED9               	movwf	fsr2l,c
 31488  000436  0E04               	movlw	high _prSlowBuffer
 31489  000438  2008               	addwfc	(?i2___awdiv+1)^0,w,c
 31490  00043A  6EDA               	movwf	fsr2h,c
 31491  00043C  0060  F307  FFDE   	movff	MonitorPressureTask@pr,postinc2
 31492  000442  0060  F30B  FFDD   	movff	MonitorPressureTask@pr+1,postdec2
 31493                           
 31494                           ;monitor.c: 389:         temp = 0;
 31495  000448  0E00               	movlw	0
 31496  00044A  0100               	movlb	0	; () banked
 31497  00044C  6FBC               	movwf	(MonitorPressureTask@temp+1)& (0+255),b
 31498  00044E  0E00               	movlw	0
 31499  000450  6FBB               	movwf	MonitorPressureTask@temp& (0+255),b
 31500                           
 31501                           ; BSR set to: 0
 31502                           ;monitor.c: 390:         for (int i=0; i<25; i++) temp +=prSlowBuffer[i];
 31503  000452  0E00               	movlw	0
 31504  000454  6FC0               	movwf	(MonitorPressureTask@i_4881+1)& (0+255),b
 31505  000456  0E00               	movlw	0
 31506  000458  6FBF               	movwf	MonitorPressureTask@i_4881& (0+255),b
 31507  00045A                     i2l21297:
 31508                           
 31509                           ; BSR set to: 0
 31510  00045A  BFC0               	btfsc	(MonitorPressureTask@i_4881+1)& (0+255),7,b
 31511  00045C  D006               	goto	i2l21301
 31512  00045E  51C0               	movf	(MonitorPressureTask@i_4881+1)& (0+255),w,b
 31513  000460  E114               	bnz	i2l21307
 31514  000462  0E19               	movlw	25
 31515  000464  5DBF               	subwf	MonitorPressureTask@i_4881& (0+255),w,b
 31516  000466  B0D8               	btfsc	status,0,c
 31517  000468  D010               	goto	i2l21307
 31518  00046A                     i2l21301:
 31519                           
 31520                           ; BSR set to: 0
 31521  00046A  90D8               	bcf	status,0,c
 31522  00046C  35BF               	rlcf	MonitorPressureTask@i_4881& (0+255),w,b
 31523  00046E  6ED9               	movwf	fsr2l,c
 31524  000470  35C0               	rlcf	(MonitorPressureTask@i_4881+1)& (0+255),w,b
 31525  000472  6EDA               	movwf	fsr2h,c
 31526  000474  0E32               	movlw	low _prSlowBuffer
 31527  000476  26D9               	addwf	fsr2l,f,c
 31528  000478  0E04               	movlw	high _prSlowBuffer
 31529  00047A  22DA               	addwfc	fsr2h,f,c
 31530  00047C  50DE               	movf	postinc2,w,c
 31531  00047E  27BB               	addwf	MonitorPressureTask@temp& (0+255),f,b
 31532  000480  50DD               	movf	postdec2,w,c
 31533  000482  23BC               	addwfc	(MonitorPressureTask@temp+1)& (0+255),f,b
 31534                           
 31535                           ; BSR set to: 0
 31536  000484  4BBF               	infsnz	MonitorPressureTask@i_4881& (0+255),f,b
 31537  000486  2BC0               	incf	(MonitorPressureTask@i_4881+1)& (0+255),f,b
 31538  000488  D7E8               	goto	i2l21297
 31539  00048A                     i2l21307:
 31540                           
 31541                           ; BSR set to: 0
 31542                           ;monitor.c: 391:         prSlow = temp/25;
 31543  00048A  0060  F2EC  F001   	movff	MonitorPressureTask@temp,___lwdiv@dividend
 31544  000490  0060  F2F0  F002   	movff	MonitorPressureTask@temp+1,___lwdiv@dividend+1
 31545  000496  0E00               	movlw	0
 31546  000498  6E04               	movwf	(___lwdiv@divisor+1)^0,c
 31547  00049A  0E19               	movlw	25
 31548  00049C  6E03               	movwf	___lwdiv@divisor^0,c
 31549  00049E  EC64  F046         	call	___lwdiv	;wreg free
 31550  0004A2  0060  F004  F0CE   	movff	?___lwdiv,_prSlow
 31551  0004A8  0060  F008  F0CF   	movff	?___lwdiv+1,_prSlow+1
 31552  0004AE                     i2l21309:
 31553                           
 31554                           ;monitor.c: 393:     count ++;
 31555  0004AE  0102               	movlb	2	; () banked
 31556  0004B0  4B44               	infsnz	_count& (0+255),f,b
 31557  0004B2  2B45               	incf	(_count+1)& (0+255),f,b
 31558                           
 31559                           ; BSR set to: 2
 31560                           ;monitor.c: 394:     if (count>=6*25) count =0;
 31561  0004B4  BF45               	btfsc	(_count+1)& (0+255),7,b
 31562  0004B6  D00A               	goto	i2l3090
 31563  0004B8  5145               	movf	(_count+1)& (0+255),w,b
 31564  0004BA  E104               	bnz	i2u2043_40
 31565  0004BC  0E96               	movlw	150
 31566  0004BE  5D44               	subwf	_count& (0+255),w,b
 31567  0004C0  A0D8               	btfss	status,0,c
 31568  0004C2  D004               	goto	i2l3090
 31569  0004C4                     i2u2043_40:
 31570                           
 31571                           ; BSR set to: 2
 31572  0004C4  0E00               	movlw	0
 31573  0004C6  6F45               	movwf	(_count+1)& (0+255),b
 31574  0004C8  0E00               	movlw	0
 31575  0004CA  6F44               	movwf	_count& (0+255),b
 31576  0004CC                     i2l3090:
 31577                           
 31578                           ; BSR set to: 2
 31579                           ;monitor.c: 397:     if (enableAlarms) {
 31580  0004CC  0100               	movlb	0	; () banked
 31581  0004CE  51F4               	movf	_enableAlarms& (0+255),w,b
 31582  0004D0  B4D8               	btfsc	status,2,c
 31583  0004D2  D00F               	goto	i2l21321
 31584                           
 31585                           ; BSR set to: 0
 31586                           ;monitor.c: 398:         if (ttAlarm>6*500) {
 31587  0004D4  0102               	movlb	2	; () banked
 31588  0004D6  BF5D               	btfsc	(_ttAlarm+1)& (0+255),7,b
 31589  0004D8  D009               	goto	i2l21319
 31590  0004DA  0EB9               	movlw	185
 31591  0004DC  5D5C               	subwf	_ttAlarm& (0+255),w,b
 31592  0004DE  0E0B               	movlw	11
 31593  0004E0  595D               	subwfb	(_ttAlarm+1)& (0+255),w,b
 31594  0004E2  A0D8               	btfss	status,0,c
 31595  0004E4  D003               	goto	i2l21319
 31596                           
 31597                           ; BSR set to: 2
 31598                           ;monitor.c: 399:             SetCircuitFailureAlarm();
 31599  0004E6  EC1A  F053         	call	_SetCircuitFailureAlarm	;wreg free
 31600                           
 31601                           ;monitor.c: 400:         } else {
 31602  0004EA  D008               	goto	i2l21323
 31603  0004EC                     i2l21319:
 31604                           
 31605                           ; BSR set to: 2
 31606                           ;monitor.c: 401:             ClearCircuitFailureAlarm();
 31607  0004EC  ECD5  F052         	call	i2_ClearCircuitFailureAlarm	;wreg free
 31608  0004F0  D005               	goto	i2l21323
 31609  0004F2                     i2l21321:
 31610                           
 31611                           ; BSR set to: 0
 31612                           ;monitor.c: 404:         ttAlarm = 0;
 31613  0004F2  0E00               	movlw	0
 31614  0004F4  0102               	movlb	2	; () banked
 31615  0004F6  6F5D               	movwf	(_ttAlarm+1)& (0+255),b
 31616  0004F8  0E00               	movlw	0
 31617  0004FA  6F5C               	movwf	_ttAlarm& (0+255),b
 31618  0004FC                     i2l21323:
 31619                           
 31620                           ; BSR set to: 2
 31621                           ;monitor.c: 407:     if (ttNoAlarm>15*500) {
 31622  0004FC  BF5F               	btfsc	(_ttNoAlarm+1)& (0+255),7,b
 31623  0004FE  D00E               	goto	i2l21327
 31624  000500  0E4D               	movlw	77
 31625  000502  5D5E               	subwf	_ttNoAlarm& (0+255),w,b
 31626  000504  0E1D               	movlw	29
 31627  000506  595F               	subwfb	(_ttNoAlarm+1)& (0+255),w,b
 31628  000508  A0D8               	btfss	status,0,c
 31629  00050A  D008               	goto	i2l21327
 31630                           
 31631                           ; BSR set to: 2
 31632                           ;monitor.c: 408:         enableAlarms = 1;
 31633  00050C  0E01               	movlw	1
 31634  00050E  0100               	movlb	0	; () banked
 31635  000510  6FF4               	movwf	_enableAlarms& (0+255),b
 31636                           
 31637                           ;monitor.c: 409:         ttNoAlarm=15*500+1;
 31638  000512  0E1D               	movlw	29
 31639  000514  0102               	movlb	2	; () banked
 31640  000516  6F5F               	movwf	(_ttNoAlarm+1)& (0+255),b
 31641  000518  0E4D               	movlw	77
 31642  00051A  6F5E               	movwf	_ttNoAlarm& (0+255),b
 31643  00051C                     i2l21327:
 31644                           
 31645                           ; BSR set to: 2
 31646                           ;monitor.c: 414:     adcv = GetPressureV_pa();
 31647  00051C  EC3F  F03B         	call	i2_GetPressureV_pa	;wreg free
 31648  000520  0060  F03C  F0AD   	movff	?i2_GetPressureV_pa,MonitorPressureTask@adcv
 31649  000526  0060  F040  F0AE   	movff	?i2_GetPressureV_pa+1,MonitorPressureTask@adcv+1
 31650                           
 31651                           ;monitor.c: 417:     uint16_t v1 = adcv > 0 ? adcv<<4 : 0;
 31652  00052C  0100               	movlb	0	; () banked
 31653  00052E  BFAE               	btfsc	(MonitorPressureTask@adcv+1)& (0+255),7,b
 31654  000530  D005               	goto	i2u2047_40
 31655  000532  51AE               	movf	(MonitorPressureTask@adcv+1)& (0+255),w,b
 31656  000534  E108               	bnz	i2l21333
 31657  000536  05AD               	decf	MonitorPressureTask@adcv& (0+255),w,b
 31658  000538  B0D8               	btfsc	status,0,c
 31659  00053A  D005               	goto	i2l21333
 31660  00053C                     i2u2047_40:
 31661                           
 31662                           ; BSR set to: 0
 31663  00053C  0E00               	movlw	0
 31664  00053E  6FA2               	movwf	(MonitorPressureTask@v1+1)& (0+255),b
 31665  000540  0E00               	movlw	0
 31666  000542  6FA1               	movwf	MonitorPressureTask@v1& (0+255),b
 31667  000544  D015               	goto	i2l21335
 31668  000546                     i2l21333:
 31669                           
 31670                           ; BSR set to: 0
 31671  000546  0060  F2B4  F05B   	movff	MonitorPressureTask@adcv,??_MonitorPressureTask
 31672  00054C  0060  F2B8  F05C   	movff	MonitorPressureTask@adcv+1,??_MonitorPressureTask+1
 31673  000552  3A5B               	swapf	??_MonitorPressureTask^0,f,c
 31674  000554  3A5C               	swapf	(??_MonitorPressureTask+1)^0,f,c
 31675  000556  0EF0               	movlw	240
 31676  000558  165C               	andwf	(??_MonitorPressureTask+1)^0,f,c
 31677  00055A  505B               	movf	??_MonitorPressureTask^0,w,c
 31678  00055C  0B0F               	andlw	15
 31679  00055E  125C               	iorwf	(??_MonitorPressureTask+1)^0,f,c
 31680  000560  0EF0               	movlw	240
 31681  000562  165B               	andwf	??_MonitorPressureTask^0,f,c
 31682  000564  0060  F16C  F0A1   	movff	??_MonitorPressureTask,MonitorPressureTask@v1
 31683  00056A  0060  F170  F0A2   	movff	??_MonitorPressureTask+1,MonitorPressureTask@v1+1
 31684  000570                     i2l21335:
 31685                           
 31686                           ; BSR set to: 0
 31687                           ;monitor.c: 418:     uint16_t v2 = isqrt(v1);
 31688  000570  0060  F284  F001   	movff	MonitorPressureTask@v1,isqrt@x
 31689  000576  0060  F288  F002   	movff	MonitorPressureTask@v1+1,isqrt@x+1
 31690  00057C  ECEC  F03A         	call	_isqrt	;wreg free
 31691  000580  0060  F004  F0B3   	movff	?_isqrt,MonitorPressureTask@v2
 31692  000586  0060  F008  F0B4   	movff	?_isqrt+1,MonitorPressureTask@v2+1
 31693                           
 31694                           ; BSR set to: 0
 31695                           ;monitor.c: 419:     volumeAcc += v2 > 20 ? v2 : 0;
 31696  00058C  51B4               	movf	(MonitorPressureTask@v2+1)& (0+255),w,b
 31697  00058E  E109               	bnz	i2l3101
 31698  000590  0E15               	movlw	21
 31699  000592  5DB3               	subwf	MonitorPressureTask@v2& (0+255),w,b
 31700  000594  B0D8               	btfsc	status,0,c
 31701  000596  D005               	goto	i2l3101
 31702                           
 31703                           ; BSR set to: 0
 31704  000598  0E00               	movlw	0
 31705  00059A  6FA4               	movwf	(_MonitorPressureTask$4886+1)& (0+255),b
 31706  00059C  0E00               	movlw	0
 31707  00059E  6FA3               	movwf	_MonitorPressureTask$4886& (0+255),b
 31708  0005A0  D006               	goto	i2l21341
 31709  0005A2                     i2l3101:
 31710                           
 31711                           ; BSR set to: 0
 31712  0005A2  0060  F2CC  F0A3   	movff	MonitorPressureTask@v2,_MonitorPressureTask$4886
 31713  0005A8  0060  F2D0  F0A4   	movff	MonitorPressureTask@v2+1,_MonitorPressureTask$4886+1
 31714  0005AE                     i2l21341:
 31715                           
 31716                           ; BSR set to: 0
 31717  0005AE  51A3               	movf	_MonitorPressureTask$4886& (0+255),w,b
 31718  0005B0  0102               	movlb	2	; () banked
 31719  0005B2  2722               	addwf	_volumeAcc& (0+255),f,b
 31720  0005B4  0100               	movlb	0	; () banked
 31721  0005B6  51A4               	movf	(_MonitorPressureTask$4886+1)& (0+255),w,b
 31722  0005B8  0102               	movlb	2	; () banked
 31723  0005BA  2323               	addwfc	(_volumeAcc+1)& (0+255),f,b
 31724  0005BC  0E00               	movlw	0
 31725  0005BE  2324               	addwfc	(_volumeAcc+2)& (0+255),f,b
 31726  0005C0  0E00               	movlw	0
 31727  0005C2  2325               	addwfc	(_volumeAcc+3)& (0+255),f,b
 31728                           
 31729                           ; BSR set to: 2
 31730                           ;monitor.c: 428:     if (ttExt>6*500) {
 31731  0005C4  BF65               	btfsc	(_ttExt+1)& (0+255),7,b
 31732  0005C6  D093               	goto	i2l21365
 31733  0005C8  0EB9               	movlw	185
 31734  0005CA  5D64               	subwf	_ttExt& (0+255),w,b
 31735  0005CC  0E0B               	movlw	11
 31736  0005CE  5965               	subwfb	(_ttExt+1)& (0+255),w,b
 31737  0005D0  A0D8               	btfss	status,0,c
 31738  0005D2  D08D               	goto	i2l21365
 31739                           
 31740                           ; BSR set to: 2
 31741                           ;monitor.c: 432:         hiLimit = minPressure + 2*(maxPressure-minPressure)/5;
 31742  0005D4  0100               	movlb	0	; () banked
 31743  0005D6  51D6               	movf	_minPressure& (0+255),w,b
 31744  0005D8  0102               	movlb	2	; () banked
 31745  0005DA  5D52               	subwf	_maxPressure& (0+255),w,b
 31746  0005DC  6E5B               	movwf	??_MonitorPressureTask^0,c
 31747  0005DE  0100               	movlb	0	; () banked
 31748  0005E0  51D7               	movf	(_minPressure+1)& (0+255),w,b
 31749  0005E2  0102               	movlb	2	; () banked
 31750  0005E4  5953               	subwfb	(_maxPressure+1)& (0+255),w,b
 31751  0005E6  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 31752  0005E8  90D8               	bcf	status,0,c
 31753  0005EA  345B               	rlcf	??_MonitorPressureTask^0,w,c
 31754  0005EC  6E07               	movwf	i2___awdiv@dividend^0,c
 31755  0005EE  345C               	rlcf	(??_MonitorPressureTask+1)^0,w,c
 31756  0005F0  6E08               	movwf	(i2___awdiv@dividend+1)^0,c
 31757  0005F2  0E00               	movlw	0
 31758  0005F4  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 31759  0005F6  0E05               	movlw	5
 31760  0005F8  6E09               	movwf	i2___awdiv@divisor^0,c
 31761  0005FA  ECFD  F03F         	call	i2___awdiv	;wreg free
 31762  0005FE  0100               	movlb	0	; () banked
 31763  000600  51D6               	movf	_minPressure& (0+255),w,b
 31764  000602  2407               	addwf	?i2___awdiv^0,w,c
 31765  000604  0101               	movlb	1	; () banked
 31766  000606  6FCF               	movwf	_hiLimit& (0+255),b
 31767  000608  0100               	movlb	0	; () banked
 31768  00060A  51D7               	movf	(_minPressure+1)& (0+255),w,b
 31769  00060C  2008               	addwfc	(?i2___awdiv+1)^0,w,c
 31770  00060E  0101               	movlb	1	; () banked
 31771  000610  6FD0               	movwf	(_hiLimit+1)& (0+255),b
 31772                           
 31773                           ;monitor.c: 433:         loLimit = minPressure + (maxPressure-minPressure)/3;
 31774  000612  0100               	movlb	0	; () banked
 31775  000614  51D6               	movf	_minPressure& (0+255),w,b
 31776  000616  0102               	movlb	2	; () banked
 31777  000618  5D52               	subwf	_maxPressure& (0+255),w,b
 31778  00061A  6E07               	movwf	i2___awdiv@dividend^0,c
 31779  00061C  0100               	movlb	0	; () banked
 31780  00061E  51D7               	movf	(_minPressure+1)& (0+255),w,b
 31781  000620  0102               	movlb	2	; () banked
 31782  000622  5953               	subwfb	(_maxPressure+1)& (0+255),w,b
 31783  000624  6E08               	movwf	(i2___awdiv@dividend+1)^0,c
 31784  000626  0E00               	movlw	0
 31785  000628  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 31786  00062A  0E03               	movlw	3
 31787  00062C  6E09               	movwf	i2___awdiv@divisor^0,c
 31788  00062E  ECFD  F03F         	call	i2___awdiv	;wreg free
 31789  000632  0100               	movlb	0	; () banked
 31790  000634  51D6               	movf	_minPressure& (0+255),w,b
 31791  000636  2407               	addwf	?i2___awdiv^0,w,c
 31792  000638  0101               	movlb	1	; () banked
 31793  00063A  6FCD               	movwf	_loLimit& (0+255),b
 31794  00063C  0100               	movlb	0	; () banked
 31795  00063E  51D7               	movf	(_minPressure+1)& (0+255),w,b
 31796  000640  2008               	addwfc	(?i2___awdiv+1)^0,w,c
 31797  000642  0101               	movlb	1	; () banked
 31798  000644  6FCE               	movwf	(_loLimit+1)& (0+255),b
 31799                           
 31800                           ; BSR set to: 1
 31801                           ;monitor.c: 436:         if (loLimit<(targetLow+5*5)) {
 31802  000646  0E19               	movlw	25
 31803  000648  25E1               	addwf	_targetLow& (0+255),w,b
 31804  00064A  6E5B               	movwf	??_MonitorPressureTask^0,c
 31805  00064C  0E00               	movlw	0
 31806  00064E  21E2               	addwfc	(_targetLow+1)& (0+255),w,b
 31807  000650  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 31808  000652  505B               	movf	??_MonitorPressureTask^0,w,c
 31809  000654  5DCD               	subwf	_loLimit& (0+255),w,b
 31810  000656  51CE               	movf	(_loLimit+1)& (0+255),w,b
 31811  000658  0A80               	xorlw	128
 31812  00065A  6E5D               	movwf	(??_MonitorPressureTask+2)^0,c
 31813  00065C  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 31814  00065E  0A80               	xorlw	128
 31815  000660  585D               	subwfb	(??_MonitorPressureTask+2)^0,w,c
 31816  000662  B0D8               	btfsc	status,0,c
 31817  000664  D006               	goto	i2l3105
 31818                           
 31819                           ; BSR set to: 1
 31820                           ;monitor.c: 438:             loLimit = targetLow+5*5;
 31821  000666  0E19               	movlw	25
 31822  000668  25E1               	addwf	_targetLow& (0+255),w,b
 31823  00066A  6FCD               	movwf	_loLimit& (0+255),b
 31824  00066C  0E00               	movlw	0
 31825  00066E  21E2               	addwfc	(_targetLow+1)& (0+255),w,b
 31826  000670  6FCE               	movwf	(_loLimit+1)& (0+255),b
 31827  000672                     i2l3105:
 31828                           
 31829                           ; BSR set to: 1
 31830                           ;monitor.c: 441:         if (hiLimit<loLimit) hiLimit = loLimit;
 31831  000672  51CD               	movf	_loLimit& (0+255),w,b
 31832  000674  5DCF               	subwf	_hiLimit& (0+255),w,b
 31833  000676  51D0               	movf	(_hiLimit+1)& (0+255),w,b
 31834  000678  0A80               	xorlw	128
 31835  00067A  6E5B               	movwf	??_MonitorPressureTask^0,c
 31836  00067C  51CE               	movf	(_loLimit+1)& (0+255),w,b
 31837  00067E  0A80               	xorlw	128
 31838  000680  585B               	subwfb	??_MonitorPressureTask^0,w,c
 31839  000682  B0D8               	btfsc	status,0,c
 31840  000684  D004               	goto	i2l3106
 31841                           
 31842                           ; BSR set to: 1
 31843  000686  C1CD  F1CF         	movff	_loLimit,_hiLimit
 31844  00068A  C1CE  F1D0         	movff	_loLimit+1,_hiLimit+1
 31845  00068E                     i2l3106:
 31846                           
 31847                           ; BSR set to: 1
 31848                           ;monitor.c: 444:         pe = pLow;
 31849  00068E  C24E  F1D5         	movff	_pLow,_pe
 31850  000692  C24F  F1D6         	movff	_pLow+1,_pe+1
 31851                           
 31852                           ;monitor.c: 445:         pi = pHigh;
 31853  000696  C1D3  F1D7         	movff	_pHigh,_pi
 31854  00069A  C1D4  F1D8         	movff	_pHigh+1,_pi+1
 31855                           
 31856                           ;monitor.c: 446:         pmax = maxPressure;
 31857  00069E  C252  F0D8         	movff	_maxPressure,_pmax
 31858  0006A2  C253  F0D9         	movff	_maxPressure+1,_pmax+1
 31859                           
 31860                           ;monitor.c: 447:         pmin = minPressure;
 31861  0006A6  C0D6  F254         	movff	_minPressure,_pmin
 31862  0006AA  C0D7  F255         	movff	_minPressure+1,_pmin+1
 31863                           
 31864                           ; BSR set to: 1
 31865                           ;monitor.c: 449:         if (pmax< targetLow && enableAlarms) SetGasFailureAlarm();
 31866  0006AE  51E1               	movf	_targetLow& (0+255),w,b
 31867  0006B0  0100               	movlb	0	; () banked
 31868  0006B2  5DD8               	subwf	_pmax& (0+255),w,b
 31869  0006B4  51D9               	movf	(_pmax+1)& (0+255),w,b
 31870  0006B6  0A80               	xorlw	128
 31871  0006B8  6E5B               	movwf	??_MonitorPressureTask^0,c
 31872  0006BA  0101               	movlb	1	; () banked
 31873  0006BC  51E2               	movf	(_targetLow+1)& (0+255),w,b
 31874  0006BE  0A80               	xorlw	128
 31875  0006C0  585B               	subwfb	??_MonitorPressureTask^0,w,c
 31876  0006C2  B0D8               	btfsc	status,0,c
 31877  0006C4  D005               	goto	i2l21359
 31878                           
 31879                           ; BSR set to: 1
 31880  0006C6  0100               	movlb	0	; () banked
 31881  0006C8  51F4               	movf	_enableAlarms& (0+255),w,b
 31882  0006CA  A4D8               	btfss	status,2,c
 31883                           
 31884                           ; BSR set to: 0
 31885  0006CC  ECA9  F052         	call	_SetGasFailureAlarm	;wreg free
 31886  0006D0                     i2l21359:
 31887                           
 31888                           ;monitor.c: 455:         maxPressure = 0;
 31889  0006D0  0E00               	movlw	0
 31890  0006D2  0102               	movlb	2	; () banked
 31891  0006D4  6F53               	movwf	(_maxPressure+1)& (0+255),b
 31892  0006D6  0E00               	movlw	0
 31893  0006D8  6F52               	movwf	_maxPressure& (0+255),b
 31894                           
 31895                           ; BSR set to: 2
 31896                           ;monitor.c: 456:         minPressure = 40*5;
 31897  0006DA  0E00               	movlw	0
 31898  0006DC  0100               	movlb	0	; () banked
 31899  0006DE  6FD7               	movwf	(_minPressure+1)& (0+255),b
 31900  0006E0  0EC8               	movlw	200
 31901  0006E2  6FD6               	movwf	_minPressure& (0+255),b
 31902                           
 31903                           ; BSR set to: 0
 31904                           ;monitor.c: 457:         ttExt=0;
 31905  0006E4  0E00               	movlw	0
 31906  0006E6  0102               	movlb	2	; () banked
 31907  0006E8  6F65               	movwf	(_ttExt+1)& (0+255),b
 31908  0006EA  0E00               	movlw	0
 31909  0006EC  6F64               	movwf	_ttExt& (0+255),b
 31910  0006EE                     i2l21365:
 31911                           
 31912                           ; BSR set to: 2
 31913                           ;monitor.c: 461:     if (tt>30000) {
 31914  0006EE  0100               	movlb	0	; () banked
 31915  0006F0  BFCB               	btfsc	(_tt+3)& (0+255),7,b
 31916  0006F2  D00F               	goto	i2l21373
 31917  0006F4  51CB               	movf	(_tt+3)& (0+255),w,b
 31918  0006F6  11CA               	iorwf	(_tt+2)& (0+255),w,b
 31919  0006F8  E106               	bnz	i2u2054_40
 31920  0006FA  0E31               	movlw	49
 31921  0006FC  5DC8               	subwf	_tt& (0+255),w,b
 31922  0006FE  0E75               	movlw	117
 31923  000700  59C9               	subwfb	(_tt+1)& (0+255),w,b
 31924  000702  A0D8               	btfss	status,0,c
 31925  000704  D006               	goto	i2l21373
 31926  000706                     i2u2054_40:
 31927                           
 31928                           ; BSR set to: 0
 31929                           ;monitor.c: 463:         ClearVars() ;
 31930  000706  ECB5  F021         	call	i2_ClearVars	;wreg free
 31931                           
 31932                           ; BSR set to: 2
 31933                           ;monitor.c: 464:         measPe = 0;
 31934  00070A  0E00               	movlw	0
 31935  00070C  6F9D               	movwf	MonitorPressureTask@measPe& (0+255),b
 31936                           
 31937                           ; BSR set to: 2
 31938                           ;monitor.c: 465:         measPi = 0;
 31939  00070E  0E00               	movlw	0
 31940  000710  6F9E               	movwf	MonitorPressureTask@measPi& (0+255),b
 31941  000712                     i2l21373:
 31942                           
 31943                           ;monitor.c: 469:     if (prFast>alarmMaxPressure) {
 31944  000712  0102               	movlb	2	; () banked
 31945  000714  513E               	movf	_prFast& (0+255),w,b
 31946  000716  5D50               	subwf	_alarmMaxPressure& (0+255),w,b
 31947  000718  5151               	movf	(_alarmMaxPressure+1)& (0+255),w,b
 31948  00071A  0A80               	xorlw	128
 31949  00071C  6E5B               	movwf	??_MonitorPressureTask^0,c
 31950  00071E  513F               	movf	(_prFast+1)& (0+255),w,b
 31951  000720  0A80               	xorlw	128
 31952  000722  585B               	subwfb	??_MonitorPressureTask^0,w,c
 31953  000724  B0D8               	btfsc	status,0,c
 31954  000726  D004               	goto	i2l21377
 31955                           
 31956                           ; BSR set to: 2
 31957                           ;monitor.c: 470:         alarmMaxPressure = prFast;
 31958  000728  C23E  F250         	movff	_prFast,_alarmMaxPressure
 31959  00072C  C23F  F251         	movff	_prFast+1,_alarmMaxPressure+1
 31960  000730                     i2l21377:
 31961                           
 31962                           ; BSR set to: 2
 31963                           ;monitor.c: 475:     if (pr>maxPressure) {
 31964  000730  0100               	movlb	0	; () banked
 31965  000732  51C1               	movf	MonitorPressureTask@pr& (0+255),w,b
 31966  000734  0102               	movlb	2	; () banked
 31967  000736  5D52               	subwf	_maxPressure& (0+255),w,b
 31968  000738  5153               	movf	(_maxPressure+1)& (0+255),w,b
 31969  00073A  0A80               	xorlw	128
 31970  00073C  6E5B               	movwf	??_MonitorPressureTask^0,c
 31971  00073E  0100               	movlb	0	; () banked
 31972  000740  51C2               	movf	(MonitorPressureTask@pr+1)& (0+255),w,b
 31973  000742  0A80               	xorlw	128
 31974  000744  585B               	subwfb	??_MonitorPressureTask^0,w,c
 31975  000746  B0D8               	btfsc	status,0,c
 31976  000748  D006               	goto	i2l21381
 31977                           
 31978                           ; BSR set to: 0
 31979                           ;monitor.c: 476:         maxPressure = pr;
 31980  00074A  0060  F304  F252   	movff	MonitorPressureTask@pr,_maxPressure
 31981  000750  0060  F308  F253   	movff	MonitorPressureTask@pr+1,_maxPressure+1
 31982  000756                     i2l21381:
 31983                           
 31984                           ; BSR set to: 0
 31985                           ;monitor.c: 479:     if (pr<minPressure) {
 31986  000756  51D6               	movf	_minPressure& (0+255),w,b
 31987  000758  5DC1               	subwf	MonitorPressureTask@pr& (0+255),w,b
 31988  00075A  51C2               	movf	(MonitorPressureTask@pr+1)& (0+255),w,b
 31989  00075C  0A80               	xorlw	128
 31990  00075E  6E5B               	movwf	??_MonitorPressureTask^0,c
 31991  000760  51D7               	movf	(_minPressure+1)& (0+255),w,b
 31992  000762  0A80               	xorlw	128
 31993  000764  585B               	subwfb	??_MonitorPressureTask^0,w,c
 31994  000766  B0D8               	btfsc	status,0,c
 31995  000768  D006               	goto	i2l21385
 31996                           
 31997                           ; BSR set to: 0
 31998                           ;monitor.c: 480:         minPressure = pr;
 31999  00076A  0060  F304  F0D6   	movff	MonitorPressureTask@pr,_minPressure
 32000  000770  0060  F308  F0D7   	movff	MonitorPressureTask@pr+1,_minPressure+1
 32001  000776                     i2l21385:
 32002                           
 32003                           ; BSR set to: 0
 32004                           ;monitor.c: 485:     if (prSlow>hiLimit) {
 32005  000776  51CE               	movf	_prSlow& (0+255),w,b
 32006  000778  0101               	movlb	1	; () banked
 32007  00077A  5DCF               	subwf	_hiLimit& (0+255),w,b
 32008  00077C  51D0               	movf	(_hiLimit+1)& (0+255),w,b
 32009  00077E  0A80               	xorlw	128
 32010  000780  6E5B               	movwf	??_MonitorPressureTask^0,c
 32011  000782  0100               	movlb	0	; () banked
 32012  000784  51CF               	movf	(_prSlow+1)& (0+255),w,b
 32013  000786  0A80               	xorlw	128
 32014  000788  585B               	subwfb	??_MonitorPressureTask^0,w,c
 32015  00078A  B0D8               	btfsc	status,0,c
 32016  00078C  D016               	goto	i2l21391
 32017                           
 32018                           ; BSR set to: 0
 32019                           ;monitor.c: 488:         pHighAcc += prSlow;
 32020  00078E  0060  F338  F05B   	movff	_prSlow,??_MonitorPressureTask
 32021  000794  0060  F33C  F05C   	movff	_prSlow+1,??_MonitorPressureTask+1
 32022  00079A  0E00               	movlw	0
 32023  00079C  BE5C               	btfsc	(??_MonitorPressureTask+1)^0,7,c
 32024  00079E  0EFF               	movlw	255
 32025  0007A0  6E5D               	movwf	(??_MonitorPressureTask+2)^0,c
 32026  0007A2  6E5E               	movwf	(??_MonitorPressureTask+3)^0,c
 32027  0007A4  505B               	movf	??_MonitorPressureTask^0,w,c
 32028  0007A6  0102               	movlb	2	; () banked
 32029  0007A8  271E               	addwf	_pHighAcc& (0+255),f,b
 32030  0007AA  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 32031  0007AC  231F               	addwfc	(_pHighAcc+1)& (0+255),f,b
 32032  0007AE  505D               	movf	(??_MonitorPressureTask+2)^0,w,c
 32033  0007B0  2320               	addwfc	(_pHighAcc+2)& (0+255),f,b
 32034  0007B2  505E               	movf	(??_MonitorPressureTask+3)^0,w,c
 32035  0007B4  2321               	addwfc	(_pHighAcc+3)& (0+255),f,b
 32036                           
 32037                           ; BSR set to: 2
 32038                           ;monitor.c: 489:         numHigh++;
 32039  0007B6  4B4C               	infsnz	_numHigh& (0+255),f,b
 32040  0007B8  2B4D               	incf	(_numHigh+1)& (0+255),f,b
 32041  0007BA                     i2l21391:
 32042                           
 32043                           ;monitor.c: 491:     if (prSlow<loLimit) {
 32044  0007BA  0101               	movlb	1	; () banked
 32045  0007BC  51CD               	movf	_loLimit& (0+255),w,b
 32046  0007BE  0100               	movlb	0	; () banked
 32047  0007C0  5DCE               	subwf	_prSlow& (0+255),w,b
 32048  0007C2  51CF               	movf	(_prSlow+1)& (0+255),w,b
 32049  0007C4  0A80               	xorlw	128
 32050  0007C6  6E5B               	movwf	??_MonitorPressureTask^0,c
 32051  0007C8  0101               	movlb	1	; () banked
 32052  0007CA  51CE               	movf	(_loLimit+1)& (0+255),w,b
 32053  0007CC  0A80               	xorlw	128
 32054  0007CE  585B               	subwfb	??_MonitorPressureTask^0,w,c
 32055  0007D0  B0D8               	btfsc	status,0,c
 32056  0007D2  D016               	goto	i2l21397
 32057                           
 32058                           ; BSR set to: 1
 32059                           ;monitor.c: 494:         pLowAcc += prSlow;
 32060  0007D4  0060  F338  F05B   	movff	_prSlow,??_MonitorPressureTask
 32061  0007DA  0060  F33C  F05C   	movff	_prSlow+1,??_MonitorPressureTask+1
 32062  0007E0  0E00               	movlw	0
 32063  0007E2  BE5C               	btfsc	(??_MonitorPressureTask+1)^0,7,c
 32064  0007E4  0EFF               	movlw	255
 32065  0007E6  6E5D               	movwf	(??_MonitorPressureTask+2)^0,c
 32066  0007E8  6E5E               	movwf	(??_MonitorPressureTask+3)^0,c
 32067  0007EA  505B               	movf	??_MonitorPressureTask^0,w,c
 32068  0007EC  0102               	movlb	2	; () banked
 32069  0007EE  271A               	addwf	_pLowAcc& (0+255),f,b
 32070  0007F0  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 32071  0007F2  231B               	addwfc	(_pLowAcc+1)& (0+255),f,b
 32072  0007F4  505D               	movf	(??_MonitorPressureTask+2)^0,w,c
 32073  0007F6  231C               	addwfc	(_pLowAcc+2)& (0+255),f,b
 32074  0007F8  505E               	movf	(??_MonitorPressureTask+3)^0,w,c
 32075  0007FA  231D               	addwfc	(_pLowAcc+3)& (0+255),f,b
 32076                           
 32077                           ; BSR set to: 2
 32078                           ;monitor.c: 495:         numLow++;
 32079  0007FC  4B4A               	infsnz	_numLow& (0+255),f,b
 32080  0007FE  2B4B               	incf	(_numLow+1)& (0+255),f,b
 32081  000800                     i2l21397:
 32082                           
 32083                           ;monitor.c: 499:     int16_t halfLimit;;monitor.c: 500:     halfLimit = (hiLimit+loLimit
      +                          )/2;
 32084  000800  0101               	movlb	1	; () banked
 32085  000802  51CD               	movf	_loLimit& (0+255),w,b
 32086  000804  25CF               	addwf	_hiLimit& (0+255),w,b
 32087  000806  6E07               	movwf	i2___awdiv@dividend^0,c
 32088  000808  51CE               	movf	(_loLimit+1)& (0+255),w,b
 32089  00080A  21D0               	addwfc	(_hiLimit+1)& (0+255),w,b
 32090  00080C  6E08               	movwf	(i2___awdiv@dividend+1)^0,c
 32091  00080E  0E00               	movlw	0
 32092  000810  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 32093  000812  0E02               	movlw	2
 32094  000814  6E09               	movwf	i2___awdiv@divisor^0,c
 32095  000816  ECFD  F03F         	call	i2___awdiv	;wreg free
 32096  00081A  0060  F01C  F09F   	movff	?i2___awdiv,MonitorPressureTask@halfLimit
 32097  000820  0060  F020  F0A0   	movff	?i2___awdiv+1,MonitorPressureTask@halfLimit+1
 32098                           
 32099                           ;monitor.c: 503:     if ( state == 0) {
 32100  000826  0101               	movlb	1	; () banked
 32101  000828  51DF               	movf	_state& (0+255),w,b
 32102  00082A  11E0               	iorwf	(_state+1)& (0+255),w,b
 32103  00082C  A4D8               	btfss	status,2,c
 32104  00082E  D02D               	goto	i2l21409
 32105                           
 32106                           ; BSR set to: 1
 32107                           ;monitor.c: 504:         if (pi> (targetHigh+targetLow)/2) {
 32108  000830  51E1               	movf	_targetLow& (0+255),w,b
 32109  000832  25E3               	addwf	_targetHigh& (0+255),w,b
 32110  000834  6E07               	movwf	i2___awdiv@dividend^0,c
 32111  000836  51E2               	movf	(_targetLow+1)& (0+255),w,b
 32112  000838  21E4               	addwfc	(_targetHigh+1)& (0+255),w,b
 32113  00083A  6E08               	movwf	(i2___awdiv@dividend+1)^0,c
 32114  00083C  0E00               	movlw	0
 32115  00083E  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 32116  000840  0E02               	movlw	2
 32117  000842  6E09               	movwf	i2___awdiv@divisor^0,c
 32118  000844  ECFD  F03F         	call	i2___awdiv	;wreg free
 32119  000848  0101               	movlb	1	; () banked
 32120  00084A  51D7               	movf	_pi& (0+255),w,b
 32121  00084C  5C07               	subwf	?i2___awdiv^0,w,c
 32122  00084E  5008               	movf	(?i2___awdiv+1)^0,w,c
 32123  000850  0A80               	xorlw	128
 32124  000852  6E5B               	movwf	??_MonitorPressureTask^0,c
 32125  000854  51D8               	movf	(_pi+1)& (0+255),w,b
 32126  000856  0A80               	xorlw	128
 32127  000858  585B               	subwfb	??_MonitorPressureTask^0,w,c
 32128  00085A  B0D8               	btfsc	status,0,c
 32129  00085C  D016               	goto	i2l21409
 32130                           
 32131                           ; BSR set to: 1
 32132                           ;monitor.c: 505:             if (prSlow < targetLow) next = 2; else next = 4;
 32133  00085E  51E1               	movf	_targetLow& (0+255),w,b
 32134  000860  0100               	movlb	0	; () banked
 32135  000862  5DCE               	subwf	_prSlow& (0+255),w,b
 32136  000864  51CF               	movf	(_prSlow+1)& (0+255),w,b
 32137  000866  0A80               	xorlw	128
 32138  000868  6E5B               	movwf	??_MonitorPressureTask^0,c
 32139  00086A  0101               	movlb	1	; () banked
 32140  00086C  51E2               	movf	(_targetLow+1)& (0+255),w,b
 32141  00086E  0A80               	xorlw	128
 32142  000870  585B               	subwfb	??_MonitorPressureTask^0,w,c
 32143  000872  B0D8               	btfsc	status,0,c
 32144  000874  D005               	goto	i2l21407
 32145                           
 32146                           ; BSR set to: 1
 32147  000876  0E00               	movlw	0
 32148  000878  0100               	movlb	0	; () banked
 32149  00087A  6FB6               	movwf	(MonitorPressureTask@next+1)& (0+255),b
 32150  00087C  0E02               	movlw	2
 32151  00087E  D004               	goto	L13
 32152  000880                     i2l21407:
 32153                           
 32154                           ; BSR set to: 1
 32155  000880  0E00               	movlw	0
 32156  000882  0100               	movlb	0	; () banked
 32157  000884  6FB6               	movwf	(MonitorPressureTask@next+1)& (0+255),b
 32158  000886  0E04               	movlw	4
 32159  000888                     L13:
 32160  000888  6FB5               	movwf	MonitorPressureTask@next& (0+255),b
 32161  00088A                     i2l21409:
 32162                           
 32163                           ;monitor.c: 512:     if (prSlow<loLimit && prFast>= loLimit) {
 32164  00088A  0101               	movlb	1	; () banked
 32165  00088C  51CD               	movf	_loLimit& (0+255),w,b
 32166  00088E  0100               	movlb	0	; () banked
 32167  000890  5DCE               	subwf	_prSlow& (0+255),w,b
 32168  000892  51CF               	movf	(_prSlow+1)& (0+255),w,b
 32169  000894  0A80               	xorlw	128
 32170  000896  6E5B               	movwf	??_MonitorPressureTask^0,c
 32171  000898  0101               	movlb	1	; () banked
 32172  00089A  51CE               	movf	(_loLimit+1)& (0+255),w,b
 32173  00089C  0A80               	xorlw	128
 32174  00089E  585B               	subwfb	??_MonitorPressureTask^0,w,c
 32175  0008A0  B0D8               	btfsc	status,0,c
 32176  0008A2  D16B               	goto	i2l21477
 32177                           
 32178                           ; BSR set to: 1
 32179  0008A4  51CD               	movf	_loLimit& (0+255),w,b
 32180  0008A6  0102               	movlb	2	; () banked
 32181  0008A8  5D3E               	subwf	_prFast& (0+255),w,b
 32182  0008AA  513F               	movf	(_prFast+1)& (0+255),w,b
 32183  0008AC  0A80               	xorlw	128
 32184  0008AE  6E5B               	movwf	??_MonitorPressureTask^0,c
 32185  0008B0  0101               	movlb	1	; () banked
 32186  0008B2  51CE               	movf	(_loLimit+1)& (0+255),w,b
 32187  0008B4  0A80               	xorlw	128
 32188  0008B6  585B               	subwfb	??_MonitorPressureTask^0,w,c
 32189  0008B8  A0D8               	btfss	status,0,c
 32190  0008BA  D15F               	goto	i2l21477
 32191                           
 32192                           ; BSR set to: 1
 32193                           ;monitor.c: 515:         if (tt>400) {
 32194  0008BC  0100               	movlb	0	; () banked
 32195  0008BE  BFCB               	btfsc	(_tt+3)& (0+255),7,b
 32196  0008C0  D0F5               	goto	i2l21455
 32197  0008C2  51CB               	movf	(_tt+3)& (0+255),w,b
 32198  0008C4  11CA               	iorwf	(_tt+2)& (0+255),w,b
 32199  0008C6  E106               	bnz	i2u2065_40
 32200  0008C8  0E91               	movlw	145
 32201  0008CA  5DC8               	subwf	_tt& (0+255),w,b
 32202  0008CC  0E01               	movlw	1
 32203  0008CE  59C9               	subwfb	(_tt+1)& (0+255),w,b
 32204  0008D0  A0D8               	btfss	status,0,c
 32205  0008D2  D0EC               	goto	i2l21455
 32206  0008D4                     i2u2065_40:
 32207                           
 32208                           ; BSR set to: 0
 32209                           ;monitor.c: 516:             bp = tt;
 32210  0008D4  C0C8  F2BA         	movff	_tt,_bp
 32211  0008D8  C0C9  F2BB         	movff	_tt+1,_bp+1
 32212                           
 32213                           ; BSR set to: 0
 32214                           ;monitor.c: 517:             if (tt3>tt2) ti = tt3-tt2;
 32215  0008DC  0101               	movlb	1	; () banked
 32216  0008DE  51DD               	movf	_tt3& (0+255),w,b
 32217  0008E0  0100               	movlb	0	; () banked
 32218  0008E2  5DDC               	subwf	_tt2& (0+255),w,b
 32219  0008E4  51DD               	movf	(_tt2+1)& (0+255),w,b
 32220  0008E6  0A80               	xorlw	128
 32221  0008E8  6E5B               	movwf	??_MonitorPressureTask^0,c
 32222  0008EA  0101               	movlb	1	; () banked
 32223  0008EC  51DE               	movf	(_tt3+1)& (0+255),w,b
 32224  0008EE  0A80               	xorlw	128
 32225  0008F0  585B               	subwfb	??_MonitorPressureTask^0,w,c
 32226  0008F2  B0D8               	btfsc	status,0,c
 32227  0008F4  D00C               	goto	i2l3120
 32228                           
 32229                           ; BSR set to: 1
 32230  0008F6  0100               	movlb	0	; () banked
 32231  0008F8  51DC               	movf	_tt2& (0+255),w,b
 32232  0008FA  0101               	movlb	1	; () banked
 32233  0008FC  5DDD               	subwf	_tt3& (0+255),w,b
 32234  0008FE  0102               	movlb	2	; () banked
 32235  000900  6F5A               	movwf	_ti& (0+255),b
 32236  000902  0100               	movlb	0	; () banked
 32237  000904  51DD               	movf	(_tt2+1)& (0+255),w,b
 32238  000906  0101               	movlb	1	; () banked
 32239  000908  59DE               	subwfb	(_tt3+1)& (0+255),w,b
 32240  00090A  0102               	movlb	2	; () banked
 32241  00090C  6F5B               	movwf	(_ti+1)& (0+255),b
 32242  00090E                     i2l3120:
 32243                           
 32244                           ;monitor.c: 519:             if (tt>tt4) te = tt-tt4;
 32245  00090E  0E00               	movlw	0
 32246  000910  0100               	movlb	0	; () banked
 32247  000912  BFDB               	btfsc	(_tt4+1)& (0+255),7,b
 32248  000914  0EFF               	movlw	255
 32249  000916  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 32250  000918  0A80               	xorlw	128
 32251  00091A  6E5B               	movwf	??_MonitorPressureTask^0,c
 32252  00091C  51C8               	movf	_tt& (0+255),w,b
 32253  00091E  5DDA               	subwf	_tt4& (0+255),w,b
 32254  000920  51C9               	movf	(_tt+1)& (0+255),w,b
 32255  000922  59DB               	subwfb	(_tt4+1)& (0+255),w,b
 32256  000924  51CA               	movf	(_tt+2)& (0+255),w,b
 32257  000926  585C               	subwfb	(??_MonitorPressureTask+1)^0,w,c
 32258  000928  51CB               	movf	(_tt+3)& (0+255),w,b
 32259  00092A  0A80               	xorlw	128
 32260  00092C  585B               	subwfb	??_MonitorPressureTask^0,w,c
 32261  00092E  B0D8               	btfsc	status,0,c
 32262  000930  D009               	goto	i2l3121
 32263                           
 32264                           ; BSR set to: 0
 32265  000932  51DA               	movf	_tt4& (0+255),w,b
 32266  000934  5DC8               	subwf	_tt& (0+255),w,b
 32267  000936  0102               	movlb	2	; () banked
 32268  000938  6F58               	movwf	_te& (0+255),b
 32269  00093A  0100               	movlb	0	; () banked
 32270  00093C  51DB               	movf	(_tt4+1)& (0+255),w,b
 32271  00093E  59C9               	subwfb	(_tt+1)& (0+255),w,b
 32272  000940  0102               	movlb	2	; () banked
 32273  000942  6F59               	movwf	(_te+1)& (0+255),b
 32274  000944                     i2l3121:
 32275                           
 32276                           ;monitor.c: 521:             if (bp!=0) bpm = 60000/(bp*2);
 32277  000944  0102               	movlb	2	; () banked
 32278  000946  51BA               	movf	_bp& (0+255),w,b
 32279  000948  11BB               	iorwf	(_bp+1)& (0+255),w,b
 32280  00094A  B4D8               	btfsc	status,2,c
 32281  00094C  D024               	goto	i2l21425
 32282                           
 32283                           ; BSR set to: 2
 32284  00094E  0E60               	movlw	96
 32285  000950  6E0D               	movwf	i2___aldiv@dividend^0,c
 32286  000952  0EEA               	movlw	234
 32287  000954  6E0E               	movwf	(i2___aldiv@dividend+1)^0,c
 32288  000956  0E00               	movlw	0
 32289  000958  6E0F               	movwf	(i2___aldiv@dividend+2)^0,c
 32290  00095A  0E00               	movlw	0
 32291  00095C  6E10               	movwf	(i2___aldiv@dividend+3)^0,c
 32292  00095E  0060  FAE8  F05B   	movff	_bp,??_MonitorPressureTask
 32293  000964  0060  FAEC  F05C   	movff	_bp+1,??_MonitorPressureTask+1
 32294  00096A  90D8               	bcf	status,0,c
 32295  00096C  365B               	rlcf	??_MonitorPressureTask^0,f,c
 32296  00096E  365C               	rlcf	(??_MonitorPressureTask+1)^0,f,c
 32297  000970  0060  F16C  F011   	movff	??_MonitorPressureTask,i2___aldiv@divisor
 32298  000976  0060  F170  F012   	movff	??_MonitorPressureTask+1,i2___aldiv@divisor+1
 32299  00097C  0E00               	movlw	0
 32300  00097E  BE12               	btfsc	(i2___aldiv@divisor+1)^0,7,c
 32301  000980  0EFF               	movlw	-1
 32302  000982  6E13               	movwf	(i2___aldiv@divisor+2)^0,c
 32303  000984  6E14               	movwf	(i2___aldiv@divisor+3)^0,c
 32304  000986  EC3A  F036         	call	i2___aldiv	;wreg free
 32305  00098A  0060  F034  F256   	movff	?i2___aldiv,_bpm
 32306  000990  0060  F038  F257   	movff	?i2___aldiv+1,_bpm+1
 32307  000996                     i2l21425:
 32308                           
 32309                           ;monitor.c: 522:             if (numHigh>0) {
 32310  000996  0102               	movlb	2	; () banked
 32311  000998  BF4D               	btfsc	(_numHigh+1)& (0+255),7,b
 32312  00099A  D031               	goto	i2l21433
 32313  00099C  514D               	movf	(_numHigh+1)& (0+255),w,b
 32314  00099E  E103               	bnz	i2u2069_40
 32315  0009A0  054C               	decf	_numHigh& (0+255),w,b
 32316  0009A2  A0D8               	btfss	status,0,c
 32317  0009A4  D02C               	goto	i2l21433
 32318  0009A6                     i2u2069_40:
 32319                           
 32320                           ; BSR set to: 2
 32321                           ;monitor.c: 523:                 pHigh = pHighAcc / numHigh;
 32322  0009A6  0060  F878  F00D   	movff	_pHighAcc,i2___aldiv@dividend
 32323  0009AC  0060  F87C  F00E   	movff	_pHighAcc+1,i2___aldiv@dividend+1
 32324  0009B2  0060  F880  F00F   	movff	_pHighAcc+2,i2___aldiv@dividend+2
 32325  0009B8  0060  F884  F010   	movff	_pHighAcc+3,i2___aldiv@dividend+3
 32326  0009BE  0060  F930  F011   	movff	_numHigh,i2___aldiv@divisor
 32327  0009C4  0060  F934  F012   	movff	_numHigh+1,i2___aldiv@divisor+1
 32328  0009CA  0E00               	movlw	0
 32329  0009CC  BE12               	btfsc	(i2___aldiv@divisor+1)^0,7,c
 32330  0009CE  0EFF               	movlw	-1
 32331  0009D0  6E13               	movwf	(i2___aldiv@divisor+2)^0,c
 32332  0009D2  6E14               	movwf	(i2___aldiv@divisor+3)^0,c
 32333  0009D4  EC3A  F036         	call	i2___aldiv	;wreg free
 32334  0009D8  0060  F034  F1D3   	movff	?i2___aldiv,_pHigh
 32335  0009DE  0060  F038  F1D4   	movff	?i2___aldiv+1,_pHigh+1
 32336                           
 32337                           ;monitor.c: 524:                 pHighAcc = 0;
 32338  0009E4  0E00               	movlw	0
 32339  0009E6  0102               	movlb	2	; () banked
 32340  0009E8  6F1E               	movwf	_pHighAcc& (0+255),b
 32341  0009EA  0E00               	movlw	0
 32342  0009EC  6F1F               	movwf	(_pHighAcc+1)& (0+255),b
 32343  0009EE  0E00               	movlw	0
 32344  0009F0  6F20               	movwf	(_pHighAcc+2)& (0+255),b
 32345  0009F2  0E00               	movlw	0
 32346  0009F4  6F21               	movwf	(_pHighAcc+3)& (0+255),b
 32347                           
 32348                           ; BSR set to: 2
 32349                           ;monitor.c: 525:                 numHigh = 0;
 32350  0009F6  0E00               	movlw	0
 32351  0009F8  6F4D               	movwf	(_numHigh+1)& (0+255),b
 32352  0009FA  0E00               	movlw	0
 32353  0009FC  6F4C               	movwf	_numHigh& (0+255),b
 32354  0009FE                     i2l21433:
 32355                           
 32356                           ; BSR set to: 2
 32357                           ;monitor.c: 527:             if (numLow>0) {
 32358  0009FE  BF4B               	btfsc	(_numLow+1)& (0+255),7,b
 32359  000A00  D031               	goto	i2l21441
 32360  000A02  514B               	movf	(_numLow+1)& (0+255),w,b
 32361  000A04  E103               	bnz	i2u2070_40
 32362  000A06  054A               	decf	_numLow& (0+255),w,b
 32363  000A08  A0D8               	btfss	status,0,c
 32364  000A0A  D02C               	goto	i2l21441
 32365  000A0C                     i2u2070_40:
 32366                           
 32367                           ; BSR set to: 2
 32368                           ;monitor.c: 528:                 pLow = pLowAcc / numLow;
 32369  000A0C  0060  F868  F00D   	movff	_pLowAcc,i2___aldiv@dividend
 32370  000A12  0060  F86C  F00E   	movff	_pLowAcc+1,i2___aldiv@dividend+1
 32371  000A18  0060  F870  F00F   	movff	_pLowAcc+2,i2___aldiv@dividend+2
 32372  000A1E  0060  F874  F010   	movff	_pLowAcc+3,i2___aldiv@dividend+3
 32373  000A24  0060  F928  F011   	movff	_numLow,i2___aldiv@divisor
 32374  000A2A  0060  F92C  F012   	movff	_numLow+1,i2___aldiv@divisor+1
 32375  000A30  0E00               	movlw	0
 32376  000A32  BE12               	btfsc	(i2___aldiv@divisor+1)^0,7,c
 32377  000A34  0EFF               	movlw	-1
 32378  000A36  6E13               	movwf	(i2___aldiv@divisor+2)^0,c
 32379  000A38  6E14               	movwf	(i2___aldiv@divisor+3)^0,c
 32380  000A3A  EC3A  F036         	call	i2___aldiv	;wreg free
 32381  000A3E  0060  F034  F24E   	movff	?i2___aldiv,_pLow
 32382  000A44  0060  F038  F24F   	movff	?i2___aldiv+1,_pLow+1
 32383                           
 32384                           ;monitor.c: 529:                 numLow = 0;
 32385  000A4A  0E00               	movlw	0
 32386  000A4C  0102               	movlb	2	; () banked
 32387  000A4E  6F4B               	movwf	(_numLow+1)& (0+255),b
 32388  000A50  0E00               	movlw	0
 32389  000A52  6F4A               	movwf	_numLow& (0+255),b
 32390                           
 32391                           ; BSR set to: 2
 32392                           ;monitor.c: 530:                 pLowAcc = 0;
 32393  000A54  0E00               	movlw	0
 32394  000A56  6F1A               	movwf	_pLowAcc& (0+255),b
 32395  000A58  0E00               	movlw	0
 32396  000A5A  6F1B               	movwf	(_pLowAcc+1)& (0+255),b
 32397  000A5C  0E00               	movlw	0
 32398  000A5E  6F1C               	movwf	(_pLowAcc+2)& (0+255),b
 32399  000A60  0E00               	movlw	0
 32400  000A62  6F1D               	movwf	(_pLowAcc+3)& (0+255),b
 32401  000A64                     i2l21441:
 32402                           
 32403                           ; BSR set to: 2
 32404                           ;monitor.c: 533:             tt1 = tt;
 32405  000A64  C0C8  F266         	movff	_tt,_tt1
 32406  000A68  C0C9  F267         	movff	_tt+1,_tt1+1
 32407                           
 32408                           ; BSR set to: 2
 32409                           ;monitor.c: 546:             tt=0;
 32410  000A6C  0E00               	movlw	0
 32411  000A6E  0100               	movlb	0	; () banked
 32412  000A70  6FC8               	movwf	_tt& (0+255),b
 32413  000A72  0E00               	movlw	0
 32414  000A74  6FC9               	movwf	(_tt+1)& (0+255),b
 32415  000A76  0E00               	movlw	0
 32416  000A78  6FCA               	movwf	(_tt+2)& (0+255),b
 32417  000A7A  0E00               	movlw	0
 32418  000A7C  6FCB               	movwf	(_tt+3)& (0+255),b
 32419                           
 32420                           ; BSR set to: 0
 32421                           ;monitor.c: 548:             tt2=0;
 32422  000A7E  0E00               	movlw	0
 32423  000A80  6FDD               	movwf	(_tt2+1)& (0+255),b
 32424  000A82  0E00               	movlw	0
 32425  000A84  6FDC               	movwf	_tt2& (0+255),b
 32426                           
 32427                           ; BSR set to: 0
 32428                           ;monitor.c: 549:             tt3=0;
 32429  000A86  0E00               	movlw	0
 32430  000A88  0101               	movlb	1	; () banked
 32431  000A8A  6FDE               	movwf	(_tt3+1)& (0+255),b
 32432  000A8C  0E00               	movlw	0
 32433  000A8E  6FDD               	movwf	_tt3& (0+255),b
 32434                           
 32435                           ; BSR set to: 1
 32436                           ;monitor.c: 550:             tt4=0;
 32437  000A90  0E00               	movlw	0
 32438  000A92  0100               	movlb	0	; () banked
 32439  000A94  6FDB               	movwf	(_tt4+1)& (0+255),b
 32440  000A96  0E00               	movlw	0
 32441  000A98  6FDA               	movwf	_tt4& (0+255),b
 32442                           
 32443                           ; BSR set to: 0
 32444                           ;monitor.c: 551:             tt34=0;
 32445  000A9A  0E00               	movlw	0
 32446  000A9C  0102               	movlb	2	; () banked
 32447  000A9E  6F61               	movwf	(_tt34+1)& (0+255),b
 32448  000AA0  0E00               	movlw	0
 32449  000AA2  6F60               	movwf	_tt34& (0+255),b
 32450                           
 32451                           ; BSR set to: 2
 32452                           ;monitor.c: 553:             ttAlarm = 0;
 32453  000AA4  0E00               	movlw	0
 32454  000AA6  6F5D               	movwf	(_ttAlarm+1)& (0+255),b
 32455  000AA8  0E00               	movlw	0
 32456  000AAA  6F5C               	movwf	_ttAlarm& (0+255),b
 32457  000AAC                     i2l21455:
 32458                           
 32459                           ;monitor.c: 555:         tt12 = tt;
 32460  000AAC  C0C8  F262         	movff	_tt,_tt12
 32461  000AB0  C0C9  F263         	movff	_tt+1,_tt12+1
 32462                           
 32463                           ;monitor.c: 557:         measPe=0;
 32464  000AB4  0E00               	movlw	0
 32465  000AB6  0102               	movlb	2	; () banked
 32466  000AB8  6F9D               	movwf	MonitorPressureTask@measPe& (0+255),b
 32467                           
 32468                           ; BSR set to: 2
 32469                           ;monitor.c: 558:         measPi=0;
 32470  000ABA  0E00               	movlw	0
 32471  000ABC  6F9E               	movwf	MonitorPressureTask@measPi& (0+255),b
 32472                           
 32473                           ; BSR set to: 2
 32474                           ;monitor.c: 559:         lrpe = rpe;
 32475  000ABE  C246  F0D4         	movff	_rpe,_lrpe
 32476  000AC2  C247  F0D5         	movff	_rpe+1,_lrpe+1
 32477                           
 32478                           ; BSR set to: 2
 32479                           ;monitor.c: 561:         if (enableAlarms) {
 32480  000AC6  0100               	movlb	0	; () banked
 32481  000AC8  51F4               	movf	_enableAlarms& (0+255),w,b
 32482  000ACA  B4D8               	btfsc	status,2,c
 32483  000ACC  D052               	goto	i2l21475
 32484                           
 32485                           ; BSR set to: 0
 32486                           ;monitor.c: 562:             if (((pe+lrpe)/2)>(targetLow+15)) SetEPAboveSetAlarm(); els
      +                          e ClearEPAboveSetAlarm();
 32487  000ACE  51D4               	movf	_lrpe& (0+255),w,b
 32488  000AD0  0101               	movlb	1	; () banked
 32489  000AD2  25D5               	addwf	_pe& (0+255),w,b
 32490  000AD4  6E07               	movwf	i2___awdiv@dividend^0,c
 32491  000AD6  0100               	movlb	0	; () banked
 32492  000AD8  51D5               	movf	(_lrpe+1)& (0+255),w,b
 32493  000ADA  0101               	movlb	1	; () banked
 32494  000ADC  21D6               	addwfc	(_pe+1)& (0+255),w,b
 32495  000ADE  6E08               	movwf	(i2___awdiv@dividend+1)^0,c
 32496  000AE0  0E00               	movlw	0
 32497  000AE2  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 32498  000AE4  0E02               	movlw	2
 32499  000AE6  6E09               	movwf	i2___awdiv@divisor^0,c
 32500  000AE8  ECFD  F03F         	call	i2___awdiv	;wreg free
 32501  000AEC  0E0F               	movlw	15
 32502  000AEE  0101               	movlb	1	; () banked
 32503  000AF0  25E1               	addwf	_targetLow& (0+255),w,b
 32504  000AF2  6E5B               	movwf	??_MonitorPressureTask^0,c
 32505  000AF4  0E00               	movlw	0
 32506  000AF6  21E2               	addwfc	(_targetLow+1)& (0+255),w,b
 32507  000AF8  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 32508  000AFA  5007               	movf	?i2___awdiv^0,w,c
 32509  000AFC  5C5B               	subwf	??_MonitorPressureTask^0,w,c
 32510  000AFE  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 32511  000B00  0A80               	xorlw	128
 32512  000B02  6E5D               	movwf	(??_MonitorPressureTask+2)^0,c
 32513  000B04  5008               	movf	(?i2___awdiv+1)^0,w,c
 32514  000B06  0A80               	xorlw	128
 32515  000B08  585D               	subwfb	(??_MonitorPressureTask+2)^0,w,c
 32516  000B0A  B0D8               	btfsc	status,0,c
 32517  000B0C  D003               	goto	i2l21469
 32518                           
 32519                           ; BSR set to: 1
 32520  000B0E  EC3A  F04F         	call	_SetEPAboveSetAlarm	;wreg free
 32521  000B12  D002               	goto	i2l3127
 32522  000B14                     i2l21469:
 32523                           
 32524                           ; BSR set to: 1
 32525  000B14  EC42  F050         	call	i2_ClearEPAboveSetAlarm	;wreg free
 32526  000B18                     i2l3127:
 32527                           
 32528                           ; BSR set to: 0
 32529                           ;monitor.c: 563:             if (((pe+lrpe)/2)<(targetLow-15)) SetEPBelowSetAlarm(); els
      +                          e ClearEPBelowSetAlarm();
 32530  000B18  0EF1               	movlw	241
 32531  000B1A  6E5B               	movwf	??_MonitorPressureTask^0,c
 32532  000B1C  0EFF               	movlw	255
 32533  000B1E  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 32534  000B20  0060  F784  F05D   	movff	_targetLow,??_MonitorPressureTask+2
 32535  000B26  0060  F788  F05E   	movff	_targetLow+1,??_MonitorPressureTask+3
 32536  000B2C  505B               	movf	??_MonitorPressureTask^0,w,c
 32537  000B2E  265D               	addwf	(??_MonitorPressureTask+2)^0,f,c
 32538  000B30  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 32539  000B32  225E               	addwfc	(??_MonitorPressureTask+3)^0,f,c
 32540  000B34  51D4               	movf	_lrpe& (0+255),w,b
 32541  000B36  0101               	movlb	1	; () banked
 32542  000B38  25D5               	addwf	_pe& (0+255),w,b
 32543  000B3A  6E07               	movwf	i2___awdiv@dividend^0,c
 32544  000B3C  0100               	movlb	0	; () banked
 32545  000B3E  51D5               	movf	(_lrpe+1)& (0+255),w,b
 32546  000B40  0101               	movlb	1	; () banked
 32547  000B42  21D6               	addwfc	(_pe+1)& (0+255),w,b
 32548  000B44  6E08               	movwf	(i2___awdiv@dividend+1)^0,c
 32549  000B46  0E00               	movlw	0
 32550  000B48  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 32551  000B4A  0E02               	movlw	2
 32552  000B4C  6E09               	movwf	i2___awdiv@divisor^0,c
 32553  000B4E  ECFD  F03F         	call	i2___awdiv	;wreg free
 32554  000B52  505D               	movf	(??_MonitorPressureTask+2)^0,w,c
 32555  000B54  5C07               	subwf	?i2___awdiv^0,w,c
 32556  000B56  5008               	movf	(?i2___awdiv+1)^0,w,c
 32557  000B58  0A80               	xorlw	128
 32558  000B5A  6E5F               	movwf	(??_MonitorPressureTask+4)^0,c
 32559  000B5C  505E               	movf	(??_MonitorPressureTask+3)^0,w,c
 32560  000B5E  0A80               	xorlw	128
 32561  000B60  585F               	subwfb	(??_MonitorPressureTask+4)^0,w,c
 32562  000B62  B0D8               	btfsc	status,0,c
 32563  000B64  D003               	goto	i2l21473
 32564  000B66  EC2A  F04F         	call	_SetEPBelowSetAlarm	;wreg free
 32565  000B6A  D007               	goto	i2l21477
 32566  000B6C                     i2l21473:
 32567  000B6C  EC37  F050         	call	i2_ClearEPBelowSetAlarm	;wreg free
 32568  000B70  D004               	goto	i2l21477
 32569  000B72                     i2l21475:
 32570                           
 32571                           ; BSR set to: 0
 32572                           ;monitor.c: 565:             ClearEPAboveSetAlarm();
 32573  000B72  EC42  F050         	call	i2_ClearEPAboveSetAlarm	;wreg free
 32574                           
 32575                           ;monitor.c: 566:             ClearEPBelowSetAlarm();
 32576  000B76  EC37  F050         	call	i2_ClearEPBelowSetAlarm	;wreg free
 32577  000B7A                     i2l21477:
 32578                           
 32579                           ;monitor.c: 572:     if (tt1>500 && tt==(tt1*9)/10) volumeAcc=0;
 32580  000B7A  0102               	movlb	2	; () banked
 32581  000B7C  BF67               	btfsc	(_tt1+1)& (0+255),7,b
 32582  000B7E  D040               	goto	i2l21483
 32583  000B80  0EF5               	movlw	245
 32584  000B82  5D66               	subwf	_tt1& (0+255),w,b
 32585  000B84  0E01               	movlw	1
 32586  000B86  5967               	subwfb	(_tt1+1)& (0+255),w,b
 32587  000B88  A0D8               	btfss	status,0,c
 32588  000B8A  D03A               	goto	i2l21483
 32589                           
 32590                           ; BSR set to: 2
 32591  000B8C  0060  F998  F001   	movff	_tt1,i2___wmul@multiplier
 32592  000B92  0060  F99C  F002   	movff	_tt1+1,i2___wmul@multiplier+1
 32593  000B98  0E00               	movlw	0
 32594  000B9A  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 32595  000B9C  0E09               	movlw	9
 32596  000B9E  6E03               	movwf	i2___wmul@multiplicand^0,c
 32597  000BA0  EC06  F04D         	call	i2___wmul	;wreg free
 32598  000BA4  0060  F004  F007   	movff	?i2___wmul,i2___awdiv@dividend
 32599  000BAA  0060  F008  F008   	movff	?i2___wmul+1,i2___awdiv@dividend+1
 32600  000BB0  0E00               	movlw	0
 32601  000BB2  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 32602  000BB4  0E0A               	movlw	10
 32603  000BB6  6E09               	movwf	i2___awdiv@divisor^0,c
 32604  000BB8  ECFD  F03F         	call	i2___awdiv	;wreg free
 32605  000BBC  0060  F01C  F05B   	movff	?i2___awdiv,??_MonitorPressureTask
 32606  000BC2  0060  F020  F05C   	movff	?i2___awdiv+1,??_MonitorPressureTask+1
 32607  000BC8  0E00               	movlw	0
 32608  000BCA  BE5C               	btfsc	(??_MonitorPressureTask+1)^0,7,c
 32609  000BCC  0EFF               	movlw	255
 32610  000BCE  6E5D               	movwf	(??_MonitorPressureTask+2)^0,c
 32611  000BD0  6E5E               	movwf	(??_MonitorPressureTask+3)^0,c
 32612  000BD2  0100               	movlb	0	; () banked
 32613  000BD4  51C8               	movf	_tt& (0+255),w,b
 32614  000BD6  185B               	xorwf	??_MonitorPressureTask^0,w,c
 32615  000BD8  E113               	bnz	i2l21483
 32616  000BDA  51C9               	movf	(_tt+1)& (0+255),w,b
 32617  000BDC  185C               	xorwf	(??_MonitorPressureTask+1)^0,w,c
 32618  000BDE  E110               	bnz	i2l21483
 32619  000BE0  51CA               	movf	(_tt+2)& (0+255),w,b
 32620  000BE2  185D               	xorwf	(??_MonitorPressureTask+2)^0,w,c
 32621  000BE4  E10D               	bnz	i2l21483
 32622  000BE6  51CB               	movf	(_tt+3)& (0+255),w,b
 32623  000BE8  185E               	xorwf	(??_MonitorPressureTask+3)^0,w,c
 32624  000BEA  A4D8               	btfss	status,2,c
 32625  000BEC  D009               	goto	i2l21483
 32626                           
 32627                           ; BSR set to: 0
 32628  000BEE  0E00               	movlw	0
 32629  000BF0  0102               	movlb	2	; () banked
 32630  000BF2  6F22               	movwf	_volumeAcc& (0+255),b
 32631  000BF4  0E00               	movlw	0
 32632  000BF6  6F23               	movwf	(_volumeAcc+1)& (0+255),b
 32633  000BF8  0E00               	movlw	0
 32634  000BFA  6F24               	movwf	(_volumeAcc+2)& (0+255),b
 32635  000BFC  0E00               	movlw	0
 32636  000BFE  6F25               	movwf	(_volumeAcc+3)& (0+255),b
 32637  000C00                     i2l21483:
 32638                           
 32639                           ;monitor.c: 575:     static _Bool down = 0;;monitor.c: 578:     if (prSlow>hiLimit && pr
      +                          Fast<= hiLimit) {
 32640  000C00  0100               	movlb	0	; () banked
 32641  000C02  51CE               	movf	_prSlow& (0+255),w,b
 32642  000C04  0101               	movlb	1	; () banked
 32643  000C06  5DCF               	subwf	_hiLimit& (0+255),w,b
 32644  000C08  51D0               	movf	(_hiLimit+1)& (0+255),w,b
 32645  000C0A  0A80               	xorlw	128
 32646  000C0C  6E5B               	movwf	??_MonitorPressureTask^0,c
 32647  000C0E  0100               	movlb	0	; () banked
 32648  000C10  51CF               	movf	(_prSlow+1)& (0+255),w,b
 32649  000C12  0A80               	xorlw	128
 32650  000C14  585B               	subwfb	??_MonitorPressureTask^0,w,c
 32651  000C16  B0D8               	btfsc	status,0,c
 32652  000C18  D0FD               	goto	i2l21535
 32653                           
 32654                           ; BSR set to: 0
 32655  000C1A  0102               	movlb	2	; () banked
 32656  000C1C  513E               	movf	_prFast& (0+255),w,b
 32657  000C1E  0101               	movlb	1	; () banked
 32658  000C20  5DCF               	subwf	_hiLimit& (0+255),w,b
 32659  000C22  51D0               	movf	(_hiLimit+1)& (0+255),w,b
 32660  000C24  0A80               	xorlw	128
 32661  000C26  6E5B               	movwf	??_MonitorPressureTask^0,c
 32662  000C28  0102               	movlb	2	; () banked
 32663  000C2A  513F               	movf	(_prFast+1)& (0+255),w,b
 32664  000C2C  0A80               	xorlw	128
 32665  000C2E  585B               	subwfb	??_MonitorPressureTask^0,w,c
 32666  000C30  A0D8               	btfss	status,0,c
 32667  000C32  D0F0               	goto	i2l21535
 32668                           
 32669                           ; BSR set to: 2
 32670                           ;monitor.c: 580:         if (!down) {
 32671  000C34  519C               	movf	MonitorPressureTask@down& (0+255),w,b
 32672  000C36  A4D8               	btfss	status,2,c
 32673  000C38  D02A               	goto	i2l21497
 32674                           
 32675                           ; BSR set to: 2
 32676                           ;monitor.c: 582:             tt3 = tt;
 32677  000C3A  C0C8  F1DD         	movff	_tt,_tt3
 32678  000C3E  C0C9  F1DE         	movff	_tt+1,_tt3+1
 32679                           
 32680                           ; BSR set to: 2
 32681                           ;monitor.c: 583:             down = 1;
 32682  000C42  0E01               	movlw	1
 32683  000C44  6F9C               	movwf	MonitorPressureTask@down& (0+255),b
 32684                           
 32685                           ; BSR set to: 2
 32686                           ;monitor.c: 586:             volume = (volumeAcc)/55;
 32687  000C46  0060  F888  F001   	movff	_volumeAcc,___lldiv@dividend
 32688  000C4C  0060  F88C  F002   	movff	_volumeAcc+1,___lldiv@dividend+1
 32689  000C52  0060  F890  F003   	movff	_volumeAcc+2,___lldiv@dividend+2
 32690  000C58  0060  F894  F004   	movff	_volumeAcc+3,___lldiv@dividend+3
 32691  000C5E  0E37               	movlw	55
 32692  000C60  6E05               	movwf	___lldiv@divisor^0,c
 32693  000C62  0E00               	movlw	0
 32694  000C64  6E06               	movwf	(___lldiv@divisor+1)^0,c
 32695  000C66  0E00               	movlw	0
 32696  000C68  6E07               	movwf	(___lldiv@divisor+2)^0,c
 32697  000C6A  0E00               	movlw	0
 32698  000C6C  6E08               	movwf	(___lldiv@divisor+3)^0,c
 32699  000C6E  EC74  F03F         	call	___lldiv	;wreg free
 32700  000C72  0060  F004  F0DE   	movff	?___lldiv,_volume
 32701  000C78  0060  F008  F0DF   	movff	?___lldiv+1,_volume+1
 32702                           
 32703                           ; BSR set to: 2
 32704                           ;monitor.c: 587:             volumeAcc = 0;
 32705  000C7E  0E00               	movlw	0
 32706  000C80  6F22               	movwf	_volumeAcc& (0+255),b
 32707  000C82  0E00               	movlw	0
 32708  000C84  6F23               	movwf	(_volumeAcc+1)& (0+255),b
 32709  000C86  0E00               	movlw	0
 32710  000C88  6F24               	movwf	(_volumeAcc+2)& (0+255),b
 32711  000C8A  0E00               	movlw	0
 32712  000C8C  6F25               	movwf	(_volumeAcc+3)& (0+255),b
 32713  000C8E                     i2l21497:
 32714                           
 32715                           ; BSR set to: 2
 32716                           ;monitor.c: 590:         tt34 = tt;
 32717  000C8E  C0C8  F260         	movff	_tt,_tt34
 32718  000C92  C0C9  F261         	movff	_tt+1,_tt34+1
 32719                           
 32720                           ; BSR set to: 2
 32721                           ;monitor.c: 592:         measPe=0;
 32722  000C96  0E00               	movlw	0
 32723  000C98  6F9D               	movwf	MonitorPressureTask@measPe& (0+255),b
 32724                           
 32725                           ; BSR set to: 2
 32726                           ;monitor.c: 593:         measPi=0;
 32727  000C9A  0E00               	movlw	0
 32728  000C9C  6F9E               	movwf	MonitorPressureTask@measPi& (0+255),b
 32729                           
 32730                           ; BSR set to: 2
 32731                           ;monitor.c: 594:         lrpi = rpi;
 32732  000C9E  C248  F1D1         	movff	_rpi,_lrpi
 32733  000CA2  C249  F1D2         	movff	_rpi+1,_lrpi+1
 32734                           
 32735                           ; BSR set to: 2
 32736                           ;monitor.c: 596:         if (enableAlarms && !volumeControl) {
 32737  000CA6  0100               	movlb	0	; () banked
 32738  000CA8  51F4               	movf	_enableAlarms& (0+255),w,b
 32739  000CAA  B4D8               	btfsc	status,2,c
 32740  000CAC  D0AE               	goto	i2l21533
 32741                           
 32742                           ; BSR set to: 0
 32743  000CAE  0102               	movlb	2	; () banked
 32744  000CB0  51A1               	movf	_volumeControl& (0+255),w,b
 32745  000CB2  A4D8               	btfss	status,2,c
 32746  000CB4  D0AA               	goto	i2l21533
 32747                           
 32748                           ; BSR set to: 2
 32749                           ;monitor.c: 599:             if (pHigh>(targetHigh+20) && lrpi>(targetHigh+20) ) SetIPAb
      +                          oveSetAlarm();
 32750  000CB6  0E14               	movlw	20
 32751  000CB8  0101               	movlb	1	; () banked
 32752  000CBA  25E3               	addwf	_targetHigh& (0+255),w,b
 32753  000CBC  6E5B               	movwf	??_MonitorPressureTask^0,c
 32754  000CBE  0E00               	movlw	0
 32755  000CC0  21E4               	addwfc	(_targetHigh+1)& (0+255),w,b
 32756  000CC2  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 32757  000CC4  51D3               	movf	_pHigh& (0+255),w,b
 32758  000CC6  5C5B               	subwf	??_MonitorPressureTask^0,w,c
 32759  000CC8  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 32760  000CCA  0A80               	xorlw	128
 32761  000CCC  6E5D               	movwf	(??_MonitorPressureTask+2)^0,c
 32762  000CCE  51D4               	movf	(_pHigh+1)& (0+255),w,b
 32763  000CD0  0A80               	xorlw	128
 32764  000CD2  585D               	subwfb	(??_MonitorPressureTask+2)^0,w,c
 32765  000CD4  B0D8               	btfsc	status,0,c
 32766  000CD6  D011               	goto	i2l21515
 32767                           
 32768                           ; BSR set to: 1
 32769  000CD8  0E14               	movlw	20
 32770  000CDA  25E3               	addwf	_targetHigh& (0+255),w,b
 32771  000CDC  6E5B               	movwf	??_MonitorPressureTask^0,c
 32772  000CDE  0E00               	movlw	0
 32773  000CE0  21E4               	addwfc	(_targetHigh+1)& (0+255),w,b
 32774  000CE2  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 32775  000CE4  51D1               	movf	_lrpi& (0+255),w,b
 32776  000CE6  5C5B               	subwf	??_MonitorPressureTask^0,w,c
 32777  000CE8  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 32778  000CEA  0A80               	xorlw	128
 32779  000CEC  6E5D               	movwf	(??_MonitorPressureTask+2)^0,c
 32780  000CEE  51D2               	movf	(_lrpi+1)& (0+255),w,b
 32781  000CF0  0A80               	xorlw	128
 32782  000CF2  585D               	subwfb	(??_MonitorPressureTask+2)^0,w,c
 32783  000CF4  A0D8               	btfss	status,0,c
 32784                           
 32785                           ; BSR set to: 1
 32786  000CF6  EC1A  F04F         	call	_SetIPAboveSetAlarm	;wreg free
 32787  000CFA                     i2l21515:
 32788                           
 32789                           ;monitor.c: 600:             if (pHigh<(targetHigh+20) || lrpi<(targetHigh+20) ) ClearIP
      +                          AboveSetAlarm();
 32790  000CFA  0E14               	movlw	20
 32791  000CFC  0101               	movlb	1	; () banked
 32792  000CFE  25E3               	addwf	_targetHigh& (0+255),w,b
 32793  000D00  6E5B               	movwf	??_MonitorPressureTask^0,c
 32794  000D02  0E00               	movlw	0
 32795  000D04  21E4               	addwfc	(_targetHigh+1)& (0+255),w,b
 32796  000D06  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 32797  000D08  505B               	movf	??_MonitorPressureTask^0,w,c
 32798  000D0A  5DD3               	subwf	_pHigh& (0+255),w,b
 32799  000D0C  51D4               	movf	(_pHigh+1)& (0+255),w,b
 32800  000D0E  0A80               	xorlw	128
 32801  000D10  6E5D               	movwf	(??_MonitorPressureTask+2)^0,c
 32802  000D12  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 32803  000D14  0A80               	xorlw	128
 32804  000D16  585D               	subwfb	(??_MonitorPressureTask+2)^0,w,c
 32805  000D18  A0D8               	btfss	status,0,c
 32806  000D1A  D00F               	goto	i2u2084_40
 32807                           
 32808                           ; BSR set to: 1
 32809  000D1C  0E14               	movlw	20
 32810  000D1E  25E3               	addwf	_targetHigh& (0+255),w,b
 32811  000D20  6E5B               	movwf	??_MonitorPressureTask^0,c
 32812  000D22  0E00               	movlw	0
 32813  000D24  21E4               	addwfc	(_targetHigh+1)& (0+255),w,b
 32814  000D26  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 32815  000D28  505B               	movf	??_MonitorPressureTask^0,w,c
 32816  000D2A  5DD1               	subwf	_lrpi& (0+255),w,b
 32817  000D2C  51D2               	movf	(_lrpi+1)& (0+255),w,b
 32818  000D2E  0A80               	xorlw	128
 32819  000D30  6E5D               	movwf	(??_MonitorPressureTask+2)^0,c
 32820  000D32  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 32821  000D34  0A80               	xorlw	128
 32822  000D36  585D               	subwfb	(??_MonitorPressureTask+2)^0,w,c
 32823  000D38  A0D8               	btfss	status,0,c
 32824  000D3A                     i2u2084_40:
 32825                           
 32826                           ; BSR set to: 1
 32827  000D3A  EC2C  F050         	call	i2_ClearIPAboveSetAlarm	;wreg free
 32828                           
 32829                           ;monitor.c: 601:             if (pHigh<(targetHigh-20) && lrpi<(targetHigh-20) ) SetIPBe
      +                          lowSetAlarm();
 32830  000D3E  0EEC               	movlw	236
 32831  000D40  6E5B               	movwf	??_MonitorPressureTask^0,c
 32832  000D42  0EFF               	movlw	255
 32833  000D44  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 32834  000D46  0060  F78C  F05D   	movff	_targetHigh,??_MonitorPressureTask+2
 32835  000D4C  0060  F790  F05E   	movff	_targetHigh+1,??_MonitorPressureTask+3
 32836  000D52  505B               	movf	??_MonitorPressureTask^0,w,c
 32837  000D54  265D               	addwf	(??_MonitorPressureTask+2)^0,f,c
 32838  000D56  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 32839  000D58  225E               	addwfc	(??_MonitorPressureTask+3)^0,f,c
 32840  000D5A  505D               	movf	(??_MonitorPressureTask+2)^0,w,c
 32841  000D5C  0101               	movlb	1	; () banked
 32842  000D5E  5DD3               	subwf	_pHigh& (0+255),w,b
 32843  000D60  51D4               	movf	(_pHigh+1)& (0+255),w,b
 32844  000D62  0A80               	xorlw	128
 32845  000D64  6E5F               	movwf	(??_MonitorPressureTask+4)^0,c
 32846  000D66  505E               	movf	(??_MonitorPressureTask+3)^0,w,c
 32847  000D68  0A80               	xorlw	128
 32848  000D6A  585F               	subwfb	(??_MonitorPressureTask+4)^0,w,c
 32849  000D6C  B0D8               	btfsc	status,0,c
 32850  000D6E  D019               	goto	i2l21527
 32851                           
 32852                           ; BSR set to: 1
 32853  000D70  0EEC               	movlw	236
 32854  000D72  6E5B               	movwf	??_MonitorPressureTask^0,c
 32855  000D74  0EFF               	movlw	255
 32856  000D76  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 32857  000D78  0060  F78C  F05D   	movff	_targetHigh,??_MonitorPressureTask+2
 32858  000D7E  0060  F790  F05E   	movff	_targetHigh+1,??_MonitorPressureTask+3
 32859  000D84  505B               	movf	??_MonitorPressureTask^0,w,c
 32860  000D86  265D               	addwf	(??_MonitorPressureTask+2)^0,f,c
 32861  000D88  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 32862  000D8A  225E               	addwfc	(??_MonitorPressureTask+3)^0,f,c
 32863  000D8C  505D               	movf	(??_MonitorPressureTask+2)^0,w,c
 32864  000D8E  5DD1               	subwf	_lrpi& (0+255),w,b
 32865  000D90  51D2               	movf	(_lrpi+1)& (0+255),w,b
 32866  000D92  0A80               	xorlw	128
 32867  000D94  6E5F               	movwf	(??_MonitorPressureTask+4)^0,c
 32868  000D96  505E               	movf	(??_MonitorPressureTask+3)^0,w,c
 32869  000D98  0A80               	xorlw	128
 32870  000D9A  585F               	subwfb	(??_MonitorPressureTask+4)^0,w,c
 32871  000D9C  A0D8               	btfss	status,0,c
 32872                           
 32873                           ; BSR set to: 1
 32874  000D9E  EC0A  F04F         	call	_SetIPBelowSetAlarm	;wreg free
 32875  000DA2                     i2l21527:
 32876                           
 32877                           ;monitor.c: 602:             if (pHigh>(targetHigh-20) || lrpi>(targetHigh-20) ) ClearIP
      +                          BelowSetAlarm();
 32878  000DA2  0EEC               	movlw	236
 32879  000DA4  6E5B               	movwf	??_MonitorPressureTask^0,c
 32880  000DA6  0EFF               	movlw	255
 32881  000DA8  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 32882  000DAA  0060  F78C  F05D   	movff	_targetHigh,??_MonitorPressureTask+2
 32883  000DB0  0060  F790  F05E   	movff	_targetHigh+1,??_MonitorPressureTask+3
 32884  000DB6  505B               	movf	??_MonitorPressureTask^0,w,c
 32885  000DB8  265D               	addwf	(??_MonitorPressureTask+2)^0,f,c
 32886  000DBA  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 32887  000DBC  225E               	addwfc	(??_MonitorPressureTask+3)^0,f,c
 32888  000DBE  0101               	movlb	1	; () banked
 32889  000DC0  51D3               	movf	_pHigh& (0+255),w,b
 32890  000DC2  5C5D               	subwf	(??_MonitorPressureTask+2)^0,w,c
 32891  000DC4  505E               	movf	(??_MonitorPressureTask+3)^0,w,c
 32892  000DC6  0A80               	xorlw	128
 32893  000DC8  6E5F               	movwf	(??_MonitorPressureTask+4)^0,c
 32894  000DCA  51D4               	movf	(_pHigh+1)& (0+255),w,b
 32895  000DCC  0A80               	xorlw	128
 32896  000DCE  585F               	subwfb	(??_MonitorPressureTask+4)^0,w,c
 32897  000DD0  A0D8               	btfss	status,0,c
 32898  000DD2  D018               	goto	i2u2088_40
 32899                           
 32900                           ; BSR set to: 1
 32901  000DD4  0EEC               	movlw	236
 32902  000DD6  6E5B               	movwf	??_MonitorPressureTask^0,c
 32903  000DD8  0EFF               	movlw	255
 32904  000DDA  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 32905  000DDC  0060  F78C  F05D   	movff	_targetHigh,??_MonitorPressureTask+2
 32906  000DE2  0060  F790  F05E   	movff	_targetHigh+1,??_MonitorPressureTask+3
 32907  000DE8  505B               	movf	??_MonitorPressureTask^0,w,c
 32908  000DEA  265D               	addwf	(??_MonitorPressureTask+2)^0,f,c
 32909  000DEC  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 32910  000DEE  225E               	addwfc	(??_MonitorPressureTask+3)^0,f,c
 32911  000DF0  51D1               	movf	_lrpi& (0+255),w,b
 32912  000DF2  5C5D               	subwf	(??_MonitorPressureTask+2)^0,w,c
 32913  000DF4  505E               	movf	(??_MonitorPressureTask+3)^0,w,c
 32914  000DF6  0A80               	xorlw	128
 32915  000DF8  6E5F               	movwf	(??_MonitorPressureTask+4)^0,c
 32916  000DFA  51D2               	movf	(_lrpi+1)& (0+255),w,b
 32917  000DFC  0A80               	xorlw	128
 32918  000DFE  585F               	subwfb	(??_MonitorPressureTask+4)^0,w,c
 32919  000E00  B0D8               	btfsc	status,0,c
 32920  000E02  D024               	goto	i2l21539
 32921  000E04                     i2u2088_40:
 32922                           
 32923                           ; BSR set to: 1
 32924  000E04  EC21  F050         	call	i2_ClearIPBelowSetAlarm	;wreg free
 32925  000E08  D021               	goto	i2l21539
 32926  000E0A                     i2l21533:
 32927                           
 32928                           ;monitor.c: 605:             ClearIPAboveSetAlarm();
 32929  000E0A  EC2C  F050         	call	i2_ClearIPAboveSetAlarm	;wreg free
 32930                           
 32931                           ;monitor.c: 606:             ClearIPBelowSetAlarm();
 32932  000E0E  EC21  F050         	call	i2_ClearIPBelowSetAlarm	;wreg free
 32933  000E12  D01C               	goto	i2l21539
 32934  000E14                     i2l21535:
 32935  000E14  0EC8               	movlw	200
 32936  000E16  0101               	movlb	1	; () banked
 32937  000E18  25DD               	addwf	_tt3& (0+255),w,b
 32938  000E1A  6E5B               	movwf	??_MonitorPressureTask^0,c
 32939  000E1C  0E00               	movlw	0
 32940  000E1E  21DE               	addwfc	(_tt3+1)& (0+255),w,b
 32941  000E20  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 32942  000E22  0E00               	movlw	0
 32943  000E24  BE5C               	btfsc	(??_MonitorPressureTask+1)^0,7,c
 32944  000E26  0EFF               	movlw	255
 32945  000E28  6E5E               	movwf	(??_MonitorPressureTask+3)^0,c
 32946  000E2A  0A80               	xorlw	128
 32947  000E2C  6E5D               	movwf	(??_MonitorPressureTask+2)^0,c
 32948  000E2E  0100               	movlb	0	; () banked
 32949  000E30  51C8               	movf	_tt& (0+255),w,b
 32950  000E32  5C5B               	subwf	??_MonitorPressureTask^0,w,c
 32951  000E34  51C9               	movf	(_tt+1)& (0+255),w,b
 32952  000E36  585C               	subwfb	(??_MonitorPressureTask+1)^0,w,c
 32953  000E38  51CA               	movf	(_tt+2)& (0+255),w,b
 32954  000E3A  585E               	subwfb	(??_MonitorPressureTask+3)^0,w,c
 32955  000E3C  51CB               	movf	(_tt+3)& (0+255),w,b
 32956  000E3E  0A80               	xorlw	128
 32957  000E40  585D               	subwfb	(??_MonitorPressureTask+2)^0,w,c
 32958  000E42  B0D8               	btfsc	status,0,c
 32959  000E44  D003               	goto	i2l21539
 32960                           
 32961                           ; BSR set to: 0
 32962  000E46  0E00               	movlw	0
 32963  000E48  0102               	movlb	2	; () banked
 32964  000E4A  6F9C               	movwf	MonitorPressureTask@down& (0+255),b
 32965  000E4C                     i2l21539:
 32966                           
 32967                           ;monitor.c: 611:     if (prSlow>=(pi-3*5) && state == 2) {
 32968  000E4C  0EF1               	movlw	241
 32969  000E4E  6E5B               	movwf	??_MonitorPressureTask^0,c
 32970  000E50  0EFF               	movlw	255
 32971  000E52  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 32972  000E54  0060  F75C  F05D   	movff	_pi,??_MonitorPressureTask+2
 32973  000E5A  0060  F760  F05E   	movff	_pi+1,??_MonitorPressureTask+3
 32974  000E60  505B               	movf	??_MonitorPressureTask^0,w,c
 32975  000E62  265D               	addwf	(??_MonitorPressureTask+2)^0,f,c
 32976  000E64  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 32977  000E66  225E               	addwfc	(??_MonitorPressureTask+3)^0,f,c
 32978  000E68  505D               	movf	(??_MonitorPressureTask+2)^0,w,c
 32979  000E6A  0100               	movlb	0	; () banked
 32980  000E6C  5DCE               	subwf	_prSlow& (0+255),w,b
 32981  000E6E  51CF               	movf	(_prSlow+1)& (0+255),w,b
 32982  000E70  0A80               	xorlw	128
 32983  000E72  6E5F               	movwf	(??_MonitorPressureTask+4)^0,c
 32984  000E74  505E               	movf	(??_MonitorPressureTask+3)^0,w,c
 32985  000E76  0A80               	xorlw	128
 32986  000E78  585F               	subwfb	(??_MonitorPressureTask+4)^0,w,c
 32987  000E7A  A0D8               	btfss	status,0,c
 32988  000E7C  D0BE               	goto	i2l21583
 32989                           
 32990                           ; BSR set to: 0
 32991  000E7E  0E02               	movlw	2
 32992  000E80  0101               	movlb	1	; () banked
 32993  000E82  19DF               	xorwf	_state& (0+255),w,b
 32994  000E84  11E0               	iorwf	(_state+1)& (0+255),w,b
 32995  000E86  A4D8               	btfss	status,2,c
 32996  000E88  D0B8               	goto	i2l21583
 32997                           
 32998                           ; BSR set to: 1
 32999                           ;monitor.c: 613:         next = 4;
 33000  000E8A  0E00               	movlw	0
 33001  000E8C  0100               	movlb	0	; () banked
 33002  000E8E  6FB6               	movwf	(MonitorPressureTask@next+1)& (0+255),b
 33003  000E90  0E04               	movlw	4
 33004  000E92  6FB5               	movwf	MonitorPressureTask@next& (0+255),b
 33005                           
 33006                           ; BSR set to: 0
 33007                           ;monitor.c: 614:         tt2 = tt;
 33008  000E94  C0C8  F0DC         	movff	_tt,_tt2
 33009  000E98  C0C9  F0DD         	movff	_tt+1,_tt2+1
 33010                           
 33011                           ; BSR set to: 0
 33012                           ;monitor.c: 616:         if (tt2>0) {
 33013  000E9C  BFDD               	btfsc	(_tt2+1)& (0+255),7,b
 33014  000E9E  D0AD               	goto	i2l21583
 33015  000EA0  51DD               	movf	(_tt2+1)& (0+255),w,b
 33016  000EA2  E103               	bnz	i2u2092_40
 33017  000EA4  05DC               	decf	_tt2& (0+255),w,b
 33018  000EA6  A0D8               	btfss	status,0,c
 33019  000EA8  D0A8               	goto	i2l21583
 33020  000EAA                     i2u2092_40:
 33021                           
 33022                           ; BSR set to: 0
 33023                           ;monitor.c: 617:             tdiBuffer[numtdi%10] = ((tt2-0));
 33024  000EAA  0060  F348  F001   	movff	_numtdi,i2___awmod@dividend
 33025  000EB0  0060  F34C  F002   	movff	_numtdi+1,i2___awmod@dividend+1
 33026  000EB6  0E00               	movlw	0
 33027  000EB8  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 33028  000EBA  0E0A               	movlw	10
 33029  000EBC  6E03               	movwf	i2___awmod@divisor^0,c
 33030  000EBE  ECB9  F041         	call	i2___awmod	;wreg free
 33031  000EC2  90D8               	bcf	status,0,c
 33032  000EC4  3601               	rlcf	?i2___awmod^0,f,c
 33033  000EC6  3602               	rlcf	(?i2___awmod+1)^0,f,c
 33034  000EC8  0E61               	movlw	low _tdiBuffer
 33035  000ECA  2401               	addwf	?i2___awmod^0,w,c
 33036  000ECC  6ED9               	movwf	fsr2l,c
 33037  000ECE  0E03               	movlw	high _tdiBuffer
 33038  000ED0  2002               	addwfc	(?i2___awmod+1)^0,w,c
 33039  000ED2  6EDA               	movwf	fsr2h,c
 33040  000ED4  0060  F373  FFDE   	movff	_tt2,postinc2
 33041  000EDA  0060  F377  FFDD   	movff	_tt2+1,postdec2
 33042                           
 33043                           ;monitor.c: 618:             tdi = 0;
 33044  000EE0  0E00               	movlw	0
 33045  000EE2  0101               	movlb	1	; () banked
 33046  000EE4  6FDC               	movwf	(_tdi+1)& (0+255),b
 33047  000EE6  0E00               	movlw	0
 33048  000EE8  6FDB               	movwf	_tdi& (0+255),b
 33049                           
 33050                           ; BSR set to: 1
 33051                           ;monitor.c: 619:             for (int i=0; i<((10)>(numtdi+1)?(numtdi+1):(10)); i++) tdi
      +                           = tdi + tdiBuffer[i];
 33052  000EEA  0E00               	movlw	0
 33053  000EEC  0100               	movlb	0	; () banked
 33054  000EEE  6FB8               	movwf	(MonitorPressureTask@i_4894+1)& (0+255),b
 33055  000EF0  0E00               	movlw	0
 33056  000EF2  6FB7               	movwf	MonitorPressureTask@i_4894& (0+255),b
 33057  000EF4  D019               	goto	i2l21559
 33058  000EF6                     i2l21555:
 33059                           
 33060                           ; BSR set to: 0
 33061  000EF6  90D8               	bcf	status,0,c
 33062  000EF8  35B7               	rlcf	MonitorPressureTask@i_4894& (0+255),w,b
 33063  000EFA  6ED9               	movwf	fsr2l,c
 33064  000EFC  35B8               	rlcf	(MonitorPressureTask@i_4894+1)& (0+255),w,b
 33065  000EFE  6EDA               	movwf	fsr2h,c
 33066  000F00  0E61               	movlw	low _tdiBuffer
 33067  000F02  26D9               	addwf	fsr2l,f,c
 33068  000F04  0E03               	movlw	high _tdiBuffer
 33069  000F06  22DA               	addwfc	fsr2h,f,c
 33070  000F08  006F FF78  F05B    	movff	postinc2,??_MonitorPressureTask
 33071  000F0E  006F FF74  F05C    	movff	postdec2,??_MonitorPressureTask+1
 33072  000F14  0101               	movlb	1	; () banked
 33073  000F16  51DB               	movf	_tdi& (0+255),w,b
 33074  000F18  245B               	addwf	??_MonitorPressureTask^0,w,c
 33075  000F1A  6FDB               	movwf	_tdi& (0+255),b
 33076  000F1C  51DC               	movf	(_tdi+1)& (0+255),w,b
 33077  000F1E  205C               	addwfc	(??_MonitorPressureTask+1)^0,w,c
 33078  000F20  6FDC               	movwf	(_tdi+1)& (0+255),b
 33079                           
 33080                           ; BSR set to: 1
 33081  000F22  0100               	movlb	0	; () banked
 33082  000F24  4BB7               	infsnz	MonitorPressureTask@i_4894& (0+255),f,b
 33083  000F26  2BB8               	incf	(MonitorPressureTask@i_4894+1)& (0+255),f,b
 33084  000F28                     i2l21559:
 33085                           
 33086                           ; BSR set to: 0
 33087  000F28  0E01               	movlw	1
 33088  000F2A  25D2               	addwf	_numtdi& (0+255),w,b
 33089  000F2C  6E5B               	movwf	??_MonitorPressureTask^0,c
 33090  000F2E  0E00               	movlw	0
 33091  000F30  21D3               	addwfc	(_numtdi+1)& (0+255),w,b
 33092  000F32  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 33093  000F34  BE5C               	btfsc	(??_MonitorPressureTask+1)^0,7,c
 33094  000F36  D00B               	goto	i2l21563
 33095  000F38  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 33096  000F3A  E104               	bnz	i2u2093_40
 33097  000F3C  0E0A               	movlw	10
 33098  000F3E  5C5B               	subwf	??_MonitorPressureTask^0,w,c
 33099  000F40  A0D8               	btfss	status,0,c
 33100  000F42  D005               	goto	i2l21563
 33101  000F44                     i2u2093_40:
 33102                           
 33103                           ; BSR set to: 0
 33104  000F44  0E00               	movlw	0
 33105  000F46  6FA6               	movwf	(_MonitorPressureTask$4895+1)& (0+255),b
 33106  000F48  0E0A               	movlw	10
 33107  000F4A  6FA5               	movwf	_MonitorPressureTask$4895& (0+255),b
 33108  000F4C  D006               	goto	i2l3155
 33109  000F4E                     i2l21563:
 33110                           
 33111                           ; BSR set to: 0
 33112  000F4E  0E01               	movlw	1
 33113  000F50  25D2               	addwf	_numtdi& (0+255),w,b
 33114  000F52  6FA5               	movwf	_MonitorPressureTask$4895& (0+255),b
 33115  000F54  0E00               	movlw	0
 33116  000F56  21D3               	addwfc	(_numtdi+1)& (0+255),w,b
 33117  000F58  6FA6               	movwf	(_MonitorPressureTask$4895+1)& (0+255),b
 33118  000F5A                     i2l3155:
 33119                           
 33120                           ; BSR set to: 0
 33121  000F5A  51A5               	movf	_MonitorPressureTask$4895& (0+255),w,b
 33122  000F5C  5DB7               	subwf	MonitorPressureTask@i_4894& (0+255),w,b
 33123  000F5E  51B8               	movf	(MonitorPressureTask@i_4894+1)& (0+255),w,b
 33124  000F60  0A80               	xorlw	128
 33125  000F62  6E5B               	movwf	??_MonitorPressureTask^0,c
 33126  000F64  51A6               	movf	(_MonitorPressureTask$4895+1)& (0+255),w,b
 33127  000F66  0A80               	xorlw	128
 33128  000F68  585B               	subwfb	??_MonitorPressureTask^0,w,c
 33129  000F6A  A0D8               	btfss	status,0,c
 33130  000F6C  D7C4               	goto	i2l21555
 33131                           
 33132                           ; BSR set to: 0
 33133                           ;monitor.c: 620:             tdi = tdi/((10)>(numtdi+1)?(numtdi+1):(10));
 33134  000F6E  0E01               	movlw	1
 33135  000F70  25D2               	addwf	_numtdi& (0+255),w,b
 33136  000F72  6E5B               	movwf	??_MonitorPressureTask^0,c
 33137  000F74  0E00               	movlw	0
 33138  000F76  21D3               	addwfc	(_numtdi+1)& (0+255),w,b
 33139  000F78  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 33140  000F7A  BE5C               	btfsc	(??_MonitorPressureTask+1)^0,7,c
 33141  000F7C  D00B               	goto	i2l21569
 33142  000F7E  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 33143  000F80  E104               	bnz	i2u2095_40
 33144  000F82  0E0A               	movlw	10
 33145  000F84  5C5B               	subwf	??_MonitorPressureTask^0,w,c
 33146  000F86  A0D8               	btfss	status,0,c
 33147  000F88  D005               	goto	i2l21569
 33148  000F8A                     i2u2095_40:
 33149                           
 33150                           ; BSR set to: 0
 33151  000F8A  0E00               	movlw	0
 33152  000F8C  6FA8               	movwf	(_MonitorPressureTask$4896+1)& (0+255),b
 33153  000F8E  0E0A               	movlw	10
 33154  000F90  6FA7               	movwf	_MonitorPressureTask$4896& (0+255),b
 33155  000F92  D006               	goto	i2l21571
 33156  000F94                     i2l21569:
 33157                           
 33158                           ; BSR set to: 0
 33159  000F94  0E01               	movlw	1
 33160  000F96  25D2               	addwf	_numtdi& (0+255),w,b
 33161  000F98  6FA7               	movwf	_MonitorPressureTask$4896& (0+255),b
 33162  000F9A  0E00               	movlw	0
 33163  000F9C  21D3               	addwfc	(_numtdi+1)& (0+255),w,b
 33164  000F9E  6FA8               	movwf	(_MonitorPressureTask$4896+1)& (0+255),b
 33165  000FA0                     i2l21571:
 33166                           
 33167                           ; BSR set to: 0
 33168  000FA0  0060  F76C  F007   	movff	_tdi,i2___awdiv@dividend
 33169  000FA6  0060  F770  F008   	movff	_tdi+1,i2___awdiv@dividend+1
 33170  000FAC  0060  F29C  F009   	movff	_MonitorPressureTask$4896,i2___awdiv@divisor
 33171  000FB2  0060  F2A0  F00A   	movff	_MonitorPressureTask$4896+1,i2___awdiv@divisor+1
 33172  000FB8  ECFD  F03F         	call	i2___awdiv	;wreg free
 33173  000FBC  0060  F01C  F1DB   	movff	?i2___awdiv,_tdi
 33174  000FC2  0060  F020  F1DC   	movff	?i2___awdiv+1,_tdi+1
 33175                           
 33176                           ;monitor.c: 623:             if (enableAlarms) numtdi++;
 33177  000FC8  0100               	movlb	0	; () banked
 33178  000FCA  51F4               	movf	_enableAlarms& (0+255),w,b
 33179  000FCC  B4D8               	btfsc	status,2,c
 33180  000FCE  D002               	goto	i2l21577
 33181                           
 33182                           ; BSR set to: 0
 33183  000FD0  4BD2               	infsnz	_numtdi& (0+255),f,b
 33184  000FD2  2BD3               	incf	(_numtdi+1)& (0+255),f,b
 33185  000FD4                     i2l21577:
 33186                           
 33187                           ; BSR set to: 0
 33188                           ;monitor.c: 624:             if (numtdi>=100) numtdi=10;
 33189  000FD4  BFD3               	btfsc	(_numtdi+1)& (0+255),7,b
 33190  000FD6  D00A               	goto	i2l3162
 33191  000FD8  51D3               	movf	(_numtdi+1)& (0+255),w,b
 33192  000FDA  E104               	bnz	i2u2097_40
 33193  000FDC  0E64               	movlw	100
 33194  000FDE  5DD2               	subwf	_numtdi& (0+255),w,b
 33195  000FE0  A0D8               	btfss	status,0,c
 33196  000FE2  D004               	goto	i2l3162
 33197  000FE4                     i2u2097_40:
 33198                           
 33199                           ; BSR set to: 0
 33200  000FE4  0E00               	movlw	0
 33201  000FE6  6FD3               	movwf	(_numtdi+1)& (0+255),b
 33202  000FE8  0E0A               	movlw	10
 33203  000FEA  6FD2               	movwf	_numtdi& (0+255),b
 33204  000FEC                     i2l3162:
 33205                           
 33206                           ; BSR set to: 0
 33207                           ;monitor.c: 626:             measPi=1;
 33208  000FEC  0E01               	movlw	1
 33209  000FEE  0102               	movlb	2	; () banked
 33210  000FF0  6F9E               	movwf	MonitorPressureTask@measPi& (0+255),b
 33211                           
 33212                           ; BSR set to: 2
 33213                           ;monitor.c: 627:             rpi=pi;
 33214  000FF2  C1D7  F248         	movff	_pi,_rpi
 33215  000FF6  C1D8  F249         	movff	_pi+1,_rpi+1
 33216  000FFA                     i2l21583:
 33217                           
 33218                           ;monitor.c: 634:     if (prSlow<=(pe+2*5) && state == 4) {
 33219  000FFA  0E0A               	movlw	10
 33220  000FFC  0101               	movlb	1	; () banked
 33221  000FFE  25D5               	addwf	_pe& (0+255),w,b
 33222  001000  6E5B               	movwf	??_MonitorPressureTask^0,c
 33223  001002  0E00               	movlw	0
 33224  001004  21D6               	addwfc	(_pe+1)& (0+255),w,b
 33225  001006  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 33226  001008  0100               	movlb	0	; () banked
 33227  00100A  51CE               	movf	_prSlow& (0+255),w,b
 33228  00100C  5C5B               	subwf	??_MonitorPressureTask^0,w,c
 33229  00100E  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 33230  001010  0A80               	xorlw	128
 33231  001012  6E5D               	movwf	(??_MonitorPressureTask+2)^0,c
 33232  001014  51CF               	movf	(_prSlow+1)& (0+255),w,b
 33233  001016  0A80               	xorlw	128
 33234  001018  585D               	subwfb	(??_MonitorPressureTask+2)^0,w,c
 33235  00101A  A0D8               	btfss	status,0,c
 33236  00101C  D0CD               	goto	i2l3163
 33237                           
 33238                           ; BSR set to: 0
 33239  00101E  0E04               	movlw	4
 33240  001020  0101               	movlb	1	; () banked
 33241  001022  19DF               	xorwf	_state& (0+255),w,b
 33242  001024  11E0               	iorwf	(_state+1)& (0+255),w,b
 33243  001026  A4D8               	btfss	status,2,c
 33244  001028  D0C7               	goto	i2l3163
 33245                           
 33246                           ; BSR set to: 1
 33247                           ;monitor.c: 636:         next = 2;
 33248  00102A  0E00               	movlw	0
 33249  00102C  0100               	movlb	0	; () banked
 33250  00102E  6FB6               	movwf	(MonitorPressureTask@next+1)& (0+255),b
 33251  001030  0E02               	movlw	2
 33252  001032  6FB5               	movwf	MonitorPressureTask@next& (0+255),b
 33253                           
 33254                           ; BSR set to: 0
 33255                           ;monitor.c: 637:         tt4 = tt;
 33256  001034  C0C8  F0DA         	movff	_tt,_tt4
 33257  001038  C0C9  F0DB         	movff	_tt+1,_tt4+1
 33258                           
 33259                           ; BSR set to: 0
 33260                           ;monitor.c: 640:         if (tt4>tt3) {
 33261  00103C  51DA               	movf	_tt4& (0+255),w,b
 33262  00103E  0101               	movlb	1	; () banked
 33263  001040  5DDD               	subwf	_tt3& (0+255),w,b
 33264  001042  51DE               	movf	(_tt3+1)& (0+255),w,b
 33265  001044  0A80               	xorlw	128
 33266  001046  6E5B               	movwf	??_MonitorPressureTask^0,c
 33267  001048  0100               	movlb	0	; () banked
 33268  00104A  51DB               	movf	(_tt4+1)& (0+255),w,b
 33269  00104C  0A80               	xorlw	128
 33270  00104E  585B               	subwfb	??_MonitorPressureTask^0,w,c
 33271  001050  B0D8               	btfsc	status,0,c
 33272  001052  D0B2               	goto	i2l3163
 33273                           
 33274                           ; BSR set to: 0
 33275                           ;monitor.c: 641:             tdeBuffer[numtde%10] = ((tt4-tt3));
 33276  001054  0101               	movlb	1	; () banked
 33277  001056  51DD               	movf	_tt3& (0+255),w,b
 33278  001058  0100               	movlb	0	; () banked
 33279  00105A  5DDA               	subwf	_tt4& (0+255),w,b
 33280  00105C  6E5B               	movwf	??_MonitorPressureTask^0,c
 33281  00105E  0101               	movlb	1	; () banked
 33282  001060  51DE               	movf	(_tt3+1)& (0+255),w,b
 33283  001062  0100               	movlb	0	; () banked
 33284  001064  59DB               	subwfb	(_tt4+1)& (0+255),w,b
 33285  001066  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 33286  001068  0060  F340  F001   	movff	_numtde,i2___awmod@dividend
 33287  00106E  0060  F344  F002   	movff	_numtde+1,i2___awmod@dividend+1
 33288  001074  0E00               	movlw	0
 33289  001076  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 33290  001078  0E0A               	movlw	10
 33291  00107A  6E03               	movwf	i2___awmod@divisor^0,c
 33292  00107C  ECB9  F041         	call	i2___awmod	;wreg free
 33293  001080  90D8               	bcf	status,0,c
 33294  001082  3601               	rlcf	?i2___awmod^0,f,c
 33295  001084  3602               	rlcf	(?i2___awmod+1)^0,f,c
 33296  001086  0E75               	movlw	low _tdeBuffer
 33297  001088  2401               	addwf	?i2___awmod^0,w,c
 33298  00108A  6ED9               	movwf	fsr2l,c
 33299  00108C  0E03               	movlw	high _tdeBuffer
 33300  00108E  2002               	addwfc	(?i2___awmod+1)^0,w,c
 33301  001090  6EDA               	movwf	fsr2h,c
 33302  001092  0060  F16F  FFDE   	movff	??_MonitorPressureTask,postinc2
 33303  001098  0060  F173  FFDD   	movff	??_MonitorPressureTask+1,postdec2
 33304                           
 33305                           ;monitor.c: 642:             tde = 0;
 33306  00109E  0E00               	movlw	0
 33307  0010A0  0101               	movlb	1	; () banked
 33308  0010A2  6FDA               	movwf	(_tde+1)& (0+255),b
 33309  0010A4  0E00               	movlw	0
 33310  0010A6  6FD9               	movwf	_tde& (0+255),b
 33311                           
 33312                           ; BSR set to: 1
 33313                           ;monitor.c: 643:             for (int i=0; i<((numtde+1)>(10)?(10):(numtde+1)); i++) tde
      +                           = tde + tdeBuffer[i];
 33314  0010A8  0E00               	movlw	0
 33315  0010AA  0100               	movlb	0	; () banked
 33316  0010AC  6FBA               	movwf	(MonitorPressureTask@i_4897+1)& (0+255),b
 33317  0010AE  0E00               	movlw	0
 33318  0010B0  6FB9               	movwf	MonitorPressureTask@i_4897& (0+255),b
 33319  0010B2  D019               	goto	i2l21603
 33320  0010B4                     i2l21599:
 33321                           
 33322                           ; BSR set to: 0
 33323  0010B4  90D8               	bcf	status,0,c
 33324  0010B6  35B9               	rlcf	MonitorPressureTask@i_4897& (0+255),w,b
 33325  0010B8  6ED9               	movwf	fsr2l,c
 33326  0010BA  35BA               	rlcf	(MonitorPressureTask@i_4897+1)& (0+255),w,b
 33327  0010BC  6EDA               	movwf	fsr2h,c
 33328  0010BE  0E75               	movlw	low _tdeBuffer
 33329  0010C0  26D9               	addwf	fsr2l,f,c
 33330  0010C2  0E03               	movlw	high _tdeBuffer
 33331  0010C4  22DA               	addwfc	fsr2h,f,c
 33332  0010C6  006F FF78  F05B    	movff	postinc2,??_MonitorPressureTask
 33333  0010CC  006F FF74  F05C    	movff	postdec2,??_MonitorPressureTask+1
 33334  0010D2  0101               	movlb	1	; () banked
 33335  0010D4  51D9               	movf	_tde& (0+255),w,b
 33336  0010D6  245B               	addwf	??_MonitorPressureTask^0,w,c
 33337  0010D8  6FD9               	movwf	_tde& (0+255),b
 33338  0010DA  51DA               	movf	(_tde+1)& (0+255),w,b
 33339  0010DC  205C               	addwfc	(??_MonitorPressureTask+1)^0,w,c
 33340  0010DE  6FDA               	movwf	(_tde+1)& (0+255),b
 33341                           
 33342                           ; BSR set to: 1
 33343  0010E0  0100               	movlb	0	; () banked
 33344  0010E2  4BB9               	infsnz	MonitorPressureTask@i_4897& (0+255),f,b
 33345  0010E4  2BBA               	incf	(MonitorPressureTask@i_4897+1)& (0+255),f,b
 33346  0010E6                     i2l21603:
 33347                           
 33348                           ; BSR set to: 0
 33349  0010E6  0E01               	movlw	1
 33350  0010E8  25D0               	addwf	_numtde& (0+255),w,b
 33351  0010EA  6E5B               	movwf	??_MonitorPressureTask^0,c
 33352  0010EC  0E00               	movlw	0
 33353  0010EE  21D1               	addwfc	(_numtde+1)& (0+255),w,b
 33354  0010F0  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 33355  0010F2  BE5C               	btfsc	(??_MonitorPressureTask+1)^0,7,c
 33356  0010F4  D006               	goto	i2u2101_40
 33357  0010F6  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 33358  0010F8  E10B               	bnz	i2l21607
 33359  0010FA  0E0B               	movlw	11
 33360  0010FC  5C5B               	subwf	??_MonitorPressureTask^0,w,c
 33361  0010FE  B0D8               	btfsc	status,0,c
 33362  001100  D007               	goto	i2l21607
 33363  001102                     i2u2101_40:
 33364                           
 33365                           ; BSR set to: 0
 33366  001102  0E01               	movlw	1
 33367  001104  25D0               	addwf	_numtde& (0+255),w,b
 33368  001106  6FA9               	movwf	_MonitorPressureTask$4898& (0+255),b
 33369  001108  0E00               	movlw	0
 33370  00110A  21D1               	addwfc	(_numtde+1)& (0+255),w,b
 33371  00110C  6FAA               	movwf	(_MonitorPressureTask$4898+1)& (0+255),b
 33372  00110E  D004               	goto	i2l21609
 33373  001110                     i2l21607:
 33374                           
 33375                           ; BSR set to: 0
 33376  001110  0E00               	movlw	0
 33377  001112  6FAA               	movwf	(_MonitorPressureTask$4898+1)& (0+255),b
 33378  001114  0E0A               	movlw	10
 33379  001116  6FA9               	movwf	_MonitorPressureTask$4898& (0+255),b
 33380  001118                     i2l21609:
 33381                           
 33382                           ; BSR set to: 0
 33383  001118  51A9               	movf	_MonitorPressureTask$4898& (0+255),w,b
 33384  00111A  5DB9               	subwf	MonitorPressureTask@i_4897& (0+255),w,b
 33385  00111C  51BA               	movf	(MonitorPressureTask@i_4897+1)& (0+255),w,b
 33386  00111E  0A80               	xorlw	128
 33387  001120  6E5B               	movwf	??_MonitorPressureTask^0,c
 33388  001122  51AA               	movf	(_MonitorPressureTask$4898+1)& (0+255),w,b
 33389  001124  0A80               	xorlw	128
 33390  001126  585B               	subwfb	??_MonitorPressureTask^0,w,c
 33391  001128  A0D8               	btfss	status,0,c
 33392  00112A  D7C4               	goto	i2l21599
 33393                           
 33394                           ; BSR set to: 0
 33395                           ;monitor.c: 644:             tde = tde/((numtde+1)>(10)?(10):(numtde+1));
 33396  00112C  0E01               	movlw	1
 33397  00112E  25D0               	addwf	_numtde& (0+255),w,b
 33398  001130  6E5B               	movwf	??_MonitorPressureTask^0,c
 33399  001132  0E00               	movlw	0
 33400  001134  21D1               	addwfc	(_numtde+1)& (0+255),w,b
 33401  001136  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 33402  001138  BE5C               	btfsc	(??_MonitorPressureTask+1)^0,7,c
 33403  00113A  D006               	goto	i2u2103_40
 33404  00113C  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 33405  00113E  E10B               	bnz	i2l21615
 33406  001140  0E0B               	movlw	11
 33407  001142  5C5B               	subwf	??_MonitorPressureTask^0,w,c
 33408  001144  B0D8               	btfsc	status,0,c
 33409  001146  D007               	goto	i2l21615
 33410  001148                     i2u2103_40:
 33411                           
 33412                           ; BSR set to: 0
 33413  001148  0E01               	movlw	1
 33414  00114A  25D0               	addwf	_numtde& (0+255),w,b
 33415  00114C  6FAB               	movwf	_MonitorPressureTask$4899& (0+255),b
 33416  00114E  0E00               	movlw	0
 33417  001150  21D1               	addwfc	(_numtde+1)& (0+255),w,b
 33418  001152  6FAC               	movwf	(_MonitorPressureTask$4899+1)& (0+255),b
 33419  001154  D004               	goto	i2l21617
 33420  001156                     i2l21615:
 33421                           
 33422                           ; BSR set to: 0
 33423  001156  0E00               	movlw	0
 33424  001158  6FAC               	movwf	(_MonitorPressureTask$4899+1)& (0+255),b
 33425  00115A  0E0A               	movlw	10
 33426  00115C  6FAB               	movwf	_MonitorPressureTask$4899& (0+255),b
 33427  00115E                     i2l21617:
 33428                           
 33429                           ; BSR set to: 0
 33430  00115E  0060  F764  F007   	movff	_tde,i2___awdiv@dividend
 33431  001164  0060  F768  F008   	movff	_tde+1,i2___awdiv@dividend+1
 33432  00116A  0060  F2AC  F009   	movff	_MonitorPressureTask$4899,i2___awdiv@divisor
 33433  001170  0060  F2B0  F00A   	movff	_MonitorPressureTask$4899+1,i2___awdiv@divisor+1
 33434  001176  ECFD  F03F         	call	i2___awdiv	;wreg free
 33435  00117A  0060  F01C  F1D9   	movff	?i2___awdiv,_tde
 33436  001180  0060  F020  F1DA   	movff	?i2___awdiv+1,_tde+1
 33437                           
 33438                           ;monitor.c: 647:             if (enableAlarms) numtde++;
 33439  001186  0100               	movlb	0	; () banked
 33440  001188  51F4               	movf	_enableAlarms& (0+255),w,b
 33441  00118A  B4D8               	btfsc	status,2,c
 33442  00118C  D002               	goto	i2l21623
 33443                           
 33444                           ; BSR set to: 0
 33445  00118E  4BD0               	infsnz	_numtde& (0+255),f,b
 33446  001190  2BD1               	incf	(_numtde+1)& (0+255),f,b
 33447  001192                     i2l21623:
 33448                           
 33449                           ; BSR set to: 0
 33450                           ;monitor.c: 648:             if (numtde>=100) numtde=10;
 33451  001192  BFD1               	btfsc	(_numtde+1)& (0+255),7,b
 33452  001194  D00A               	goto	i2l3177
 33453  001196  51D1               	movf	(_numtde+1)& (0+255),w,b
 33454  001198  E104               	bnz	i2u2105_40
 33455  00119A  0E64               	movlw	100
 33456  00119C  5DD0               	subwf	_numtde& (0+255),w,b
 33457  00119E  A0D8               	btfss	status,0,c
 33458  0011A0  D004               	goto	i2l3177
 33459  0011A2                     i2u2105_40:
 33460                           
 33461                           ; BSR set to: 0
 33462  0011A2  0E00               	movlw	0
 33463  0011A4  6FD1               	movwf	(_numtde+1)& (0+255),b
 33464  0011A6  0E0A               	movlw	10
 33465  0011A8  6FD0               	movwf	_numtde& (0+255),b
 33466  0011AA                     i2l3177:
 33467                           
 33468                           ; BSR set to: 0
 33469                           ;monitor.c: 650:             measPe = 1;
 33470  0011AA  0E01               	movlw	1
 33471  0011AC  0102               	movlb	2	; () banked
 33472  0011AE  6F9D               	movwf	MonitorPressureTask@measPe& (0+255),b
 33473                           
 33474                           ; BSR set to: 2
 33475                           ;monitor.c: 651:             rpe = pe;
 33476  0011B0  C1D5  F246         	movff	_pe,_rpe
 33477  0011B4  C1D6  F247         	movff	_pe+1,_rpe+1
 33478  0011B8                     i2l3163:
 33479                           
 33480                           ;monitor.c: 660:     if (measPi) rpi = (rpi*4+prSlow)/5;
 33481  0011B8  0102               	movlb	2	; () banked
 33482  0011BA  519E               	movf	MonitorPressureTask@measPi& (0+255),w,b
 33483  0011BC  B4D8               	btfsc	status,2,c
 33484  0011BE  D01F               	goto	i2l21631
 33485                           
 33486                           ; BSR set to: 2
 33487  0011C0  0060  F920  F05B   	movff	_rpi,??_MonitorPressureTask
 33488  0011C6  0060  F924  F05C   	movff	_rpi+1,??_MonitorPressureTask+1
 33489  0011CC  90D8               	bcf	status,0,c
 33490  0011CE  365B               	rlcf	??_MonitorPressureTask^0,f,c
 33491  0011D0  365C               	rlcf	(??_MonitorPressureTask+1)^0,f,c
 33492  0011D2  90D8               	bcf	status,0,c
 33493  0011D4  365B               	rlcf	??_MonitorPressureTask^0,f,c
 33494  0011D6  365C               	rlcf	(??_MonitorPressureTask+1)^0,f,c
 33495  0011D8  0100               	movlb	0	; () banked
 33496  0011DA  51CE               	movf	_prSlow& (0+255),w,b
 33497  0011DC  245B               	addwf	??_MonitorPressureTask^0,w,c
 33498  0011DE  6E07               	movwf	i2___awdiv@dividend^0,c
 33499  0011E0  51CF               	movf	(_prSlow+1)& (0+255),w,b
 33500  0011E2  205C               	addwfc	(??_MonitorPressureTask+1)^0,w,c
 33501  0011E4  6E08               	movwf	(i2___awdiv@dividend+1)^0,c
 33502  0011E6  0E00               	movlw	0
 33503  0011E8  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 33504  0011EA  0E05               	movlw	5
 33505  0011EC  6E09               	movwf	i2___awdiv@divisor^0,c
 33506  0011EE  ECFD  F03F         	call	i2___awdiv	;wreg free
 33507  0011F2  0060  F01C  F248   	movff	?i2___awdiv,_rpi
 33508  0011F8  0060  F020  F249   	movff	?i2___awdiv+1,_rpi+1
 33509  0011FE                     i2l21631:
 33510                           
 33511                           ;monitor.c: 661:     if (measPe) rpe = (rpe*4+prSlow)/5;
 33512  0011FE  0102               	movlb	2	; () banked
 33513  001200  519D               	movf	MonitorPressureTask@measPe& (0+255),w,b
 33514  001202  B4D8               	btfsc	status,2,c
 33515  001204  D01F               	goto	i2l21635
 33516                           
 33517                           ; BSR set to: 2
 33518  001206  0060  F918  F05B   	movff	_rpe,??_MonitorPressureTask
 33519  00120C  0060  F91C  F05C   	movff	_rpe+1,??_MonitorPressureTask+1
 33520  001212  90D8               	bcf	status,0,c
 33521  001214  365B               	rlcf	??_MonitorPressureTask^0,f,c
 33522  001216  365C               	rlcf	(??_MonitorPressureTask+1)^0,f,c
 33523  001218  90D8               	bcf	status,0,c
 33524  00121A  365B               	rlcf	??_MonitorPressureTask^0,f,c
 33525  00121C  365C               	rlcf	(??_MonitorPressureTask+1)^0,f,c
 33526  00121E  0100               	movlb	0	; () banked
 33527  001220  51CE               	movf	_prSlow& (0+255),w,b
 33528  001222  245B               	addwf	??_MonitorPressureTask^0,w,c
 33529  001224  6E07               	movwf	i2___awdiv@dividend^0,c
 33530  001226  51CF               	movf	(_prSlow+1)& (0+255),w,b
 33531  001228  205C               	addwfc	(??_MonitorPressureTask+1)^0,w,c
 33532  00122A  6E08               	movwf	(i2___awdiv@dividend+1)^0,c
 33533  00122C  0E00               	movlw	0
 33534  00122E  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 33535  001230  0E05               	movlw	5
 33536  001232  6E09               	movwf	i2___awdiv@divisor^0,c
 33537  001234  ECFD  F03F         	call	i2___awdiv	;wreg free
 33538  001238  0060  F01C  F246   	movff	?i2___awdiv,_rpe
 33539  00123E  0060  F020  F247   	movff	?i2___awdiv+1,_rpe+1
 33540  001244                     i2l21635:
 33541                           
 33542                           ;monitor.c: 664:     if (enableAlarms) {
 33543  001244  0100               	movlb	0	; () banked
 33544  001246  51F4               	movf	_enableAlarms& (0+255),w,b
 33545  001248  B4D8               	btfsc	status,2,c
 33546  00124A  D040               	goto	i2l21661
 33547                           
 33548                           ; BSR set to: 0
 33549                           ;monitor.c: 675:         if (tde>350) SetTdeTooLongAlarm(); else ClearTdeTooLongAlarm();
 33550  00124C  0101               	movlb	1	; () banked
 33551  00124E  BFDA               	btfsc	(_tde+1)& (0+255),7,b
 33552  001250  D009               	goto	i2l21641
 33553  001252  0E5F               	movlw	95
 33554  001254  5DD9               	subwf	_tde& (0+255),w,b
 33555  001256  0E01               	movlw	1
 33556  001258  59DA               	subwfb	(_tde+1)& (0+255),w,b
 33557  00125A  A0D8               	btfss	status,0,c
 33558  00125C  D003               	goto	i2l21641
 33559                           
 33560                           ; BSR set to: 1
 33561  00125E  ECA5  F052         	call	_SetTdeTooLongAlarm	;wreg free
 33562  001262  D002               	goto	i2l21643
 33563  001264                     i2l21641:
 33564                           
 33565                           ; BSR set to: 1
 33566  001264  ECE5  F052         	call	_ClearTdeTooLongAlarm	;wreg free
 33567  001268                     i2l21643:
 33568                           
 33569                           ; BSR set to: 2
 33570                           ;monitor.c: 676:         if (tdi>350) SetTdiTooLongAlarm(); else ClearTdiTooLongAlarm();
 33571  001268  0101               	movlb	1	; () banked
 33572  00126A  BFDC               	btfsc	(_tdi+1)& (0+255),7,b
 33573  00126C  D009               	goto	i2l21647
 33574  00126E  0E5F               	movlw	95
 33575  001270  5DDB               	subwf	_tdi& (0+255),w,b
 33576  001272  0E01               	movlw	1
 33577  001274  59DC               	subwfb	(_tdi+1)& (0+255),w,b
 33578  001276  A0D8               	btfss	status,0,c
 33579  001278  D003               	goto	i2l21647
 33580                           
 33581                           ; BSR set to: 1
 33582  00127A  ECA1  F052         	call	_SetTdiTooLongAlarm	;wreg free
 33583  00127E  D002               	goto	i2l21649
 33584  001280                     i2l21647:
 33585                           
 33586                           ; BSR set to: 1
 33587  001280  ECE1  F052         	call	_ClearTdiTooLongAlarm	;wreg free
 33588  001284                     i2l21649:
 33589                           
 33590                           ; BSR set to: 2
 33591                           ;monitor.c: 677:         if (volume>volumeMax) SetVAboveMaxAlarm(); else ClearVAboveMaxA
      +                          larm();
 33592  001284  0100               	movlb	0	; () banked
 33593  001286  51DE               	movf	_volume& (0+255),w,b
 33594  001288  0102               	movlb	2	; () banked
 33595  00128A  5D6A               	subwf	_volumeMax& (0+255),w,b
 33596  00128C  516B               	movf	(_volumeMax+1)& (0+255),w,b
 33597  00128E  0A80               	xorlw	128
 33598  001290  6E5B               	movwf	??_MonitorPressureTask^0,c
 33599  001292  0100               	movlb	0	; () banked
 33600  001294  51DF               	movf	(_volume+1)& (0+255),w,b
 33601  001296  0A80               	xorlw	128
 33602  001298  585B               	subwfb	??_MonitorPressureTask^0,w,c
 33603  00129A  B0D8               	btfsc	status,0,c
 33604  00129C  D003               	goto	i2l21653
 33605                           
 33606                           ; BSR set to: 0
 33607  00129E  EC9D  F052         	call	_SetVAboveMaxAlarm	;wreg free
 33608  0012A2  D002               	goto	i2l21655
 33609  0012A4                     i2l21653:
 33610                           
 33611                           ; BSR set to: 0
 33612  0012A4  ECDD  F052         	call	_ClearVAboveMaxAlarm	;wreg free
 33613  0012A8                     i2l21655:
 33614                           
 33615                           ; BSR set to: 2
 33616                           ;monitor.c: 678:         if (volume<volumeMin) SetVBelowMinAlarm(); else ClearVBelowMinA
      +                          larm();
 33617  0012A8  5168               	movf	_volumeMin& (0+255),w,b
 33618  0012AA  0100               	movlb	0	; () banked
 33619  0012AC  5DDE               	subwf	_volume& (0+255),w,b
 33620  0012AE  51DF               	movf	(_volume+1)& (0+255),w,b
 33621  0012B0  0A80               	xorlw	128
 33622  0012B2  6E5B               	movwf	??_MonitorPressureTask^0,c
 33623  0012B4  0102               	movlb	2	; () banked
 33624  0012B6  5169               	movf	(_volumeMin+1)& (0+255),w,b
 33625  0012B8  0A80               	xorlw	128
 33626  0012BA  585B               	subwfb	??_MonitorPressureTask^0,w,c
 33627  0012BC  B0D8               	btfsc	status,0,c
 33628  0012BE  D003               	goto	i2l21659
 33629                           
 33630                           ; BSR set to: 2
 33631  0012C0  EC17  F053         	call	_SetVBelowMinAlarm	;wreg free
 33632  0012C4  D00B               	goto	i2l21663
 33633  0012C6                     i2l21659:
 33634                           
 33635                           ; BSR set to: 2
 33636  0012C6  EC29  F053         	call	_ClearVBelowMinAlarm	;wreg free
 33637  0012CA  D008               	goto	i2l21663
 33638  0012CC                     i2l21661:
 33639                           
 33640                           ; BSR set to: 0
 33641                           ;monitor.c: 681:         ClearTdeTooLongAlarm();
 33642  0012CC  ECE5  F052         	call	_ClearTdeTooLongAlarm	;wreg free
 33643                           
 33644                           ;monitor.c: 682:         ClearTdiTooLongAlarm();
 33645  0012D0  ECE1  F052         	call	_ClearTdiTooLongAlarm	;wreg free
 33646                           
 33647                           ;monitor.c: 683:         ClearVAboveMaxAlarm();
 33648  0012D4  ECDD  F052         	call	_ClearVAboveMaxAlarm	;wreg free
 33649                           
 33650                           ;monitor.c: 684:         ClearVBelowMinAlarm();
 33651  0012D8  EC29  F053         	call	_ClearVBelowMinAlarm	;wreg free
 33652  0012DC                     i2l21663:
 33653                           
 33654                           ; BSR set to: 2
 33655                           ;monitor.c: 687:     state = next;
 33656  0012DC  0060  F2D4  F1DF   	movff	MonitorPressureTask@next,_state
 33657  0012E2  0060  F2D8  F1E0   	movff	MonitorPressureTask@next+1,_state+1
 33658  0012E8  0012               	return		;funcret
 33659  0012EA                     __end_of_MonitorPressureTask:
 33660                           	opt callstack 0
 33661                           
 33662 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 33663 ;; Defined at:
 33664 ;;		line 138 in file "mcc_generated_files/tmr0.c"
 33665 ;; Parameters:    Size  Location     Type
 33666 ;;		None
 33667 ;; Auto vars:     Size  Location     Type
 33668 ;;		None
 33669 ;; Return value:  Size  Location     Type
 33670 ;;                  1    wreg      void 
 33671 ;; Registers used:
 33672 ;;		None
 33673 ;; Tracked objects:
 33674 ;;		On entry : 3F/2
 33675 ;;		On exit  : 3F/2
 33676 ;;		Unchanged: 3F/0
 33677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33682 ;;Total ram usage:        0 bytes
 33683 ;; Hardware stack levels used:    1
 33684 ;; This function calls:
 33685 ;;		Nothing
 33686 ;; This function is called by:
 33687 ;;		_TMR0_Initialize
 33688 ;;		_TMR0_ISR
 33689 ;; This function uses a non-reentrant model
 33690 ;;
 33691                           
 33692                           	psect	text247
 33693  00A6F8                     __ptext247:
 33694                           	opt callstack 0
 33695  00A6F8                     _TMR0_DefaultInterruptHandler:
 33696                           	opt callstack 15
 33697                           
 33698                           ; BSR set to: 2
 33699                           
 33700                           ;incstack = 0
 33701  00A6F8  0012               	return		;funcret
 33702  00A6FA                     __end_of_TMR0_DefaultInterruptHandler:
 33703                           	opt callstack 0
 33704                           
 33705 ;; *************** function i2_See5V *****************
 33706 ;; Defined at:
 33707 ;;		line 840 in file "monitor.c"
 33708 ;; Parameters:    Size  Location     Type
 33709 ;;		None
 33710 ;; Auto vars:     Size  Location     Type
 33711 ;;  See5V           4   28[COMRAM] long 
 33712 ;;  See5V           2   34[COMRAM] short 
 33713 ;;  See5V           2   32[COMRAM] unsigned short 
 33714 ;; Return value:  Size  Location     Type
 33715 ;;                  2   26[COMRAM] short 
 33716 ;; Registers used:
 33717 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33718 ;; Tracked objects:
 33719 ;;		On entry : 0/0
 33720 ;;		On exit  : 0/0
 33721 ;;		Unchanged: 0/0
 33722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33723 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33724 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33726 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33727 ;;Total ram usage:       10 bytes
 33728 ;; Hardware stack levels used:    1
 33729 ;; Hardware stack levels required when called:    2
 33730 ;; This function calls:
 33731 ;;		i2_AdcSeeData
 33732 ;;		i2___aldiv
 33733 ;; This function is called by:
 33734 ;;		_MonitorPressureTask
 33735 ;; This function uses a non-reentrant model
 33736 ;;
 33737                           
 33738                           	psect	text248
 33739  008684                     __ptext248:
 33740                           	opt callstack 0
 33741  008684                     i2_See5V:
 33742                           	opt callstack 12
 33743                           
 33744                           ;monitor.c: 841:     adc_result_t adc = AdcSeeData(1);
 33745                           
 33746                           ; BSR set to: 2
 33747                           ;incstack = 0
 33748  008684  0E00               	movlw	0
 33749  008686  6E08               	movwf	(i2AdcSeeData@id+1)^0,c
 33750  008688  0E01               	movlw	1
 33751  00868A  6E07               	movwf	i2AdcSeeData@id^0,c
 33752  00868C  EC2F  F04A         	call	i2_AdcSeeData	;wreg free
 33753  008690  0060  F01C  F021   	movff	?i2_AdcSeeData,i2See5V@adc
 33754  008696  0060  F020  F022   	movff	?i2_AdcSeeData+1,i2See5V@adc+1
 33755                           
 33756                           ;monitor.c: 842:     int32_t mv = adc;
 33757  00869C  0060  F084  F01D   	movff	i2See5V@adc,i2See5V@mv
 33758  0086A2  0060  F088  F01E   	movff	i2See5V@adc+1,i2See5V@mv+1
 33759  0086A8  6A1F               	clrf	(i2See5V@mv+2)^0,c
 33760  0086AA  6A20               	clrf	(i2See5V@mv+3)^0,c
 33761                           
 33762                           ;monitor.c: 845:     int16_t v12 = mv/2;
 33763  0086AC  0060  F074  F00D   	movff	i2See5V@mv,i2___aldiv@dividend
 33764  0086B2  0060  F078  F00E   	movff	i2See5V@mv+1,i2___aldiv@dividend+1
 33765  0086B8  0060  F07C  F00F   	movff	i2See5V@mv+2,i2___aldiv@dividend+2
 33766  0086BE  0060  F080  F010   	movff	i2See5V@mv+3,i2___aldiv@dividend+3
 33767  0086C4  0E02               	movlw	2
 33768  0086C6  6E11               	movwf	i2___aldiv@divisor^0,c
 33769  0086C8  0E00               	movlw	0
 33770  0086CA  6E12               	movwf	(i2___aldiv@divisor+1)^0,c
 33771  0086CC  0E00               	movlw	0
 33772  0086CE  6E13               	movwf	(i2___aldiv@divisor+2)^0,c
 33773  0086D0  0E00               	movlw	0
 33774  0086D2  6E14               	movwf	(i2___aldiv@divisor+3)^0,c
 33775  0086D4  EC3A  F036         	call	i2___aldiv	;wreg free
 33776  0086D8  0060  F034  F023   	movff	?i2___aldiv,i2See5V@v12
 33777  0086DE  0060  F038  F024   	movff	?i2___aldiv+1,i2See5V@v12+1
 33778                           
 33779                           ;monitor.c: 846:     return v12;
 33780  0086E4  0060  F08C  F01B   	movff	i2See5V@v12,?i2_See5V
 33781  0086EA  0060  F090  F01C   	movff	i2See5V@v12+1,?i2_See5V+1
 33782  0086F0  0012               	return		;funcret
 33783  0086F2                     __end_ofi2_See5V:
 33784                           	opt callstack 0
 33785                           
 33786 ;; *************** function i2_See12V *****************
 33787 ;; Defined at:
 33788 ;;		line 857 in file "monitor.c"
 33789 ;; Parameters:    Size  Location     Type
 33790 ;;		None
 33791 ;; Auto vars:     Size  Location     Type
 33792 ;;  See12V          4   28[COMRAM] long 
 33793 ;;  See12V          2   34[COMRAM] short 
 33794 ;;  See12V          2   32[COMRAM] unsigned short 
 33795 ;; Return value:  Size  Location     Type
 33796 ;;                  2   26[COMRAM] short 
 33797 ;; Registers used:
 33798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33799 ;; Tracked objects:
 33800 ;;		On entry : 3F/0
 33801 ;;		On exit  : 0/0
 33802 ;;		Unchanged: 0/0
 33803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33804 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33805 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33807 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33808 ;;Total ram usage:       10 bytes
 33809 ;; Hardware stack levels used:    1
 33810 ;; Hardware stack levels required when called:    2
 33811 ;; This function calls:
 33812 ;;		i2_AdcSeeData
 33813 ;;		i2___aldiv
 33814 ;;		i2___lmul
 33815 ;; This function is called by:
 33816 ;;		_MonitorPressureTask
 33817 ;; This function uses a non-reentrant model
 33818 ;;
 33819                           
 33820                           	psect	text249
 33821  007AD8                     __ptext249:
 33822                           	opt callstack 0
 33823  007AD8                     i2_See12V:
 33824                           	opt callstack 12
 33825                           
 33826                           ; BSR set to: 0
 33827                           ;monitor.c: 858:     adc_result_t adc = AdcSeeData(3);
 33828                           
 33829                           ;incstack = 0
 33830  007AD8  0E00               	movlw	0
 33831  007ADA  6E08               	movwf	(i2AdcSeeData@id+1)^0,c
 33832  007ADC  0E03               	movlw	3
 33833  007ADE  6E07               	movwf	i2AdcSeeData@id^0,c
 33834  007AE0  EC2F  F04A         	call	i2_AdcSeeData	;wreg free
 33835  007AE4  0060  F01C  F021   	movff	?i2_AdcSeeData,i2See12V@adc
 33836  007AEA  0060  F020  F022   	movff	?i2_AdcSeeData+1,i2See12V@adc+1
 33837                           
 33838                           ;monitor.c: 859:     int32_t mv = adc;
 33839  007AF0  0060  F084  F01D   	movff	i2See12V@adc,i2See12V@mv
 33840  007AF6  0060  F088  F01E   	movff	i2See12V@adc+1,i2See12V@mv+1
 33841  007AFC  6A1F               	clrf	(i2See12V@mv+2)^0,c
 33842  007AFE  6A20               	clrf	(i2See12V@mv+3)^0,c
 33843                           
 33844                           ;monitor.c: 861:     int16_t v12 = (mv*33)/10;
 33845  007B00  0060  F074  F001   	movff	i2See12V@mv,i2___lmul@multiplier
 33846  007B06  0060  F078  F002   	movff	i2See12V@mv+1,i2___lmul@multiplier+1
 33847  007B0C  0060  F07C  F003   	movff	i2See12V@mv+2,i2___lmul@multiplier+2
 33848  007B12  0060  F080  F004   	movff	i2See12V@mv+3,i2___lmul@multiplier+3
 33849  007B18  0E21               	movlw	33
 33850  007B1A  6E05               	movwf	i2___lmul@multiplicand^0,c
 33851  007B1C  0E00               	movlw	0
 33852  007B1E  6E06               	movwf	(i2___lmul@multiplicand+1)^0,c
 33853  007B20  0E00               	movlw	0
 33854  007B22  6E07               	movwf	(i2___lmul@multiplicand+2)^0,c
 33855  007B24  0E00               	movlw	0
 33856  007B26  6E08               	movwf	(i2___lmul@multiplicand+3)^0,c
 33857  007B28  ECDE  F045         	call	i2___lmul	;wreg free
 33858  007B2C  0060  F004  F00D   	movff	?i2___lmul,i2___aldiv@dividend
 33859  007B32  0060  F008  F00E   	movff	?i2___lmul+1,i2___aldiv@dividend+1
 33860  007B38  0060  F00C  F00F   	movff	?i2___lmul+2,i2___aldiv@dividend+2
 33861  007B3E  0060  F010  F010   	movff	?i2___lmul+3,i2___aldiv@dividend+3
 33862  007B44  0E0A               	movlw	10
 33863  007B46  6E11               	movwf	i2___aldiv@divisor^0,c
 33864  007B48  0E00               	movlw	0
 33865  007B4A  6E12               	movwf	(i2___aldiv@divisor+1)^0,c
 33866  007B4C  0E00               	movlw	0
 33867  007B4E  6E13               	movwf	(i2___aldiv@divisor+2)^0,c
 33868  007B50  0E00               	movlw	0
 33869  007B52  6E14               	movwf	(i2___aldiv@divisor+3)^0,c
 33870  007B54  EC3A  F036         	call	i2___aldiv	;wreg free
 33871  007B58  0060  F034  F023   	movff	?i2___aldiv,i2See12V@v12
 33872  007B5E  0060  F038  F024   	movff	?i2___aldiv+1,i2See12V@v12+1
 33873                           
 33874                           ;monitor.c: 862:     return v12;
 33875  007B64  0060  F08C  F01B   	movff	i2See12V@v12,?i2_See12V
 33876  007B6A  0060  F090  F01C   	movff	i2See12V@v12+1,?i2_See12V+1
 33877  007B70  0012               	return		;funcret
 33878  007B72                     __end_ofi2_See12V:
 33879                           	opt callstack 0
 33880                           
 33881 ;; *************** function i2_AdcSeeData *****************
 33882 ;; Defined at:
 33883 ;;		line 82 in file "monitor.c"
 33884 ;; Parameters:    Size  Location     Type
 33885 ;;  id              2    6[COMRAM] int 
 33886 ;; Auto vars:     Size  Location     Type
 33887 ;;  AdcSeeData      2    8[COMRAM] unsigned short 
 33888 ;; Return value:  Size  Location     Type
 33889 ;;                  2    6[COMRAM] unsigned short 
 33890 ;; Registers used:
 33891 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33892 ;; Tracked objects:
 33893 ;;		On entry : 0/0
 33894 ;;		On exit  : 0/0
 33895 ;;		Unchanged: 0/0
 33896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33897 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33898 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33900 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33901 ;;Total ram usage:        4 bytes
 33902 ;; Hardware stack levels used:    1
 33903 ;; Hardware stack levels required when called:    1
 33904 ;; This function calls:
 33905 ;;		i2___wmul
 33906 ;; This function is called by:
 33907 ;;		i2_See5V
 33908 ;;		i2_See12V
 33909 ;; This function uses a non-reentrant model
 33910 ;;
 33911                           
 33912                           	psect	text250
 33913  00945E                     __ptext250:
 33914                           	opt callstack 0
 33915  00945E                     i2_AdcSeeData:
 33916                           	opt callstack 12
 33917                           
 33918                           ;monitor.c: 83:     adc_result_t data;;monitor.c: 84:     data = adcChannels[id].data;
 33919                           
 33920                           ;incstack = 0
 33921  00945E  0060  F01C  F001   	movff	i2AdcSeeData@id,i2___wmul@multiplier
 33922  009464  0060  F020  F002   	movff	i2AdcSeeData@id+1,i2___wmul@multiplier+1
 33923  00946A  0E00               	movlw	0
 33924  00946C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 33925  00946E  0E05               	movlw	5
 33926  009470  6E03               	movwf	i2___wmul@multiplicand^0,c
 33927  009472  EC06  F04D         	call	i2___wmul	;wreg free
 33928  009476  0EBE               	movlw	low (_adcChannels+2)
 33929  009478  2401               	addwf	?i2___wmul^0,w,c
 33930  00947A  6ED9               	movwf	fsr2l,c
 33931  00947C  0E02               	movlw	high (_adcChannels+2)
 33932  00947E  2002               	addwfc	(?i2___wmul+1)^0,w,c
 33933  009480  6EDA               	movwf	fsr2h,c
 33934  009482  006F FF78  F009    	movff	postinc2,i2AdcSeeData@data
 33935  009488  006F FF74  F00A    	movff	postdec2,i2AdcSeeData@data+1
 33936                           
 33937                           ;monitor.c: 86:     return data;
 33938  00948E  0060  F024  F007   	movff	i2AdcSeeData@data,?i2_AdcSeeData
 33939  009494  0060  F028  F008   	movff	i2AdcSeeData@data+1,?i2_AdcSeeData+1
 33940  00949A  0012               	return		;funcret
 33941  00949C                     __end_ofi2_AdcSeeData:
 33942                           	opt callstack 0
 33943                           
 33944 ;; *************** function i2_AdcDataReady *****************
 33945 ;; Defined at:
 33946 ;;		line 78 in file "monitor.c"
 33947 ;; Parameters:    Size  Location     Type
 33948 ;;  id              2    6[COMRAM] int 
 33949 ;; Auto vars:     Size  Location     Type
 33950 ;;		None
 33951 ;; Return value:  Size  Location     Type
 33952 ;;                  1    wreg      _Bool 
 33953 ;; Registers used:
 33954 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33955 ;; Tracked objects:
 33956 ;;		On entry : 3D/2
 33957 ;;		On exit  : 0/0
 33958 ;;		Unchanged: 0/0
 33959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33960 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33963 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33964 ;;Total ram usage:        2 bytes
 33965 ;; Hardware stack levels used:    1
 33966 ;; Hardware stack levels required when called:    1
 33967 ;; This function calls:
 33968 ;;		i2___wmul
 33969 ;; This function is called by:
 33970 ;;		_MonitorPressureTask
 33971 ;; This function uses a non-reentrant model
 33972 ;;
 33973                           
 33974                           	psect	text251
 33975  009AB6                     __ptext251:
 33976                           	opt callstack 0
 33977  009AB6                     i2_AdcDataReady:
 33978                           	opt callstack 13
 33979                           
 33980                           ;monitor.c: 79:     return adcChannels[id].dataValid;
 33981                           
 33982                           ;incstack = 0
 33983  009AB6  0060  F01C  F001   	movff	i2AdcDataReady@id,i2___wmul@multiplier
 33984  009ABC  0060  F020  F002   	movff	i2AdcDataReady@id+1,i2___wmul@multiplier+1
 33985  009AC2  0E00               	movlw	0
 33986  009AC4  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 33987  009AC6  0E05               	movlw	5
 33988  009AC8  6E03               	movwf	i2___wmul@multiplicand^0,c
 33989  009ACA  EC06  F04D         	call	i2___wmul	;wreg free
 33990  009ACE  0EBD               	movlw	low (_adcChannels+1)
 33991  009AD0  2401               	addwf	?i2___wmul^0,w,c
 33992  009AD2  6ED9               	movwf	fsr2l,c
 33993  009AD4  0E02               	movlw	high (_adcChannels+1)
 33994  009AD6  2002               	addwfc	(?i2___wmul+1)^0,w,c
 33995  009AD8  6EDA               	movwf	fsr2h,c
 33996  009ADA  50DF               	movf	indf2,w,c
 33997  009ADC  0012               	return		;funcret
 33998  009ADE                     __end_ofi2_AdcDataReady:
 33999                           	opt callstack 0
 34000                           
 34001 ;; *************** function _isqrt *****************
 34002 ;; Defined at:
 34003 ;;		line 21 in file "../Controller.X/cmath.c"
 34004 ;; Parameters:    Size  Location     Type
 34005 ;;  x               2    0[COMRAM] unsigned short 
 34006 ;; Auto vars:     Size  Location     Type
 34007 ;;  one             2    8[COMRAM] unsigned short 
 34008 ;;  res             2    6[COMRAM] unsigned short 
 34009 ;;  op              2    4[COMRAM] unsigned short 
 34010 ;; Return value:  Size  Location     Type
 34011 ;;                  2    0[COMRAM] unsigned short 
 34012 ;; Registers used:
 34013 ;;		wreg, status,2, status,0
 34014 ;; Tracked objects:
 34015 ;;		On entry : 3F/0
 34016 ;;		On exit  : 3F/0
 34017 ;;		Unchanged: 3F/0
 34018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34019 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34020 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34021 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34022 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34023 ;;Total ram usage:       10 bytes
 34024 ;; Hardware stack levels used:    1
 34025 ;; This function calls:
 34026 ;;		Nothing
 34027 ;; This function is called by:
 34028 ;;		_MonitorPressureTask
 34029 ;; This function uses a non-reentrant model
 34030 ;;
 34031                           
 34032                           	psect	text252
 34033  0075D8                     __ptext252:
 34034                           	opt callstack 0
 34035  0075D8                     _isqrt:
 34036                           	opt callstack 14
 34037                           
 34038                           ; BSR set to: 0
 34039                           ;../Controller.X/cmath.c: 21: uint16_t isqrt(uint16_t x);../Controller.X/cmath.c: 22: {;
      +                          ../Controller.X/cmath.c: 23:     uint16_t op, res, one;;../Controller.X/cmath.c: 25:    
      +                           op = x;
 34040                           
 34041                           ;incstack = 0
 34042  0075D8  0060  F004  F005   	movff	isqrt@x,isqrt@op
 34043  0075DE  0060  F008  F006   	movff	isqrt@x+1,isqrt@op+1
 34044                           
 34045                           ; BSR set to: 0
 34046                           ;../Controller.X/cmath.c: 26:     res = 0;
 34047  0075E4  0E00               	movlw	0
 34048  0075E6  6E08               	movwf	(isqrt@res+1)^0,c
 34049  0075E8  0E00               	movlw	0
 34050  0075EA  6E07               	movwf	isqrt@res^0,c
 34051                           
 34052                           ;../Controller.X/cmath.c: 29:     one = 1 << 14;
 34053  0075EC  0E40               	movlw	64
 34054  0075EE  6E0A               	movwf	(isqrt@one+1)^0,c
 34055  0075F0  0E00               	movlw	0
 34056  0075F2  6E09               	movwf	isqrt@one^0,c
 34057                           
 34058                           ;../Controller.X/cmath.c: 30:     while (one > op) one >>= 2;
 34059  0075F4  D006               	goto	i2l13077
 34060  0075F6                     i2l13075:
 34061                           
 34062                           ; BSR set to: 0
 34063  0075F6  90D8               	bcf	status,0,c
 34064  0075F8  320A               	rrcf	(isqrt@one+1)^0,f,c
 34065  0075FA  3209               	rrcf	isqrt@one^0,f,c
 34066  0075FC  90D8               	bcf	status,0,c
 34067  0075FE  320A               	rrcf	(isqrt@one+1)^0,f,c
 34068  007600  3209               	rrcf	isqrt@one^0,f,c
 34069  007602                     i2l13077:
 34070                           
 34071                           ; BSR set to: 0
 34072  007602  5009               	movf	isqrt@one^0,w,c
 34073  007604  5C05               	subwf	isqrt@op^0,w,c
 34074  007606  500A               	movf	(isqrt@one+1)^0,w,c
 34075  007608  5806               	subwfb	(isqrt@op+1)^0,w,c
 34076  00760A  B0D8               	btfsc	status,0,c
 34077  00760C  D02D               	goto	i2l6
 34078  00760E  D7F3               	goto	i2l13075
 34079  007610                     i2l13079:
 34080                           
 34081                           ; BSR set to: 0
 34082                           ;../Controller.X/cmath.c: 33:         if (op >= res + one) {
 34083  007610  5009               	movf	isqrt@one^0,w,c
 34084  007612  2407               	addwf	isqrt@res^0,w,c
 34085  007614  6E03               	movwf	??_isqrt^0,c
 34086  007616  500A               	movf	(isqrt@one+1)^0,w,c
 34087  007618  2008               	addwfc	(isqrt@res+1)^0,w,c
 34088  00761A  6E04               	movwf	(??_isqrt+1)^0,c
 34089  00761C  5003               	movf	??_isqrt^0,w,c
 34090  00761E  5C05               	subwf	isqrt@op^0,w,c
 34091  007620  5004               	movf	(??_isqrt+1)^0,w,c
 34092  007622  5806               	subwfb	(isqrt@op+1)^0,w,c
 34093  007624  A0D8               	btfss	status,0,c
 34094  007626  D017               	goto	i2l13083
 34095                           
 34096                           ; BSR set to: 0
 34097                           ;../Controller.X/cmath.c: 34:             op -= res + one;
 34098  007628  5009               	movf	isqrt@one^0,w,c
 34099  00762A  2407               	addwf	isqrt@res^0,w,c
 34100  00762C  6E03               	movwf	??_isqrt^0,c
 34101  00762E  500A               	movf	(isqrt@one+1)^0,w,c
 34102  007630  2008               	addwfc	(isqrt@res+1)^0,w,c
 34103  007632  6E04               	movwf	(??_isqrt+1)^0,c
 34104  007634  5003               	movf	??_isqrt^0,w,c
 34105  007636  5E05               	subwf	isqrt@op^0,f,c
 34106  007638  5004               	movf	(??_isqrt+1)^0,w,c
 34107  00763A  5A06               	subwfb	(isqrt@op+1)^0,f,c
 34108                           
 34109                           ;../Controller.X/cmath.c: 35:             res += one << 1;
 34110  00763C  0060  F024  F003   	movff	isqrt@one,??_isqrt
 34111  007642  0060  F028  F004   	movff	isqrt@one+1,??_isqrt+1
 34112  007648  90D8               	bcf	status,0,c
 34113  00764A  3603               	rlcf	??_isqrt^0,f,c
 34114  00764C  3604               	rlcf	(??_isqrt+1)^0,f,c
 34115  00764E  5003               	movf	??_isqrt^0,w,c
 34116  007650  2607               	addwf	isqrt@res^0,f,c
 34117  007652  5004               	movf	(??_isqrt+1)^0,w,c
 34118  007654  2208               	addwfc	(isqrt@res+1)^0,f,c
 34119  007656                     i2l13083:
 34120                           
 34121                           ; BSR set to: 0
 34122                           ;../Controller.X/cmath.c: 37:         res >>= 1;
 34123  007656  90D8               	bcf	status,0,c
 34124  007658  3208               	rrcf	(isqrt@res+1)^0,f,c
 34125  00765A  3207               	rrcf	isqrt@res^0,f,c
 34126                           
 34127                           ; BSR set to: 0
 34128                           ;../Controller.X/cmath.c: 38:         one >>= 2;
 34129  00765C  90D8               	bcf	status,0,c
 34130  00765E  320A               	rrcf	(isqrt@one+1)^0,f,c
 34131  007660  3209               	rrcf	isqrt@one^0,f,c
 34132  007662  90D8               	bcf	status,0,c
 34133  007664  320A               	rrcf	(isqrt@one+1)^0,f,c
 34134  007666  3209               	rrcf	isqrt@one^0,f,c
 34135  007668                     i2l6:
 34136                           
 34137                           ; BSR set to: 0
 34138                           ;../Controller.X/cmath.c: 32:     while (one != 0) {
 34139  007668  5009               	movf	isqrt@one^0,w,c
 34140  00766A  100A               	iorwf	(isqrt@one+1)^0,w,c
 34141  00766C  A4D8               	btfss	status,2,c
 34142  00766E  D7D0               	goto	i2l13079
 34143                           
 34144                           ; BSR set to: 0
 34145                           ;../Controller.X/cmath.c: 40:     return res;
 34146  007670  0060  F01C  F001   	movff	isqrt@res,?_isqrt
 34147  007676  0060  F020  F002   	movff	isqrt@res+1,?_isqrt+1
 34148                           
 34149                           ; BSR set to: 0
 34150  00767C  0012               	return		;funcret
 34151  00767E                     __end_of_isqrt:
 34152                           	opt callstack 0
 34153                           
 34154 ;; *************** function ___lwdiv *****************
 34155 ;; Defined at:
 34156 ;;		line 7 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/lwdiv.c"
 34157 ;; Parameters:    Size  Location     Type
 34158 ;;  dividend        2    0[COMRAM] unsigned int 
 34159 ;;  divisor         2    2[COMRAM] unsigned int 
 34160 ;; Auto vars:     Size  Location     Type
 34161 ;;  quotient        2    4[COMRAM] unsigned int 
 34162 ;;  counter         1    6[COMRAM] unsigned char 
 34163 ;; Return value:  Size  Location     Type
 34164 ;;                  2    0[COMRAM] unsigned int 
 34165 ;; Registers used:
 34166 ;;		wreg, status,2, status,0
 34167 ;; Tracked objects:
 34168 ;;		On entry : 3F/0
 34169 ;;		On exit  : 3F/0
 34170 ;;		Unchanged: 3F/0
 34171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34172 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34173 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34175 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34176 ;;Total ram usage:        7 bytes
 34177 ;; Hardware stack levels used:    1
 34178 ;; This function calls:
 34179 ;;		Nothing
 34180 ;; This function is called by:
 34181 ;;		_MonitorPressureTask
 34182 ;; This function uses a non-reentrant model
 34183 ;;
 34184                           
 34185                           	psect	text253
 34186  008CC8                     __ptext253:
 34187                           	opt callstack 0
 34188  008CC8                     ___lwdiv:
 34189                           	opt callstack 14
 34190                           
 34191                           ; BSR set to: 0
 34192                           
 34193                           ; BSR set to: 0
 34194                           ;incstack = 0
 34195  008CC8  0E00               	movlw	0
 34196  008CCA  6E06               	movwf	(___lwdiv@quotient+1)^0,c
 34197  008CCC  0E00               	movlw	0
 34198  008CCE  6E05               	movwf	___lwdiv@quotient^0,c
 34199                           
 34200                           ; BSR set to: 0
 34201  008CD0  5003               	movf	___lwdiv@divisor^0,w,c
 34202  008CD2  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
 34203  008CD4  B4D8               	btfsc	status,2,c
 34204  008CD6  D01C               	goto	i2l4099
 34205                           
 34206                           ; BSR set to: 0
 34207  008CD8  0E01               	movlw	1
 34208  008CDA  6E07               	movwf	___lwdiv@counter^0,c
 34209  008CDC  D004               	goto	i2l13741
 34210  008CDE                     i2l13739:
 34211                           
 34212                           ; BSR set to: 0
 34213  008CDE  90D8               	bcf	status,0,c
 34214  008CE0  3603               	rlcf	___lwdiv@divisor^0,f,c
 34215  008CE2  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
 34216  008CE4  2A07               	incf	___lwdiv@counter^0,f,c
 34217  008CE6                     i2l13741:
 34218                           
 34219                           ; BSR set to: 0
 34220  008CE6  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
 34221  008CE8  D7FA               	goto	i2l13739
 34222  008CEA                     i2u1168_40:
 34223                           
 34224                           ; BSR set to: 0
 34225  008CEA  90D8               	bcf	status,0,c
 34226  008CEC  3605               	rlcf	___lwdiv@quotient^0,f,c
 34227  008CEE  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
 34228                           
 34229                           ; BSR set to: 0
 34230  008CF0  5003               	movf	___lwdiv@divisor^0,w,c
 34231  008CF2  5C01               	subwf	___lwdiv@dividend^0,w,c
 34232  008CF4  5004               	movf	(___lwdiv@divisor+1)^0,w,c
 34233  008CF6  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
 34234  008CF8  A0D8               	btfss	status,0,c
 34235  008CFA  D005               	goto	i2l13751
 34236                           
 34237                           ; BSR set to: 0
 34238  008CFC  5003               	movf	___lwdiv@divisor^0,w,c
 34239  008CFE  5E01               	subwf	___lwdiv@dividend^0,f,c
 34240  008D00  5004               	movf	(___lwdiv@divisor+1)^0,w,c
 34241  008D02  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
 34242                           
 34243                           ; BSR set to: 0
 34244  008D04  8005               	bsf	___lwdiv@quotient^0,0,c
 34245  008D06                     i2l13751:
 34246                           
 34247                           ; BSR set to: 0
 34248  008D06  90D8               	bcf	status,0,c
 34249  008D08  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
 34250  008D0A  3203               	rrcf	___lwdiv@divisor^0,f,c
 34251                           
 34252                           ; BSR set to: 0
 34253  008D0C  2E07               	decfsz	___lwdiv@counter^0,f,c
 34254  008D0E  D7ED               	goto	i2u1168_40
 34255  008D10                     i2l4099:
 34256                           
 34257                           ; BSR set to: 0
 34258  008D10  0060  F014  F001   	movff	___lwdiv@quotient,?___lwdiv
 34259  008D16  0060  F018  F002   	movff	___lwdiv@quotient+1,?___lwdiv+1
 34260                           
 34261                           ; BSR set to: 0
 34262  008D1C  0012               	return		;funcret
 34263  008D1E                     __end_of___lwdiv:
 34264                           	opt callstack 0
 34265                           
 34266 ;; *************** function ___lldiv *****************
 34267 ;; Defined at:
 34268 ;;		line 7 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/__lldiv.c"
 34269 ;; Parameters:    Size  Location     Type
 34270 ;;  dividend        4    0[COMRAM] unsigned long 
 34271 ;;  divisor         4    4[COMRAM] unsigned long 
 34272 ;; Auto vars:     Size  Location     Type
 34273 ;;  quotient        4    8[COMRAM] unsigned long 
 34274 ;;  counter         1   12[COMRAM] unsigned char 
 34275 ;; Return value:  Size  Location     Type
 34276 ;;                  4    0[COMRAM] unsigned long 
 34277 ;; Registers used:
 34278 ;;		wreg, status,2, status,0
 34279 ;; Tracked objects:
 34280 ;;		On entry : 3F/2
 34281 ;;		On exit  : 3F/2
 34282 ;;		Unchanged: 3F/0
 34283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34284 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34285 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34287 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34288 ;;Total ram usage:       13 bytes
 34289 ;; Hardware stack levels used:    1
 34290 ;; This function calls:
 34291 ;;		Nothing
 34292 ;; This function is called by:
 34293 ;;		_MonitorPressureTask
 34294 ;; This function uses a non-reentrant model
 34295 ;;
 34296                           
 34297                           	psect	text254
 34298  007EE8                     __ptext254:
 34299                           	opt callstack 0
 34300  007EE8                     ___lldiv:
 34301                           	opt callstack 14
 34302                           
 34303                           ; BSR set to: 2
 34304                           
 34305                           ; BSR set to: 0
 34306                           ;incstack = 0
 34307  007EE8  0E00               	movlw	0
 34308  007EEA  6E09               	movwf	___lldiv@quotient^0,c
 34309  007EEC  0E00               	movlw	0
 34310  007EEE  6E0A               	movwf	(___lldiv@quotient+1)^0,c
 34311  007EF0  0E00               	movlw	0
 34312  007EF2  6E0B               	movwf	(___lldiv@quotient+2)^0,c
 34313  007EF4  0E00               	movlw	0
 34314  007EF6  6E0C               	movwf	(___lldiv@quotient+3)^0,c
 34315                           
 34316                           ; BSR set to: 2
 34317  007EF8  5005               	movf	___lldiv@divisor^0,w,c
 34318  007EFA  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
 34319  007EFC  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
 34320  007EFE  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
 34321  007F00  B4D8               	btfsc	status,2,c
 34322  007F02  D02A               	goto	i2l3635
 34323                           
 34324                           ; BSR set to: 2
 34325  007F04  0E01               	movlw	1
 34326  007F06  6E0D               	movwf	___lldiv@counter^0,c
 34327  007F08  D006               	goto	i2l13719
 34328  007F0A                     i2l13717:
 34329                           
 34330                           ; BSR set to: 2
 34331  007F0A  90D8               	bcf	status,0,c
 34332  007F0C  3605               	rlcf	___lldiv@divisor^0,f,c
 34333  007F0E  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
 34334  007F10  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
 34335  007F12  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
 34336  007F14  2A0D               	incf	___lldiv@counter^0,f,c
 34337  007F16                     i2l13719:
 34338                           
 34339                           ; BSR set to: 2
 34340  007F16  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
 34341  007F18  D7F8               	goto	i2l13717
 34342  007F1A                     i2u1165_40:
 34343                           
 34344                           ; BSR set to: 2
 34345  007F1A  90D8               	bcf	status,0,c
 34346  007F1C  3609               	rlcf	___lldiv@quotient^0,f,c
 34347  007F1E  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
 34348  007F20  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
 34349  007F22  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
 34350                           
 34351                           ; BSR set to: 2
 34352  007F24  5005               	movf	___lldiv@divisor^0,w,c
 34353  007F26  5C01               	subwf	___lldiv@dividend^0,w,c
 34354  007F28  5006               	movf	(___lldiv@divisor+1)^0,w,c
 34355  007F2A  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
 34356  007F2C  5007               	movf	(___lldiv@divisor+2)^0,w,c
 34357  007F2E  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
 34358  007F30  5008               	movf	(___lldiv@divisor+3)^0,w,c
 34359  007F32  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
 34360  007F34  A0D8               	btfss	status,0,c
 34361  007F36  D009               	goto	i2l13729
 34362                           
 34363                           ; BSR set to: 2
 34364  007F38  5005               	movf	___lldiv@divisor^0,w,c
 34365  007F3A  5E01               	subwf	___lldiv@dividend^0,f,c
 34366  007F3C  5006               	movf	(___lldiv@divisor+1)^0,w,c
 34367  007F3E  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
 34368  007F40  5007               	movf	(___lldiv@divisor+2)^0,w,c
 34369  007F42  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
 34370  007F44  5008               	movf	(___lldiv@divisor+3)^0,w,c
 34371  007F46  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
 34372                           
 34373                           ; BSR set to: 2
 34374  007F48  8009               	bsf	___lldiv@quotient^0,0,c
 34375  007F4A                     i2l13729:
 34376                           
 34377                           ; BSR set to: 2
 34378  007F4A  90D8               	bcf	status,0,c
 34379  007F4C  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
 34380  007F4E  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
 34381  007F50  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
 34382  007F52  3205               	rrcf	___lldiv@divisor^0,f,c
 34383                           
 34384                           ; BSR set to: 2
 34385  007F54  2E0D               	decfsz	___lldiv@counter^0,f,c
 34386  007F56  D7E1               	goto	i2u1165_40
 34387  007F58                     i2l3635:
 34388                           
 34389                           ; BSR set to: 2
 34390  007F58  0060  F024  F001   	movff	___lldiv@quotient,?___lldiv
 34391  007F5E  0060  F028  F002   	movff	___lldiv@quotient+1,?___lldiv+1
 34392  007F64  0060  F02C  F003   	movff	___lldiv@quotient+2,?___lldiv+2
 34393  007F6A  0060  F030  F004   	movff	___lldiv@quotient+3,?___lldiv+3
 34394                           
 34395                           ; BSR set to: 2
 34396  007F70  0012               	return		;funcret
 34397  007F72                     __end_of___lldiv:
 34398                           	opt callstack 0
 34399                           
 34400 ;; *************** function _SetVBelowMinAlarm *****************
 34401 ;; Defined at:
 34402 ;;		line 244 in file "alarm.c"
 34403 ;; Parameters:    Size  Location     Type
 34404 ;;		None
 34405 ;; Auto vars:     Size  Location     Type
 34406 ;;		None
 34407 ;; Return value:  Size  Location     Type
 34408 ;;                  1    wreg      void 
 34409 ;; Registers used:
 34410 ;;		wreg, status,2
 34411 ;; Tracked objects:
 34412 ;;		On entry : 3F/2
 34413 ;;		On exit  : 3F/2
 34414 ;;		Unchanged: 0/0
 34415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34420 ;;Total ram usage:        0 bytes
 34421 ;; Hardware stack levels used:    1
 34422 ;; This function calls:
 34423 ;;		Nothing
 34424 ;; This function is called by:
 34425 ;;		_MonitorPressureTask
 34426 ;; This function uses a non-reentrant model
 34427 ;;
 34428                           
 34429                           	psect	text255
 34430  00A62E                     __ptext255:
 34431                           	opt callstack 0
 34432  00A62E                     _SetVBelowMinAlarm:
 34433                           	opt callstack 14
 34434                           
 34435                           ; BSR set to: 2
 34436                           
 34437                           ; BSR set to: 2
 34438                           ;incstack = 0
 34439  00A62E  0E01               	movlw	1
 34440  00A630  6FA6               	movwf	_vBelowMinAlarm& (0+255),b
 34441                           
 34442                           ; BSR set to: 2
 34443  00A632  0012               	return		;funcret
 34444  00A634                     __end_of_SetVBelowMinAlarm:
 34445                           	opt callstack 0
 34446                           
 34447 ;; *************** function _SetVAboveMaxAlarm *****************
 34448 ;; Defined at:
 34449 ;;		line 243 in file "alarm.c"
 34450 ;; Parameters:    Size  Location     Type
 34451 ;;		None
 34452 ;; Auto vars:     Size  Location     Type
 34453 ;;		None
 34454 ;; Return value:  Size  Location     Type
 34455 ;;                  1    wreg      void 
 34456 ;; Registers used:
 34457 ;;		wreg, status,2
 34458 ;; Tracked objects:
 34459 ;;		On entry : 3F/0
 34460 ;;		On exit  : 3F/2
 34461 ;;		Unchanged: 0/0
 34462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34467 ;;Total ram usage:        0 bytes
 34468 ;; Hardware stack levels used:    1
 34469 ;; This function calls:
 34470 ;;		Nothing
 34471 ;; This function is called by:
 34472 ;;		_MonitorPressureTask
 34473 ;; This function uses a non-reentrant model
 34474 ;;
 34475                           
 34476                           	psect	text256
 34477  00A53A                     __ptext256:
 34478                           	opt callstack 0
 34479  00A53A                     _SetVAboveMaxAlarm:
 34480                           	opt callstack 14
 34481                           
 34482                           ; BSR set to: 0
 34483                           
 34484                           ; BSR set to: 2
 34485                           ;incstack = 0
 34486  00A53A  0E01               	movlw	1
 34487  00A53C  0102               	movlb	2	; () banked
 34488  00A53E  6FA5               	movwf	_vAboveMaxAlarm& (0+255),b
 34489                           
 34490                           ; BSR set to: 2
 34491  00A540  0012               	return		;funcret
 34492  00A542                     __end_of_SetVAboveMaxAlarm:
 34493                           	opt callstack 0
 34494                           
 34495 ;; *************** function _SetTdiTooLongAlarm *****************
 34496 ;; Defined at:
 34497 ;;		line 241 in file "alarm.c"
 34498 ;; Parameters:    Size  Location     Type
 34499 ;;		None
 34500 ;; Auto vars:     Size  Location     Type
 34501 ;;		None
 34502 ;; Return value:  Size  Location     Type
 34503 ;;                  1    wreg      void 
 34504 ;; Registers used:
 34505 ;;		wreg, status,2
 34506 ;; Tracked objects:
 34507 ;;		On entry : 3F/1
 34508 ;;		On exit  : 3F/2
 34509 ;;		Unchanged: 0/0
 34510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34515 ;;Total ram usage:        0 bytes
 34516 ;; Hardware stack levels used:    1
 34517 ;; This function calls:
 34518 ;;		Nothing
 34519 ;; This function is called by:
 34520 ;;		_MonitorPressureTask
 34521 ;; This function uses a non-reentrant model
 34522 ;;
 34523                           
 34524                           	psect	text257
 34525  00A542                     __ptext257:
 34526                           	opt callstack 0
 34527  00A542                     _SetTdiTooLongAlarm:
 34528                           	opt callstack 14
 34529                           
 34530                           ; BSR set to: 1
 34531                           
 34532                           ; BSR set to: 2
 34533                           ;incstack = 0
 34534  00A542  0E01               	movlw	1
 34535  00A544  0102               	movlb	2	; () banked
 34536  00A546  6FA8               	movwf	_tdiTooLongAlarm& (0+255),b
 34537                           
 34538                           ; BSR set to: 2
 34539  00A548  0012               	return		;funcret
 34540  00A54A                     __end_of_SetTdiTooLongAlarm:
 34541                           	opt callstack 0
 34542                           
 34543 ;; *************** function _SetTdeTooLongAlarm *****************
 34544 ;; Defined at:
 34545 ;;		line 242 in file "alarm.c"
 34546 ;; Parameters:    Size  Location     Type
 34547 ;;		None
 34548 ;; Auto vars:     Size  Location     Type
 34549 ;;		None
 34550 ;; Return value:  Size  Location     Type
 34551 ;;                  1    wreg      void 
 34552 ;; Registers used:
 34553 ;;		wreg, status,2
 34554 ;; Tracked objects:
 34555 ;;		On entry : 3F/1
 34556 ;;		On exit  : 3F/2
 34557 ;;		Unchanged: 0/0
 34558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34563 ;;Total ram usage:        0 bytes
 34564 ;; Hardware stack levels used:    1
 34565 ;; This function calls:
 34566 ;;		Nothing
 34567 ;; This function is called by:
 34568 ;;		_MonitorPressureTask
 34569 ;; This function uses a non-reentrant model
 34570 ;;
 34571                           
 34572                           	psect	text258
 34573  00A54A                     __ptext258:
 34574                           	opt callstack 0
 34575  00A54A                     _SetTdeTooLongAlarm:
 34576                           	opt callstack 14
 34577                           
 34578                           ; BSR set to: 1
 34579                           
 34580                           ; BSR set to: 2
 34581                           ;incstack = 0
 34582  00A54A  0E01               	movlw	1
 34583  00A54C  0102               	movlb	2	; () banked
 34584  00A54E  6FA7               	movwf	_tdeTooLongAlarm& (0+255),b
 34585                           
 34586                           ; BSR set to: 2
 34587  00A550  0012               	return		;funcret
 34588  00A552                     __end_of_SetTdeTooLongAlarm:
 34589                           	opt callstack 0
 34590                           
 34591 ;; *************** function _SetIPBelowSetAlarm *****************
 34592 ;; Defined at:
 34593 ;;		line 239 in file "alarm.c"
 34594 ;; Parameters:    Size  Location     Type
 34595 ;;		None
 34596 ;; Auto vars:     Size  Location     Type
 34597 ;;		None
 34598 ;; Return value:  Size  Location     Type
 34599 ;;                  1    wreg      void 
 34600 ;; Registers used:
 34601 ;;		wreg, status,2, status,0
 34602 ;; Tracked objects:
 34603 ;;		On entry : 3F/1
 34604 ;;		On exit  : 3F/0
 34605 ;;		Unchanged: 0/0
 34606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34611 ;;Total ram usage:        0 bytes
 34612 ;; Hardware stack levels used:    1
 34613 ;; This function calls:
 34614 ;;		Nothing
 34615 ;; This function is called by:
 34616 ;;		_MonitorPressureTask
 34617 ;; This function uses a non-reentrant model
 34618 ;;
 34619                           
 34620                           	psect	text259
 34621  009E14                     __ptext259:
 34622                           	opt callstack 0
 34623  009E14                     _SetIPBelowSetAlarm:
 34624                           	opt callstack 14
 34625                           
 34626                           ; BSR set to: 1
 34627                           
 34628                           ; BSR set to: 2
 34629                           ;incstack = 0
 34630  009E14  0100               	movlb	0	; () banked
 34631  009E16  4BE4               	infsnz	_ipBelowSetAlarm& (0+255),f,b
 34632  009E18  2BE5               	incf	(_ipBelowSetAlarm+1)& (0+255),f,b
 34633                           
 34634                           ; BSR set to: 0
 34635  009E1A  BFE5               	btfsc	(_ipBelowSetAlarm+1)& (0+255),7,b
 34636  009E1C  0012               	return	
 34637  009E1E  51E5               	movf	(_ipBelowSetAlarm+1)& (0+255),w,b
 34638  009E20  E104               	bnz	i2u1151_40
 34639  009E22  0E07               	movlw	7
 34640  009E24  5DE4               	subwf	_ipBelowSetAlarm& (0+255),w,b
 34641  009E26  A0D8               	btfss	status,0,c
 34642  009E28  0012               	return	
 34643  009E2A                     i2u1151_40:
 34644                           
 34645                           ; BSR set to: 0
 34646  009E2A  0E00               	movlw	0
 34647  009E2C  6FE5               	movwf	(_ipBelowSetAlarm+1)& (0+255),b
 34648  009E2E  0E06               	movlw	6
 34649  009E30  6FE4               	movwf	_ipBelowSetAlarm& (0+255),b
 34650                           
 34651                           ; BSR set to: 0
 34652  009E32  0012               	return		;funcret
 34653  009E34                     __end_of_SetIPBelowSetAlarm:
 34654                           	opt callstack 0
 34655                           
 34656 ;; *************** function _SetIPAboveSetAlarm *****************
 34657 ;; Defined at:
 34658 ;;		line 240 in file "alarm.c"
 34659 ;; Parameters:    Size  Location     Type
 34660 ;;		None
 34661 ;; Auto vars:     Size  Location     Type
 34662 ;;		None
 34663 ;; Return value:  Size  Location     Type
 34664 ;;                  1    wreg      void 
 34665 ;; Registers used:
 34666 ;;		wreg, status,2, status,0
 34667 ;; Tracked objects:
 34668 ;;		On entry : 3F/1
 34669 ;;		On exit  : 3F/0
 34670 ;;		Unchanged: 0/0
 34671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34676 ;;Total ram usage:        0 bytes
 34677 ;; Hardware stack levels used:    1
 34678 ;; This function calls:
 34679 ;;		Nothing
 34680 ;; This function is called by:
 34681 ;;		_MonitorPressureTask
 34682 ;; This function uses a non-reentrant model
 34683 ;;
 34684                           
 34685                           	psect	text260
 34686  009E34                     __ptext260:
 34687                           	opt callstack 0
 34688  009E34                     _SetIPAboveSetAlarm:
 34689                           	opt callstack 14
 34690                           
 34691                           ; BSR set to: 1
 34692                           
 34693                           ; BSR set to: 0
 34694                           ;incstack = 0
 34695  009E34  0100               	movlb	0	; () banked
 34696  009E36  4BE2               	infsnz	_ipAboveSetAlarm& (0+255),f,b
 34697  009E38  2BE3               	incf	(_ipAboveSetAlarm+1)& (0+255),f,b
 34698                           
 34699                           ; BSR set to: 0
 34700  009E3A  BFE3               	btfsc	(_ipAboveSetAlarm+1)& (0+255),7,b
 34701  009E3C  0012               	return	
 34702  009E3E  51E3               	movf	(_ipAboveSetAlarm+1)& (0+255),w,b
 34703  009E40  E104               	bnz	i2u1152_40
 34704  009E42  0E07               	movlw	7
 34705  009E44  5DE2               	subwf	_ipAboveSetAlarm& (0+255),w,b
 34706  009E46  A0D8               	btfss	status,0,c
 34707  009E48  0012               	return	
 34708  009E4A                     i2u1152_40:
 34709                           
 34710                           ; BSR set to: 0
 34711  009E4A  0E00               	movlw	0
 34712  009E4C  6FE3               	movwf	(_ipAboveSetAlarm+1)& (0+255),b
 34713  009E4E  0E06               	movlw	6
 34714  009E50  6FE2               	movwf	_ipAboveSetAlarm& (0+255),b
 34715                           
 34716                           ; BSR set to: 0
 34717  009E52  0012               	return		;funcret
 34718  009E54                     __end_of_SetIPAboveSetAlarm:
 34719                           	opt callstack 0
 34720                           
 34721 ;; *************** function _SetGasFailureAlarm *****************
 34722 ;; Defined at:
 34723 ;;		line 230 in file "alarm.c"
 34724 ;; Parameters:    Size  Location     Type
 34725 ;;		None
 34726 ;; Auto vars:     Size  Location     Type
 34727 ;;		None
 34728 ;; Return value:  Size  Location     Type
 34729 ;;                  1    wreg      void 
 34730 ;; Registers used:
 34731 ;;		wreg, status,2
 34732 ;; Tracked objects:
 34733 ;;		On entry : 3F/0
 34734 ;;		On exit  : 3F/2
 34735 ;;		Unchanged: 0/0
 34736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34741 ;;Total ram usage:        0 bytes
 34742 ;; Hardware stack levels used:    1
 34743 ;; This function calls:
 34744 ;;		Nothing
 34745 ;; This function is called by:
 34746 ;;		_MonitorPressureTask
 34747 ;; This function uses a non-reentrant model
 34748 ;;
 34749                           
 34750                           	psect	text261
 34751  00A552                     __ptext261:
 34752                           	opt callstack 0
 34753  00A552                     _SetGasFailureAlarm:
 34754                           	opt callstack 14
 34755                           
 34756                           ; BSR set to: 0
 34757                           
 34758                           ; BSR set to: 0
 34759                           ;incstack = 0
 34760  00A552  0E01               	movlw	1
 34761  00A554  0102               	movlb	2	; () banked
 34762  00A556  6FAF               	movwf	_gasFailureAlarm& (0+255),b
 34763                           
 34764                           ; BSR set to: 2
 34765  00A558  0012               	return		;funcret
 34766  00A55A                     __end_of_SetGasFailureAlarm:
 34767                           	opt callstack 0
 34768                           
 34769 ;; *************** function _SetEPBelowSetAlarm *****************
 34770 ;; Defined at:
 34771 ;;		line 237 in file "alarm.c"
 34772 ;; Parameters:    Size  Location     Type
 34773 ;;		None
 34774 ;; Auto vars:     Size  Location     Type
 34775 ;;		None
 34776 ;; Return value:  Size  Location     Type
 34777 ;;                  1    wreg      void 
 34778 ;; Registers used:
 34779 ;;		wreg, status,2, status,0
 34780 ;; Tracked objects:
 34781 ;;		On entry : 0/0
 34782 ;;		On exit  : 3F/0
 34783 ;;		Unchanged: 0/0
 34784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34789 ;;Total ram usage:        0 bytes
 34790 ;; Hardware stack levels used:    1
 34791 ;; This function calls:
 34792 ;;		Nothing
 34793 ;; This function is called by:
 34794 ;;		_MonitorPressureTask
 34795 ;; This function uses a non-reentrant model
 34796 ;;
 34797                           
 34798                           	psect	text262
 34799  009E54                     __ptext262:
 34800                           	opt callstack 0
 34801  009E54                     _SetEPBelowSetAlarm:
 34802                           	opt callstack 14
 34803                           
 34804                           ; BSR set to: 2
 34805                           ;incstack = 0
 34806  009E54  0100               	movlb	0	; () banked
 34807  009E56  4BE8               	infsnz	_epBelowSetAlarm& (0+255),f,b
 34808  009E58  2BE9               	incf	(_epBelowSetAlarm+1)& (0+255),f,b
 34809                           
 34810                           ; BSR set to: 0
 34811  009E5A  BFE9               	btfsc	(_epBelowSetAlarm+1)& (0+255),7,b
 34812  009E5C  0012               	return	
 34813  009E5E  51E9               	movf	(_epBelowSetAlarm+1)& (0+255),w,b
 34814  009E60  E104               	bnz	i2u1149_40
 34815  009E62  0E07               	movlw	7
 34816  009E64  5DE8               	subwf	_epBelowSetAlarm& (0+255),w,b
 34817  009E66  A0D8               	btfss	status,0,c
 34818  009E68  0012               	return	
 34819  009E6A                     i2u1149_40:
 34820                           
 34821                           ; BSR set to: 0
 34822  009E6A  0E00               	movlw	0
 34823  009E6C  6FE9               	movwf	(_epBelowSetAlarm+1)& (0+255),b
 34824  009E6E  0E06               	movlw	6
 34825  009E70  6FE8               	movwf	_epBelowSetAlarm& (0+255),b
 34826                           
 34827                           ; BSR set to: 0
 34828  009E72  0012               	return		;funcret
 34829  009E74                     __end_of_SetEPBelowSetAlarm:
 34830                           	opt callstack 0
 34831                           
 34832 ;; *************** function _SetEPAboveSetAlarm *****************
 34833 ;; Defined at:
 34834 ;;		line 238 in file "alarm.c"
 34835 ;; Parameters:    Size  Location     Type
 34836 ;;		None
 34837 ;; Auto vars:     Size  Location     Type
 34838 ;;		None
 34839 ;; Return value:  Size  Location     Type
 34840 ;;                  1    wreg      void 
 34841 ;; Registers used:
 34842 ;;		wreg, status,2, status,0
 34843 ;; Tracked objects:
 34844 ;;		On entry : 3F/1
 34845 ;;		On exit  : 3F/0
 34846 ;;		Unchanged: 0/0
 34847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34852 ;;Total ram usage:        0 bytes
 34853 ;; Hardware stack levels used:    1
 34854 ;; This function calls:
 34855 ;;		Nothing
 34856 ;; This function is called by:
 34857 ;;		_MonitorPressureTask
 34858 ;; This function uses a non-reentrant model
 34859 ;;
 34860                           
 34861                           	psect	text263
 34862  009E74                     __ptext263:
 34863                           	opt callstack 0
 34864  009E74                     _SetEPAboveSetAlarm:
 34865                           	opt callstack 14
 34866                           
 34867                           ; BSR set to: 1
 34868                           
 34869                           ; BSR set to: 0
 34870                           ;incstack = 0
 34871  009E74  0100               	movlb	0	; () banked
 34872  009E76  4BE6               	infsnz	_epAboveSetAlarm& (0+255),f,b
 34873  009E78  2BE7               	incf	(_epAboveSetAlarm+1)& (0+255),f,b
 34874                           
 34875                           ; BSR set to: 0
 34876  009E7A  BFE7               	btfsc	(_epAboveSetAlarm+1)& (0+255),7,b
 34877  009E7C  0012               	return	
 34878  009E7E  51E7               	movf	(_epAboveSetAlarm+1)& (0+255),w,b
 34879  009E80  E104               	bnz	i2u1150_40
 34880  009E82  0E07               	movlw	7
 34881  009E84  5DE6               	subwf	_epAboveSetAlarm& (0+255),w,b
 34882  009E86  A0D8               	btfss	status,0,c
 34883  009E88  0012               	return	
 34884  009E8A                     i2u1150_40:
 34885                           
 34886                           ; BSR set to: 0
 34887  009E8A  0E00               	movlw	0
 34888  009E8C  6FE7               	movwf	(_epAboveSetAlarm+1)& (0+255),b
 34889  009E8E  0E06               	movlw	6
 34890  009E90  6FE6               	movwf	_epAboveSetAlarm& (0+255),b
 34891                           
 34892                           ; BSR set to: 0
 34893  009E92  0012               	return		;funcret
 34894  009E94                     __end_of_SetEPAboveSetAlarm:
 34895                           	opt callstack 0
 34896                           
 34897 ;; *************** function _SetCircuitFailureAlarm *****************
 34898 ;; Defined at:
 34899 ;;		line 234 in file "alarm.c"
 34900 ;; Parameters:    Size  Location     Type
 34901 ;;		None
 34902 ;; Auto vars:     Size  Location     Type
 34903 ;;		None
 34904 ;; Return value:  Size  Location     Type
 34905 ;;                  1    wreg      void 
 34906 ;; Registers used:
 34907 ;;		wreg, status,2
 34908 ;; Tracked objects:
 34909 ;;		On entry : 3F/2
 34910 ;;		On exit  : 3F/2
 34911 ;;		Unchanged: 0/0
 34912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34917 ;;Total ram usage:        0 bytes
 34918 ;; Hardware stack levels used:    1
 34919 ;; This function calls:
 34920 ;;		Nothing
 34921 ;; This function is called by:
 34922 ;;		_MonitorPressureTask
 34923 ;; This function uses a non-reentrant model
 34924 ;;
 34925                           
 34926                           	psect	text264
 34927  00A634                     __ptext264:
 34928                           	opt callstack 0
 34929  00A634                     _SetCircuitFailureAlarm:
 34930                           	opt callstack 14
 34931                           
 34932                           ; BSR set to: 2
 34933                           
 34934                           ; BSR set to: 0
 34935                           ;incstack = 0
 34936  00A634  0E01               	movlw	1
 34937  00A636  6FAB               	movwf	_circuitFailureAlarm& (0+255),b
 34938                           
 34939                           ; BSR set to: 2
 34940  00A638  0012               	return		;funcret
 34941  00A63A                     __end_of_SetCircuitFailureAlarm:
 34942                           	opt callstack 0
 34943                           
 34944 ;; *************** function _GetPressure_mbar02 *****************
 34945 ;; Defined at:
 34946 ;;		line 772 in file "monitor.c"
 34947 ;; Parameters:    Size  Location     Type
 34948 ;;		None
 34949 ;; Auto vars:     Size  Location     Type
 34950 ;;		None
 34951 ;; Return value:  Size  Location     Type
 34952 ;;                  2   42[COMRAM] short 
 34953 ;; Registers used:
 34954 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34955 ;; Tracked objects:
 34956 ;;		On entry : 3F/1
 34957 ;;		On exit  : 0/0
 34958 ;;		Unchanged: 0/0
 34959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34960 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34961 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34963 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34964 ;;Total ram usage:        4 bytes
 34965 ;; Hardware stack levels used:    1
 34966 ;; Hardware stack levels required when called:    3
 34967 ;; This function calls:
 34968 ;;		i2_GetPressure_pa
 34969 ;;		i2___awdiv
 34970 ;; This function is called by:
 34971 ;;		_MonitorPressureTask
 34972 ;; This function uses a non-reentrant model
 34973 ;;
 34974                           
 34975                           	psect	text265
 34976  009666                     __ptext265:
 34977                           	opt callstack 0
 34978  009666                     _GetPressure_mbar02:
 34979                           	opt callstack 11
 34980                           
 34981                           ; BSR set to: 1
 34982                           ;monitor.c: 774:     return GetPressure_pa()/20;
 34983                           
 34984                           ; BSR set to: 2
 34985                           ;incstack = 0
 34986  009666  EC92  F025         	call	i2_GetPressure_pa	;wreg free
 34987  00966A  0060  F06C  F02D   	movff	?i2_GetPressure_pa,_GetPressure_mbar02$7129
 34988  009670  0060  F070  F02E   	movff	?i2_GetPressure_pa+1,_GetPressure_mbar02$7129+1
 34989                           
 34990                           ;monitor.c: 774:     return GetPressure_pa()/20;
 34991  009676  0060  F0B4  F007   	movff	_GetPressure_mbar02$7129,i2___awdiv@dividend
 34992  00967C  0060  F0B8  F008   	movff	_GetPressure_mbar02$7129+1,i2___awdiv@dividend+1
 34993  009682  0E00               	movlw	0
 34994  009684  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 34995  009686  0E14               	movlw	20
 34996  009688  6E09               	movwf	i2___awdiv@divisor^0,c
 34997  00968A  ECFD  F03F         	call	i2___awdiv	;wreg free
 34998  00968E  0060  F01C  F02B   	movff	?i2___awdiv,?_GetPressure_mbar02
 34999  009694  0060  F020  F02C   	movff	?i2___awdiv+1,?_GetPressure_mbar02+1
 35000  00969A  0012               	return		;funcret
 35001  00969C                     __end_of_GetPressure_mbar02:
 35002                           	opt callstack 0
 35003                           
 35004 ;; *************** function _DisplayCalibrate *****************
 35005 ;; Defined at:
 35006 ;;		line 56 in file "display.c"
 35007 ;; Parameters:    Size  Location     Type
 35008 ;;  pr              2   51[BANK0 ] short 
 35009 ;;  off             2   53[BANK0 ] short 
 35010 ;;  prv             2   55[BANK0 ] short 
 35011 ;;  offv            2   57[BANK0 ] short 
 35012 ;; Auto vars:     Size  Location     Type
 35013 ;;		None
 35014 ;; Return value:  Size  Location     Type
 35015 ;;                  1    wreg      void 
 35016 ;; Registers used:
 35017 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35018 ;; Tracked objects:
 35019 ;;		On entry : 0/2
 35020 ;;		On exit  : 3F/0
 35021 ;;		Unchanged: 0/0
 35022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35023 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35026 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35027 ;;Total ram usage:        8 bytes
 35028 ;; Hardware stack levels used:    1
 35029 ;; Hardware stack levels required when called:    9
 35030 ;; This function calls:
 35031 ;;		i2_sprintf
 35032 ;; This function is called by:
 35033 ;;		_MonitorPressureTask
 35034 ;; This function uses a non-reentrant model
 35035 ;;
 35036                           
 35037                           	psect	text266
 35038  009704                     __ptext266:
 35039                           	opt callstack 0
 35040  009704                     _DisplayCalibrate:
 35041                           	opt callstack 5
 35042                           
 35043                           ;display.c: 57:     calibrate=1;
 35044                           
 35045                           ;incstack = 0
 35046  009704  0E01               	movlw	1
 35047  009706  0100               	movlb	0	; () banked
 35048  009708  6FFF               	movwf	_calibrate& (0+255),b
 35049                           
 35050                           ; BSR set to: 0
 35051                           ;display.c: 58:     sprintf(msg4, "Cal: %4d - %4d", off, offv);
 35052  00970A  0EA9               	movlw	low _msg4
 35053  00970C  6F77               	movwf	i2sprintf@s& (0+255),b
 35054  00970E  0E03               	movlw	high _msg4
 35055  009710  6F78               	movwf	(i2sprintf@s+1)& (0+255),b
 35056  009712  0E3E               	movlw	low STR_7
 35057  009714  6F79               	movwf	i2sprintf@fmt& (0+255),b
 35058  009716  0EFF               	movlw	high STR_7
 35059  009718  6F7A               	movwf	(i2sprintf@fmt+1)& (0+255),b
 35060  00971A  0060  F254  F07B   	movff	DisplayCalibrate@off,?i2_sprintf+4
 35061  009720  0060  F258  F07C   	movff	DisplayCalibrate@off+1,?i2_sprintf+5
 35062  009726  0060  F264  F07D   	movff	DisplayCalibrate@offv,?i2_sprintf+6
 35063  00972C  0060  F268  F07E   	movff	DisplayCalibrate@offv+1,?i2_sprintf+7
 35064  009732  EC61  F047         	call	i2_sprintf	;wreg free
 35065                           
 35066                           ; BSR set to: 0
 35067  009736  0012               	return		;funcret
 35068  009738                     __end_of_DisplayCalibrate:
 35069                           	opt callstack 0
 35070                           
 35071 ;; *************** function _AdcReStartCycle *****************
 35072 ;; Defined at:
 35073 ;;		line 71 in file "monitor.c"
 35074 ;; Parameters:    Size  Location     Type
 35075 ;;		None
 35076 ;; Auto vars:     Size  Location     Type
 35077 ;;		None
 35078 ;; Return value:  Size  Location     Type
 35079 ;;                  1    wreg      void 
 35080 ;; Registers used:
 35081 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35082 ;; Tracked objects:
 35083 ;;		On entry : 0/2
 35084 ;;		On exit  : 3F/3E
 35085 ;;		Unchanged: 0/0
 35086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35091 ;;Total ram usage:        0 bytes
 35092 ;; Hardware stack levels used:    1
 35093 ;; Hardware stack levels required when called:    1
 35094 ;; This function calls:
 35095 ;;		i2_ADCC_StartConversion
 35096 ;;		i2___wmul
 35097 ;; This function is called by:
 35098 ;;		_MonitorPressureTask
 35099 ;; This function uses a non-reentrant model
 35100 ;;
 35101                           
 35102                           	psect	text267
 35103  008A36                     __ptext267:
 35104                           	opt callstack 0
 35105  008A36                     _AdcReStartCycle:
 35106                           	opt callstack 13
 35107                           
 35108                           ;monitor.c: 72:     currentChannel = 0;
 35109                           
 35110                           ; BSR set to: 0
 35111                           ;incstack = 0
 35112  008A36  0E00               	movlw	0
 35113  008A38  0101               	movlb	1	; () banked
 35114  008A3A  6FE6               	movwf	(_currentChannel+1)& (0+255),b
 35115  008A3C  0E00               	movlw	0
 35116  008A3E  6FE5               	movwf	_currentChannel& (0+255),b
 35117                           
 35118                           ; BSR set to: 1
 35119                           ;monitor.c: 73:     ADCON0bits.ADON = 0;
 35120  008A40  013E               	movlb	62	; () banked
 35121  008A42  9FF8               	bcf	248,7,b	;volatile
 35122                           
 35123                           ; BSR set to: 62
 35124                           ;monitor.c: 74:     ADREF = adcChannels[currentChannel].ref;
 35125  008A44  0060  F794  F001   	movff	_currentChannel,i2___wmul@multiplier
 35126  008A4A  0060  F798  F002   	movff	_currentChannel+1,i2___wmul@multiplier+1
 35127  008A50  0E00               	movlw	0
 35128  008A52  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 35129  008A54  0E05               	movlw	5
 35130  008A56  6E03               	movwf	i2___wmul@multiplicand^0,c
 35131  008A58  EC06  F04D         	call	i2___wmul	;wreg free
 35132  008A5C  0EC0               	movlw	low (_adcChannels+4)
 35133  008A5E  2401               	addwf	?i2___wmul^0,w,c
 35134  008A60  6ED9               	movwf	fsr2l,c
 35135  008A62  0E02               	movlw	high (_adcChannels+4)
 35136  008A64  2002               	addwfc	(?i2___wmul+1)^0,w,c
 35137  008A66  6EDA               	movwf	fsr2h,c
 35138  008A68  50DF               	movf	indf2,w,c
 35139  008A6A  013E               	movlb	62	; () banked
 35140  008A6C  6FFD               	movwf	253,b	;volatile
 35141                           
 35142                           ; BSR set to: 62
 35143                           ;monitor.c: 75:     ADCC_StartConversion(adcChannels[currentChannel].ch);
 35144  008A6E  0060  F794  F001   	movff	_currentChannel,i2___wmul@multiplier
 35145  008A74  0060  F798  F002   	movff	_currentChannel+1,i2___wmul@multiplier+1
 35146  008A7A  0E00               	movlw	0
 35147  008A7C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 35148  008A7E  0E05               	movlw	5
 35149  008A80  6E03               	movwf	i2___wmul@multiplicand^0,c
 35150  008A82  EC06  F04D         	call	i2___wmul	;wreg free
 35151  008A86  0EBC               	movlw	low _adcChannels
 35152  008A88  2401               	addwf	?i2___wmul^0,w,c
 35153  008A8A  6ED9               	movwf	fsr2l,c
 35154  008A8C  0E02               	movlw	high _adcChannels
 35155  008A8E  2002               	addwfc	(?i2___wmul+1)^0,w,c
 35156  008A90  6EDA               	movwf	fsr2h,c
 35157  008A92  50DF               	movf	indf2,w,c
 35158  008A94  ECE7  F050         	call	i2_ADCC_StartConversion
 35159                           
 35160                           ; BSR set to: 62
 35161  008A98  0012               	return		;funcret
 35162  008A9A                     __end_of_AdcReStartCycle:
 35163                           	opt callstack 0
 35164                           
 35165 ;; *************** function _I2C2_Isr *****************
 35166 ;; Defined at:
 35167 ;;		line 179 in file "mcc_generated_files/i2c2_slave.c"
 35168 ;; Parameters:    Size  Location     Type
 35169 ;;		None
 35170 ;; Auto vars:     Size  Location     Type
 35171 ;;		None
 35172 ;; Return value:  Size  Location     Type
 35173 ;;                  1    wreg      void 
 35174 ;; Registers used:
 35175 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35176 ;; Tracked objects:
 35177 ;;		On entry : 3F/0
 35178 ;;		On exit  : 0/0
 35179 ;;		Unchanged: 0/0
 35180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35185 ;;Total ram usage:        0 bytes
 35186 ;; Hardware stack levels used:    1
 35187 ;; Hardware stack levels required when called:   14
 35188 ;; This function calls:
 35189 ;;		_I2C2_SlaveClearBuff
 35190 ;;		_I2C2_SlaveClearStopFlag
 35191 ;;		_I2C2_SlaveIsRxBufFull
 35192 ;;		_I2C2_SlaveRdCallBack
 35193 ;;		_I2C2_SlaveReleaseClock
 35194 ;;		_I2C2_SlaveSetCounter
 35195 ;;		_I2C2_SlaveStopCallBack
 35196 ;; This function is called by:
 35197 ;;		_I2C2_Open
 35198 ;;		_INTERRUPT_InterruptManager
 35199 ;; This function uses a non-reentrant model
 35200 ;;
 35201                           
 35202                           	psect	text268
 35203  00889C                     __ptext268:
 35204                           	opt callstack 0
 35205  00889C                     _I2C2_Isr:
 35206                           	opt callstack 2
 35207                           
 35208                           ; BSR set to: 0
 35209                           ;mcc_generated_files/i2c2_slave.c: 181:     if (!I2C2_on) {
 35210                           
 35211                           ; BSR set to: 62
 35212                           ;incstack = 0
 35213  00889C  0102               	movlb	2	; () banked
 35214  00889E  51B4               	movf	_I2C2_on& (0+255),w,b
 35215  0088A0  A4D8               	btfss	status,2,c
 35216  0088A2  D005               	goto	i2l21781
 35217                           
 35218                           ; BSR set to: 2
 35219                           ;mcc_generated_files/i2c2_slave.c: 182:         I2C2_SlaveReleaseClock();
 35220  0088A4  EC2F  F053         	call	_I2C2_SlaveReleaseClock	;wreg free
 35221                           
 35222                           ;mcc_generated_files/i2c2_slave.c: 183:         I2C2_SlaveClearStopFlag();
 35223  0088A8  EC71  F053         	call	_I2C2_SlaveClearStopFlag	;wreg free
 35224  0088AC  0012               	return	
 35225  0088AE                     i2l21781:
 35226                           
 35227                           ; BSR set to: 2
 35228                           ;mcc_generated_files/i2c2_slave.c: 187:     if(I2C2_SlaveIsRxBufFull())
 35229  0088AE  ECDD  F051         	call	_I2C2_SlaveIsRxBufFull	;wreg free
 35230  0088B2  0900               	iorlw	0
 35231  0088B4  B4D8               	btfsc	status,2,c
 35232  0088B6  D005               	goto	i2l1222
 35233                           
 35234                           ; BSR set to: 61
 35235                           ;mcc_generated_files/i2c2_slave.c: 188:     {;mcc_generated_files/i2c2_slave.c: 189:    
      +                               I2C2_SlaveRdCallBack();
 35236  0088B8  EC5A  F04F         	call	_I2C2_SlaveRdCallBack	;wreg free
 35237  0088BC                     i2l21785:
 35238                           
 35239                           ;mcc_generated_files/i2c2_slave.c: 190:         I2C2_SlaveReleaseClock();
 35240  0088BC  EC2F  F053         	call	_I2C2_SlaveReleaseClock	;wreg free
 35241  0088C0  0012               	return	
 35242  0088C2                     i2l1222:
 35243                           
 35244                           ; BSR set to: 61
 35245                           ;mcc_generated_files/i2c2_slave.c: 195:     if(PIE6bits.I2C2EIE == 1 && PIR6bits.I2C2EIF
      +                           == 1)
 35246  0088C2  0139               	movlb	57	; () banked
 35247  0088C4  B396               	btfsc	150,1,b	;volatile
 35248                           
 35249                           ; BSR set to: 57
 35250  0088C6  51A6               	movf	166,w,b	;volatile
 35251                           
 35252                           ; BSR set to: 57
 35253                           ;mcc_generated_files/i2c2_slave.c: 199:     if(PIE5bits.I2C2RXIE == 1 && PIR5bits.I2C2RX
      +                          IF == 1)
 35254                           
 35255                           ;mcc_generated_files/i2c2_slave.c: 196:     {;mcc_generated_files/i2c2_slave.c: 198:    
      +                           }
 35256  0088C8  BD95               	btfsc	149,6,b	;volatile
 35257                           
 35258                           ; BSR set to: 57
 35259  0088CA  ADA5               	btfss	165,6,b	;volatile
 35260  0088CC  D006               	goto	i2l21797
 35261                           
 35262                           ; BSR set to: 57
 35263                           ;mcc_generated_files/i2c2_slave.c: 200:     {;mcc_generated_files/i2c2_slave.c: 202:    
      +                               if(I2C2_SlaveIsRxBufFull())
 35264  0088CE  ECDD  F051         	call	_I2C2_SlaveIsRxBufFull	;wreg free
 35265  0088D2  0900               	iorlw	0
 35266  0088D4  A4D8               	btfss	status,2,c
 35267                           
 35268                           ; BSR set to: 61
 35269                           ;mcc_generated_files/i2c2_slave.c: 203:         {;mcc_generated_files/i2c2_slave.c: 204:
      +                                       I2C2_SlaveRdCallBack();
 35270  0088D6  EC5A  F04F         	call	_I2C2_SlaveRdCallBack	;wreg free
 35271  0088DA                     i2l21797:
 35272                           
 35273                           ;mcc_generated_files/i2c2_slave.c: 207:     if(PIE5bits.I2C2TXIE == 1 && PIR5bits.I2C2TX
      +                          IF == 1)
 35274  0088DA  0139               	movlb	57	; () banked
 35275  0088DC  BF95               	btfsc	149,7,b	;volatile
 35276                           
 35277                           ; BSR set to: 57
 35278  0088DE  51A5               	movf	165,w,b	;volatile
 35279                           
 35280                           ; BSR set to: 57
 35281                           ;mcc_generated_files/i2c2_slave.c: 211:     if(PIE6bits.I2C2IE == 1 && PIR6bits.I2C2IF =
      +                          = 1)
 35282                           
 35283                           ;mcc_generated_files/i2c2_slave.c: 208:     {;mcc_generated_files/i2c2_slave.c: 210:    
      +                           }
 35284  0088E0  B196               	btfsc	150,0,b	;volatile
 35285                           
 35286                           ; BSR set to: 57
 35287  0088E2  A1A6               	btfss	166,0,b	;volatile
 35288  0088E4  D7EB               	goto	i2l21785
 35289                           
 35290                           ; BSR set to: 57
 35291                           ;mcc_generated_files/i2c2_slave.c: 212:     {;mcc_generated_files/i2c2_slave.c: 214:    
      +                               if (I2C2PIR&0x4) {
 35292  0088E6  013D               	movlb	61	; () banked
 35293  0088E8  A563               	btfss	99,2,b	;volatile
 35294  0088EA  D7E8               	goto	i2l21785
 35295                           
 35296                           ; BSR set to: 61
 35297                           ;mcc_generated_files/i2c2_slave.c: 216:             I2C2_SlaveClearStopFlag();
 35298  0088EC  EC71  F053         	call	_I2C2_SlaveClearStopFlag	;wreg free
 35299                           
 35300                           ;mcc_generated_files/i2c2_slave.c: 217:             I2C2_SlaveClearBuff();
 35301  0088F0  EC73  F053         	call	_I2C2_SlaveClearBuff	;wreg free
 35302                           
 35303                           ;mcc_generated_files/i2c2_slave.c: 218:             I2C2_SlaveReleaseClock();
 35304  0088F4  EC2F  F053         	call	_I2C2_SlaveReleaseClock	;wreg free
 35305                           
 35306                           ; BSR set to: 61
 35307                           ;mcc_generated_files/i2c2_slave.c: 219:             I2C2_SlaveSetCounter(0xFF);
 35308  0088F8  0EFF               	movlw	255
 35309  0088FA  EC4A  F052         	call	_I2C2_SlaveSetCounter
 35310                           
 35311                           ;mcc_generated_files/i2c2_slave.c: 220:             I2C2_SlaveStopCallBack();
 35312  0088FE  EC4A  F04F         	call	_I2C2_SlaveStopCallBack	;wreg free
 35313  008902  0012               	return		;funcret
 35314  008904                     __end_of_I2C2_Isr:
 35315                           	opt callstack 0
 35316                           
 35317 ;; *************** function _I2C2_SlaveStopCallBack *****************
 35318 ;; Defined at:
 35319 ;;		line 273 in file "mcc_generated_files/i2c2_slave.c"
 35320 ;; Parameters:    Size  Location     Type
 35321 ;;		None
 35322 ;; Auto vars:     Size  Location     Type
 35323 ;;		None
 35324 ;; Return value:  Size  Location     Type
 35325 ;;                  1    wreg      void 
 35326 ;; Registers used:
 35327 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35328 ;; Tracked objects:
 35329 ;;		On entry : 0/3D
 35330 ;;		On exit  : 0/0
 35331 ;;		Unchanged: 0/0
 35332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35337 ;;Total ram usage:        0 bytes
 35338 ;; Hardware stack levels used:    1
 35339 ;; Hardware stack levels required when called:   13
 35340 ;; This function calls:
 35341 ;;		Absolute function
 35342 ;;		_StopHandler
 35343 ;; This function is called by:
 35344 ;;		_I2C2_Isr
 35345 ;; This function uses a non-reentrant model
 35346 ;;
 35347                           
 35348                           	psect	text269
 35349  009E94                     __ptext269:
 35350                           	opt callstack 0
 35351  009E94                     _I2C2_SlaveStopCallBack:
 35352                           	opt callstack 2
 35353                           
 35354                           ;mcc_generated_files/i2c2_slave.c: 275:     if (I2C2_SlaveStopInterruptHandler)
 35355                           
 35356                           ;incstack = 0
 35357  009E94  0102               	movlb	2	; () banked
 35358  009E96  5192               	movf	_I2C2_SlaveStopInterruptHandler& (0+255),w,b
 35359  009E98  1193               	iorwf	(_I2C2_SlaveStopInterruptHandler+1)& (0+255),w,b
 35360  009E9A  B4D8               	btfsc	status,2,c
 35361  009E9C  0012               	return	
 35362                           
 35363                           ; BSR set to: 2
 35364                           ;mcc_generated_files/i2c2_slave.c: 276:     {;mcc_generated_files/i2c2_slave.c: 277:    
      +                               I2C2_SlaveStopInterruptHandler();
 35365  009E9E  D801               	call	i2u1955_48
 35366  009EA0  0012               	return	
 35367  009EA2                     i2u1955_48:
 35368  009EA2  0005               	push	
 35369  009EA4  6EFA               	movwf	pclath,c
 35370  009EA6  5192               	movf	_I2C2_SlaveStopInterruptHandler& (0+255),w,b
 35371  009EA8  6EFD               	movwf	tosl,c
 35372  009EAA  5193               	movf	(_I2C2_SlaveStopInterruptHandler+1)& (0+255),w,b
 35373  009EAC  6EFE               	movwf	tosh,c
 35374  009EAE  6AFF               	clrf	tosu,c
 35375  009EB0  50FA               	movf	pclath,w,c
 35376  009EB2  0012               	return		;indir
 35377  009EB4                     __end_of_I2C2_SlaveStopCallBack:
 35378                           	opt callstack 0
 35379                           
 35380 ;; *************** function _StopHandler *****************
 35381 ;; Defined at:
 35382 ;;		line 161 in file "controller.c"
 35383 ;; Parameters:    Size  Location     Type
 35384 ;;		None
 35385 ;; Auto vars:     Size  Location     Type
 35386 ;;  stat1           1    0        unsigned char 
 35387 ;;  stat0           1    0        unsigned char 
 35388 ;; Return value:  Size  Location     Type
 35389 ;;                  1    wreg      void 
 35390 ;; Registers used:
 35391 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35392 ;; Tracked objects:
 35393 ;;		On entry : 3F/2
 35394 ;;		On exit  : 3F/0
 35395 ;;		Unchanged: 0/0
 35396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35398 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35400 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35401 ;;Total ram usage:        2 bytes
 35402 ;; Hardware stack levels used:    1
 35403 ;; Hardware stack levels required when called:   12
 35404 ;; This function calls:
 35405 ;;		_ReceiveHandler
 35406 ;;		_UpdateState
 35407 ;;		i2_printf
 35408 ;; This function is called by:
 35409 ;;		_ControllerInit
 35410 ;;		_I2C2_SlaveStopCallBack
 35411 ;; This function uses a non-reentrant model
 35412 ;;
 35413                           
 35414                           	psect	text270
 35415  008D1E                     __ptext270:
 35416                           	opt callstack 0
 35417  008D1E                     _StopHandler:
 35418                           	opt callstack 2
 35419                           
 35420                           ; BSR set to: 2
 35421                           
 35422                           ;incstack = 0
 35423  008D1E  013D               	movlb	61	; () banked
 35424  008D20  5161               	movf	97,w,b	;volatile
 35425  008D22  5162               	movf	98,w,b	;volatile
 35426                           
 35427                           ; BSR set to: 61
 35428                           ;controller.c: 166:     if (cntByte!=10 && cntByte>0) {
 35429  008D24  0E0A               	movlw	10
 35430  008D26  0100               	movlb	0	; () banked
 35431  008D28  19CC               	xorwf	_cntByte& (0+255),w,b
 35432  008D2A  11CD               	iorwf	(_cntByte+1)& (0+255),w,b
 35433  008D2C  A4D8               	btfss	status,2,c
 35434                           
 35435                           ; BSR set to: 0
 35436  008D2E  BFCD               	btfsc	(_cntByte+1)& (0+255),7,b
 35437  008D30  D014               	goto	i2l19849
 35438  008D32  51CD               	movf	(_cntByte+1)& (0+255),w,b
 35439  008D34  E103               	bnz	i2u1919_40
 35440  008D36  05CC               	decf	_cntByte& (0+255),w,b
 35441  008D38  A0D8               	btfss	status,0,c
 35442  008D3A  D00F               	goto	i2l19849
 35443  008D3C                     i2u1919_40:
 35444                           
 35445                           ; BSR set to: 0
 35446                           ;controller.c: 167:         ReceiveHandler();
 35447  008D3C  ECA1  F048         	call	_ReceiveHandler	;wreg free
 35448                           
 35449                           ;controller.c: 168:         printf("I2C: miss %d\r\n", cntByte);
 35450  008D40  0E11               	movlw	low STR_53
 35451  008D42  0100               	movlb	0	; () banked
 35452  008D44  6F77               	movwf	i2printf@fmt& (0+255),b
 35453  008D46  0EFF               	movlw	high STR_53
 35454  008D48  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 35455  008D4A  0060  F330  F079   	movff	_cntByte,?i2_printf+2
 35456  008D50  0060  F334  F07A   	movff	_cntByte+1,?i2_printf+3
 35457  008D56  EC07  F04E         	call	i2_printf	;wreg free
 35458  008D5A                     i2l19849:
 35459                           
 35460                           ;controller.c: 177:     if (cntByte==10) {
 35461  008D5A  0E0A               	movlw	10
 35462  008D5C  0100               	movlb	0	; () banked
 35463  008D5E  19CC               	xorwf	_cntByte& (0+255),w,b
 35464  008D60  11CD               	iorwf	(_cntByte+1)& (0+255),w,b
 35465  008D62  B4D8               	btfsc	status,2,c
 35466                           
 35467                           ; BSR set to: 0
 35468                           ;controller.c: 181:         UpdateState();
 35469  008D64  EC62  F01F         	call	_UpdateState	;wreg free
 35470                           
 35471                           ;controller.c: 183:     cntByte = 0;
 35472  008D68  0E00               	movlw	0
 35473  008D6A  0100               	movlb	0	; () banked
 35474  008D6C  6FCD               	movwf	(_cntByte+1)& (0+255),b
 35475  008D6E  0E00               	movlw	0
 35476  008D70  6FCC               	movwf	_cntByte& (0+255),b
 35477                           
 35478                           ; BSR set to: 0
 35479  008D72  0012               	return		;funcret
 35480  008D74                     __end_of_StopHandler:
 35481                           	opt callstack 0
 35482                           
 35483 ;; *************** function _UpdateState *****************
 35484 ;; Defined at:
 35485 ;;		line 65 in file "controller.c"
 35486 ;; Parameters:    Size  Location     Type
 35487 ;;		None
 35488 ;; Auto vars:     Size  Location     Type
 35489 ;;  initPhase       2   91[COMRAM] int 
 35490 ;; Return value:  Size  Location     Type
 35491 ;;                  1    wreg      void 
 35492 ;; Registers used:
 35493 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35494 ;; Tracked objects:
 35495 ;;		On entry : 3F/0
 35496 ;;		On exit  : 3D/0
 35497 ;;		Unchanged: 0/0
 35498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35500 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35501 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35502 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35503 ;;Total ram usage:        8 bytes
 35504 ;; Hardware stack levels used:    1
 35505 ;; Hardware stack levels required when called:   11
 35506 ;; This function calls:
 35507 ;;		_ClearAllAlarm
 35508 ;;		_ControllerBuzzerCheck
 35509 ;;		_DisplayDisable
 35510 ;;		_DisplayEnable
 35511 ;;		_GetControllerBuzzerCheck
 35512 ;;		_SetControlFailAlarm
 35513 ;;		_SetMaxPressure
 35514 ;;		_SetTarget
 35515 ;;		_SetVolumeControl
 35516 ;;		i2_ClearControlFailAlarm
 35517 ;;		i2_EnableAlarmSV1
 35518 ;;		i2_LCDOff
 35519 ;;		i2_LCDOn
 35520 ;;		i2_MonitorDisable
 35521 ;;		i2_MonitorEnable
 35522 ;;		i2_SetCalibrateState
 35523 ;;		i2_SetSV1
 35524 ;;		i2_printf
 35525 ;; This function is called by:
 35526 ;;		_StopHandler
 35527 ;; This function uses a non-reentrant model
 35528 ;;
 35529                           
 35530                           	psect	text271
 35531  003EC4                     __ptext271:
 35532                           	opt callstack 0
 35533  003EC4                     _UpdateState:
 35534                           	opt callstack 2
 35535                           
 35536                           ; BSR set to: 0
 35537                           ;controller.c: 66:     static uint8_t old;;controller.c: 68:     old= msg.cntMsg.state;
 35538                           
 35539                           ; BSR set to: 0
 35540                           ;incstack = 0
 35541  003EC4  C200  F298         	movff	_msg,UpdateState@old
 35542                           
 35543                           ; BSR set to: 0
 35544                           ;controller.c: 69:     init = (msg.cntMsg.state & 0xE0);
 35545  003EC8  0060  F800  F0BD   	movff	_msg,??_UpdateState
 35546  003ECE  0EE0               	movlw	224
 35547  003ED0  17BD               	andwf	??_UpdateState& (0+255),f,b
 35548  003ED2  B4D8               	btfsc	status,2,c
 35549  003ED4  D002               	goto	i2u1856_40
 35550  003ED6  0E01               	movlw	1
 35551  003ED8  D001               	goto	i2u1857_40
 35552  003EDA                     i2u1856_40:
 35553  003EDA  0E00               	movlw	0
 35554  003EDC                     i2u1857_40:
 35555  003EDC  0102               	movlb	2	; () banked
 35556  003EDE  6F9A               	movwf	_init& (0+255),b
 35557                           
 35558                           ; BSR set to: 2
 35559                           ;controller.c: 70:     if (init) {
 35560  003EE0  519A               	movf	_init& (0+255),w,b
 35561  003EE2  B4D8               	btfsc	status,2,c
 35562  003EE4  D078               	goto	i2l19099
 35563                           
 35564                           ; BSR set to: 2
 35565                           ;controller.c: 71:         int initPhase = (msg.cntMsg.state & 0xE0)>>5;
 35566  003EE6  0060  F800  F0BD   	movff	_msg,??_UpdateState
 35567  003EEC  0E05               	movlw	5
 35568  003EEE  0100               	movlb	0	; () banked
 35569  003EF0  6FBE               	movwf	(??_UpdateState+1)& (0+255),b
 35570  003EF2                     i2u1859_45:
 35571  003EF2  90D8               	bcf	status,0,c
 35572  003EF4  33BD               	rrcf	??_UpdateState& (0+255),f,b
 35573  003EF6  2FBE               	decfsz	(??_UpdateState+1)& (0+255),f,b
 35574  003EF8  D7FC               	goto	i2u1859_45
 35575  003EFA  0E07               	movlw	7
 35576  003EFC  17BD               	andwf	??_UpdateState& (0+255),f,b
 35577  003EFE  51BD               	movf	??_UpdateState& (0+255),w,b
 35578  003F00  6E5C               	movwf	UpdateState@initPhase^0,c
 35579  003F02  6A5D               	clrf	(UpdateState@initPhase+1)^0,c
 35580                           
 35581                           ; BSR set to: 0
 35582                           ;controller.c: 72:         printf("\r\nINIT: %d\r\n", initPhase);
 35583  003F04  0E6A               	movlw	low STR_49
 35584  003F06  6F77               	movwf	i2printf@fmt& (0+255),b
 35585  003F08  0EFF               	movlw	high STR_49
 35586  003F0A  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 35587  003F0C  0060  F170  F079   	movff	UpdateState@initPhase,?i2_printf+2
 35588  003F12  0060  F174  F07A   	movff	UpdateState@initPhase+1,?i2_printf+3
 35589  003F18  EC07  F04E         	call	i2_printf	;wreg free
 35590                           
 35591                           ; BSR set to: 2
 35592                           ;controller.c: 73:         if (initPhase == 5 || initPhase==3) SetSV1(1);
 35593  003F1C  0E05               	movlw	5
 35594  003F1E  185C               	xorwf	UpdateState@initPhase^0,w,c
 35595  003F20  105D               	iorwf	(UpdateState@initPhase+1)^0,w,c
 35596  003F22  B4D8               	btfsc	status,2,c
 35597  003F24  D005               	goto	i2u1861_40
 35598                           
 35599                           ; BSR set to: 2
 35600  003F26  0E03               	movlw	3
 35601  003F28  185C               	xorwf	UpdateState@initPhase^0,w,c
 35602  003F2A  105D               	iorwf	(UpdateState@initPhase+1)^0,w,c
 35603  003F2C  A4D8               	btfss	status,2,c
 35604  003F2E  D003               	goto	i2l19059
 35605  003F30                     i2u1861_40:
 35606                           
 35607                           ; BSR set to: 2
 35608  003F30  0E01               	movlw	1
 35609  003F32  ECD8  F04C         	call	i2_SetSV1
 35610  003F36                     i2l19059:
 35611                           
 35612                           ;controller.c: 74:         if (initPhase == 1 || initPhase==2 || initPhase==4 || initPha
      +                          se==6 || initPhase==7) SetSV1(0);
 35613  003F36  045C               	decf	UpdateState@initPhase^0,w,c
 35614  003F38  105D               	iorwf	(UpdateState@initPhase+1)^0,w,c
 35615  003F3A  B4D8               	btfsc	status,2,c
 35616  003F3C  D014               	goto	i2u1866_40
 35617  003F3E  0E02               	movlw	2
 35618  003F40  185C               	xorwf	UpdateState@initPhase^0,w,c
 35619  003F42  105D               	iorwf	(UpdateState@initPhase+1)^0,w,c
 35620  003F44  B4D8               	btfsc	status,2,c
 35621  003F46  D00F               	goto	i2u1866_40
 35622  003F48  0E04               	movlw	4
 35623  003F4A  185C               	xorwf	UpdateState@initPhase^0,w,c
 35624  003F4C  105D               	iorwf	(UpdateState@initPhase+1)^0,w,c
 35625  003F4E  B4D8               	btfsc	status,2,c
 35626  003F50  D00A               	goto	i2u1866_40
 35627  003F52  0E06               	movlw	6
 35628  003F54  185C               	xorwf	UpdateState@initPhase^0,w,c
 35629  003F56  105D               	iorwf	(UpdateState@initPhase+1)^0,w,c
 35630  003F58  B4D8               	btfsc	status,2,c
 35631  003F5A  D005               	goto	i2u1866_40
 35632  003F5C  0E07               	movlw	7
 35633  003F5E  185C               	xorwf	UpdateState@initPhase^0,w,c
 35634  003F60  105D               	iorwf	(UpdateState@initPhase+1)^0,w,c
 35635  003F62  A4D8               	btfss	status,2,c
 35636  003F64  D003               	goto	i2l19071
 35637  003F66                     i2u1866_40:
 35638  003F66  0E00               	movlw	0
 35639  003F68  ECD8  F04C         	call	i2_SetSV1
 35640  003F6C                     i2l19071:
 35641                           
 35642                           ;controller.c: 75:         if (initPhase == 2) SetCalibrateState(1); else SetCalibrateSt
      +                          ate(0);
 35643  003F6C  0E02               	movlw	2
 35644  003F6E  185C               	xorwf	UpdateState@initPhase^0,w,c
 35645  003F70  105D               	iorwf	(UpdateState@initPhase+1)^0,w,c
 35646  003F72  A4D8               	btfss	status,2,c
 35647  003F74  D004               	goto	i2l19075
 35648  003F76  0E01               	movlw	1
 35649  003F78  EC5C  F031         	call	i2_SetCalibrateState
 35650  003F7C  D003               	goto	i2l19079
 35651  003F7E                     i2l19075:
 35652  003F7E  0E00               	movlw	0
 35653  003F80  EC5C  F031         	call	i2_SetCalibrateState
 35654  003F84                     i2l19079:
 35655                           
 35656                           ; BSR set to: 2
 35657                           ;controller.c: 82:         if (initPhase == 2) {
 35658  003F84  0E02               	movlw	2
 35659  003F86  185C               	xorwf	UpdateState@initPhase^0,w,c
 35660  003F88  105D               	iorwf	(UpdateState@initPhase+1)^0,w,c
 35661  003F8A  B4D8               	btfsc	status,2,c
 35662                           
 35663                           ; BSR set to: 2
 35664                           ;controller.c: 83:             GetControllerBuzzerCheck();
 35665  003F8C  EC9D  F050         	call	_GetControllerBuzzerCheck	;wreg free
 35666                           
 35667                           ; BSR set to: 2
 35668                           ;controller.c: 85:          if (initPhase == 3) {
 35669  003F90  0E03               	movlw	3
 35670  003F92  185C               	xorwf	UpdateState@initPhase^0,w,c
 35671  003F94  105D               	iorwf	(UpdateState@initPhase+1)^0,w,c
 35672  003F96  B4D8               	btfsc	status,2,c
 35673                           
 35674                           ; BSR set to: 2
 35675                           ;controller.c: 86:             ControllerBuzzerCheck();
 35676  003F98  EC1C  F052         	call	_ControllerBuzzerCheck	;wreg free
 35677                           
 35678                           ; BSR set to: 2
 35679                           ;controller.c: 88:          if (initPhase == 4) {
 35680  003F9C  0E04               	movlw	4
 35681  003F9E  185C               	xorwf	UpdateState@initPhase^0,w,c
 35682  003FA0  105D               	iorwf	(UpdateState@initPhase+1)^0,w,c
 35683  003FA2  A4D8               	btfss	status,2,c
 35684  003FA4  D016               	goto	i2l19097
 35685                           
 35686                           ; BSR set to: 2
 35687                           ;controller.c: 89:             if (!GetControllerBuzzerCheck()) {
 35688  003FA6  EC9D  F050         	call	_GetControllerBuzzerCheck	;wreg free
 35689  003FAA  0900               	iorlw	0
 35690  003FAC  A4D8               	btfss	status,2,c
 35691  003FAE  D00A               	goto	i2l19095
 35692                           
 35693                           ; BSR set to: 2
 35694                           ;controller.c: 90:                 printf("\r\n Error in Controller buzzer\r\n");
 35695  003FB0  0E27               	movlw	low STR_50
 35696  003FB2  0100               	movlb	0	; () banked
 35697  003FB4  6F77               	movwf	i2printf@fmt& (0+255),b
 35698  003FB6  0EFE               	movlw	high STR_50
 35699  003FB8  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 35700  003FBA  EC07  F04E         	call	i2_printf	;wreg free
 35701                           
 35702                           ; BSR set to: 2
 35703                           ;controller.c: 91:                 SetControlFailAlarm();
 35704  003FBE  ECB9  F052         	call	_SetControlFailAlarm	;wreg free
 35705                           
 35706                           ;controller.c: 92:             } else {
 35707  003FC2  D007               	goto	i2l19097
 35708  003FC4                     i2l19095:
 35709                           
 35710                           ; BSR set to: 2
 35711                           ;controller.c: 93:                 printf("\r\n Controller buzzer detected\r\n");
 35712  003FC4  0E07               	movlw	low STR_51
 35713  003FC6  0100               	movlb	0	; () banked
 35714  003FC8  6F77               	movwf	i2printf@fmt& (0+255),b
 35715  003FCA  0EFE               	movlw	high STR_51
 35716  003FCC  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 35717  003FCE  EC07  F04E         	call	i2_printf	;wreg free
 35718  003FD2                     i2l19097:
 35719                           
 35720                           ;controller.c: 97:         EnableAlarmSV1();
 35721  003FD2  ECB5  F052         	call	i2_EnableAlarmSV1	;wreg free
 35722  003FD6                     i2l19099:
 35723                           
 35724                           ;controller.c: 99:     if (msg.cntMsg.state & 0x8) {
 35725  003FD6  0102               	movlb	2	; () banked
 35726  003FD8  A700               	btfss	_msg& (0+255),3,b
 35727  003FDA  D00F               	goto	i2l19111
 35728                           
 35729                           ; BSR set to: 2
 35730                           ;controller.c: 100:         LCDOff();
 35731  003FDC  EC40  F052         	call	i2_LCDOff	;wreg free
 35732                           
 35733                           ; BSR set to: 1
 35734                           ;controller.c: 101:         ClearAllAlarm();
 35735  003FE0  EC7A  F048         	call	_ClearAllAlarm	;wreg free
 35736                           
 35737                           ; BSR set to: 2
 35738                           ;controller.c: 102:         MonitorDisable();
 35739  003FE4  ECB1  F052         	call	i2_MonitorDisable	;wreg free
 35740                           
 35741                           ; BSR set to: 2
 35742                           ;controller.c: 103:         DisplayDisable();
 35743  003FE8  ECA6  F050         	call	_DisplayDisable	;wreg free
 35744                           
 35745                           ; BSR set to: 0
 35746                           ;controller.c: 104:         printf("\r\n SLEEP MODE\r\n");
 35747  003FEC  0E01               	movlw	low STR_52
 35748  003FEE  6F77               	movwf	i2printf@fmt& (0+255),b
 35749  003FF0  0EFF               	movlw	high STR_52
 35750  003FF2  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 35751  003FF4  EC07  F04E         	call	i2_printf	;wreg free
 35752                           
 35753                           ;controller.c: 105:     } else {
 35754  003FF8  D002               	goto	i2l19113
 35755  003FFA                     i2l19111:
 35756                           
 35757                           ; BSR set to: 2
 35758                           ;controller.c: 106:         LCDOn();
 35759  003FFA  EC3B  F052         	call	i2_LCDOn	;wreg free
 35760  003FFE                     i2l19113:
 35761                           
 35762                           ;controller.c: 109:     run = (msg.cntMsg.state & 0x10) == 0x10;
 35763  003FFE  0102               	movlb	2	; () banked
 35764  004000  A900               	btfss	_msg& (0+255),4,b
 35765  004002  D002               	goto	i2u1873_40
 35766  004004  0E01               	movlw	1
 35767  004006  D001               	goto	i2u1874_40
 35768  004008                     i2u1873_40:
 35769  004008  0E00               	movlw	0
 35770  00400A                     i2u1874_40:
 35771  00400A  0100               	movlb	0	; () banked
 35772  00400C  6FF0               	movwf	_run& (0+255),b
 35773                           
 35774                           ; BSR set to: 0
 35775                           ;controller.c: 112:     if (run) SetSV1(1);
 35776  00400E  51F0               	movf	_run& (0+255),w,b
 35777  004010  B4D8               	btfsc	status,2,c
 35778  004012  D003               	goto	i2l19119
 35779                           
 35780                           ; BSR set to: 0
 35781  004014  0E01               	movlw	1
 35782  004016  ECD8  F04C         	call	i2_SetSV1
 35783  00401A                     i2l19119:
 35784                           
 35785                           ;controller.c: 113:     if (run) MonitorEnable(); else MonitorDisable();
 35786  00401A  0100               	movlb	0	; () banked
 35787  00401C  51F0               	movf	_run& (0+255),w,b
 35788  00401E  B4D8               	btfsc	status,2,c
 35789  004020  D003               	goto	i2l19123
 35790                           
 35791                           ; BSR set to: 0
 35792  004022  ECAD  F052         	call	i2_MonitorEnable	;wreg free
 35793  004026  D002               	goto	i2l19125
 35794  004028                     i2l19123:
 35795                           
 35796                           ; BSR set to: 0
 35797  004028  ECB1  F052         	call	i2_MonitorDisable	;wreg free
 35798  00402C                     i2l19125:
 35799                           
 35800                           ; BSR set to: 2
 35801                           ;controller.c: 114:     if (run) DisplayEnable(); else DisplayDisable();
 35802  00402C  0100               	movlb	0	; () banked
 35803  00402E  51F0               	movf	_run& (0+255),w,b
 35804  004030  B4D8               	btfsc	status,2,c
 35805  004032  D003               	goto	i2l19129
 35806                           
 35807                           ; BSR set to: 0
 35808  004034  ECDF  F050         	call	_DisplayEnable	;wreg free
 35809  004038  D002               	goto	i2l19131
 35810  00403A                     i2l19129:
 35811                           
 35812                           ; BSR set to: 0
 35813  00403A  ECA6  F050         	call	_DisplayDisable	;wreg free
 35814  00403E                     i2l19131:
 35815                           
 35816                           ; BSR set to: 0
 35817                           ;controller.c: 115:     volumeControl = (msg.cntMsg.state & 0x14) == 0x14;
 35818  00403E  0102               	movlb	2	; () banked
 35819  004040  5100               	movf	_msg& (0+255),w,b
 35820  004042  0B14               	andlw	20
 35821  004044  0A14               	xorlw	20
 35822  004046  A4D8               	btfss	status,2,c
 35823  004048  D002               	goto	i2u1878_40
 35824  00404A  0E01               	movlw	1
 35825  00404C  D001               	goto	i2u1879_40
 35826  00404E                     i2u1878_40:
 35827  00404E  0E00               	movlw	0
 35828  004050                     i2u1879_40:
 35829  004050  6F99               	movwf	controller@volumeControl& (0+255),b
 35830                           
 35831                           ; BSR set to: 2
 35832                           ;controller.c: 116:     SetVolumeControl(volumeControl);
 35833  004052  5199               	movf	controller@volumeControl& (0+255),w,b
 35834  004054  EC45  F052         	call	_SetVolumeControl
 35835                           
 35836                           ;controller.c: 118:     SetTarget(msg.cntMsg.pmax & 0x7F, msg.cntMsg.ip & 0x3F, msg.cntM
      +                          sg.ep & 0x3F, msg.cntMsg.bpm & 0x3F, (msg.cntMsg.vhigh&0x7F)*20, (msg.cntMsg.vlow&0x7F)*
      +                          20);
 35837  004058  0060  F810  F0BD   	movff	_msg+4,??_UpdateState
 35838  00405E  0E7F               	movlw	127
 35839  004060  0100               	movlb	0	; () banked
 35840  004062  17BD               	andwf	??_UpdateState& (0+255),f,b
 35841  004064  51BD               	movf	??_UpdateState& (0+255),w,b
 35842  004066  6E1B               	movwf	SetTarget@pmax^0,c
 35843  004068  6A1C               	clrf	(SetTarget@pmax+1)^0,c
 35844  00406A  0060  F804  F0BE   	movff	_msg+1,??_UpdateState+1
 35845  004070  0E3F               	movlw	63
 35846  004072  17BE               	andwf	(??_UpdateState+1)& (0+255),f,b
 35847  004074  51BE               	movf	(??_UpdateState+1)& (0+255),w,b
 35848  004076  6E1D               	movwf	SetTarget@ip^0,c
 35849  004078  6A1E               	clrf	(SetTarget@ip+1)^0,c
 35850  00407A  0060  F808  F0BF   	movff	_msg+2,??_UpdateState+2
 35851  004080  0E3F               	movlw	63
 35852  004082  17BF               	andwf	(??_UpdateState+2)& (0+255),f,b
 35853  004084  51BF               	movf	(??_UpdateState+2)& (0+255),w,b
 35854  004086  6E1F               	movwf	SetTarget@ep^0,c
 35855  004088  6A20               	clrf	(SetTarget@ep+1)^0,c
 35856  00408A  0060  F80C  F0C0   	movff	_msg+3,??_UpdateState+3
 35857  004090  0E3F               	movlw	63
 35858  004092  17C0               	andwf	(??_UpdateState+3)& (0+255),f,b
 35859  004094  51C0               	movf	(??_UpdateState+3)& (0+255),w,b
 35860  004096  6E21               	movwf	SetTarget@br^0,c
 35861  004098  6A22               	clrf	(SetTarget@br+1)^0,c
 35862  00409A  0060  F81C  F0C1   	movff	_msg+7,??_UpdateState+4
 35863  0040A0  0E7F               	movlw	127
 35864  0040A2  17C1               	andwf	(??_UpdateState+4)& (0+255),f,b
 35865  0040A4  51C1               	movf	(??_UpdateState+4)& (0+255),w,b
 35866  0040A6  0D14               	mullw	20
 35867  0040A8  006F FFCC  F023    	movff	prodl,SetTarget@vmax
 35868  0040AE  006F FFD0  F024    	movff	prodh,SetTarget@vmax+1
 35869  0040B4  0060  F818  F0C2   	movff	_msg+6,??_UpdateState+5
 35870  0040BA  0E7F               	movlw	127
 35871  0040BC  17C2               	andwf	(??_UpdateState+5)& (0+255),f,b
 35872  0040BE  51C2               	movf	(??_UpdateState+5)& (0+255),w,b
 35873  0040C0  0D14               	mullw	20
 35874  0040C2  006F FFCC  F025    	movff	prodl,SetTarget@vmin
 35875  0040C8  006F FFD0  F026    	movff	prodh,SetTarget@vmin+1
 35876  0040CE  EC0A  F037         	call	_SetTarget	;wreg free
 35877                           
 35878                           ;controller.c: 119:     SetMaxPressure(msg.cntMsg.pmax & 0x7F);
 35879  0040D2  0060  F810  F0BD   	movff	_msg+4,??_UpdateState
 35880  0040D8  0E7F               	movlw	127
 35881  0040DA  0100               	movlb	0	; () banked
 35882  0040DC  17BD               	andwf	??_UpdateState& (0+255),f,b
 35883  0040DE  51BD               	movf	??_UpdateState& (0+255),w,b
 35884  0040E0  6E01               	movwf	SetMaxPressure@pr^0,c
 35885  0040E2  6A02               	clrf	(SetMaxPressure@pr+1)^0,c
 35886  0040E4  ECB3  F051         	call	_SetMaxPressure	;wreg free
 35887                           
 35888                           ; BSR set to: 0
 35889                           ;controller.c: 122:     spr = msg.cntMsg.spr;
 35890  0040E8  C208  F232         	movff	_msg+8,_spr
 35891  0040EC  0102               	movlb	2	; () banked
 35892  0040EE  6B33               	clrf	(_spr+1)& (0+255),b
 35893                           
 35894                           ; BSR set to: 2
 35895                           ;controller.c: 124:     static int cnt=0;;controller.c: 125:     if (msg.cntMsg.alarm & 
      +                          0x80) {
 35896  0040F0  AF09               	btfss	(_msg+9)& (0+255),7,b
 35897  0040F2  D00D               	goto	i2l19149
 35898                           
 35899                           ; BSR set to: 2
 35900                           ;controller.c: 128:         cnt++;
 35901  0040F4  4B30               	infsnz	UpdateState@cnt& (0+255),f,b
 35902  0040F6  2B31               	incf	(UpdateState@cnt+1)& (0+255),f,b
 35903                           
 35904                           ; BSR set to: 2
 35905                           ;controller.c: 129:         if (cnt>10) SetControlFailAlarm();
 35906  0040F8  BF31               	btfsc	(UpdateState@cnt+1)& (0+255),7,b
 35907  0040FA  0012               	return	
 35908  0040FC  5131               	movf	(UpdateState@cnt+1)& (0+255),w,b
 35909  0040FE  E104               	bnz	i2u1881_40
 35910  004100  0E0B               	movlw	11
 35911  004102  5D30               	subwf	UpdateState@cnt& (0+255),w,b
 35912  004104  A0D8               	btfss	status,0,c
 35913  004106  0012               	return	
 35914  004108                     i2u1881_40:
 35915                           
 35916                           ; BSR set to: 2
 35917  004108  ECB9  F052         	call	_SetControlFailAlarm	;wreg free
 35918  00410C  0012               	return	
 35919  00410E                     i2l19149:
 35920                           
 35921                           ; BSR set to: 2
 35922                           ;controller.c: 131:         ClearControlFailAlarm();
 35923  00410E  ECD1  F052         	call	i2_ClearControlFailAlarm	;wreg free
 35924                           
 35925                           ; BSR set to: 0
 35926                           ;controller.c: 132:         cnt = 0;
 35927  004112  0E00               	movlw	0
 35928  004114  0102               	movlb	2	; () banked
 35929  004116  6F31               	movwf	(UpdateState@cnt+1)& (0+255),b
 35930  004118  0E00               	movlw	0
 35931  00411A  6F30               	movwf	UpdateState@cnt& (0+255),b
 35932  00411C  0012               	return		;funcret
 35933  00411E                     __end_of_UpdateState:
 35934                           	opt callstack 0
 35935                           
 35936 ;; *************** function i2_SetSV1 *****************
 35937 ;; Defined at:
 35938 ;;		line 890 in file "monitor.c"
 35939 ;; Parameters:    Size  Location     Type
 35940 ;;  value           1    wreg     _Bool 
 35941 ;; Auto vars:     Size  Location     Type
 35942 ;;  value           1   90[COMRAM] _Bool 
 35943 ;; Return value:  Size  Location     Type
 35944 ;;                  1    wreg      void 
 35945 ;; Registers used:
 35946 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35947 ;; Tracked objects:
 35948 ;;		On entry : 3D/2
 35949 ;;		On exit  : 3D/0
 35950 ;;		Unchanged: 0/0
 35951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35953 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35955 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35956 ;;Total ram usage:        1 bytes
 35957 ;; Hardware stack levels used:    1
 35958 ;; Hardware stack levels required when called:    9
 35959 ;; This function calls:
 35960 ;;		i2_printf
 35961 ;; This function is called by:
 35962 ;;		_UpdateState
 35963 ;; This function uses a non-reentrant model
 35964 ;;
 35965                           
 35966                           	psect	text272
 35967  0099B0                     __ptext272:
 35968                           	opt callstack 0
 35969  0099B0                     i2_SetSV1:
 35970                           	opt callstack 3
 35971                           
 35972                           ;incstack = 0
 35973                           ;i2SetSV1@value stored from wreg
 35974  0099B0  6E5B               	movwf	i2SetSV1@value^0,c
 35975                           
 35976                           ;monitor.c: 891:     static _Bool last= 0;;monitor.c: 892:     if (last!=value) printf("
      +                          \r\nSV1: %d\r\n", value);
 35977  0099B2  505B               	movf	i2SetSV1@value^0,w,c
 35978  0099B4  0100               	movlb	0	; () banked
 35979  0099B6  19F1               	xorwf	SetSV1@last& (0+255),w,b
 35980  0099B8  B4D8               	btfsc	status,2,c
 35981  0099BA  D00A               	goto	i2l18917
 35982                           
 35983                           ; BSR set to: 0
 35984  0099BC  0E90               	movlw	low STR_48
 35985  0099BE  6F77               	movwf	i2printf@fmt& (0+255),b
 35986  0099C0  0EFF               	movlw	high STR_48
 35987  0099C2  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 35988  0099C4  0060  F16C  F079   	movff	i2SetSV1@value,?i2_printf+2
 35989  0099CA  6B7A               	clrf	(?i2_printf+3)& (0+255),b
 35990  0099CC  EC07  F04E         	call	i2_printf	;wreg free
 35991  0099D0                     i2l18917:
 35992                           
 35993                           ;monitor.c: 893:     last = value;
 35994  0099D0  0060  F16C  F0F1   	movff	i2SetSV1@value,SetSV1@last
 35995                           
 35996                           ;monitor.c: 894:     normalSV1 = value;
 35997  0099D6  0060  F16C  F29F   	movff	i2SetSV1@value,_normalSV1
 35998  0099DC  0012               	return		;funcret
 35999  0099DE                     __end_ofi2_SetSV1:
 36000                           	opt callstack 0
 36001                           
 36002 ;; *************** function i2_SetCalibrateState *****************
 36003 ;; Defined at:
 36004 ;;		line 245 in file "monitor.c"
 36005 ;; Parameters:    Size  Location     Type
 36006 ;;  calib           1    wreg     _Bool 
 36007 ;; Auto vars:     Size  Location     Type
 36008 ;;  calib           1   90[COMRAM] _Bool 
 36009 ;; Return value:  Size  Location     Type
 36010 ;;                  1    wreg      void 
 36011 ;; Registers used:
 36012 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36013 ;; Tracked objects:
 36014 ;;		On entry : 3D/2
 36015 ;;		On exit  : 3F/2
 36016 ;;		Unchanged: 0/0
 36017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36019 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36021 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36022 ;;Total ram usage:        1 bytes
 36023 ;; Hardware stack levels used:    1
 36024 ;; Hardware stack levels required when called:    9
 36025 ;; This function calls:
 36026 ;;		i2_ClearVars
 36027 ;;		i2_GetPressureV_pa
 36028 ;;		i2_GetPressure_pa
 36029 ;;		i2_TMR0_StartTimer
 36030 ;;		i2_TMR0_StopTimer
 36031 ;;		i2_UnDisplayCalibrate
 36032 ;;		i2___awdiv
 36033 ;;		i2_printf
 36034 ;; This function is called by:
 36035 ;;		_UpdateState
 36036 ;; This function uses a non-reentrant model
 36037 ;;
 36038                           
 36039                           	psect	text273
 36040  0062B8                     __ptext273:
 36041                           	opt callstack 0
 36042  0062B8                     i2_SetCalibrateState:
 36043                           	opt callstack 3
 36044                           
 36045                           ;incstack = 0
 36046                           ;i2SetCalibrateState@calib stored from wreg
 36047  0062B8  6E5B               	movwf	i2SetCalibrateState@calib^0,c
 36048                           
 36049                           ;monitor.c: 246:     TMR0_StopTimer();
 36050  0062BA  EC6D  F053         	call	i2_TMR0_StopTimer	;wreg free
 36051                           
 36052                           ;monitor.c: 247:     if (calib) {
 36053  0062BE  505B               	movf	i2SetCalibrateState@calib^0,w,c
 36054  0062C0  B4D8               	btfsc	status,2,c
 36055  0062C2  D006               	goto	i2l18893
 36056                           
 36057                           ;monitor.c: 249:         state = 1;
 36058  0062C4  0E00               	movlw	0
 36059  0062C6  0101               	movlb	1	; () banked
 36060  0062C8  6FE0               	movwf	(_state+1)& (0+255),b
 36061  0062CA  0E01               	movlw	1
 36062  0062CC  6FDF               	movwf	_state& (0+255),b
 36063                           
 36064                           ;monitor.c: 250:     } else {
 36065  0062CE  D082               	goto	i2l18903
 36066  0062D0                     i2l18893:
 36067                           
 36068                           ;monitor.c: 261:         if (state == 1) {
 36069  0062D0  0101               	movlb	1	; () banked
 36070  0062D2  05DF               	decf	_state& (0+255),w,b
 36071  0062D4  11E0               	iorwf	(_state+1)& (0+255),w,b
 36072  0062D6  A4D8               	btfss	status,2,c
 36073  0062D8  D07B               	goto	i2l18901
 36074                           
 36075                           ; BSR set to: 1
 36076                           ;monitor.c: 262:             printf("\r\nPreCalib: Pres:%d Off:%d //Volume pres:%d Off:%
      +                          d\r\n", GetPressure_pa(), adcOffset/8, GetPressureV_pa(), adcVOffset/8);
 36077  0062DA  0E05               	movlw	low STR_40
 36078  0062DC  0100               	movlb	0	; () banked
 36079  0062DE  6F77               	movwf	i2printf@fmt& (0+255),b
 36080  0062E0  0EFD               	movlw	high STR_40
 36081  0062E2  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 36082  0062E4  EC92  F025         	call	i2_GetPressure_pa	;wreg free
 36083  0062E8  0060  F06C  F079   	movff	?i2_GetPressure_pa,?i2_printf+2
 36084  0062EE  0060  F070  F07A   	movff	?i2_GetPressure_pa+1,?i2_printf+3
 36085  0062F4  0060  F7D8  F007   	movff	_adcOffset,i2___awdiv@dividend
 36086  0062FA  0060  F7DC  F008   	movff	_adcOffset+1,i2___awdiv@dividend+1
 36087  006300  0E00               	movlw	0
 36088  006302  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 36089  006304  0E08               	movlw	8
 36090  006306  6E09               	movwf	i2___awdiv@divisor^0,c
 36091  006308  ECFD  F03F         	call	i2___awdiv	;wreg free
 36092  00630C  0060  F01C  F07B   	movff	?i2___awdiv,?i2_printf+4
 36093  006312  0060  F020  F07C   	movff	?i2___awdiv+1,?i2_printf+5
 36094  006318  EC3F  F03B         	call	i2_GetPressureV_pa	;wreg free
 36095  00631C  0060  F03C  F07D   	movff	?i2_GetPressureV_pa,?i2_printf+6
 36096  006322  0060  F040  F07E   	movff	?i2_GetPressureV_pa+1,?i2_printf+7
 36097  006328  0060  F7D0  F007   	movff	_adcVOffset,i2___awdiv@dividend
 36098  00632E  0060  F7D4  F008   	movff	_adcVOffset+1,i2___awdiv@dividend+1
 36099  006334  0E00               	movlw	0
 36100  006336  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 36101  006338  0E08               	movlw	8
 36102  00633A  6E09               	movwf	i2___awdiv@divisor^0,c
 36103  00633C  ECFD  F03F         	call	i2___awdiv	;wreg free
 36104  006340  0060  F01C  F07F   	movff	?i2___awdiv,?i2_printf+8
 36105  006346  0060  F020  F080   	movff	?i2___awdiv+1,?i2_printf+9
 36106  00634C  EC07  F04E         	call	i2_printf	;wreg free
 36107                           
 36108                           ; BSR set to: 2
 36109                           ;monitor.c: 263:             state = 0;
 36110  006350  0E00               	movlw	0
 36111  006352  0101               	movlb	1	; () banked
 36112  006354  6FE0               	movwf	(_state+1)& (0+255),b
 36113  006356  0E00               	movlw	0
 36114  006358  6FDF               	movwf	_state& (0+255),b
 36115                           
 36116                           ; BSR set to: 1
 36117                           ;monitor.c: 264:             printf("\r\nCalibrated: Pres:%d Off:%d //Volume pres:%d Off
      +                          :%d\r\n", GetPressure_pa(), adcOffset/8, GetPressureV_pa(), adcVOffset/8);
 36118  00635A  0E98               	movlw	low STR_41
 36119  00635C  0100               	movlb	0	; () banked
 36120  00635E  6F77               	movwf	i2printf@fmt& (0+255),b
 36121  006360  0EFC               	movlw	high STR_41
 36122  006362  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 36123  006364  EC92  F025         	call	i2_GetPressure_pa	;wreg free
 36124  006368  0060  F06C  F079   	movff	?i2_GetPressure_pa,?i2_printf+2
 36125  00636E  0060  F070  F07A   	movff	?i2_GetPressure_pa+1,?i2_printf+3
 36126  006374  0060  F7D8  F007   	movff	_adcOffset,i2___awdiv@dividend
 36127  00637A  0060  F7DC  F008   	movff	_adcOffset+1,i2___awdiv@dividend+1
 36128  006380  0E00               	movlw	0
 36129  006382  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 36130  006384  0E08               	movlw	8
 36131  006386  6E09               	movwf	i2___awdiv@divisor^0,c
 36132  006388  ECFD  F03F         	call	i2___awdiv	;wreg free
 36133  00638C  0060  F01C  F07B   	movff	?i2___awdiv,?i2_printf+4
 36134  006392  0060  F020  F07C   	movff	?i2___awdiv+1,?i2_printf+5
 36135  006398  EC3F  F03B         	call	i2_GetPressureV_pa	;wreg free
 36136  00639C  0060  F03C  F07D   	movff	?i2_GetPressureV_pa,?i2_printf+6
 36137  0063A2  0060  F040  F07E   	movff	?i2_GetPressureV_pa+1,?i2_printf+7
 36138  0063A8  0060  F7D0  F007   	movff	_adcVOffset,i2___awdiv@dividend
 36139  0063AE  0060  F7D4  F008   	movff	_adcVOffset+1,i2___awdiv@dividend+1
 36140  0063B4  0E00               	movlw	0
 36141  0063B6  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 36142  0063B8  0E08               	movlw	8
 36143  0063BA  6E09               	movwf	i2___awdiv@divisor^0,c
 36144  0063BC  ECFD  F03F         	call	i2___awdiv	;wreg free
 36145  0063C0  0060  F01C  F07F   	movff	?i2___awdiv,?i2_printf+8
 36146  0063C6  0060  F020  F080   	movff	?i2___awdiv+1,?i2_printf+9
 36147  0063CC  EC07  F04E         	call	i2_printf	;wreg free
 36148  0063D0                     i2l18901:
 36149                           
 36150                           ;monitor.c: 266:         UnDisplayCalibrate();
 36151  0063D0  ECAC  F051         	call	i2_UnDisplayCalibrate	;wreg free
 36152  0063D4                     i2l18903:
 36153                           
 36154                           ;monitor.c: 268:     ClearVars();
 36155  0063D4  ECB5  F021         	call	i2_ClearVars	;wreg free
 36156                           
 36157                           ; BSR set to: 2
 36158                           ;monitor.c: 269:     TMR0_StartTimer();
 36159  0063D8  EC6F  F053         	call	i2_TMR0_StartTimer	;wreg free
 36160                           
 36161                           ; BSR set to: 2
 36162  0063DC  0012               	return		;funcret
 36163  0063DE                     __end_ofi2_SetCalibrateState:
 36164                           	opt callstack 0
 36165                           
 36166 ;; *************** function i2_UnDisplayCalibrate *****************
 36167 ;; Defined at:
 36168 ;;		line 61 in file "display.c"
 36169 ;; Parameters:    Size  Location     Type
 36170 ;;		None
 36171 ;; Auto vars:     Size  Location     Type
 36172 ;;		None
 36173 ;; Return value:  Size  Location     Type
 36174 ;;                  1    wreg      void 
 36175 ;; Registers used:
 36176 ;;		wreg, status,2
 36177 ;; Tracked objects:
 36178 ;;		On entry : 3C/1
 36179 ;;		On exit  : 3F/3
 36180 ;;		Unchanged: 0/0
 36181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36186 ;;Total ram usage:        0 bytes
 36187 ;; Hardware stack levels used:    1
 36188 ;; This function calls:
 36189 ;;		Nothing
 36190 ;; This function is called by:
 36191 ;;		i2_SetCalibrateState
 36192 ;; This function uses a non-reentrant model
 36193 ;;
 36194                           
 36195                           	psect	text274
 36196  00A358                     __ptext274:
 36197                           	opt callstack 0
 36198  00A358                     i2_UnDisplayCalibrate:
 36199                           	opt callstack 11
 36200                           
 36201                           ;display.c: 62:     calibrate=0;
 36202                           
 36203                           ; BSR set to: 2
 36204                           ;incstack = 0
 36205  00A358  0E00               	movlw	0
 36206  00A35A  0100               	movlb	0	; () banked
 36207  00A35C  6FFF               	movwf	_calibrate& (0+255),b
 36208                           
 36209                           ;display.c: 63:     msg4[0]=0;
 36210  00A35E  0E00               	movlw	0
 36211  00A360  0103               	movlb	3	; () banked
 36212  00A362  6FA9               	movwf	_msg4& (0+255),b
 36213                           
 36214                           ; BSR set to: 3
 36215  00A364  0012               	return		;funcret
 36216  00A366                     __end_ofi2_UnDisplayCalibrate:
 36217                           	opt callstack 0
 36218                           
 36219 ;; *************** function i2_TMR0_StopTimer *****************
 36220 ;; Defined at:
 36221 ;;		line 93 in file "mcc_generated_files/tmr0.c"
 36222 ;; Parameters:    Size  Location     Type
 36223 ;;		None
 36224 ;; Auto vars:     Size  Location     Type
 36225 ;;		None
 36226 ;; Return value:  Size  Location     Type
 36227 ;;                  1    wreg      void 
 36228 ;; Registers used:
 36229 ;;		None
 36230 ;; Tracked objects:
 36231 ;;		On entry : 0/2
 36232 ;;		On exit  : 0/0
 36233 ;;		Unchanged: 0/0
 36234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36239 ;;Total ram usage:        0 bytes
 36240 ;; Hardware stack levels used:    1
 36241 ;; This function calls:
 36242 ;;		Nothing
 36243 ;; This function is called by:
 36244 ;;		i2_SetCalibrateState
 36245 ;; This function uses a non-reentrant model
 36246 ;;
 36247                           
 36248                           	psect	text275
 36249  00A6DA                     __ptext275:
 36250                           	opt callstack 0
 36251  00A6DA                     i2_TMR0_StopTimer:
 36252                           	opt callstack 11
 36253                           
 36254                           ;mcc_generated_files/tmr0.c: 96:     T0CON0bits.T0EN = 0;
 36255                           
 36256                           ; BSR set to: 3
 36257                           ;incstack = 0
 36258  00A6DA  9EB8               	bcf	184,7,c	;volatile
 36259  00A6DC  0012               	return		;funcret
 36260  00A6DE                     __end_ofi2_TMR0_StopTimer:
 36261                           	opt callstack 0
 36262                           
 36263 ;; *************** function i2_TMR0_StartTimer *****************
 36264 ;; Defined at:
 36265 ;;		line 87 in file "mcc_generated_files/tmr0.c"
 36266 ;; Parameters:    Size  Location     Type
 36267 ;;		None
 36268 ;; Auto vars:     Size  Location     Type
 36269 ;;		None
 36270 ;; Return value:  Size  Location     Type
 36271 ;;                  1    wreg      void 
 36272 ;; Registers used:
 36273 ;;		None
 36274 ;; Tracked objects:
 36275 ;;		On entry : 3F/2
 36276 ;;		On exit  : 3F/2
 36277 ;;		Unchanged: 3F/0
 36278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36283 ;;Total ram usage:        0 bytes
 36284 ;; Hardware stack levels used:    1
 36285 ;; This function calls:
 36286 ;;		Nothing
 36287 ;; This function is called by:
 36288 ;;		i2_SetCalibrateState
 36289 ;; This function uses a non-reentrant model
 36290 ;;
 36291                           
 36292                           	psect	text276
 36293  00A6DE                     __ptext276:
 36294                           	opt callstack 0
 36295  00A6DE                     i2_TMR0_StartTimer:
 36296                           	opt callstack 11
 36297                           
 36298                           ; BSR set to: 2
 36299                           ;mcc_generated_files/tmr0.c: 90:     T0CON0bits.T0EN = 1;
 36300                           
 36301                           ;incstack = 0
 36302  00A6DE  8EB8               	bsf	184,7,c	;volatile
 36303                           
 36304                           ; BSR set to: 2
 36305  00A6E0  0012               	return		;funcret
 36306  00A6E2                     __end_ofi2_TMR0_StartTimer:
 36307                           	opt callstack 0
 36308                           
 36309 ;; *************** function i2_GetPressure_pa *****************
 36310 ;; Defined at:
 36311 ;;		line 787 in file "monitor.c"
 36312 ;; Parameters:    Size  Location     Type
 36313 ;;		None
 36314 ;; Auto vars:     Size  Location     Type
 36315 ;;  GetPressure_    4   38[COMRAM] long 
 36316 ;;  GetPressure_    4   30[COMRAM] long 
 36317 ;;  GetPressure_    2   36[COMRAM] short 
 36318 ;;  GetPressure_    2   34[COMRAM] unsigned short 
 36319 ;; Return value:  Size  Location     Type
 36320 ;;                  2   26[COMRAM] short 
 36321 ;; Registers used:
 36322 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36323 ;; Tracked objects:
 36324 ;;		On entry : 3E/1
 36325 ;;		On exit  : 0/0
 36326 ;;		Unchanged: 0/0
 36327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36328 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36329 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36330 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36331 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36332 ;;Total ram usage:       16 bytes
 36333 ;; Hardware stack levels used:    1
 36334 ;; Hardware stack levels required when called:    2
 36335 ;; This function calls:
 36336 ;;		i2_AdcGetData
 36337 ;;		i2___aldiv
 36338 ;;		i2___awdiv
 36339 ;;		i2___lmul
 36340 ;; This function is called by:
 36341 ;;		_MonitorPressureTask
 36342 ;;		_GetPressure_mbar02
 36343 ;;		i2_SetCalibrateState
 36344 ;; This function uses a non-reentrant model
 36345 ;;
 36346                           
 36347                           	psect	text277
 36348  004B24                     __ptext277:
 36349                           	opt callstack 0
 36350  004B24                     i2_GetPressure_pa:
 36351                           	opt callstack 12
 36352                           
 36353                           ;monitor.c: 788:     adc_result_t adc = AdcGetData(0);
 36354                           
 36355                           ; BSR set to: 2
 36356                           ;incstack = 0
 36357  004B24  0E00               	movlw	0
 36358  004B26  6E08               	movwf	(i2AdcGetData@id+1)^0,c
 36359  004B28  0E00               	movlw	0
 36360  004B2A  6E07               	movwf	i2AdcGetData@id^0,c
 36361  004B2C  ECE8  F044         	call	i2_AdcGetData	;wreg free
 36362  004B30  0060  F01C  F023   	movff	?i2_AdcGetData,i2GetPressure_pa@adc
 36363  004B36  0060  F020  F024   	movff	?i2_AdcGetData+1,i2GetPressure_pa@adc+1
 36364                           
 36365                           ;monitor.c: 789:     if (state == 1) {
 36366  004B3C  0101               	movlb	1	; () banked
 36367  004B3E  05DF               	decf	_state& (0+255),w,b
 36368  004B40  11E0               	iorwf	(_state+1)& (0+255),w,b
 36369  004B42  A4D8               	btfss	status,2,c
 36370  004B44  D007               	goto	i2l18541
 36371                           
 36372                           ; BSR set to: 1
 36373                           ;monitor.c: 790:         return adc;
 36374  004B46  0060  F08C  F01B   	movff	i2GetPressure_pa@adc,?i2_GetPressure_pa
 36375  004B4C  0060  F090  F01C   	movff	i2GetPressure_pa@adc+1,?i2_GetPressure_pa+1
 36376  004B52  0012               	return	
 36377  004B54                     i2l18541:
 36378                           
 36379                           ; BSR set to: 1
 36380                           ;monitor.c: 793:     int32_t mv = adc - adcOffset/8;
 36381  004B54  0060  F7D8  F007   	movff	_adcOffset,i2___awdiv@dividend
 36382  004B5A  0060  F7DC  F008   	movff	_adcOffset+1,i2___awdiv@dividend+1
 36383  004B60  0E00               	movlw	0
 36384  004B62  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 36385  004B64  0E08               	movlw	8
 36386  004B66  6E09               	movwf	i2___awdiv@divisor^0,c
 36387  004B68  ECFD  F03F         	call	i2___awdiv	;wreg free
 36388  004B6C  0060  F08C  F01D   	movff	i2GetPressure_pa@adc,??i2_GetPressure_pa
 36389  004B72  0060  F090  F01E   	movff	i2GetPressure_pa@adc+1,??i2_GetPressure_pa+1
 36390  004B78  5007               	movf	?i2___awdiv^0,w,c
 36391  004B7A  5E1D               	subwf	??i2_GetPressure_pa^0,f,c
 36392  004B7C  5008               	movf	(?i2___awdiv+1)^0,w,c
 36393  004B7E  5A1E               	subwfb	(??i2_GetPressure_pa+1)^0,f,c
 36394  004B80  0060  F074  F027   	movff	??i2_GetPressure_pa,i2GetPressure_pa@mv
 36395  004B86  0060  F078  F028   	movff	??i2_GetPressure_pa+1,i2GetPressure_pa@mv+1
 36396  004B8C  6A29               	clrf	(i2GetPressure_pa@mv+2)^0,c
 36397  004B8E  6A2A               	clrf	(i2GetPressure_pa@mv+3)^0,c
 36398                           
 36399                           ;monitor.c: 794:     mv = (mv < 0) ? 0 : mv;
 36400  004B90  AE2A               	btfss	(i2GetPressure_pa@mv+3)^0,7,c
 36401  004B92  D008               	goto	i2l18549
 36402  004B94  0E00               	movlw	0
 36403  004B96  6E27               	movwf	i2GetPressure_pa@mv^0,c
 36404  004B98  0E00               	movlw	0
 36405  004B9A  6E28               	movwf	(i2GetPressure_pa@mv+1)^0,c
 36406  004B9C  0E00               	movlw	0
 36407  004B9E  6E29               	movwf	(i2GetPressure_pa@mv+2)^0,c
 36408  004BA0  0E00               	movlw	0
 36409  004BA2  6E2A               	movwf	(i2GetPressure_pa@mv+3)^0,c
 36410  004BA4                     i2l18549:
 36411                           
 36412                           ;monitor.c: 795:     mv = ( mv * 625 )/ 512;
 36413  004BA4  0060  F09C  F001   	movff	i2GetPressure_pa@mv,i2___lmul@multiplier
 36414  004BAA  0060  F0A0  F002   	movff	i2GetPressure_pa@mv+1,i2___lmul@multiplier+1
 36415  004BB0  0060  F0A4  F003   	movff	i2GetPressure_pa@mv+2,i2___lmul@multiplier+2
 36416  004BB6  0060  F0A8  F004   	movff	i2GetPressure_pa@mv+3,i2___lmul@multiplier+3
 36417  004BBC  0E71               	movlw	113
 36418  004BBE  6E05               	movwf	i2___lmul@multiplicand^0,c
 36419  004BC0  0E02               	movlw	2
 36420  004BC2  6E06               	movwf	(i2___lmul@multiplicand+1)^0,c
 36421  004BC4  0E00               	movlw	0
 36422  004BC6  6E07               	movwf	(i2___lmul@multiplicand+2)^0,c
 36423  004BC8  0E00               	movlw	0
 36424  004BCA  6E08               	movwf	(i2___lmul@multiplicand+3)^0,c
 36425  004BCC  ECDE  F045         	call	i2___lmul	;wreg free
 36426  004BD0  0060  F004  F00D   	movff	?i2___lmul,i2___aldiv@dividend
 36427  004BD6  0060  F008  F00E   	movff	?i2___lmul+1,i2___aldiv@dividend+1
 36428  004BDC  0060  F00C  F00F   	movff	?i2___lmul+2,i2___aldiv@dividend+2
 36429  004BE2  0060  F010  F010   	movff	?i2___lmul+3,i2___aldiv@dividend+3
 36430  004BE8  0E00               	movlw	0
 36431  004BEA  6E11               	movwf	i2___aldiv@divisor^0,c
 36432  004BEC  0E02               	movlw	2
 36433  004BEE  6E12               	movwf	(i2___aldiv@divisor+1)^0,c
 36434  004BF0  0E00               	movlw	0
 36435  004BF2  6E13               	movwf	(i2___aldiv@divisor+2)^0,c
 36436  004BF4  0E00               	movlw	0
 36437  004BF6  6E14               	movwf	(i2___aldiv@divisor+3)^0,c
 36438  004BF8  EC3A  F036         	call	i2___aldiv	;wreg free
 36439  004BFC  0060  F034  F027   	movff	?i2___aldiv,i2GetPressure_pa@mv
 36440  004C02  0060  F038  F028   	movff	?i2___aldiv+1,i2GetPressure_pa@mv+1
 36441  004C08  0060  F03C  F029   	movff	?i2___aldiv+2,i2GetPressure_pa@mv+2
 36442  004C0E  0060  F040  F02A   	movff	?i2___aldiv+3,i2GetPressure_pa@mv+3
 36443                           
 36444                           ;monitor.c: 797:     int32_t p32 = (mv*20)/9;
 36445  004C14  0060  F09C  F001   	movff	i2GetPressure_pa@mv,i2___lmul@multiplier
 36446  004C1A  0060  F0A0  F002   	movff	i2GetPressure_pa@mv+1,i2___lmul@multiplier+1
 36447  004C20  0060  F0A4  F003   	movff	i2GetPressure_pa@mv+2,i2___lmul@multiplier+2
 36448  004C26  0060  F0A8  F004   	movff	i2GetPressure_pa@mv+3,i2___lmul@multiplier+3
 36449  004C2C  0E14               	movlw	20
 36450  004C2E  6E05               	movwf	i2___lmul@multiplicand^0,c
 36451  004C30  0E00               	movlw	0
 36452  004C32  6E06               	movwf	(i2___lmul@multiplicand+1)^0,c
 36453  004C34  0E00               	movlw	0
 36454  004C36  6E07               	movwf	(i2___lmul@multiplicand+2)^0,c
 36455  004C38  0E00               	movlw	0
 36456  004C3A  6E08               	movwf	(i2___lmul@multiplicand+3)^0,c
 36457  004C3C  ECDE  F045         	call	i2___lmul	;wreg free
 36458  004C40  0060  F004  F00D   	movff	?i2___lmul,i2___aldiv@dividend
 36459  004C46  0060  F008  F00E   	movff	?i2___lmul+1,i2___aldiv@dividend+1
 36460  004C4C  0060  F00C  F00F   	movff	?i2___lmul+2,i2___aldiv@dividend+2
 36461  004C52  0060  F010  F010   	movff	?i2___lmul+3,i2___aldiv@dividend+3
 36462  004C58  0E09               	movlw	9
 36463  004C5A  6E11               	movwf	i2___aldiv@divisor^0,c
 36464  004C5C  0E00               	movlw	0
 36465  004C5E  6E12               	movwf	(i2___aldiv@divisor+1)^0,c
 36466  004C60  0E00               	movlw	0
 36467  004C62  6E13               	movwf	(i2___aldiv@divisor+2)^0,c
 36468  004C64  0E00               	movlw	0
 36469  004C66  6E14               	movwf	(i2___aldiv@divisor+3)^0,c
 36470  004C68  EC3A  F036         	call	i2___aldiv	;wreg free
 36471  004C6C  0060  F034  F01F   	movff	?i2___aldiv,i2GetPressure_pa@p32
 36472  004C72  0060  F038  F020   	movff	?i2___aldiv+1,i2GetPressure_pa@p32+1
 36473  004C78  0060  F03C  F021   	movff	?i2___aldiv+2,i2GetPressure_pa@p32+2
 36474  004C7E  0060  F040  F022   	movff	?i2___aldiv+3,i2GetPressure_pa@p32+3
 36475                           
 36476                           ;monitor.c: 798:     int16_t p = ((int16_t) p32);
 36477  004C84  0060  F07C  F025   	movff	i2GetPressure_pa@p32,i2GetPressure_pa@p
 36478  004C8A  0060  F080  F026   	movff	i2GetPressure_pa@p32+1,i2GetPressure_pa@p+1
 36479                           
 36480                           ;monitor.c: 799:     if (p<0) p=0;
 36481  004C90  AE26               	btfss	(i2GetPressure_pa@p+1)^0,7,c
 36482  004C92  D004               	goto	i2l18559
 36483  004C94  0E00               	movlw	0
 36484  004C96  6E26               	movwf	(i2GetPressure_pa@p+1)^0,c
 36485  004C98  0E00               	movlw	0
 36486  004C9A  6E25               	movwf	i2GetPressure_pa@p^0,c
 36487  004C9C                     i2l18559:
 36488                           
 36489                           ;monitor.c: 800:     return p;
 36490  004C9C  0060  F094  F01B   	movff	i2GetPressure_pa@p,?i2_GetPressure_pa
 36491  004CA2  0060  F098  F01C   	movff	i2GetPressure_pa@p+1,?i2_GetPressure_pa+1
 36492  004CA8  0012               	return		;funcret
 36493  004CAA                     __end_ofi2_GetPressure_pa:
 36494                           	opt callstack 0
 36495                           
 36496 ;; *************** function i2___lmul *****************
 36497 ;; Defined at:
 36498 ;;		line 15 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/Umul32.c"
 36499 ;; Parameters:    Size  Location     Type
 36500 ;;  multiplier      4    0[COMRAM] unsigned long 
 36501 ;;  multiplicand    4    4[COMRAM] unsigned long 
 36502 ;; Auto vars:     Size  Location     Type
 36503 ;;  __lmul          4    8[COMRAM] unsigned long 
 36504 ;; Return value:  Size  Location     Type
 36505 ;;                  4    0[COMRAM] unsigned long 
 36506 ;; Registers used:
 36507 ;;		wreg, status,2, status,0
 36508 ;; Tracked objects:
 36509 ;;		On entry : 0/0
 36510 ;;		On exit  : 0/0
 36511 ;;		Unchanged: 0/0
 36512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36513 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36514 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36516 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36517 ;;Total ram usage:       12 bytes
 36518 ;; Hardware stack levels used:    1
 36519 ;; This function calls:
 36520 ;;		Nothing
 36521 ;; This function is called by:
 36522 ;;		i2_GetPressure_pa
 36523 ;;		i2_See12V
 36524 ;; This function uses a non-reentrant model
 36525 ;;
 36526                           
 36527                           	psect	text278
 36528  008BBC                     __ptext278:
 36529                           	opt callstack 0
 36530  008BBC                     i2___lmul:
 36531                           	opt callstack 13
 36532                           
 36533                           ;incstack = 0
 36534  008BBC  0E00               	movlw	0
 36535  008BBE  6E09               	movwf	i2___lmul@product^0,c
 36536  008BC0  0E00               	movlw	0
 36537  008BC2  6E0A               	movwf	(i2___lmul@product+1)^0,c
 36538  008BC4  0E00               	movlw	0
 36539  008BC6  6E0B               	movwf	(i2___lmul@product+2)^0,c
 36540  008BC8  0E00               	movlw	0
 36541  008BCA  6E0C               	movwf	(i2___lmul@product+3)^0,c
 36542  008BCC                     i2l18185:
 36543  008BCC  A001               	btfss	i2___lmul@multiplier^0,0,c
 36544  008BCE  D008               	goto	i2l18189
 36545  008BD0  5005               	movf	i2___lmul@multiplicand^0,w,c
 36546  008BD2  2609               	addwf	i2___lmul@product^0,f,c
 36547  008BD4  5006               	movf	(i2___lmul@multiplicand+1)^0,w,c
 36548  008BD6  220A               	addwfc	(i2___lmul@product+1)^0,f,c
 36549  008BD8  5007               	movf	(i2___lmul@multiplicand+2)^0,w,c
 36550  008BDA  220B               	addwfc	(i2___lmul@product+2)^0,f,c
 36551  008BDC  5008               	movf	(i2___lmul@multiplicand+3)^0,w,c
 36552  008BDE  220C               	addwfc	(i2___lmul@product+3)^0,f,c
 36553  008BE0                     i2l18189:
 36554  008BE0  90D8               	bcf	status,0,c
 36555  008BE2  3605               	rlcf	i2___lmul@multiplicand^0,f,c
 36556  008BE4  3606               	rlcf	(i2___lmul@multiplicand+1)^0,f,c
 36557  008BE6  3607               	rlcf	(i2___lmul@multiplicand+2)^0,f,c
 36558  008BE8  3608               	rlcf	(i2___lmul@multiplicand+3)^0,f,c
 36559  008BEA  90D8               	bcf	status,0,c
 36560  008BEC  3204               	rrcf	(i2___lmul@multiplier+3)^0,f,c
 36561  008BEE  3203               	rrcf	(i2___lmul@multiplier+2)^0,f,c
 36562  008BF0  3202               	rrcf	(i2___lmul@multiplier+1)^0,f,c
 36563  008BF2  3201               	rrcf	i2___lmul@multiplier^0,f,c
 36564  008BF4  5001               	movf	i2___lmul@multiplier^0,w,c
 36565  008BF6  1002               	iorwf	(i2___lmul@multiplier+1)^0,w,c
 36566  008BF8  1003               	iorwf	(i2___lmul@multiplier+2)^0,w,c
 36567  008BFA  1004               	iorwf	(i2___lmul@multiplier+3)^0,w,c
 36568  008BFC  A4D8               	btfss	status,2,c
 36569  008BFE  D7E6               	goto	i2l18185
 36570  008C00  0060  F024  F001   	movff	i2___lmul@product,?i2___lmul
 36571  008C06  0060  F028  F002   	movff	i2___lmul@product+1,?i2___lmul+1
 36572  008C0C  0060  F02C  F003   	movff	i2___lmul@product+2,?i2___lmul+2
 36573  008C12  0060  F030  F004   	movff	i2___lmul@product+3,?i2___lmul+3
 36574  008C18  0012               	return		;funcret
 36575  008C1A                     __end_ofi2___lmul:
 36576                           	opt callstack 0
 36577                           
 36578 ;; *************** function i2_GetPressureV_pa *****************
 36579 ;; Defined at:
 36580 ;;		line 814 in file "monitor.c"
 36581 ;; Parameters:    Size  Location     Type
 36582 ;;		None
 36583 ;; Auto vars:     Size  Location     Type
 36584 ;;  GetPressureV    4   20[COMRAM] long 
 36585 ;;  GetPressureV    2   24[COMRAM] short 
 36586 ;;  GetPressureV    2   18[COMRAM] unsigned short 
 36587 ;; Return value:  Size  Location     Type
 36588 ;;                  2   14[COMRAM] short 
 36589 ;; Registers used:
 36590 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36591 ;; Tracked objects:
 36592 ;;		On entry : 0/1
 36593 ;;		On exit  : 0/0
 36594 ;;		Unchanged: 0/0
 36595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36596 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36597 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36598 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36599 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36600 ;;Total ram usage:       12 bytes
 36601 ;; Hardware stack levels used:    1
 36602 ;; Hardware stack levels required when called:    2
 36603 ;; This function calls:
 36604 ;;		i2_AdcGetData
 36605 ;;		i2___awdiv
 36606 ;; This function is called by:
 36607 ;;		_MonitorPressureTask
 36608 ;;		i2_SetCalibrateState
 36609 ;; This function uses a non-reentrant model
 36610 ;;
 36611                           
 36612                           	psect	text279
 36613  00767E                     __ptext279:
 36614                           	opt callstack 0
 36615  00767E                     i2_GetPressureV_pa:
 36616                           	opt callstack 12
 36617                           
 36618                           ;monitor.c: 816:     adc_result_t adcv = AdcGetData(2);
 36619                           
 36620                           ;incstack = 0
 36621  00767E  0E00               	movlw	0
 36622  007680  6E08               	movwf	(i2AdcGetData@id+1)^0,c
 36623  007682  0E02               	movlw	2
 36624  007684  6E07               	movwf	i2AdcGetData@id^0,c
 36625  007686  ECE8  F044         	call	i2_AdcGetData	;wreg free
 36626  00768A  0060  F01C  F013   	movff	?i2_AdcGetData,i2GetPressureV_pa@adcv
 36627  007690  0060  F020  F014   	movff	?i2_AdcGetData+1,i2GetPressureV_pa@adcv+1
 36628                           
 36629                           ;monitor.c: 817:     if (state == 1) {
 36630  007696  0101               	movlb	1	; () banked
 36631  007698  05DF               	decf	_state& (0+255),w,b
 36632  00769A  11E0               	iorwf	(_state+1)& (0+255),w,b
 36633  00769C  A4D8               	btfss	status,2,c
 36634  00769E  D007               	goto	i2l18569
 36635                           
 36636                           ; BSR set to: 1
 36637                           ;monitor.c: 818:         return adcv;
 36638  0076A0  0060  F04C  F00F   	movff	i2GetPressureV_pa@adcv,?i2_GetPressureV_pa
 36639  0076A6  0060  F050  F010   	movff	i2GetPressureV_pa@adcv+1,?i2_GetPressureV_pa+1
 36640  0076AC  0012               	return	
 36641  0076AE                     i2l18569:
 36642                           
 36643                           ; BSR set to: 1
 36644                           ;monitor.c: 821:     int32_t mv = adcv - adcVOffset/8;
 36645  0076AE  0060  F7D0  F007   	movff	_adcVOffset,i2___awdiv@dividend
 36646  0076B4  0060  F7D4  F008   	movff	_adcVOffset+1,i2___awdiv@dividend+1
 36647  0076BA  0E00               	movlw	0
 36648  0076BC  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 36649  0076BE  0E08               	movlw	8
 36650  0076C0  6E09               	movwf	i2___awdiv@divisor^0,c
 36651  0076C2  ECFD  F03F         	call	i2___awdiv	;wreg free
 36652  0076C6  0060  F04C  F011   	movff	i2GetPressureV_pa@adcv,??i2_GetPressureV_pa
 36653  0076CC  0060  F050  F012   	movff	i2GetPressureV_pa@adcv+1,??i2_GetPressureV_pa+1
 36654  0076D2  5007               	movf	?i2___awdiv^0,w,c
 36655  0076D4  5E11               	subwf	??i2_GetPressureV_pa^0,f,c
 36656  0076D6  5008               	movf	(?i2___awdiv+1)^0,w,c
 36657  0076D8  5A12               	subwfb	(??i2_GetPressureV_pa+1)^0,f,c
 36658  0076DA  0060  F044  F015   	movff	??i2_GetPressureV_pa,i2GetPressureV_pa@mv
 36659  0076E0  0060  F048  F016   	movff	??i2_GetPressureV_pa+1,i2GetPressureV_pa@mv+1
 36660  0076E6  6A17               	clrf	(i2GetPressureV_pa@mv+2)^0,c
 36661  0076E8  6A18               	clrf	(i2GetPressureV_pa@mv+3)^0,c
 36662                           
 36663                           ;monitor.c: 822:     mv = (mv < 0) ? 0 : mv;
 36664  0076EA  AE18               	btfss	(i2GetPressureV_pa@mv+3)^0,7,c
 36665  0076EC  D008               	goto	i2l18577
 36666  0076EE  0E00               	movlw	0
 36667  0076F0  6E15               	movwf	i2GetPressureV_pa@mv^0,c
 36668  0076F2  0E00               	movlw	0
 36669  0076F4  6E16               	movwf	(i2GetPressureV_pa@mv+1)^0,c
 36670  0076F6  0E00               	movlw	0
 36671  0076F8  6E17               	movwf	(i2GetPressureV_pa@mv+2)^0,c
 36672  0076FA  0E00               	movlw	0
 36673  0076FC  6E18               	movwf	(i2GetPressureV_pa@mv+3)^0,c
 36674  0076FE                     i2l18577:
 36675                           
 36676                           ;monitor.c: 825:     int16_t p = mv;
 36677  0076FE  0060  F054  F019   	movff	i2GetPressureV_pa@mv,i2GetPressureV_pa@p
 36678  007704  0060  F058  F01A   	movff	i2GetPressureV_pa@mv+1,i2GetPressureV_pa@p+1
 36679                           
 36680                           ;monitor.c: 827:     if (p<0) p=0;
 36681  00770A  AE1A               	btfss	(i2GetPressureV_pa@p+1)^0,7,c
 36682  00770C  D004               	goto	i2l18583
 36683  00770E  0E00               	movlw	0
 36684  007710  6E1A               	movwf	(i2GetPressureV_pa@p+1)^0,c
 36685  007712  0E00               	movlw	0
 36686  007714  6E19               	movwf	i2GetPressureV_pa@p^0,c
 36687  007716                     i2l18583:
 36688                           
 36689                           ;monitor.c: 828:     return p;
 36690  007716  0060  F064  F00F   	movff	i2GetPressureV_pa@p,?i2_GetPressureV_pa
 36691  00771C  0060  F068  F010   	movff	i2GetPressureV_pa@p+1,?i2_GetPressureV_pa+1
 36692  007722  0012               	return		;funcret
 36693  007724                     __end_ofi2_GetPressureV_pa:
 36694                           	opt callstack 0
 36695                           
 36696 ;; *************** function i2_AdcGetData *****************
 36697 ;; Defined at:
 36698 ;;		line 89 in file "monitor.c"
 36699 ;; Parameters:    Size  Location     Type
 36700 ;;  id              2    6[COMRAM] int 
 36701 ;; Auto vars:     Size  Location     Type
 36702 ;;  AdcGetData      2    8[COMRAM] unsigned short 
 36703 ;; Return value:  Size  Location     Type
 36704 ;;                  2    6[COMRAM] unsigned short 
 36705 ;; Registers used:
 36706 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36707 ;; Tracked objects:
 36708 ;;		On entry : 0/1
 36709 ;;		On exit  : 0/0
 36710 ;;		Unchanged: 0/0
 36711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36712 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36713 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36715 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36716 ;;Total ram usage:        4 bytes
 36717 ;; Hardware stack levels used:    1
 36718 ;; Hardware stack levels required when called:    1
 36719 ;; This function calls:
 36720 ;;		i2___wmul
 36721 ;; This function is called by:
 36722 ;;		i2_GetPressure_pa
 36723 ;;		i2_GetPressureV_pa
 36724 ;; This function uses a non-reentrant model
 36725 ;;
 36726                           
 36727                           	psect	text280
 36728  0089D0                     __ptext280:
 36729                           	opt callstack 0
 36730  0089D0                     i2_AdcGetData:
 36731                           	opt callstack 12
 36732                           
 36733                           ;monitor.c: 90:     adc_result_t data;;monitor.c: 91:     data = adcChannels[id].data;
 36734                           
 36735                           ;incstack = 0
 36736  0089D0  0060  F01C  F001   	movff	i2AdcGetData@id,i2___wmul@multiplier
 36737  0089D6  0060  F020  F002   	movff	i2AdcGetData@id+1,i2___wmul@multiplier+1
 36738  0089DC  0E00               	movlw	0
 36739  0089DE  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 36740  0089E0  0E05               	movlw	5
 36741  0089E2  6E03               	movwf	i2___wmul@multiplicand^0,c
 36742  0089E4  EC06  F04D         	call	i2___wmul	;wreg free
 36743  0089E8  0EBE               	movlw	low (_adcChannels+2)
 36744  0089EA  2401               	addwf	?i2___wmul^0,w,c
 36745  0089EC  6ED9               	movwf	fsr2l,c
 36746  0089EE  0E02               	movlw	high (_adcChannels+2)
 36747  0089F0  2002               	addwfc	(?i2___wmul+1)^0,w,c
 36748  0089F2  6EDA               	movwf	fsr2h,c
 36749  0089F4  006F FF78  F009    	movff	postinc2,i2AdcGetData@data
 36750  0089FA  006F FF74  F00A    	movff	postdec2,i2AdcGetData@data+1
 36751                           
 36752                           ;monitor.c: 92:     adcChannels[id].dataValid=0;
 36753  008A00  0060  F01C  F001   	movff	i2AdcGetData@id,i2___wmul@multiplier
 36754  008A06  0060  F020  F002   	movff	i2AdcGetData@id+1,i2___wmul@multiplier+1
 36755  008A0C  0E00               	movlw	0
 36756  008A0E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 36757  008A10  0E05               	movlw	5
 36758  008A12  6E03               	movwf	i2___wmul@multiplicand^0,c
 36759  008A14  EC06  F04D         	call	i2___wmul	;wreg free
 36760  008A18  0EBD               	movlw	low (_adcChannels+1)
 36761  008A1A  2401               	addwf	?i2___wmul^0,w,c
 36762  008A1C  6ED9               	movwf	fsr2l,c
 36763  008A1E  0E02               	movlw	high (_adcChannels+1)
 36764  008A20  2002               	addwfc	(?i2___wmul+1)^0,w,c
 36765  008A22  6EDA               	movwf	fsr2h,c
 36766  008A24  0E00               	movlw	0
 36767  008A26  6EDF               	movwf	indf2,c
 36768                           
 36769                           ;monitor.c: 93:     return data;
 36770  008A28  0060  F024  F007   	movff	i2AdcGetData@data,?i2_AdcGetData
 36771  008A2E  0060  F028  F008   	movff	i2AdcGetData@data+1,?i2_AdcGetData+1
 36772  008A34  0012               	return		;funcret
 36773  008A36                     __end_ofi2_AdcGetData:
 36774                           	opt callstack 0
 36775                           
 36776 ;; *************** function i2_ClearVars *****************
 36777 ;; Defined at:
 36778 ;;		line 692 in file "monitor.c"
 36779 ;; Parameters:    Size  Location     Type
 36780 ;;		None
 36781 ;; Auto vars:     Size  Location     Type
 36782 ;;  ClearVars       2    2[COMRAM] int 
 36783 ;;  ClearVars       2    0[COMRAM] int 
 36784 ;; Return value:  Size  Location     Type
 36785 ;;                  1    wreg      void 
 36786 ;; Registers used:
 36787 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36788 ;; Tracked objects:
 36789 ;;		On entry : 3C/2
 36790 ;;		On exit  : 3F/2
 36791 ;;		Unchanged: 0/0
 36792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36794 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36796 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36797 ;;Total ram usage:        4 bytes
 36798 ;; Hardware stack levels used:    1
 36799 ;; Hardware stack levels required when called:    1
 36800 ;; This function calls:
 36801 ;;		i2_ClearCircuitFailureAlarm
 36802 ;;		i2_ClearEPAboveSetAlarm
 36803 ;;		i2_ClearEPBelowSetAlarm
 36804 ;;		i2_ClearIPAboveSetAlarm
 36805 ;;		i2_ClearIPBelowSetAlarm
 36806 ;; This function is called by:
 36807 ;;		_MonitorPressureTask
 36808 ;;		i2_SetCalibrateState
 36809 ;; This function uses a non-reentrant model
 36810 ;;
 36811                           
 36812                           	psect	text281
 36813  00436A                     __ptext281:
 36814                           	opt callstack 0
 36815  00436A                     i2_ClearVars:
 36816                           	opt callstack 13
 36817                           
 36818                           ;monitor.c: 693:     count = 0;
 36819                           
 36820                           ;incstack = 0
 36821  00436A  0E00               	movlw	0
 36822  00436C  0102               	movlb	2	; () banked
 36823  00436E  6F45               	movwf	(_count+1)& (0+255),b
 36824  004370  0E00               	movlw	0
 36825  004372  6F44               	movwf	_count& (0+255),b
 36826                           
 36827                           ;monitor.c: 694:     tt = 0;
 36828  004374  0E00               	movlw	0
 36829  004376  0100               	movlb	0	; () banked
 36830  004378  6FC8               	movwf	_tt& (0+255),b
 36831  00437A  0E00               	movlw	0
 36832  00437C  6FC9               	movwf	(_tt+1)& (0+255),b
 36833  00437E  0E00               	movlw	0
 36834  004380  6FCA               	movwf	(_tt+2)& (0+255),b
 36835  004382  0E00               	movlw	0
 36836  004384  6FCB               	movwf	(_tt+3)& (0+255),b
 36837                           
 36838                           ;monitor.c: 695:     for (int i=0; i<25; i++) {
 36839  004386  0E00               	movlw	0
 36840  004388  6E02               	movwf	(i2ClearVars@i+1)^0,c
 36841  00438A  0E00               	movlw	0
 36842  00438C  6E01               	movwf	i2ClearVars@i^0,c
 36843  00438E                     i2l18505:
 36844                           
 36845                           ;monitor.c: 696:         prFastBuffer[i] = 0;
 36846  00438E  90D8               	bcf	status,0,c
 36847  004390  3401               	rlcf	i2ClearVars@i^0,w,c
 36848  004392  6ED9               	movwf	fsr2l,c
 36849  004394  3402               	rlcf	(i2ClearVars@i+1)^0,w,c
 36850  004396  6EDA               	movwf	fsr2h,c
 36851  004398  0E00               	movlw	low _prFastBuffer
 36852  00439A  26D9               	addwf	fsr2l,f,c
 36853  00439C  0E04               	movlw	high _prFastBuffer
 36854  00439E  22DA               	addwfc	fsr2h,f,c
 36855  0043A0  0E00               	movlw	0
 36856  0043A2  6EDE               	movwf	postinc2,c
 36857  0043A4  0E00               	movlw	0
 36858  0043A6  6EDD               	movwf	postdec2,c
 36859                           
 36860                           ;monitor.c: 697:         prSlowBuffer[i] = 0;
 36861  0043A8  90D8               	bcf	status,0,c
 36862  0043AA  3401               	rlcf	i2ClearVars@i^0,w,c
 36863  0043AC  6ED9               	movwf	fsr2l,c
 36864  0043AE  3402               	rlcf	(i2ClearVars@i+1)^0,w,c
 36865  0043B0  6EDA               	movwf	fsr2h,c
 36866  0043B2  0E32               	movlw	low _prSlowBuffer
 36867  0043B4  26D9               	addwf	fsr2l,f,c
 36868  0043B6  0E04               	movlw	high _prSlowBuffer
 36869  0043B8  22DA               	addwfc	fsr2h,f,c
 36870  0043BA  0E00               	movlw	0
 36871  0043BC  6EDE               	movwf	postinc2,c
 36872  0043BE  0E00               	movlw	0
 36873  0043C0  6EDD               	movwf	postdec2,c
 36874                           
 36875                           ;monitor.c: 698:     }
 36876  0043C2  4A01               	infsnz	i2ClearVars@i^0,f,c
 36877  0043C4  2A02               	incf	(i2ClearVars@i+1)^0,f,c
 36878  0043C6  BE02               	btfsc	(i2ClearVars@i+1)^0,7,c
 36879  0043C8  D7E2               	goto	i2l18505
 36880  0043CA  5002               	movf	(i2ClearVars@i+1)^0,w,c
 36881  0043CC  E104               	bnz	i2u1804_40
 36882  0043CE  0E19               	movlw	25
 36883  0043D0  5C01               	subwf	i2ClearVars@i^0,w,c
 36884  0043D2  A0D8               	btfss	status,0,c
 36885  0043D4  D7DC               	goto	i2l18505
 36886  0043D6                     i2u1804_40:
 36887                           
 36888                           ;monitor.c: 699:     for (int i=0; i<10; i++) {
 36889  0043D6  0E00               	movlw	0
 36890  0043D8  6E04               	movwf	(i2ClearVars@i_4906+1)^0,c
 36891  0043DA  0E00               	movlw	0
 36892  0043DC  6E03               	movwf	i2ClearVars@i_4906^0,c
 36893  0043DE                     i2l18517:
 36894                           
 36895                           ;monitor.c: 700:         tdiBuffer[i] = 0;
 36896  0043DE  90D8               	bcf	status,0,c
 36897  0043E0  3403               	rlcf	i2ClearVars@i_4906^0,w,c
 36898  0043E2  6ED9               	movwf	fsr2l,c
 36899  0043E4  3404               	rlcf	(i2ClearVars@i_4906+1)^0,w,c
 36900  0043E6  6EDA               	movwf	fsr2h,c
 36901  0043E8  0E61               	movlw	low _tdiBuffer
 36902  0043EA  26D9               	addwf	fsr2l,f,c
 36903  0043EC  0E03               	movlw	high _tdiBuffer
 36904  0043EE  22DA               	addwfc	fsr2h,f,c
 36905  0043F0  0E00               	movlw	0
 36906  0043F2  6EDE               	movwf	postinc2,c
 36907  0043F4  0E00               	movlw	0
 36908  0043F6  6EDD               	movwf	postdec2,c
 36909                           
 36910                           ;monitor.c: 701:         tdeBuffer[i] = 0;
 36911  0043F8  90D8               	bcf	status,0,c
 36912  0043FA  3403               	rlcf	i2ClearVars@i_4906^0,w,c
 36913  0043FC  6ED9               	movwf	fsr2l,c
 36914  0043FE  3404               	rlcf	(i2ClearVars@i_4906+1)^0,w,c
 36915  004400  6EDA               	movwf	fsr2h,c
 36916  004402  0E75               	movlw	low _tdeBuffer
 36917  004404  26D9               	addwf	fsr2l,f,c
 36918  004406  0E03               	movlw	high _tdeBuffer
 36919  004408  22DA               	addwfc	fsr2h,f,c
 36920  00440A  0E00               	movlw	0
 36921  00440C  6EDE               	movwf	postinc2,c
 36922  00440E  0E00               	movlw	0
 36923  004410  6EDD               	movwf	postdec2,c
 36924                           
 36925                           ;monitor.c: 702:     }
 36926  004412  4A03               	infsnz	i2ClearVars@i_4906^0,f,c
 36927  004414  2A04               	incf	(i2ClearVars@i_4906+1)^0,f,c
 36928  004416  BE04               	btfsc	(i2ClearVars@i_4906+1)^0,7,c
 36929  004418  D7E2               	goto	i2l18517
 36930  00441A  5004               	movf	(i2ClearVars@i_4906+1)^0,w,c
 36931  00441C  E104               	bnz	i2u1805_40
 36932  00441E  0E0A               	movlw	10
 36933  004420  5C03               	subwf	i2ClearVars@i_4906^0,w,c
 36934  004422  A0D8               	btfss	status,0,c
 36935  004424  D7DC               	goto	i2l18517
 36936  004426                     i2u1805_40:
 36937                           
 36938                           ;monitor.c: 703:     numtdi = 0;
 36939  004426  0E00               	movlw	0
 36940  004428  0100               	movlb	0	; () banked
 36941  00442A  6FD3               	movwf	(_numtdi+1)& (0+255),b
 36942  00442C  0E00               	movlw	0
 36943  00442E  6FD2               	movwf	_numtdi& (0+255),b
 36944                           
 36945                           ;monitor.c: 704:     numtde = 0;
 36946  004430  0E00               	movlw	0
 36947  004432  6FD1               	movwf	(_numtde+1)& (0+255),b
 36948  004434  0E00               	movlw	0
 36949  004436  6FD0               	movwf	_numtde& (0+255),b
 36950                           
 36951                           ;monitor.c: 705:     ti = 0;
 36952  004438  0E00               	movlw	0
 36953  00443A  0102               	movlb	2	; () banked
 36954  00443C  6F5B               	movwf	(_ti+1)& (0+255),b
 36955  00443E  0E00               	movlw	0
 36956  004440  6F5A               	movwf	_ti& (0+255),b
 36957                           
 36958                           ;monitor.c: 706:     te = 0;
 36959  004442  0E00               	movlw	0
 36960  004444  6F59               	movwf	(_te+1)& (0+255),b
 36961  004446  0E00               	movlw	0
 36962  004448  6F58               	movwf	_te& (0+255),b
 36963                           
 36964                           ;monitor.c: 707:     tdi = 0;
 36965  00444A  0E00               	movlw	0
 36966  00444C  0101               	movlb	1	; () banked
 36967  00444E  6FDC               	movwf	(_tdi+1)& (0+255),b
 36968  004450  0E00               	movlw	0
 36969  004452  6FDB               	movwf	_tdi& (0+255),b
 36970                           
 36971                           ;monitor.c: 708:     tde = 0;
 36972  004454  0E00               	movlw	0
 36973  004456  6FDA               	movwf	(_tde+1)& (0+255),b
 36974  004458  0E00               	movlw	0
 36975  00445A  6FD9               	movwf	_tde& (0+255),b
 36976                           
 36977                           ;monitor.c: 709:     tt = 0;
 36978  00445C  0E00               	movlw	0
 36979  00445E  0100               	movlb	0	; () banked
 36980  004460  6FC8               	movwf	_tt& (0+255),b
 36981  004462  0E00               	movlw	0
 36982  004464  6FC9               	movwf	(_tt+1)& (0+255),b
 36983  004466  0E00               	movlw	0
 36984  004468  6FCA               	movwf	(_tt+2)& (0+255),b
 36985  00446A  0E00               	movlw	0
 36986  00446C  6FCB               	movwf	(_tt+3)& (0+255),b
 36987                           
 36988                           ;monitor.c: 710:     ttExt = 0;
 36989  00446E  0E00               	movlw	0
 36990  004470  0102               	movlb	2	; () banked
 36991  004472  6F65               	movwf	(_ttExt+1)& (0+255),b
 36992  004474  0E00               	movlw	0
 36993  004476  6F64               	movwf	_ttExt& (0+255),b
 36994                           
 36995                           ;monitor.c: 711:     ttNoAlarm = 0;
 36996  004478  0E00               	movlw	0
 36997  00447A  6F5F               	movwf	(_ttNoAlarm+1)& (0+255),b
 36998  00447C  0E00               	movlw	0
 36999  00447E  6F5E               	movwf	_ttNoAlarm& (0+255),b
 37000                           
 37001                           ;monitor.c: 712:     ttAlarm = 0;
 37002  004480  0E00               	movlw	0
 37003  004482  6F5D               	movwf	(_ttAlarm+1)& (0+255),b
 37004  004484  0E00               	movlw	0
 37005  004486  6F5C               	movwf	_ttAlarm& (0+255),b
 37006                           
 37007                           ;monitor.c: 713:     enableAlarms = 0;
 37008  004488  0E00               	movlw	0
 37009  00448A  0100               	movlb	0	; () banked
 37010  00448C  6FF4               	movwf	_enableAlarms& (0+255),b
 37011                           
 37012                           ;monitor.c: 714:     tt1 = 0;
 37013  00448E  0E00               	movlw	0
 37014  004490  0102               	movlb	2	; () banked
 37015  004492  6F67               	movwf	(_tt1+1)& (0+255),b
 37016  004494  0E00               	movlw	0
 37017  004496  6F66               	movwf	_tt1& (0+255),b
 37018                           
 37019                           ;monitor.c: 715:     tt2 = 0;
 37020  004498  0E00               	movlw	0
 37021  00449A  0100               	movlb	0	; () banked
 37022  00449C  6FDD               	movwf	(_tt2+1)& (0+255),b
 37023  00449E  0E00               	movlw	0
 37024  0044A0  6FDC               	movwf	_tt2& (0+255),b
 37025                           
 37026                           ;monitor.c: 716:     tt3 = 0;
 37027  0044A2  0E00               	movlw	0
 37028  0044A4  0101               	movlb	1	; () banked
 37029  0044A6  6FDE               	movwf	(_tt3+1)& (0+255),b
 37030  0044A8  0E00               	movlw	0
 37031  0044AA  6FDD               	movwf	_tt3& (0+255),b
 37032                           
 37033                           ;monitor.c: 717:     tt4 = 0;
 37034  0044AC  0E00               	movlw	0
 37035  0044AE  0100               	movlb	0	; () banked
 37036  0044B0  6FDB               	movwf	(_tt4+1)& (0+255),b
 37037  0044B2  0E00               	movlw	0
 37038  0044B4  6FDA               	movwf	_tt4& (0+255),b
 37039                           
 37040                           ;monitor.c: 718:     tt12 = 0;
 37041  0044B6  0E00               	movlw	0
 37042  0044B8  0102               	movlb	2	; () banked
 37043  0044BA  6F63               	movwf	(_tt12+1)& (0+255),b
 37044  0044BC  0E00               	movlw	0
 37045  0044BE  6F62               	movwf	_tt12& (0+255),b
 37046                           
 37047                           ;monitor.c: 719:     tt34 = 0;
 37048  0044C0  0E00               	movlw	0
 37049  0044C2  6F61               	movwf	(_tt34+1)& (0+255),b
 37050  0044C4  0E00               	movlw	0
 37051  0044C6  6F60               	movwf	_tt34& (0+255),b
 37052                           
 37053                           ;monitor.c: 720:     bpm = 0;
 37054  0044C8  0E00               	movlw	0
 37055  0044CA  6F57               	movwf	(_bpm+1)& (0+255),b
 37056  0044CC  0E00               	movlw	0
 37057  0044CE  6F56               	movwf	_bpm& (0+255),b
 37058                           
 37059                           ;monitor.c: 721:     bp = 0;
 37060  0044D0  0E00               	movlw	0
 37061  0044D2  6FBB               	movwf	(_bp+1)& (0+255),b
 37062  0044D4  0E00               	movlw	0
 37063  0044D6  6FBA               	movwf	_bp& (0+255),b
 37064                           
 37065                           ;monitor.c: 723:     pi = 0;
 37066  0044D8  0E00               	movlw	0
 37067  0044DA  0101               	movlb	1	; () banked
 37068  0044DC  6FD8               	movwf	(_pi+1)& (0+255),b
 37069  0044DE  0E00               	movlw	0
 37070  0044E0  6FD7               	movwf	_pi& (0+255),b
 37071                           
 37072                           ;monitor.c: 724:     pe = 0;
 37073  0044E2  0E00               	movlw	0
 37074  0044E4  6FD6               	movwf	(_pe+1)& (0+255),b
 37075  0044E6  0E00               	movlw	0
 37076  0044E8  6FD5               	movwf	_pe& (0+255),b
 37077                           
 37078                           ;monitor.c: 725:     rpi = 0;
 37079  0044EA  0E00               	movlw	0
 37080  0044EC  0102               	movlb	2	; () banked
 37081  0044EE  6F49               	movwf	(_rpi+1)& (0+255),b
 37082  0044F0  0E00               	movlw	0
 37083  0044F2  6F48               	movwf	_rpi& (0+255),b
 37084                           
 37085                           ;monitor.c: 726:     rpe = 0;
 37086  0044F4  0E00               	movlw	0
 37087  0044F6  6F47               	movwf	(_rpe+1)& (0+255),b
 37088  0044F8  0E00               	movlw	0
 37089  0044FA  6F46               	movwf	_rpe& (0+255),b
 37090                           
 37091                           ;monitor.c: 727:     lrpi = 0;
 37092  0044FC  0E00               	movlw	0
 37093  0044FE  0101               	movlb	1	; () banked
 37094  004500  6FD2               	movwf	(_lrpi+1)& (0+255),b
 37095  004502  0E00               	movlw	0
 37096  004504  6FD1               	movwf	_lrpi& (0+255),b
 37097                           
 37098                           ;monitor.c: 728:     lrpe = 0;
 37099  004506  0E00               	movlw	0
 37100  004508  0100               	movlb	0	; () banked
 37101  00450A  6FD5               	movwf	(_lrpe+1)& (0+255),b
 37102  00450C  0E00               	movlw	0
 37103  00450E  6FD4               	movwf	_lrpe& (0+255),b
 37104                           
 37105                           ;monitor.c: 729:     maxPressure = 0;
 37106  004510  0E00               	movlw	0
 37107  004512  0102               	movlb	2	; () banked
 37108  004514  6F53               	movwf	(_maxPressure+1)& (0+255),b
 37109  004516  0E00               	movlw	0
 37110  004518  6F52               	movwf	_maxPressure& (0+255),b
 37111                           
 37112                           ;monitor.c: 730:     minPressure = 40*5;
 37113  00451A  0E00               	movlw	0
 37114  00451C  0100               	movlb	0	; () banked
 37115  00451E  6FD7               	movwf	(_minPressure+1)& (0+255),b
 37116  004520  0EC8               	movlw	200
 37117  004522  6FD6               	movwf	_minPressure& (0+255),b
 37118                           
 37119                           ;monitor.c: 731:     pHighAcc = 0;
 37120  004524  0E00               	movlw	0
 37121  004526  0102               	movlb	2	; () banked
 37122  004528  6F1E               	movwf	_pHighAcc& (0+255),b
 37123  00452A  0E00               	movlw	0
 37124  00452C  6F1F               	movwf	(_pHighAcc+1)& (0+255),b
 37125  00452E  0E00               	movlw	0
 37126  004530  6F20               	movwf	(_pHighAcc+2)& (0+255),b
 37127  004532  0E00               	movlw	0
 37128  004534  6F21               	movwf	(_pHighAcc+3)& (0+255),b
 37129                           
 37130                           ;monitor.c: 732:     pLowAcc = 0;
 37131  004536  0E00               	movlw	0
 37132  004538  6F1A               	movwf	_pLowAcc& (0+255),b
 37133  00453A  0E00               	movlw	0
 37134  00453C  6F1B               	movwf	(_pLowAcc+1)& (0+255),b
 37135  00453E  0E00               	movlw	0
 37136  004540  6F1C               	movwf	(_pLowAcc+2)& (0+255),b
 37137  004542  0E00               	movlw	0
 37138  004544  6F1D               	movwf	(_pLowAcc+3)& (0+255),b
 37139                           
 37140                           ;monitor.c: 734:     alarmMaxPressure = 0;
 37141  004546  0E00               	movlw	0
 37142  004548  6F51               	movwf	(_alarmMaxPressure+1)& (0+255),b
 37143  00454A  0E00               	movlw	0
 37144  00454C  6F50               	movwf	_alarmMaxPressure& (0+255),b
 37145                           
 37146                           ;monitor.c: 735:     prSlow = 0;
 37147  00454E  0E00               	movlw	0
 37148  004550  0100               	movlb	0	; () banked
 37149  004552  6FCF               	movwf	(_prSlow+1)& (0+255),b
 37150  004554  0E00               	movlw	0
 37151  004556  6FCE               	movwf	_prSlow& (0+255),b
 37152                           
 37153                           ;monitor.c: 736:     prSlowDev = 0;
 37154  004558  0E00               	movlw	0
 37155  00455A  0102               	movlb	2	; () banked
 37156  00455C  6F43               	movwf	(_prSlowDev+1)& (0+255),b
 37157  00455E  0E00               	movlw	0
 37158  004560  6F42               	movwf	_prSlowDev& (0+255),b
 37159                           
 37160                           ;monitor.c: 737:     prSlowNumStable = 0;
 37161  004562  0E00               	movlw	0
 37162  004564  6F41               	movwf	(_prSlowNumStable+1)& (0+255),b
 37163  004566  0E00               	movlw	0
 37164  004568  6F40               	movwf	_prSlowNumStable& (0+255),b
 37165                           
 37166                           ;monitor.c: 738:     hiLimit = 40*5;
 37167  00456A  0E00               	movlw	0
 37168  00456C  0101               	movlb	1	; () banked
 37169  00456E  6FD0               	movwf	(_hiLimit+1)& (0+255),b
 37170  004570  0EC8               	movlw	200
 37171  004572  6FCF               	movwf	_hiLimit& (0+255),b
 37172                           
 37173                           ;monitor.c: 739:     loLimit = 0;
 37174  004574  0E00               	movlw	0
 37175  004576  6FCE               	movwf	(_loLimit+1)& (0+255),b
 37176  004578  0E00               	movlw	0
 37177  00457A  6FCD               	movwf	_loLimit& (0+255),b
 37178                           
 37179                           ;monitor.c: 740:     volumeAcc = 0;
 37180  00457C  0E00               	movlw	0
 37181  00457E  0102               	movlb	2	; () banked
 37182  004580  6F22               	movwf	_volumeAcc& (0+255),b
 37183  004582  0E00               	movlw	0
 37184  004584  6F23               	movwf	(_volumeAcc+1)& (0+255),b
 37185  004586  0E00               	movlw	0
 37186  004588  6F24               	movwf	(_volumeAcc+2)& (0+255),b
 37187  00458A  0E00               	movlw	0
 37188  00458C  6F25               	movwf	(_volumeAcc+3)& (0+255),b
 37189                           
 37190                           ;monitor.c: 741:     volume = 0;
 37191  00458E  0E00               	movlw	0
 37192  004590  0100               	movlb	0	; () banked
 37193  004592  6FDF               	movwf	(_volume+1)& (0+255),b
 37194  004594  0E00               	movlw	0
 37195  004596  6FDE               	movwf	_volume& (0+255),b
 37196                           
 37197                           ;monitor.c: 743:     alarmSV1=1;
 37198  004598  0E01               	movlw	1
 37199  00459A  0102               	movlb	2	; () banked
 37200  00459C  6FA0               	movwf	_alarmSV1& (0+255),b
 37201                           
 37202                           ; BSR set to: 2
 37203                           ;monitor.c: 745:     ClearEPAboveSetAlarm();
 37204  00459E  EC42  F050         	call	i2_ClearEPAboveSetAlarm	;wreg free
 37205                           
 37206                           ; BSR set to: 0
 37207                           ;monitor.c: 746:     ClearEPBelowSetAlarm();
 37208  0045A2  EC37  F050         	call	i2_ClearEPBelowSetAlarm	;wreg free
 37209                           
 37210                           ; BSR set to: 0
 37211                           ;monitor.c: 747:     ClearIPAboveSetAlarm();
 37212  0045A6  EC2C  F050         	call	i2_ClearIPAboveSetAlarm	;wreg free
 37213                           
 37214                           ; BSR set to: 0
 37215                           ;monitor.c: 748:     ClearIPBelowSetAlarm();
 37216  0045AA  EC21  F050         	call	i2_ClearIPBelowSetAlarm	;wreg free
 37217                           
 37218                           ; BSR set to: 0
 37219                           ;monitor.c: 749:     ClearCircuitFailureAlarm();
 37220  0045AE  ECD5  F052         	call	i2_ClearCircuitFailureAlarm	;wreg free
 37221                           
 37222                           ; BSR set to: 2
 37223  0045B2  0012               	return		;funcret
 37224  0045B4                     __end_ofi2_ClearVars:
 37225                           	opt callstack 0
 37226                           
 37227 ;; *************** function i2_MonitorEnable *****************
 37228 ;; Defined at:
 37229 ;;		line 272 in file "monitor.c"
 37230 ;; Parameters:    Size  Location     Type
 37231 ;;		None
 37232 ;; Auto vars:     Size  Location     Type
 37233 ;;		None
 37234 ;; Return value:  Size  Location     Type
 37235 ;;                  1    wreg      void 
 37236 ;; Registers used:
 37237 ;;		wreg, status,2
 37238 ;; Tracked objects:
 37239 ;;		On entry : 3F/0
 37240 ;;		On exit  : 3F/2
 37241 ;;		Unchanged: 0/0
 37242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37247 ;;Total ram usage:        0 bytes
 37248 ;; Hardware stack levels used:    1
 37249 ;; This function calls:
 37250 ;;		Nothing
 37251 ;; This function is called by:
 37252 ;;		_UpdateState
 37253 ;; This function uses a non-reentrant model
 37254 ;;
 37255                           
 37256                           	psect	text282
 37257  00A55A                     __ptext282:
 37258                           	opt callstack 0
 37259  00A55A                     i2_MonitorEnable:
 37260                           	opt callstack 12
 37261                           
 37262                           ; BSR set to: 0
 37263                           
 37264                           ; BSR set to: 2
 37265                           ;incstack = 0
 37266  00A55A  0E01               	movlw	1
 37267  00A55C  0102               	movlb	2	; () banked
 37268  00A55E  6FA2               	movwf	monitor@enable& (0+255),b
 37269                           
 37270                           ; BSR set to: 2
 37271  00A560  0012               	return		;funcret
 37272  00A562                     __end_ofi2_MonitorEnable:
 37273                           	opt callstack 0
 37274                           
 37275 ;; *************** function i2_MonitorDisable *****************
 37276 ;; Defined at:
 37277 ;;		line 273 in file "monitor.c"
 37278 ;; Parameters:    Size  Location     Type
 37279 ;;		None
 37280 ;; Auto vars:     Size  Location     Type
 37281 ;;		None
 37282 ;; Return value:  Size  Location     Type
 37283 ;;                  1    wreg      void 
 37284 ;; Registers used:
 37285 ;;		wreg, status,2
 37286 ;; Tracked objects:
 37287 ;;		On entry : 3D/2
 37288 ;;		On exit  : 3F/2
 37289 ;;		Unchanged: 0/0
 37290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37295 ;;Total ram usage:        0 bytes
 37296 ;; Hardware stack levels used:    1
 37297 ;; This function calls:
 37298 ;;		Nothing
 37299 ;; This function is called by:
 37300 ;;		_UpdateState
 37301 ;; This function uses a non-reentrant model
 37302 ;;
 37303                           
 37304                           	psect	text283
 37305  00A562                     __ptext283:
 37306                           	opt callstack 0
 37307  00A562                     i2_MonitorDisable:
 37308                           	opt callstack 12
 37309                           
 37310                           ; BSR set to: 2
 37311                           ;incstack = 0
 37312  00A562  0E00               	movlw	0
 37313  00A564  0102               	movlb	2	; () banked
 37314  00A566  6FA2               	movwf	monitor@enable& (0+255),b
 37315                           
 37316                           ; BSR set to: 2
 37317  00A568  0012               	return		;funcret
 37318  00A56A                     __end_ofi2_MonitorDisable:
 37319                           	opt callstack 0
 37320                           
 37321 ;; *************** function i2_LCDOn *****************
 37322 ;; Defined at:
 37323 ;;		line 119 in file "lcd.c"
 37324 ;; Parameters:    Size  Location     Type
 37325 ;;		None
 37326 ;; Auto vars:     Size  Location     Type
 37327 ;;		None
 37328 ;; Return value:  Size  Location     Type
 37329 ;;                  1    wreg      void 
 37330 ;; Registers used:
 37331 ;;		wreg, status,2
 37332 ;; Tracked objects:
 37333 ;;		On entry : 3F/2
 37334 ;;		On exit  : 3F/1
 37335 ;;		Unchanged: 0/0
 37336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37341 ;;Total ram usage:        0 bytes
 37342 ;; Hardware stack levels used:    1
 37343 ;; This function calls:
 37344 ;;		Nothing
 37345 ;; This function is called by:
 37346 ;;		_UpdateState
 37347 ;; This function uses a non-reentrant model
 37348 ;;
 37349                           
 37350                           	psect	text284
 37351  00A476                     __ptext284:
 37352                           	opt callstack 0
 37353  00A476                     i2_LCDOn:
 37354                           	opt callstack 12
 37355                           
 37356                           ; BSR set to: 2
 37357                           ;lcd.c: 120:     LED = 1;
 37358                           
 37359                           ; BSR set to: 2
 37360                           ;incstack = 0
 37361  00A476  0E01               	movlw	1
 37362  00A478  0101               	movlb	1	; () banked
 37363  00A47A  6FF0               	movwf	_LED& (0+255),b
 37364                           
 37365                           ; BSR set to: 1
 37366  00A47C  8ABC               	bsf	188,5,c	;volatile
 37367                           
 37368                           ; BSR set to: 1
 37369  00A47E  0012               	return		;funcret
 37370  00A480                     __end_ofi2_LCDOn:
 37371                           	opt callstack 0
 37372                           
 37373 ;; *************** function i2_LCDOff *****************
 37374 ;; Defined at:
 37375 ;;		line 112 in file "lcd.c"
 37376 ;; Parameters:    Size  Location     Type
 37377 ;;		None
 37378 ;; Auto vars:     Size  Location     Type
 37379 ;;		None
 37380 ;; Return value:  Size  Location     Type
 37381 ;;                  1    wreg      void 
 37382 ;; Registers used:
 37383 ;;		wreg, status,2
 37384 ;; Tracked objects:
 37385 ;;		On entry : 3F/2
 37386 ;;		On exit  : 3F/1
 37387 ;;		Unchanged: 0/0
 37388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37393 ;;Total ram usage:        0 bytes
 37394 ;; Hardware stack levels used:    1
 37395 ;; This function calls:
 37396 ;;		Nothing
 37397 ;; This function is called by:
 37398 ;;		_UpdateState
 37399 ;; This function uses a non-reentrant model
 37400 ;;
 37401                           
 37402                           	psect	text285
 37403  00A480                     __ptext285:
 37404                           	opt callstack 0
 37405  00A480                     i2_LCDOff:
 37406                           	opt callstack 12
 37407                           
 37408                           ; BSR set to: 2
 37409                           ;lcd.c: 113:     LED = 0;
 37410                           
 37411                           ; BSR set to: 1
 37412                           ;incstack = 0
 37413  00A480  0E00               	movlw	0
 37414  00A482  0101               	movlb	1	; () banked
 37415  00A484  6FF0               	movwf	_LED& (0+255),b
 37416                           
 37417                           ; BSR set to: 1
 37418  00A486  9ABC               	bcf	188,5,c	;volatile
 37419                           
 37420                           ; BSR set to: 1
 37421  00A488  0012               	return		;funcret
 37422  00A48A                     __end_ofi2_LCDOff:
 37423                           	opt callstack 0
 37424                           
 37425 ;; *************** function i2_EnableAlarmSV1 *****************
 37426 ;; Defined at:
 37427 ;;		line 877 in file "monitor.c"
 37428 ;; Parameters:    Size  Location     Type
 37429 ;;		None
 37430 ;; Auto vars:     Size  Location     Type
 37431 ;;		None
 37432 ;; Return value:  Size  Location     Type
 37433 ;;                  1    wreg      void 
 37434 ;; Registers used:
 37435 ;;		wreg, status,2
 37436 ;; Tracked objects:
 37437 ;;		On entry : 3D/2
 37438 ;;		On exit  : 3F/0
 37439 ;;		Unchanged: 0/0
 37440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37445 ;;Total ram usage:        0 bytes
 37446 ;; Hardware stack levels used:    1
 37447 ;; This function calls:
 37448 ;;		Nothing
 37449 ;; This function is called by:
 37450 ;;		_UpdateState
 37451 ;; This function uses a non-reentrant model
 37452 ;;
 37453                           
 37454                           	psect	text286
 37455  00A56A                     __ptext286:
 37456                           	opt callstack 0
 37457  00A56A                     i2_EnableAlarmSV1:
 37458                           	opt callstack 12
 37459                           
 37460                           ;monitor.c: 878:     disableAlarmSV1=0;
 37461                           
 37462                           ; BSR set to: 1
 37463                           ;incstack = 0
 37464  00A56A  0E00               	movlw	0
 37465  00A56C  0100               	movlb	0	; () banked
 37466  00A56E  6FF3               	movwf	_disableAlarmSV1& (0+255),b
 37467                           
 37468                           ; BSR set to: 0
 37469  00A570  0012               	return		;funcret
 37470  00A572                     __end_ofi2_EnableAlarmSV1:
 37471                           	opt callstack 0
 37472                           
 37473 ;; *************** function _SetVolumeControl *****************
 37474 ;; Defined at:
 37475 ;;		line 197 in file "monitor.c"
 37476 ;; Parameters:    Size  Location     Type
 37477 ;;  vc              1    wreg     _Bool 
 37478 ;; Auto vars:     Size  Location     Type
 37479 ;;  vc              1    0[COMRAM] _Bool 
 37480 ;; Return value:  Size  Location     Type
 37481 ;;                  1    wreg      void 
 37482 ;; Registers used:
 37483 ;;		wreg
 37484 ;; Tracked objects:
 37485 ;;		On entry : 3F/2
 37486 ;;		On exit  : 0/0
 37487 ;;		Unchanged: 0/0
 37488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37490 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37492 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37493 ;;Total ram usage:        1 bytes
 37494 ;; Hardware stack levels used:    1
 37495 ;; This function calls:
 37496 ;;		Nothing
 37497 ;; This function is called by:
 37498 ;;		_UpdateState
 37499 ;; This function uses a non-reentrant model
 37500 ;;
 37501                           
 37502                           	psect	text287
 37503  00A48A                     __ptext287:
 37504                           	opt callstack 0
 37505  00A48A                     _SetVolumeControl:
 37506                           	opt callstack 12
 37507                           
 37508                           ; BSR set to: 0
 37509                           ;incstack = 0
 37510                           ;SetVolumeControl@vc stored from wreg
 37511  00A48A  6E01               	movwf	SetVolumeControl@vc^0,c
 37512  00A48C  0060  F004  F2A1   	movff	SetVolumeControl@vc,_volumeControl
 37513  00A492  0012               	return		;funcret
 37514  00A494                     __end_of_SetVolumeControl:
 37515                           	opt callstack 0
 37516                           
 37517 ;; *************** function _SetTarget *****************
 37518 ;; Defined at:
 37519 ;;		line 199 in file "monitor.c"
 37520 ;; Parameters:    Size  Location     Type
 37521 ;;  pmax            2   26[COMRAM] short 
 37522 ;;  ip              2   28[COMRAM] short 
 37523 ;;  ep              2   30[COMRAM] short 
 37524 ;;  br              2   32[COMRAM] unsigned short 
 37525 ;;  vmax            2   34[COMRAM] short 
 37526 ;;  vmin            2   36[COMRAM] short 
 37527 ;; Auto vars:     Size  Location     Type
 37528 ;;		None
 37529 ;; Return value:  Size  Location     Type
 37530 ;;                  1    wreg      void 
 37531 ;; Registers used:
 37532 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 37533 ;; Tracked objects:
 37534 ;;		On entry : 3F/0
 37535 ;;		On exit  : 0/0
 37536 ;;		Unchanged: 0/0
 37537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37538 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37541 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37542 ;;Total ram usage:       12 bytes
 37543 ;; Hardware stack levels used:    1
 37544 ;; Hardware stack levels required when called:    1
 37545 ;; This function calls:
 37546 ;;		i2___aldiv
 37547 ;;		i2___wmul
 37548 ;; This function is called by:
 37549 ;;		_UpdateState
 37550 ;; This function uses a non-reentrant model
 37551 ;;
 37552                           
 37553                           	psect	text288
 37554  006E14                     __ptext288:
 37555                           	opt callstack 0
 37556  006E14                     _SetTarget:
 37557                           	opt callstack 11
 37558                           
 37559                           ; BSR set to: 0
 37560                           ;monitor.c: 206:     targetHigh = ip*5;
 37561                           
 37562                           ;incstack = 0
 37563  006E14  0060  F074  F001   	movff	SetTarget@ip,i2___wmul@multiplier
 37564  006E1A  0060  F078  F002   	movff	SetTarget@ip+1,i2___wmul@multiplier+1
 37565  006E20  0E00               	movlw	0
 37566  006E22  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 37567  006E24  0E05               	movlw	5
 37568  006E26  6E03               	movwf	i2___wmul@multiplicand^0,c
 37569  006E28  EC06  F04D         	call	i2___wmul	;wreg free
 37570  006E2C  0060  F004  F1E3   	movff	?i2___wmul,_targetHigh
 37571  006E32  0060  F008  F1E4   	movff	?i2___wmul+1,_targetHigh+1
 37572                           
 37573                           ;monitor.c: 207:     targetLow = ep*5;
 37574  006E38  0060  F07C  F001   	movff	SetTarget@ep,i2___wmul@multiplier
 37575  006E3E  0060  F080  F002   	movff	SetTarget@ep+1,i2___wmul@multiplier+1
 37576  006E44  0E00               	movlw	0
 37577  006E46  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 37578  006E48  0E05               	movlw	5
 37579  006E4A  6E03               	movwf	i2___wmul@multiplicand^0,c
 37580  006E4C  EC06  F04D         	call	i2___wmul	;wreg free
 37581  006E50  0060  F004  F1E1   	movff	?i2___wmul,_targetLow
 37582  006E56  0060  F008  F1E2   	movff	?i2___wmul+1,_targetLow+1
 37583                           
 37584                           ;monitor.c: 208:     if (br!=0) targetBp = 60000/br; else targetBp = 3000;
 37585  006E5C  5021               	movf	SetTarget@br^0,w,c
 37586  006E5E  1022               	iorwf	(SetTarget@br+1)^0,w,c
 37587  006E60  B4D8               	btfsc	status,2,c
 37588  006E62  D019               	goto	i2l18785
 37589  006E64  0E60               	movlw	96
 37590  006E66  6E0D               	movwf	i2___aldiv@dividend^0,c
 37591  006E68  0EEA               	movlw	234
 37592  006E6A  6E0E               	movwf	(i2___aldiv@dividend+1)^0,c
 37593  006E6C  0E00               	movlw	0
 37594  006E6E  6E0F               	movwf	(i2___aldiv@dividend+2)^0,c
 37595  006E70  0E00               	movlw	0
 37596  006E72  6E10               	movwf	(i2___aldiv@dividend+3)^0,c
 37597  006E74  0060  F084  F011   	movff	SetTarget@br,i2___aldiv@divisor
 37598  006E7A  0060  F088  F012   	movff	SetTarget@br+1,i2___aldiv@divisor+1
 37599  006E80  6A13               	clrf	(i2___aldiv@divisor+2)^0,c
 37600  006E82  6A14               	clrf	(i2___aldiv@divisor+3)^0,c
 37601  006E84  EC3A  F036         	call	i2___aldiv	;wreg free
 37602  006E88  0060  F034  F26C   	movff	?i2___aldiv,_targetBp
 37603  006E8E  0060  F038  F26D   	movff	?i2___aldiv+1,_targetBp+1
 37604  006E94  D005               	goto	i2l18787
 37605  006E96                     i2l18785:
 37606  006E96  0E0B               	movlw	11
 37607  006E98  0102               	movlb	2	; () banked
 37608  006E9A  6F6D               	movwf	(_targetBp+1)& (0+255),b
 37609  006E9C  0EB8               	movlw	184
 37610  006E9E  6F6C               	movwf	_targetBp& (0+255),b
 37611  006EA0                     i2l18787:
 37612                           
 37613                           ;monitor.c: 209:     targetPmax = pmax*5;
 37614  006EA0  0060  F06C  F001   	movff	SetTarget@pmax,i2___wmul@multiplier
 37615  006EA6  0060  F070  F002   	movff	SetTarget@pmax+1,i2___wmul@multiplier+1
 37616  006EAC  0E00               	movlw	0
 37617  006EAE  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 37618  006EB0  0E05               	movlw	5
 37619  006EB2  6E03               	movwf	i2___wmul@multiplicand^0,c
 37620  006EB4  EC06  F04D         	call	i2___wmul	;wreg free
 37621  006EB8  0060  F004  F26E   	movff	?i2___wmul,_targetPmax
 37622  006EBE  0060  F008  F26F   	movff	?i2___wmul+1,_targetPmax+1
 37623                           
 37624                           ;monitor.c: 210:     volumeMax = vmax;
 37625  006EC4  0060  F08C  F26A   	movff	SetTarget@vmax,_volumeMax
 37626  006ECA  0060  F090  F26B   	movff	SetTarget@vmax+1,_volumeMax+1
 37627                           
 37628                           ;monitor.c: 211:     volumeMin = vmin;
 37629  006ED0  0060  F094  F268   	movff	SetTarget@vmin,_volumeMin
 37630  006ED6  0060  F098  F269   	movff	SetTarget@vmin+1,_volumeMin+1
 37631  006EDC  0012               	return		;funcret
 37632  006EDE                     __end_of_SetTarget:
 37633                           	opt callstack 0
 37634                           
 37635 ;; *************** function i2___aldiv *****************
 37636 ;; Defined at:
 37637 ;;		line 7 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/aldiv.c"
 37638 ;; Parameters:    Size  Location     Type
 37639 ;;  dividend        4   12[COMRAM] long 
 37640 ;;  divisor         4   16[COMRAM] long 
 37641 ;; Auto vars:     Size  Location     Type
 37642 ;;  __aldiv         4   22[COMRAM] long 
 37643 ;;  __aldiv         1   21[COMRAM] unsigned char 
 37644 ;;  __aldiv         1   20[COMRAM] unsigned char 
 37645 ;; Return value:  Size  Location     Type
 37646 ;;                  4   12[COMRAM] long 
 37647 ;; Registers used:
 37648 ;;		wreg, status,2, status,0
 37649 ;; Tracked objects:
 37650 ;;		On entry : 0/2
 37651 ;;		On exit  : 0/0
 37652 ;;		Unchanged: 0/0
 37653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37654 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37655 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37657 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37658 ;;Total ram usage:       14 bytes
 37659 ;; Hardware stack levels used:    1
 37660 ;; This function calls:
 37661 ;;		Nothing
 37662 ;; This function is called by:
 37663 ;;		_SetTarget
 37664 ;;		_MonitorPressureTask
 37665 ;;		i2_GetPressure_pa
 37666 ;;		i2_See5V
 37667 ;;		i2_See12V
 37668 ;; This function uses a non-reentrant model
 37669 ;;
 37670                           
 37671                           	psect	text289
 37672  006C74                     __ptext289:
 37673                           	opt callstack 0
 37674  006C74                     i2___aldiv:
 37675                           	opt callstack 14
 37676                           
 37677                           ;incstack = 0
 37678  006C74  0E00               	movlw	0
 37679  006C76  6E16               	movwf	i2___aldiv@sign^0,c
 37680  006C78  AE14               	btfss	(i2___aldiv@divisor+3)^0,7,c
 37681  006C7A  D00A               	goto	i2l18201
 37682  006C7C  1E14               	comf	(i2___aldiv@divisor+3)^0,f,c
 37683  006C7E  1E13               	comf	(i2___aldiv@divisor+2)^0,f,c
 37684  006C80  1E12               	comf	(i2___aldiv@divisor+1)^0,f,c
 37685  006C82  6C11               	negf	i2___aldiv@divisor^0,c
 37686  006C84  0E00               	movlw	0
 37687  006C86  2212               	addwfc	(i2___aldiv@divisor+1)^0,f,c
 37688  006C88  2213               	addwfc	(i2___aldiv@divisor+2)^0,f,c
 37689  006C8A  2214               	addwfc	(i2___aldiv@divisor+3)^0,f,c
 37690  006C8C  0E01               	movlw	1
 37691  006C8E  6E16               	movwf	i2___aldiv@sign^0,c
 37692  006C90                     i2l18201:
 37693  006C90  AE10               	btfss	(i2___aldiv@dividend+3)^0,7,c
 37694  006C92  D00A               	goto	i2l18207
 37695  006C94  1E10               	comf	(i2___aldiv@dividend+3)^0,f,c
 37696  006C96  1E0F               	comf	(i2___aldiv@dividend+2)^0,f,c
 37697  006C98  1E0E               	comf	(i2___aldiv@dividend+1)^0,f,c
 37698  006C9A  6C0D               	negf	i2___aldiv@dividend^0,c
 37699  006C9C  0E00               	movlw	0
 37700  006C9E  220E               	addwfc	(i2___aldiv@dividend+1)^0,f,c
 37701  006CA0  220F               	addwfc	(i2___aldiv@dividend+2)^0,f,c
 37702  006CA2  2210               	addwfc	(i2___aldiv@dividend+3)^0,f,c
 37703  006CA4  0E01               	movlw	1
 37704  006CA6  1A16               	xorwf	i2___aldiv@sign^0,f,c
 37705  006CA8                     i2l18207:
 37706  006CA8  0E00               	movlw	0
 37707  006CAA  6E17               	movwf	i2___aldiv@quotient^0,c
 37708  006CAC  0E00               	movlw	0
 37709  006CAE  6E18               	movwf	(i2___aldiv@quotient+1)^0,c
 37710  006CB0  0E00               	movlw	0
 37711  006CB2  6E19               	movwf	(i2___aldiv@quotient+2)^0,c
 37712  006CB4  0E00               	movlw	0
 37713  006CB6  6E1A               	movwf	(i2___aldiv@quotient+3)^0,c
 37714  006CB8  5011               	movf	i2___aldiv@divisor^0,w,c
 37715  006CBA  1012               	iorwf	(i2___aldiv@divisor+1)^0,w,c
 37716  006CBC  1013               	iorwf	(i2___aldiv@divisor+2)^0,w,c
 37717  006CBE  1014               	iorwf	(i2___aldiv@divisor+3)^0,w,c
 37718  006CC0  B4D8               	btfsc	status,2,c
 37719  006CC2  D02A               	goto	i2l18229
 37720  006CC4  0E01               	movlw	1
 37721  006CC6  6E15               	movwf	i2___aldiv@counter^0,c
 37722  006CC8  D006               	goto	i2l18215
 37723  006CCA                     i2l18213:
 37724  006CCA  90D8               	bcf	status,0,c
 37725  006CCC  3611               	rlcf	i2___aldiv@divisor^0,f,c
 37726  006CCE  3612               	rlcf	(i2___aldiv@divisor+1)^0,f,c
 37727  006CD0  3613               	rlcf	(i2___aldiv@divisor+2)^0,f,c
 37728  006CD2  3614               	rlcf	(i2___aldiv@divisor+3)^0,f,c
 37729  006CD4  2A15               	incf	i2___aldiv@counter^0,f,c
 37730  006CD6                     i2l18215:
 37731  006CD6  AE14               	btfss	(i2___aldiv@divisor+3)^0,7,c
 37732  006CD8  D7F8               	goto	i2l18213
 37733  006CDA                     i2u1772_40:
 37734  006CDA  90D8               	bcf	status,0,c
 37735  006CDC  3617               	rlcf	i2___aldiv@quotient^0,f,c
 37736  006CDE  3618               	rlcf	(i2___aldiv@quotient+1)^0,f,c
 37737  006CE0  3619               	rlcf	(i2___aldiv@quotient+2)^0,f,c
 37738  006CE2  361A               	rlcf	(i2___aldiv@quotient+3)^0,f,c
 37739  006CE4  5011               	movf	i2___aldiv@divisor^0,w,c
 37740  006CE6  5C0D               	subwf	i2___aldiv@dividend^0,w,c
 37741  006CE8  5012               	movf	(i2___aldiv@divisor+1)^0,w,c
 37742  006CEA  580E               	subwfb	(i2___aldiv@dividend+1)^0,w,c
 37743  006CEC  5013               	movf	(i2___aldiv@divisor+2)^0,w,c
 37744  006CEE  580F               	subwfb	(i2___aldiv@dividend+2)^0,w,c
 37745  006CF0  5014               	movf	(i2___aldiv@divisor+3)^0,w,c
 37746  006CF2  5810               	subwfb	(i2___aldiv@dividend+3)^0,w,c
 37747  006CF4  A0D8               	btfss	status,0,c
 37748  006CF6  D009               	goto	i2l18225
 37749  006CF8  5011               	movf	i2___aldiv@divisor^0,w,c
 37750  006CFA  5E0D               	subwf	i2___aldiv@dividend^0,f,c
 37751  006CFC  5012               	movf	(i2___aldiv@divisor+1)^0,w,c
 37752  006CFE  5A0E               	subwfb	(i2___aldiv@dividend+1)^0,f,c
 37753  006D00  5013               	movf	(i2___aldiv@divisor+2)^0,w,c
 37754  006D02  5A0F               	subwfb	(i2___aldiv@dividend+2)^0,f,c
 37755  006D04  5014               	movf	(i2___aldiv@divisor+3)^0,w,c
 37756  006D06  5A10               	subwfb	(i2___aldiv@dividend+3)^0,f,c
 37757  006D08  8017               	bsf	i2___aldiv@quotient^0,0,c
 37758  006D0A                     i2l18225:
 37759  006D0A  90D8               	bcf	status,0,c
 37760  006D0C  3214               	rrcf	(i2___aldiv@divisor+3)^0,f,c
 37761  006D0E  3213               	rrcf	(i2___aldiv@divisor+2)^0,f,c
 37762  006D10  3212               	rrcf	(i2___aldiv@divisor+1)^0,f,c
 37763  006D12  3211               	rrcf	i2___aldiv@divisor^0,f,c
 37764  006D14  2E15               	decfsz	i2___aldiv@counter^0,f,c
 37765  006D16  D7E1               	goto	i2u1772_40
 37766  006D18                     i2l18229:
 37767  006D18  5016               	movf	i2___aldiv@sign^0,w,c
 37768  006D1A  B4D8               	btfsc	status,2,c
 37769  006D1C  D008               	goto	i2l18233
 37770  006D1E  1E1A               	comf	(i2___aldiv@quotient+3)^0,f,c
 37771  006D20  1E19               	comf	(i2___aldiv@quotient+2)^0,f,c
 37772  006D22  1E18               	comf	(i2___aldiv@quotient+1)^0,f,c
 37773  006D24  6C17               	negf	i2___aldiv@quotient^0,c
 37774  006D26  0E00               	movlw	0
 37775  006D28  2218               	addwfc	(i2___aldiv@quotient+1)^0,f,c
 37776  006D2A  2219               	addwfc	(i2___aldiv@quotient+2)^0,f,c
 37777  006D2C  221A               	addwfc	(i2___aldiv@quotient+3)^0,f,c
 37778  006D2E                     i2l18233:
 37779  006D2E  0060  F05C  F00D   	movff	i2___aldiv@quotient,?i2___aldiv
 37780  006D34  0060  F060  F00E   	movff	i2___aldiv@quotient+1,?i2___aldiv+1
 37781  006D3A  0060  F064  F00F   	movff	i2___aldiv@quotient+2,?i2___aldiv+2
 37782  006D40  0060  F068  F010   	movff	i2___aldiv@quotient+3,?i2___aldiv+3
 37783  006D46  0012               	return		;funcret
 37784  006D48                     __end_ofi2___aldiv:
 37785                           	opt callstack 0
 37786                           
 37787 ;; *************** function _SetMaxPressure *****************
 37788 ;; Defined at:
 37789 ;;		line 144 in file "alarm.c"
 37790 ;; Parameters:    Size  Location     Type
 37791 ;;  pr              2    0[COMRAM] short 
 37792 ;; Auto vars:     Size  Location     Type
 37793 ;;		None
 37794 ;; Return value:  Size  Location     Type
 37795 ;;                  1    wreg      void 
 37796 ;; Registers used:
 37797 ;;		None
 37798 ;; Tracked objects:
 37799 ;;		On entry : 3F/0
 37800 ;;		On exit  : 3F/0
 37801 ;;		Unchanged: 3F/0
 37802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37803 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37806 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37807 ;;Total ram usage:        2 bytes
 37808 ;; Hardware stack levels used:    1
 37809 ;; This function calls:
 37810 ;;		Nothing
 37811 ;; This function is called by:
 37812 ;;		_UpdateState
 37813 ;; This function uses a non-reentrant model
 37814 ;;
 37815                           
 37816                           	psect	text290
 37817  00A366                     __ptext290:
 37818                           	opt callstack 0
 37819  00A366                     _SetMaxPressure:
 37820                           	opt callstack 12
 37821                           
 37822                           ; BSR set to: 0
 37823                           
 37824                           ;incstack = 0
 37825  00A366  0060  F004  F2D7   	movff	SetMaxPressure@pr,_alarmPmax
 37826  00A36C  0060  F008  F2D8   	movff	SetMaxPressure@pr+1,_alarmPmax+1
 37827                           
 37828                           ; BSR set to: 0
 37829  00A372  0012               	return		;funcret
 37830  00A374                     __end_of_SetMaxPressure:
 37831                           	opt callstack 0
 37832                           
 37833 ;; *************** function _SetControlFailAlarm *****************
 37834 ;; Defined at:
 37835 ;;		line 229 in file "alarm.c"
 37836 ;; Parameters:    Size  Location     Type
 37837 ;;		None
 37838 ;; Auto vars:     Size  Location     Type
 37839 ;;		None
 37840 ;; Return value:  Size  Location     Type
 37841 ;;                  1    wreg      void 
 37842 ;; Registers used:
 37843 ;;		wreg, status,2
 37844 ;; Tracked objects:
 37845 ;;		On entry : 3F/2
 37846 ;;		On exit  : 3F/0
 37847 ;;		Unchanged: 0/0
 37848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37853 ;;Total ram usage:        0 bytes
 37854 ;; Hardware stack levels used:    1
 37855 ;; This function calls:
 37856 ;;		Nothing
 37857 ;; This function is called by:
 37858 ;;		_UpdateState
 37859 ;;		_ControllerTimerHandler
 37860 ;; This function uses a non-reentrant model
 37861 ;;
 37862                           
 37863                           	psect	text291
 37864  00A572                     __ptext291:
 37865                           	opt callstack 0
 37866  00A572                     _SetControlFailAlarm:
 37867                           	opt callstack 14
 37868                           
 37869                           ; BSR set to: 2
 37870                           
 37871                           ; BSR set to: 0
 37872                           ;incstack = 0
 37873  00A572  0E01               	movlw	1
 37874  00A574  0100               	movlb	0	; () banked
 37875  00A576  6FF6               	movwf	_controlFailAlarm& (0+255),b
 37876                           
 37877                           ; BSR set to: 0
 37878  00A578  0012               	return		;funcret
 37879  00A57A                     __end_of_SetControlFailAlarm:
 37880                           	opt callstack 0
 37881                           
 37882 ;; *************** function _GetControllerBuzzerCheck *****************
 37883 ;; Defined at:
 37884 ;;		line 415 in file "buzzer.c"
 37885 ;; Parameters:    Size  Location     Type
 37886 ;;		None
 37887 ;; Auto vars:     Size  Location     Type
 37888 ;;  tmp             1    0[COMRAM] _Bool 
 37889 ;; Return value:  Size  Location     Type
 37890 ;;                  1    wreg      _Bool 
 37891 ;; Registers used:
 37892 ;;		wreg, status,2
 37893 ;; Tracked objects:
 37894 ;;		On entry : 3F/2
 37895 ;;		On exit  : 3F/2
 37896 ;;		Unchanged: 0/0
 37897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37899 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37901 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37902 ;;Total ram usage:        1 bytes
 37903 ;; Hardware stack levels used:    1
 37904 ;; This function calls:
 37905 ;;		Nothing
 37906 ;; This function is called by:
 37907 ;;		_UpdateState
 37908 ;; This function uses a non-reentrant model
 37909 ;;
 37910                           
 37911                           	psect	text292
 37912  00A13A                     __ptext292:
 37913                           	opt callstack 0
 37914  00A13A                     _GetControllerBuzzerCheck:
 37915                           	opt callstack 12
 37916                           
 37917                           ; BSR set to: 2
 37918                           ;buzzer.c: 416:     _Bool tmp = controllerDetected;
 37919                           
 37920                           ; BSR set to: 0
 37921                           ;incstack = 0
 37922  00A13A  0060  FAC4  F001   	movff	_controllerDetected,GetControllerBuzzerCheck@tmp
 37923                           
 37924                           ; BSR set to: 2
 37925                           ;buzzer.c: 417:     controllerDetected = 0;
 37926  00A140  0E00               	movlw	0
 37927  00A142  6FB1               	movwf	_controllerDetected& (0+255),b
 37928                           
 37929                           ;buzzer.c: 418:     checkController = 0;
 37930  00A144  0E00               	movlw	0
 37931  00A146  6FB2               	movwf	_checkController& (0+255),b
 37932                           
 37933                           ;buzzer.c: 419:     return tmp;
 37934  00A148  5001               	movf	GetControllerBuzzerCheck@tmp^0,w,c
 37935                           
 37936                           ; BSR set to: 2
 37937  00A14A  0012               	return		;funcret
 37938  00A14C                     __end_of_GetControllerBuzzerCheck:
 37939                           	opt callstack 0
 37940                           
 37941 ;; *************** function _DisplayEnable *****************
 37942 ;; Defined at:
 37943 ;;		line 46 in file "display.c"
 37944 ;; Parameters:    Size  Location     Type
 37945 ;;		None
 37946 ;; Auto vars:     Size  Location     Type
 37947 ;;		None
 37948 ;; Return value:  Size  Location     Type
 37949 ;;                  1    wreg      void 
 37950 ;; Registers used:
 37951 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37952 ;; Tracked objects:
 37953 ;;		On entry : 3F/0
 37954 ;;		On exit  : 3F/0
 37955 ;;		Unchanged: 0/0
 37956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37961 ;;Total ram usage:        0 bytes
 37962 ;; Hardware stack levels used:    1
 37963 ;; Hardware stack levels required when called:   10
 37964 ;; This function calls:
 37965 ;;		i2_ValueDisplay
 37966 ;; This function is called by:
 37967 ;;		_UpdateState
 37968 ;; This function uses a non-reentrant model
 37969 ;;
 37970                           
 37971                           	psect	text293
 37972  00A1BE                     __ptext293:
 37973                           	opt callstack 0
 37974  00A1BE                     _DisplayEnable:
 37975                           	opt callstack 2
 37976                           
 37977                           ; BSR set to: 0
 37978                           ;display.c: 47:     if (enable == 0) ValueDisplay();
 37979                           
 37980                           ; BSR set to: 2
 37981                           ;incstack = 0
 37982  00A1BE  51FE               	movf	_enable& (0+255),w,b
 37983  00A1C0  B4D8               	btfsc	status,2,c
 37984                           
 37985                           ; BSR set to: 0
 37986  00A1C2  EC54  F00F         	call	i2_ValueDisplay	;wreg free
 37987                           
 37988                           ;display.c: 48:     enable = 1;
 37989  00A1C6  0E01               	movlw	1
 37990  00A1C8  0100               	movlb	0	; () banked
 37991  00A1CA  6FFE               	movwf	_enable& (0+255),b
 37992                           
 37993                           ; BSR set to: 0
 37994  00A1CC  0012               	return		;funcret
 37995  00A1CE                     __end_of_DisplayEnable:
 37996                           	opt callstack 0
 37997                           
 37998 ;; *************** function _DisplayDisable *****************
 37999 ;; Defined at:
 38000 ;;		line 51 in file "display.c"
 38001 ;; Parameters:    Size  Location     Type
 38002 ;;		None
 38003 ;; Auto vars:     Size  Location     Type
 38004 ;;		None
 38005 ;; Return value:  Size  Location     Type
 38006 ;;                  1    wreg      void 
 38007 ;; Registers used:
 38008 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38009 ;; Tracked objects:
 38010 ;;		On entry : 3D/2
 38011 ;;		On exit  : 3F/0
 38012 ;;		Unchanged: 0/0
 38013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38018 ;;Total ram usage:        0 bytes
 38019 ;; Hardware stack levels used:    1
 38020 ;; Hardware stack levels required when called:   10
 38021 ;; This function calls:
 38022 ;;		i2_ValueDisplay
 38023 ;; This function is called by:
 38024 ;;		_UpdateState
 38025 ;; This function uses a non-reentrant model
 38026 ;;
 38027                           
 38028                           	psect	text294
 38029  00A14C                     __ptext294:
 38030                           	opt callstack 0
 38031  00A14C                     _DisplayDisable:
 38032                           	opt callstack 2
 38033                           
 38034                           ;display.c: 52:     if (enable == 1) ValueDisplay();
 38035                           
 38036                           ; BSR set to: 0
 38037                           ;incstack = 0
 38038  00A14C  0100               	movlb	0	; () banked
 38039  00A14E  05FE               	decf	_enable& (0+255),w,b
 38040  00A150  B4D8               	btfsc	status,2,c
 38041                           
 38042                           ; BSR set to: 0
 38043  00A152  EC54  F00F         	call	i2_ValueDisplay	;wreg free
 38044                           
 38045                           ;display.c: 53:     enable = 0;
 38046  00A156  0E00               	movlw	0
 38047  00A158  0100               	movlb	0	; () banked
 38048  00A15A  6FFE               	movwf	_enable& (0+255),b
 38049                           
 38050                           ; BSR set to: 0
 38051  00A15C  0012               	return		;funcret
 38052  00A15E                     __end_of_DisplayDisable:
 38053                           	opt callstack 0
 38054                           
 38055 ;; *************** function i2_ValueDisplay *****************
 38056 ;; Defined at:
 38057 ;;		line 66 in file "display.c"
 38058 ;; Parameters:    Size  Location     Type
 38059 ;;		None
 38060 ;; Auto vars:     Size  Location     Type
 38061 ;;  ValueDisplay    2   91[BANK0 ] short 
 38062 ;;  ValueDisplay    2   89[BANK0 ] short 
 38063 ;;  ValueDisplay    2   87[BANK0 ] short 
 38064 ;;  ValueDisplay    2   82[BANK0 ] short 
 38065 ;;  ValueDisplay    2   80[BANK0 ] short 
 38066 ;;  ValueDisplay    2   67[BANK0 ] short 
 38067 ;;  ValueDisplay    2   65[BANK0 ] short 
 38068 ;;  ValueDisplay    2   63[BANK0 ] short 
 38069 ;;  ValueDisplay    2   61[BANK0 ] short 
 38070 ;;  ValueDisplay    2   59[BANK0 ] short 
 38071 ;;  ValueDisplay    2    0        short 
 38072 ;;  ValueDisplay    2    0        short 
 38073 ;;  ValueDisplay    2    0        short 
 38074 ;;  ValueDisplay    1   86[BANK0 ] char 
 38075 ;;  ValueDisplay    1   85[BANK0 ] char 
 38076 ;;  ValueDisplay    1   84[BANK0 ] char 
 38077 ;;  ValueDisplay    1   75[BANK0 ] char 
 38078 ;;  ValueDisplay    1   74[BANK0 ] char 
 38079 ;;  ValueDisplay    1   73[BANK0 ] char 
 38080 ;;  ValueDisplay    1   72[BANK0 ] char 
 38081 ;;  ValueDisplay    1   71[BANK0 ] char 
 38082 ;;  ValueDisplay    1    0        char 
 38083 ;;  ValueDisplay    1    0        char 
 38084 ;; Return value:  Size  Location     Type
 38085 ;;                  1    wreg      void 
 38086 ;; Registers used:
 38087 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38088 ;; Tracked objects:
 38089 ;;		On entry : 0/0
 38090 ;;		On exit  : 3C/0
 38091 ;;		Unchanged: 0/0
 38092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38094 ;;      Locals:         0      42       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38096 ;;      Totals:         0      42       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38097 ;;Total ram usage:       42 bytes
 38098 ;; Hardware stack levels used:    1
 38099 ;; Hardware stack levels required when called:    9
 38100 ;; This function calls:
 38101 ;;		i2_GetAlarmState
 38102 ;;		i2_GetBpm
 38103 ;;		i2_GetDisableAlarmSV1
 38104 ;;		i2_GetEp
 38105 ;;		i2_GetIp
 38106 ;;		i2_GetPmax
 38107 ;;		i2_GetSpr
 38108 ;;		i2_GetTargetEp
 38109 ;;		i2_GetTargetIp
 38110 ;;		i2_GetTde
 38111 ;;		i2_GetTdi
 38112 ;;		i2_GetTe
 38113 ;;		i2_GetTi
 38114 ;;		i2_GetVolume
 38115 ;;		i2___awdiv
 38116 ;;		i2___awmod
 38117 ;;		i2___wmul
 38118 ;;		i2_sprintf
 38119 ;; This function is called by:
 38120 ;;		_DisplayEnable
 38121 ;;		_DisplayDisable
 38122 ;;		i2_AlarmDisplay
 38123 ;;		i2_AlarmUpdateLCD
 38124 ;; This function uses a non-reentrant model
 38125 ;;
 38126                           
 38127                           	psect	text295
 38128  001EA8                     __ptext295:
 38129                           	opt callstack 0
 38130  001EA8                     i2_ValueDisplay:
 38131                           	opt callstack 3
 38132                           
 38133                           ;display.c: 67:     if (!enable) {
 38134                           
 38135                           ; BSR set to: 0
 38136                           ;incstack = 0
 38137  001EA8  0100               	movlb	0	; () banked
 38138  001EAA  51FE               	movf	_enable& (0+255),w,b
 38139  001EAC  A4D8               	btfss	status,2,c
 38140  001EAE  D01F               	goto	i2l18421
 38141                           
 38142                           ; BSR set to: 0
 38143                           ;display.c: 68:         if (msg1[0]==0) sprintf(msg1, "OxyVitaEmergency");
 38144  001EB0  0103               	movlb	3	; () banked
 38145  001EB2  51E5               	movf	_msg1& (0+255),w,b
 38146  001EB4  A4D8               	btfss	status,2,c
 38147  001EB6  D00B               	goto	i2l18415
 38148                           
 38149                           ; BSR set to: 3
 38150  001EB8  0EE5               	movlw	low _msg1
 38151  001EBA  0100               	movlb	0	; () banked
 38152  001EBC  6F77               	movwf	i2sprintf@s& (0+255),b
 38153  001EBE  0E03               	movlw	high _msg1
 38154  001EC0  6F78               	movwf	(i2sprintf@s+1)& (0+255),b
 38155  001EC2  0ECE               	movlw	low STR_8
 38156  001EC4  6F79               	movwf	i2sprintf@fmt& (0+255),b
 38157  001EC6  0EFE               	movlw	high STR_8
 38158  001EC8  6F7A               	movwf	(i2sprintf@fmt+1)& (0+255),b
 38159  001ECA  EC61  F047         	call	i2_sprintf	;wreg free
 38160  001ECE                     i2l18415:
 38161                           
 38162                           ;display.c: 69:         if (msg2[0]==0) sprintf(msg2, "Ventilator v1.0 ");
 38163  001ECE  0103               	movlb	3	; () banked
 38164  001ED0  51D1               	movf	_msg2& (0+255),w,b
 38165  001ED2  A4D8               	btfss	status,2,c
 38166  001ED4  0012               	return	
 38167                           
 38168                           ; BSR set to: 3
 38169  001ED6  0ED1               	movlw	low _msg2
 38170  001ED8  0100               	movlb	0	; () banked
 38171  001EDA  6F77               	movwf	i2sprintf@s& (0+255),b
 38172  001EDC  0E03               	movlw	high _msg2
 38173  001EDE  6F78               	movwf	(i2sprintf@s+1)& (0+255),b
 38174  001EE0  0EBD               	movlw	low STR_9
 38175  001EE2  6F79               	movwf	i2sprintf@fmt& (0+255),b
 38176  001EE4  0EFE               	movlw	high STR_9
 38177  001EE6  6F7A               	movwf	(i2sprintf@fmt+1)& (0+255),b
 38178  001EE8  EC61  F047         	call	i2_sprintf	;wreg free
 38179  001EEC  0012               	return	
 38180  001EEE                     i2l18421:
 38181                           
 38182                           ; BSR set to: 0
 38183                           ;display.c: 72:     static int cnt=0;;display.c: 74:     int16_t tdi = GetTdi();
 38184  001EEE  ECC8  F051         	call	i2_GetTdi	;wreg free
 38185  001EF2  0060  F004  F0B0   	movff	?i2_GetTdi,i2ValueDisplay@tdi
 38186  001EF8  0060  F008  F0B1   	movff	?i2_GetTdi+1,i2ValueDisplay@tdi+1
 38187                           
 38188                           ;display.c: 75:     int16_t tde = GetTde();
 38189  001EFE  EC16  F052         	call	i2_GetTde	;wreg free
 38190  001F02  0060  F004  F0B2   	movff	?i2_GetTde,i2ValueDisplay@tde
 38191  001F08  0060  F008  F0B3   	movff	?i2_GetTde+1,i2ValueDisplay@tde+1
 38192                           
 38193                           ;display.c: 76:     int16_t ti = GetTi();
 38194  001F0E  ECC1  F051         	call	i2_GetTi	;wreg free
 38195  001F12  0060  F004  F0BB   	movff	?i2_GetTi,i2ValueDisplay@ti
 38196  001F18  0060  F008  F0BC   	movff	?i2_GetTi+1,i2ValueDisplay@ti+1
 38197                           
 38198                           ;display.c: 77:     int16_t te = GetTe();
 38199  001F1E  EC10  F052         	call	i2_GetTe	;wreg free
 38200  001F22  0060  F004  F0B9   	movff	?i2_GetTe,i2ValueDisplay@te
 38201  001F28  0060  F008  F0BA   	movff	?i2_GetTe+1,i2ValueDisplay@te+1
 38202                           
 38203                           ;display.c: 78:     int8_t eti = ti/1000;
 38204  001F2E  0060  F2EC  F007   	movff	i2ValueDisplay@ti,i2___awdiv@dividend
 38205  001F34  0060  F2F0  F008   	movff	i2ValueDisplay@ti+1,i2___awdiv@dividend+1
 38206  001F3A  0E03               	movlw	3
 38207  001F3C  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 38208  001F3E  0EE8               	movlw	232
 38209  001F40  6E09               	movwf	i2___awdiv@divisor^0,c
 38210  001F42  ECFD  F03F         	call	i2___awdiv	;wreg free
 38211  001F46  5007               	movf	?i2___awdiv^0,w,c
 38212  001F48  0100               	movlb	0	; () banked
 38213  001F4A  6FA7               	movwf	i2ValueDisplay@eti& (0+255),b
 38214                           
 38215                           ; BSR set to: 0
 38216  001F4C  51A7               	movf	i2ValueDisplay@eti& (0+255),w,b
 38217  001F4E  6E01               	movwf	i2___wmul@multiplier^0,c
 38218  001F50  6A02               	clrf	(i2___wmul@multiplier+1)^0,c
 38219  001F52  BE01               	btfsc	i2___wmul@multiplier^0,7,c
 38220  001F54  0602               	decf	(i2___wmul@multiplier+1)^0,f,c
 38221  001F56  0EFC               	movlw	252
 38222  001F58  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 38223  001F5A  0E18               	movlw	24
 38224  001F5C  6E03               	movwf	i2___wmul@multiplicand^0,c
 38225  001F5E  EC06  F04D         	call	i2___wmul	;wreg free
 38226  001F62  0100               	movlb	0	; () banked
 38227  001F64  51BB               	movf	i2ValueDisplay@ti& (0+255),w,b
 38228  001F66  2401               	addwf	?i2___wmul^0,w,c
 38229  001F68  6E07               	movwf	i2___awdiv@dividend^0,c
 38230  001F6A  51BC               	movf	(i2ValueDisplay@ti+1)& (0+255),w,b
 38231  001F6C  2002               	addwfc	(?i2___wmul+1)^0,w,c
 38232  001F6E  6E08               	movwf	(i2___awdiv@dividend+1)^0,c
 38233  001F70  0E00               	movlw	0
 38234  001F72  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 38235  001F74  0E0A               	movlw	10
 38236  001F76  6E09               	movwf	i2___awdiv@divisor^0,c
 38237  001F78  ECFD  F03F         	call	i2___awdiv	;wreg free
 38238                           
 38239                           ;display.c: 80:     int8_t ete = te/1000;
 38240  001F7C  0060  F2E4  F007   	movff	i2ValueDisplay@te,i2___awdiv@dividend
 38241  001F82  0060  F2E8  F008   	movff	i2ValueDisplay@te+1,i2___awdiv@dividend+1
 38242  001F88  0E03               	movlw	3
 38243  001F8A  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 38244  001F8C  0EE8               	movlw	232
 38245  001F8E  6E09               	movwf	i2___awdiv@divisor^0,c
 38246  001F90  ECFD  F03F         	call	i2___awdiv	;wreg free
 38247  001F94  5007               	movf	?i2___awdiv^0,w,c
 38248  001F96  0100               	movlb	0	; () banked
 38249  001F98  6FA8               	movwf	i2ValueDisplay@ete& (0+255),b
 38250  001F9A  51A8               	movf	i2ValueDisplay@ete& (0+255),w,b
 38251  001F9C  6E01               	movwf	i2___wmul@multiplier^0,c
 38252  001F9E  6A02               	clrf	(i2___wmul@multiplier+1)^0,c
 38253  001FA0  BE01               	btfsc	i2___wmul@multiplier^0,7,c
 38254  001FA2  0602               	decf	(i2___wmul@multiplier+1)^0,f,c
 38255  001FA4  0EFC               	movlw	252
 38256  001FA6  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 38257  001FA8  0E18               	movlw	24
 38258  001FAA  6E03               	movwf	i2___wmul@multiplicand^0,c
 38259  001FAC  EC06  F04D         	call	i2___wmul	;wreg free
 38260  001FB0  0100               	movlb	0	; () banked
 38261  001FB2  51B9               	movf	i2ValueDisplay@te& (0+255),w,b
 38262  001FB4  2401               	addwf	?i2___wmul^0,w,c
 38263  001FB6  6E07               	movwf	i2___awdiv@dividend^0,c
 38264  001FB8  51BA               	movf	(i2ValueDisplay@te+1)& (0+255),w,b
 38265  001FBA  2002               	addwfc	(?i2___wmul+1)^0,w,c
 38266  001FBC  6E08               	movwf	(i2___awdiv@dividend+1)^0,c
 38267  001FBE  0E00               	movlw	0
 38268  001FC0  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 38269  001FC2  0E0A               	movlw	10
 38270  001FC4  6E09               	movwf	i2___awdiv@divisor^0,c
 38271  001FC6  ECFD  F03F         	call	i2___awdiv	;wreg free
 38272  001FCA  ECD6  F051         	call	i2_GetBpm	;wreg free
 38273                           
 38274                           ;display.c: 83:     int16_t pi = GetIp();
 38275  001FCE  EC97  F028         	call	i2_GetIp	;wreg free
 38276  001FD2  0060  F03C  F09B   	movff	?i2_GetIp,i2ValueDisplay@pi
 38277  001FD8  0060  F040  F09C   	movff	?i2_GetIp+1,i2ValueDisplay@pi+1
 38278                           
 38279                           ;display.c: 84:     int16_t pe = GetEp();
 38280  001FDE  ECEF  F04C         	call	i2_GetEp	;wreg free
 38281  001FE2  0060  F03C  F09D   	movff	?i2_GetEp,i2ValueDisplay@pe
 38282  001FE8  0060  F040  F09E   	movff	?i2_GetEp+1,i2ValueDisplay@pe+1
 38283                           
 38284                           ;display.c: 85:     int8_t etdi = tdi/1000;
 38285  001FEE  0060  F2C0  F007   	movff	i2ValueDisplay@tdi,i2___awdiv@dividend
 38286  001FF4  0060  F2C4  F008   	movff	i2ValueDisplay@tdi+1,i2___awdiv@dividend+1
 38287  001FFA  0E03               	movlw	3
 38288  001FFC  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 38289  001FFE  0EE8               	movlw	232
 38290  002000  6E09               	movwf	i2___awdiv@divisor^0,c
 38291  002002  ECFD  F03F         	call	i2___awdiv	;wreg free
 38292  002006  5007               	movf	?i2___awdiv^0,w,c
 38293  002008  0100               	movlb	0	; () banked
 38294  00200A  6FB4               	movwf	i2ValueDisplay@etdi& (0+255),b
 38295                           
 38296                           ; BSR set to: 0
 38297                           ;display.c: 86:     int8_t dtdi = (tdi-((int16_t) etdi)*1000)/10;
 38298  00200C  51B4               	movf	i2ValueDisplay@etdi& (0+255),w,b
 38299  00200E  6E01               	movwf	i2___wmul@multiplier^0,c
 38300  002010  6A02               	clrf	(i2___wmul@multiplier+1)^0,c
 38301  002012  BE01               	btfsc	i2___wmul@multiplier^0,7,c
 38302  002014  0602               	decf	(i2___wmul@multiplier+1)^0,f,c
 38303  002016  0EFC               	movlw	252
 38304  002018  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 38305  00201A  0E18               	movlw	24
 38306  00201C  6E03               	movwf	i2___wmul@multiplicand^0,c
 38307  00201E  EC06  F04D         	call	i2___wmul	;wreg free
 38308  002022  0100               	movlb	0	; () banked
 38309  002024  51B0               	movf	i2ValueDisplay@tdi& (0+255),w,b
 38310  002026  2401               	addwf	?i2___wmul^0,w,c
 38311  002028  6E07               	movwf	i2___awdiv@dividend^0,c
 38312  00202A  51B1               	movf	(i2ValueDisplay@tdi+1)& (0+255),w,b
 38313  00202C  2002               	addwfc	(?i2___wmul+1)^0,w,c
 38314  00202E  6E08               	movwf	(i2___awdiv@dividend+1)^0,c
 38315  002030  0E00               	movlw	0
 38316  002032  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 38317  002034  0E0A               	movlw	10
 38318  002036  6E09               	movwf	i2___awdiv@divisor^0,c
 38319  002038  ECFD  F03F         	call	i2___awdiv	;wreg free
 38320  00203C  5007               	movf	?i2___awdiv^0,w,c
 38321  00203E  0100               	movlb	0	; () banked
 38322  002040  6FA9               	movwf	i2ValueDisplay@dtdi& (0+255),b
 38323                           
 38324                           ; BSR set to: 0
 38325                           ;display.c: 87:     int8_t etde = tde/1000;
 38326  002042  0060  F2C8  F007   	movff	i2ValueDisplay@tde,i2___awdiv@dividend
 38327  002048  0060  F2CC  F008   	movff	i2ValueDisplay@tde+1,i2___awdiv@dividend+1
 38328  00204E  0E03               	movlw	3
 38329  002050  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 38330  002052  0EE8               	movlw	232
 38331  002054  6E09               	movwf	i2___awdiv@divisor^0,c
 38332  002056  ECFD  F03F         	call	i2___awdiv	;wreg free
 38333  00205A  5007               	movf	?i2___awdiv^0,w,c
 38334  00205C  0100               	movlb	0	; () banked
 38335  00205E  6FB5               	movwf	i2ValueDisplay@etde& (0+255),b
 38336                           
 38337                           ; BSR set to: 0
 38338                           ;display.c: 88:     int8_t dtde = (tde-((int16_t) etde)*1000)/10;
 38339  002060  51B5               	movf	i2ValueDisplay@etde& (0+255),w,b
 38340  002062  6E01               	movwf	i2___wmul@multiplier^0,c
 38341  002064  6A02               	clrf	(i2___wmul@multiplier+1)^0,c
 38342  002066  BE01               	btfsc	i2___wmul@multiplier^0,7,c
 38343  002068  0602               	decf	(i2___wmul@multiplier+1)^0,f,c
 38344  00206A  0EFC               	movlw	252
 38345  00206C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 38346  00206E  0E18               	movlw	24
 38347  002070  6E03               	movwf	i2___wmul@multiplicand^0,c
 38348  002072  EC06  F04D         	call	i2___wmul	;wreg free
 38349  002076  0100               	movlb	0	; () banked
 38350  002078  51B2               	movf	i2ValueDisplay@tde& (0+255),w,b
 38351  00207A  2401               	addwf	?i2___wmul^0,w,c
 38352  00207C  6E07               	movwf	i2___awdiv@dividend^0,c
 38353  00207E  51B3               	movf	(i2ValueDisplay@tde+1)& (0+255),w,b
 38354  002080  2002               	addwfc	(?i2___wmul+1)^0,w,c
 38355  002082  6E08               	movwf	(i2___awdiv@dividend+1)^0,c
 38356  002084  0E00               	movlw	0
 38357  002086  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 38358  002088  0E0A               	movlw	10
 38359  00208A  6E09               	movwf	i2___awdiv@divisor^0,c
 38360  00208C  ECFD  F03F         	call	i2___awdiv	;wreg free
 38361  002090  5007               	movf	?i2___awdiv^0,w,c
 38362  002092  0100               	movlb	0	; () banked
 38363  002094  6FAA               	movwf	i2ValueDisplay@dtde& (0+255),b
 38364                           
 38365                           ; BSR set to: 0
 38366                           ;display.c: 89:     int16_t r;;display.c: 90:     if (ti!=0) r = (te)/(ti/10);
 38367  002096  51BB               	movf	i2ValueDisplay@ti& (0+255),w,b
 38368  002098  11BC               	iorwf	(i2ValueDisplay@ti+1)& (0+255),w,b
 38369  00209A  B4D8               	btfsc	status,2,c
 38370  00209C  D027               	goto	i2l18445
 38371                           
 38372                           ; BSR set to: 0
 38373  00209E  0E00               	movlw	0
 38374  0020A0  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 38375  0020A2  0E0A               	movlw	10
 38376  0020A4  6E09               	movwf	i2___awdiv@divisor^0,c
 38377  0020A6  0060  F2EC  F007   	movff	i2ValueDisplay@ti,i2___awdiv@dividend
 38378  0020AC  0060  F2F0  F008   	movff	i2ValueDisplay@ti+1,i2___awdiv@dividend+1
 38379  0020B2  ECFD  F03F         	call	i2___awdiv	;wreg free
 38380  0020B6  0060  F01C  F0A5   	movff	?i2___awdiv,i2_ValueDisplay$7130
 38381  0020BC  0060  F020  F0A6   	movff	?i2___awdiv+1,i2_ValueDisplay$7130+1
 38382  0020C2  0060  F2E4  F007   	movff	i2ValueDisplay@te,i2___awdiv@dividend
 38383  0020C8  0060  F2E8  F008   	movff	i2ValueDisplay@te+1,i2___awdiv@dividend+1
 38384  0020CE  0060  F294  F009   	movff	i2_ValueDisplay$7130,i2___awdiv@divisor
 38385  0020D4  0060  F298  F00A   	movff	i2_ValueDisplay$7130+1,i2___awdiv@divisor+1
 38386  0020DA  ECFD  F03F         	call	i2___awdiv	;wreg free
 38387  0020DE  0060  F01C  F0B7   	movff	?i2___awdiv,i2ValueDisplay@r
 38388  0020E4  0060  F020  F0B8   	movff	?i2___awdiv+1,i2ValueDisplay@r+1
 38389  0020EA  D004               	goto	i2l18447
 38390  0020EC                     i2l18445:
 38391                           
 38392                           ; BSR set to: 0
 38393  0020EC  0E00               	movlw	0
 38394  0020EE  6FB8               	movwf	(i2ValueDisplay@r+1)& (0+255),b
 38395  0020F0  0E00               	movlw	0
 38396  0020F2  6FB7               	movwf	i2ValueDisplay@r& (0+255),b
 38397  0020F4                     i2l18447:
 38398                           
 38399                           ;display.c: 92:     int8_t er = r/10;
 38400  0020F4  0060  F2DC  F007   	movff	i2ValueDisplay@r,i2___awdiv@dividend
 38401  0020FA  0060  F2E0  F008   	movff	i2ValueDisplay@r+1,i2___awdiv@dividend+1
 38402  002100  0E00               	movlw	0
 38403  002102  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 38404  002104  0E0A               	movlw	10
 38405  002106  6E09               	movwf	i2___awdiv@divisor^0,c
 38406  002108  ECFD  F03F         	call	i2___awdiv	;wreg free
 38407  00210C  5007               	movf	?i2___awdiv^0,w,c
 38408  00210E  0100               	movlb	0	; () banked
 38409  002110  6FB6               	movwf	i2ValueDisplay@er& (0+255),b
 38410                           
 38411                           ; BSR set to: 0
 38412                           ;display.c: 93:     int8_t dr = (r-((int16_t) er)*10);
 38413  002112  51B6               	movf	i2ValueDisplay@er& (0+255),w,b
 38414  002114  0DF6               	mullw	-10
 38415  002116  50F3               	movf	243,w,c
 38416  002118  25B7               	addwf	i2ValueDisplay@r& (0+255),w,b
 38417  00211A  6FAB               	movwf	i2ValueDisplay@dr& (0+255),b
 38418                           
 38419                           ; BSR set to: 0
 38420  00211C  ECBB  F04D         	call	i2_GetTargetIp	;wreg free
 38421  002120  ECCE  F04D         	call	i2_GetTargetEp	;wreg free
 38422                           
 38423                           ;display.c: 96:     int16_t vol = GetVolume();
 38424  002124  ECBA  F051         	call	i2_GetVolume	;wreg free
 38425  002128  0060  F004  F09F   	movff	?i2_GetVolume,i2ValueDisplay@vol
 38426  00212E  0060  F008  F0A0   	movff	?i2_GetVolume+1,i2ValueDisplay@vol+1
 38427                           
 38428                           ;display.c: 97:     int16_t pmax = GetPmax();
 38429  002134  ECE1  F04D         	call	i2_GetPmax	;wreg free
 38430  002138  0060  F03C  F0A1   	movff	?i2_GetPmax,i2ValueDisplay@pmax
 38431  00213E  0060  F040  F0A2   	movff	?i2_GetPmax+1,i2ValueDisplay@pmax+1
 38432                           
 38433                           ;display.c: 98:     int16_t spr = GetSpr();
 38434  002144  ECCF  F051         	call	i2_GetSpr	;wreg free
 38435  002148  0060  F004  F0A3   	movff	?i2_GetSpr,i2ValueDisplay@spr
 38436  00214E  0060  F008  F0A4   	movff	?i2_GetSpr+1,i2ValueDisplay@spr+1
 38437                           
 38438                           ;display.c: 102:     sprintf(msg1, "%2d%% %d.%02d %d.%02d%c%s", spr, etde,dtde, etdi, dt
      +                          di, GetDisableAlarmSV1() ? 'd':' ', calibrate? "Ca" : GetAlarmState() );
 38439  002154  0100               	movlb	0	; () banked
 38440  002156  51FF               	movf	_calibrate& (0+255),w,b
 38441  002158  A4D8               	btfss	status,2,c
 38442  00215A  D009               	goto	i2l18465
 38443                           
 38444                           ; BSR set to: 0
 38445  00215C  EC03  F048         	call	i2_GetAlarmState	;wreg free
 38446  002160  0060  F014  F0AC   	movff	?i2_GetAlarmState,i2_ValueDisplay$4007
 38447  002166  0060  F018  F0AD   	movff	?i2_GetAlarmState+1,i2_ValueDisplay$4007+1
 38448  00216C  D004               	goto	i2l18467
 38449  00216E                     i2l18465:
 38450                           
 38451                           ; BSR set to: 0
 38452  00216E  0EF9               	movlw	low STR_11
 38453  002170  6FAC               	movwf	i2_ValueDisplay$4007& (0+255),b
 38454  002172  0EFF               	movlw	high STR_11
 38455  002174  6FAD               	movwf	(i2_ValueDisplay$4007+1)& (0+255),b
 38456  002176                     i2l18467:
 38457  002176  EC1D  F053         	call	i2_GetDisableAlarmSV1	;wreg free
 38458  00217A  0900               	iorlw	0
 38459  00217C  A4D8               	btfss	status,2,c
 38460  00217E  D004               	goto	i2l18471
 38461                           
 38462                           ; BSR set to: 0
 38463  002180  0E00               	movlw	0
 38464  002182  6FAF               	movwf	(i2_ValueDisplay$4008+1)& (0+255),b
 38465  002184  0E20               	movlw	32
 38466  002186  D003               	goto	L14
 38467  002188                     i2l18471:
 38468                           
 38469                           ; BSR set to: 0
 38470  002188  0E00               	movlw	0
 38471  00218A  6FAF               	movwf	(i2_ValueDisplay$4008+1)& (0+255),b
 38472  00218C  0E64               	movlw	100
 38473  00218E                     L14:
 38474  00218E  6FAE               	movwf	i2_ValueDisplay$4008& (0+255),b
 38475                           
 38476                           ; BSR set to: 0
 38477  002190  0EE5               	movlw	low _msg1
 38478  002192  6F77               	movwf	i2sprintf@s& (0+255),b
 38479  002194  0E03               	movlw	high _msg1
 38480  002196  6F78               	movwf	(i2sprintf@s+1)& (0+255),b
 38481  002198  0E67               	movlw	low STR_10
 38482  00219A  6F79               	movwf	i2sprintf@fmt& (0+255),b
 38483  00219C  0EFE               	movlw	high STR_10
 38484  00219E  6F7A               	movwf	(i2sprintf@fmt+1)& (0+255),b
 38485  0021A0  0060  F28C  F07B   	movff	i2ValueDisplay@spr,?i2_sprintf+4
 38486  0021A6  0060  F290  F07C   	movff	i2ValueDisplay@spr+1,?i2_sprintf+5
 38487  0021AC  51B5               	movf	i2ValueDisplay@etde& (0+255),w,b
 38488  0021AE  6F7D               	movwf	(?i2_sprintf+6)& (0+255),b
 38489  0021B0  6B7E               	clrf	(?i2_sprintf+7)& (0+255),b
 38490  0021B2  BF7D               	btfsc	(?i2_sprintf+6)& (0+255),7,b
 38491  0021B4  077E               	decf	(?i2_sprintf+7)& (0+255),f,b
 38492  0021B6  51AA               	movf	i2ValueDisplay@dtde& (0+255),w,b
 38493  0021B8  6F7F               	movwf	(?i2_sprintf+8)& (0+255),b
 38494  0021BA  6B80               	clrf	(?i2_sprintf+9)& (0+255),b
 38495  0021BC  BF7F               	btfsc	(?i2_sprintf+8)& (0+255),7,b
 38496  0021BE  0780               	decf	(?i2_sprintf+9)& (0+255),f,b
 38497  0021C0  51B4               	movf	i2ValueDisplay@etdi& (0+255),w,b
 38498  0021C2  6F81               	movwf	(?i2_sprintf+10)& (0+255),b
 38499  0021C4  6B82               	clrf	(?i2_sprintf+11)& (0+255),b
 38500  0021C6  BF81               	btfsc	(?i2_sprintf+10)& (0+255),7,b
 38501  0021C8  0782               	decf	(?i2_sprintf+11)& (0+255),f,b
 38502  0021CA  51A9               	movf	i2ValueDisplay@dtdi& (0+255),w,b
 38503  0021CC  6F83               	movwf	(?i2_sprintf+12)& (0+255),b
 38504  0021CE  6B84               	clrf	(?i2_sprintf+13)& (0+255),b
 38505  0021D0  BF83               	btfsc	(?i2_sprintf+12)& (0+255),7,b
 38506  0021D2  0784               	decf	(?i2_sprintf+13)& (0+255),f,b
 38507  0021D4  0060  F2B8  F085   	movff	i2_ValueDisplay$4008,?i2_sprintf+14
 38508  0021DA  0060  F2BC  F086   	movff	i2_ValueDisplay$4008+1,?i2_sprintf+15
 38509  0021E0  0060  F2B0  F087   	movff	i2_ValueDisplay$4007,?i2_sprintf+16
 38510  0021E6  0060  F2B4  F088   	movff	i2_ValueDisplay$4007+1,?i2_sprintf+17
 38511  0021EC  EC61  F047         	call	i2_sprintf	;wreg free
 38512                           
 38513                           ; BSR set to: 0
 38514                           ;display.c: 104:     sprintf(msg3, "%1d%1d %2d %2d %2d %4d", er, dr, pe, pi, pmax, vol);
 38515  0021F0  0EBD               	movlw	low _msg3
 38516  0021F2  6F77               	movwf	i2sprintf@s& (0+255),b
 38517  0021F4  0E03               	movlw	high _msg3
 38518  0021F6  6F78               	movwf	(i2sprintf@s+1)& (0+255),b
 38519  0021F8  0E81               	movlw	low STR_12
 38520  0021FA  6F79               	movwf	i2sprintf@fmt& (0+255),b
 38521  0021FC  0EFE               	movlw	high STR_12
 38522  0021FE  6F7A               	movwf	(i2sprintf@fmt+1)& (0+255),b
 38523  002200  51B6               	movf	i2ValueDisplay@er& (0+255),w,b
 38524  002202  6F7B               	movwf	(?i2_sprintf+4)& (0+255),b
 38525  002204  6B7C               	clrf	(?i2_sprintf+5)& (0+255),b
 38526  002206  BF7B               	btfsc	(?i2_sprintf+4)& (0+255),7,b
 38527  002208  077C               	decf	(?i2_sprintf+5)& (0+255),f,b
 38528  00220A  51AB               	movf	i2ValueDisplay@dr& (0+255),w,b
 38529  00220C  6F7D               	movwf	(?i2_sprintf+6)& (0+255),b
 38530  00220E  6B7E               	clrf	(?i2_sprintf+7)& (0+255),b
 38531  002210  BF7D               	btfsc	(?i2_sprintf+6)& (0+255),7,b
 38532  002212  077E               	decf	(?i2_sprintf+7)& (0+255),f,b
 38533  002214  0060  F274  F07F   	movff	i2ValueDisplay@pe,?i2_sprintf+8
 38534  00221A  0060  F278  F080   	movff	i2ValueDisplay@pe+1,?i2_sprintf+9
 38535  002220  0060  F26C  F081   	movff	i2ValueDisplay@pi,?i2_sprintf+10
 38536  002226  0060  F270  F082   	movff	i2ValueDisplay@pi+1,?i2_sprintf+11
 38537  00222C  0060  F284  F083   	movff	i2ValueDisplay@pmax,?i2_sprintf+12
 38538  002232  0060  F288  F084   	movff	i2ValueDisplay@pmax+1,?i2_sprintf+13
 38539  002238  0060  F27C  F085   	movff	i2ValueDisplay@vol,?i2_sprintf+14
 38540  00223E  0060  F280  F086   	movff	i2ValueDisplay@vol+1,?i2_sprintf+15
 38541  002244  EC61  F047         	call	i2_sprintf	;wreg free
 38542                           
 38543                           ; BSR set to: 0
 38544                           ;display.c: 106:     cnt++;
 38545  002248  0102               	movlb	2	; () banked
 38546  00224A  4B88               	infsnz	ValueDisplay@cnt& (0+255),f,b
 38547  00224C  2B89               	incf	(ValueDisplay@cnt+1)& (0+255),f,b
 38548                           
 38549                           ; BSR set to: 2
 38550                           ;display.c: 107:     cnt=cnt%10;
 38551  00224E  0060  FA20  F001   	movff	ValueDisplay@cnt,i2___awmod@dividend
 38552  002254  0060  FA24  F002   	movff	ValueDisplay@cnt+1,i2___awmod@dividend+1
 38553  00225A  0E00               	movlw	0
 38554  00225C  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 38555  00225E  0E0A               	movlw	10
 38556  002260  6E03               	movwf	i2___awmod@divisor^0,c
 38557  002262  ECB9  F041         	call	i2___awmod	;wreg free
 38558  002266  0060  F004  F288   	movff	?i2___awmod,ValueDisplay@cnt
 38559  00226C  0060  F008  F289   	movff	?i2___awmod+1,ValueDisplay@cnt+1
 38560  002272  0012               	return		;funcret
 38561  002274                     __end_ofi2_ValueDisplay:
 38562                           	opt callstack 0
 38563                           
 38564 ;; *************** function i2_sprintf *****************
 38565 ;; Defined at:
 38566 ;;		line 9 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
 38567 ;; Parameters:    Size  Location     Type
 38568 ;;  s               2   23[BANK0 ] PTR unsigned char 
 38569 ;;		 -> msg3(20), msg2(20), msg1(20), msg4(20), 
 38570 ;;  fmt             2   25[BANK0 ] PTR const unsigned char 
 38571 ;;		 -> STR_13(8), STR_12(23), STR_10(26), STR_9(17), 
 38572 ;;		 -> STR_8(17), STR_7(15), 
 38573 ;; Auto vars:     Size  Location     Type
 38574 ;;  sprintf         6   45[BANK0 ] struct _IO_FILE
 38575 ;;  sprintf         2   43[BANK0 ] PTR void [1]
 38576 ;;		 -> ?i2_sprintf(2), ?_printf(2), ?_sprintf(2), 
 38577 ;;  sprintf         2    0        int 
 38578 ;; Return value:  Size  Location     Type
 38579 ;;                  2   23[BANK0 ] int 
 38580 ;; Registers used:
 38581 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38582 ;; Tracked objects:
 38583 ;;		On entry : 3F/0
 38584 ;;		On exit  : 3F/0
 38585 ;;		Unchanged: 0/0
 38586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38587 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38588 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38590 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38591 ;;Total ram usage:       28 bytes
 38592 ;; Hardware stack levels used:    1
 38593 ;; Hardware stack levels required when called:    8
 38594 ;; This function calls:
 38595 ;;		i2_vfprintf
 38596 ;; This function is called by:
 38597 ;;		_DisplayCalibrate
 38598 ;;		i2_ValueDisplay
 38599 ;;		i2_AlarmDisplay
 38600 ;; This function uses a non-reentrant model
 38601 ;;
 38602                           
 38603                           	psect	text296
 38604  008EC2                     __ptext296:
 38605                           	opt callstack 0
 38606  008EC2                     i2_sprintf:
 38607                           	opt callstack 3
 38608                           
 38609                           ; BSR set to: 0
 38610                           
 38611                           ;incstack = 0
 38612  008EC2  0E7B               	movlw	low (?i2_sprintf+4)
 38613  008EC4  6F8B               	movwf	i2sprintf@ap& (0+255),b
 38614  008EC6  6B8C               	clrf	(i2sprintf@ap+1)& (0+255),b
 38615  008EC8  0060  F1DC  F08D   	movff	i2sprintf@s,i2sprintf@f
 38616  008ECE  0060  F1E0  F08E   	movff	i2sprintf@s+1,i2sprintf@f+1
 38617                           
 38618                           ; BSR set to: 0
 38619  008ED4  0E00               	movlw	0
 38620  008ED6  6F90               	movwf	(i2sprintf@f+3)& (0+255),b
 38621  008ED8  0E00               	movlw	0
 38622  008EDA  6F8F               	movwf	(i2sprintf@f+2)& (0+255),b
 38623                           
 38624                           ; BSR set to: 0
 38625  008EDC  0E00               	movlw	0
 38626  008EDE  6F92               	movwf	(i2sprintf@f+5)& (0+255),b
 38627  008EE0  0E00               	movlw	0
 38628  008EE2  6F91               	movwf	(i2sprintf@f+4)& (0+255),b
 38629                           
 38630                           ; BSR set to: 0
 38631  008EE4  0E8D               	movlw	low i2sprintf@f
 38632  008EE6  6E4F               	movwf	i2vfprintf@fp^0,c
 38633  008EE8  6A50               	clrf	(i2vfprintf@fp+1)^0,c
 38634  008EEA  0060  F1E4  F051   	movff	i2sprintf@fmt,i2vfprintf@fmt
 38635  008EF0  0060  F1E8  F052   	movff	i2sprintf@fmt+1,i2vfprintf@fmt+1
 38636  008EF6  0E8B               	movlw	low i2sprintf@ap
 38637  008EF8  6E53               	movwf	i2vfprintf@ap^0,c
 38638  008EFA  6A54               	clrf	(i2vfprintf@ap+1)^0,c
 38639  008EFC  ECE5  F043         	call	i2_vfprintf	;wreg free
 38640                           
 38641                           ; BSR set to: 2
 38642  008F00  0100               	movlb	0	; () banked
 38643  008F02  518F               	movf	(i2sprintf@f+2)& (0+255),w,b
 38644  008F04  2577               	addwf	i2sprintf@s& (0+255),w,b
 38645  008F06  6ED9               	movwf	fsr2l,c
 38646  008F08  5190               	movf	(i2sprintf@f+3)& (0+255),w,b
 38647  008F0A  2178               	addwfc	(i2sprintf@s+1)& (0+255),w,b
 38648  008F0C  6EDA               	movwf	fsr2h,c
 38649  008F0E  0E00               	movlw	0
 38650  008F10  6EDF               	movwf	indf2,c
 38651                           
 38652                           ; BSR set to: 0
 38653  008F12  0012               	return		;funcret
 38654  008F14                     __end_ofi2_sprintf:
 38655                           	opt callstack 0
 38656                           
 38657 ;; *************** function i2___awmod *****************
 38658 ;; Defined at:
 38659 ;;		line 7 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 38660 ;; Parameters:    Size  Location     Type
 38661 ;;  dividend        2    0[COMRAM] int 
 38662 ;;  divisor         2    2[COMRAM] int 
 38663 ;; Auto vars:     Size  Location     Type
 38664 ;;  __awmod         1    5[COMRAM] unsigned char 
 38665 ;;  __awmod         1    4[COMRAM] unsigned char 
 38666 ;; Return value:  Size  Location     Type
 38667 ;;                  2    0[COMRAM] int 
 38668 ;; Registers used:
 38669 ;;		wreg, status,2, status,0
 38670 ;; Tracked objects:
 38671 ;;		On entry : 3D/2
 38672 ;;		On exit  : 3D/0
 38673 ;;		Unchanged: 3D/0
 38674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38675 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38676 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38678 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38679 ;;Total ram usage:        6 bytes
 38680 ;; Hardware stack levels used:    1
 38681 ;; This function calls:
 38682 ;;		Nothing
 38683 ;; This function is called by:
 38684 ;;		_MonitorPressureTask
 38685 ;;		_ControllerTimerHandler
 38686 ;;		i2_ValueDisplay
 38687 ;;		i2_AlarmDisplay
 38688 ;; This function uses a non-reentrant model
 38689 ;;
 38690                           
 38691                           	psect	text297
 38692  008372                     __ptext297:
 38693                           	opt callstack 0
 38694  008372                     i2___awmod:
 38695                           	opt callstack 14
 38696                           
 38697                           ; BSR set to: 0
 38698                           ;incstack = 0
 38699  008372  0E00               	movlw	0
 38700  008374  6E06               	movwf	i2___awmod@sign^0,c
 38701  008376  AE02               	btfss	(i2___awmod@dividend+1)^0,7,c
 38702  008378  D006               	goto	i2l18245
 38703  00837A  6C01               	negf	i2___awmod@dividend^0,c
 38704  00837C  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
 38705  00837E  B0D8               	btfsc	status,0,c
 38706  008380  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
 38707  008382  0E01               	movlw	1
 38708  008384  6E06               	movwf	i2___awmod@sign^0,c
 38709  008386                     i2l18245:
 38710  008386  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
 38711  008388  D004               	goto	i2l18249
 38712  00838A  6C03               	negf	i2___awmod@divisor^0,c
 38713  00838C  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
 38714  00838E  B0D8               	btfsc	status,0,c
 38715  008390  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
 38716  008392                     i2l18249:
 38717  008392  5003               	movf	i2___awmod@divisor^0,w,c
 38718  008394  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
 38719  008396  B4D8               	btfsc	status,2,c
 38720  008398  D018               	goto	i2l18265
 38721  00839A  0E01               	movlw	1
 38722  00839C  6E05               	movwf	i2___awmod@counter^0,c
 38723  00839E  D004               	goto	i2l18255
 38724  0083A0                     i2l18253:
 38725  0083A0  90D8               	bcf	status,0,c
 38726  0083A2  3603               	rlcf	i2___awmod@divisor^0,f,c
 38727  0083A4  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
 38728  0083A6  2A05               	incf	i2___awmod@counter^0,f,c
 38729  0083A8                     i2l18255:
 38730  0083A8  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
 38731  0083AA  D7FA               	goto	i2l18253
 38732  0083AC                     i2u1778_40:
 38733  0083AC  5003               	movf	i2___awmod@divisor^0,w,c
 38734  0083AE  5C01               	subwf	i2___awmod@dividend^0,w,c
 38735  0083B0  5004               	movf	(i2___awmod@divisor+1)^0,w,c
 38736  0083B2  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
 38737  0083B4  A0D8               	btfss	status,0,c
 38738  0083B6  D004               	goto	i2l18261
 38739  0083B8  5003               	movf	i2___awmod@divisor^0,w,c
 38740  0083BA  5E01               	subwf	i2___awmod@dividend^0,f,c
 38741  0083BC  5004               	movf	(i2___awmod@divisor+1)^0,w,c
 38742  0083BE  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
 38743  0083C0                     i2l18261:
 38744  0083C0  90D8               	bcf	status,0,c
 38745  0083C2  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
 38746  0083C4  3203               	rrcf	i2___awmod@divisor^0,f,c
 38747  0083C6  2E05               	decfsz	i2___awmod@counter^0,f,c
 38748  0083C8  D7F1               	goto	i2u1778_40
 38749  0083CA                     i2l18265:
 38750  0083CA  5006               	movf	i2___awmod@sign^0,w,c
 38751  0083CC  B4D8               	btfsc	status,2,c
 38752  0083CE  D004               	goto	i2l18269
 38753  0083D0  6C01               	negf	i2___awmod@dividend^0,c
 38754  0083D2  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
 38755  0083D4  B0D8               	btfsc	status,0,c
 38756  0083D6  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
 38757  0083D8                     i2l18269:
 38758  0083D8  0060  F004  F001   	movff	i2___awmod@dividend,?i2___awmod
 38759  0083DE  0060  F008  F002   	movff	i2___awmod@dividend+1,?i2___awmod+1
 38760  0083E4  0012               	return		;funcret
 38761  0083E6                     __end_ofi2___awmod:
 38762                           	opt callstack 0
 38763                           
 38764 ;; *************** function i2_GetVolume *****************
 38765 ;; Defined at:
 38766 ;;		line 169 in file "monitor.c"
 38767 ;; Parameters:    Size  Location     Type
 38768 ;;		None
 38769 ;; Auto vars:     Size  Location     Type
 38770 ;;		None
 38771 ;; Return value:  Size  Location     Type
 38772 ;;                  2    0[COMRAM] short 
 38773 ;; Registers used:
 38774 ;;		None
 38775 ;; Tracked objects:
 38776 ;;		On entry : 0/0
 38777 ;;		On exit  : 0/0
 38778 ;;		Unchanged: 0/0
 38779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38780 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38783 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38784 ;;Total ram usage:        2 bytes
 38785 ;; Hardware stack levels used:    1
 38786 ;; This function calls:
 38787 ;;		Nothing
 38788 ;; This function is called by:
 38789 ;;		i2_ValueDisplay
 38790 ;; This function uses a non-reentrant model
 38791 ;;
 38792                           
 38793                           	psect	text298
 38794  00A374                     __ptext298:
 38795                           	opt callstack 0
 38796  00A374                     i2_GetVolume:
 38797                           	opt callstack 11
 38798                           
 38799                           ;incstack = 0
 38800  00A374  0060  F378  F001   	movff	_volume,?i2_GetVolume
 38801  00A37A  0060  F37C  F002   	movff	_volume+1,?i2_GetVolume+1
 38802  00A380  0012               	return		;funcret
 38803  00A382                     __end_ofi2_GetVolume:
 38804                           	opt callstack 0
 38805                           
 38806 ;; *************** function i2_GetTi *****************
 38807 ;; Defined at:
 38808 ;;		line 162 in file "monitor.c"
 38809 ;; Parameters:    Size  Location     Type
 38810 ;;		None
 38811 ;; Auto vars:     Size  Location     Type
 38812 ;;		None
 38813 ;; Return value:  Size  Location     Type
 38814 ;;                  2    0[COMRAM] short 
 38815 ;; Registers used:
 38816 ;;		wreg, status,2, status,0
 38817 ;; Tracked objects:
 38818 ;;		On entry : 3F/1
 38819 ;;		On exit  : 3F/2
 38820 ;;		Unchanged: 0/0
 38821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38822 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38825 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38826 ;;Total ram usage:        2 bytes
 38827 ;; Hardware stack levels used:    1
 38828 ;; This function calls:
 38829 ;;		Nothing
 38830 ;; This function is called by:
 38831 ;;		i2_ValueDisplay
 38832 ;; This function uses a non-reentrant model
 38833 ;;
 38834                           
 38835                           	psect	text299
 38836  00A382                     __ptext299:
 38837                           	opt callstack 0
 38838  00A382                     i2_GetTi:
 38839                           	opt callstack 11
 38840                           
 38841                           ; BSR set to: 1
 38842                           
 38843                           ;incstack = 0
 38844  00A382  90D8               	bcf	status,0,c
 38845  00A384  0102               	movlb	2	; () banked
 38846  00A386  355A               	rlcf	_ti& (0+255),w,b
 38847  00A388  6E01               	movwf	?i2_GetTi^0,c
 38848  00A38A  355B               	rlcf	(_ti+1)& (0+255),w,b
 38849  00A38C  6E02               	movwf	(?i2_GetTi+1)^0,c
 38850                           
 38851                           ; BSR set to: 2
 38852  00A38E  0012               	return		;funcret
 38853  00A390                     __end_ofi2_GetTi:
 38854                           	opt callstack 0
 38855                           
 38856 ;; *************** function i2_GetTe *****************
 38857 ;; Defined at:
 38858 ;;		line 163 in file "monitor.c"
 38859 ;; Parameters:    Size  Location     Type
 38860 ;;		None
 38861 ;; Auto vars:     Size  Location     Type
 38862 ;;		None
 38863 ;; Return value:  Size  Location     Type
 38864 ;;                  2    0[COMRAM] short 
 38865 ;; Registers used:
 38866 ;;		wreg, status,2, status,0
 38867 ;; Tracked objects:
 38868 ;;		On entry : 3F/2
 38869 ;;		On exit  : 3F/2
 38870 ;;		Unchanged: 0/0
 38871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38872 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38875 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38876 ;;Total ram usage:        2 bytes
 38877 ;; Hardware stack levels used:    1
 38878 ;; This function calls:
 38879 ;;		Nothing
 38880 ;; This function is called by:
 38881 ;;		i2_ValueDisplay
 38882 ;; This function uses a non-reentrant model
 38883 ;;
 38884                           
 38885                           	psect	text300
 38886  00A420                     __ptext300:
 38887                           	opt callstack 0
 38888  00A420                     i2_GetTe:
 38889                           	opt callstack 11
 38890                           
 38891                           ; BSR set to: 2
 38892                           
 38893                           ; BSR set to: 2
 38894                           ;incstack = 0
 38895  00A420  90D8               	bcf	status,0,c
 38896  00A422  3558               	rlcf	_te& (0+255),w,b
 38897  00A424  6E01               	movwf	?i2_GetTe^0,c
 38898  00A426  3559               	rlcf	(_te+1)& (0+255),w,b
 38899  00A428  6E02               	movwf	(?i2_GetTe+1)^0,c
 38900                           
 38901                           ; BSR set to: 2
 38902  00A42A  0012               	return		;funcret
 38903  00A42C                     __end_ofi2_GetTe:
 38904                           	opt callstack 0
 38905                           
 38906 ;; *************** function i2_GetTdi *****************
 38907 ;; Defined at:
 38908 ;;		line 161 in file "monitor.c"
 38909 ;; Parameters:    Size  Location     Type
 38910 ;;		None
 38911 ;; Auto vars:     Size  Location     Type
 38912 ;;		None
 38913 ;; Return value:  Size  Location     Type
 38914 ;;                  2    0[COMRAM] short 
 38915 ;; Registers used:
 38916 ;;		wreg, status,2, status,0
 38917 ;; Tracked objects:
 38918 ;;		On entry : 3F/0
 38919 ;;		On exit  : 3F/1
 38920 ;;		Unchanged: 0/0
 38921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38922 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38925 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38926 ;;Total ram usage:        2 bytes
 38927 ;; Hardware stack levels used:    1
 38928 ;; This function calls:
 38929 ;;		Nothing
 38930 ;; This function is called by:
 38931 ;;		i2_ValueDisplay
 38932 ;; This function uses a non-reentrant model
 38933 ;;
 38934                           
 38935                           	psect	text301
 38936  00A390                     __ptext301:
 38937                           	opt callstack 0
 38938  00A390                     i2_GetTdi:
 38939                           	opt callstack 11
 38940                           
 38941                           ; BSR set to: 0
 38942                           
 38943                           ; BSR set to: 2
 38944                           ;incstack = 0
 38945  00A390  90D8               	bcf	status,0,c
 38946  00A392  0101               	movlb	1	; () banked
 38947  00A394  35DB               	rlcf	_tdi& (0+255),w,b
 38948  00A396  6E01               	movwf	?i2_GetTdi^0,c
 38949  00A398  35DC               	rlcf	(_tdi+1)& (0+255),w,b
 38950  00A39A  6E02               	movwf	(?i2_GetTdi+1)^0,c
 38951                           
 38952                           ; BSR set to: 1
 38953  00A39C  0012               	return		;funcret
 38954  00A39E                     __end_ofi2_GetTdi:
 38955                           	opt callstack 0
 38956                           
 38957 ;; *************** function i2_GetTde *****************
 38958 ;; Defined at:
 38959 ;;		line 160 in file "monitor.c"
 38960 ;; Parameters:    Size  Location     Type
 38961 ;;		None
 38962 ;; Auto vars:     Size  Location     Type
 38963 ;;		None
 38964 ;; Return value:  Size  Location     Type
 38965 ;;                  2    0[COMRAM] short 
 38966 ;; Registers used:
 38967 ;;		wreg, status,2, status,0
 38968 ;; Tracked objects:
 38969 ;;		On entry : 3F/1
 38970 ;;		On exit  : 3F/1
 38971 ;;		Unchanged: 0/0
 38972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38973 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38976 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38977 ;;Total ram usage:        2 bytes
 38978 ;; Hardware stack levels used:    1
 38979 ;; This function calls:
 38980 ;;		Nothing
 38981 ;; This function is called by:
 38982 ;;		i2_ValueDisplay
 38983 ;; This function uses a non-reentrant model
 38984 ;;
 38985                           
 38986                           	psect	text302
 38987  00A42C                     __ptext302:
 38988                           	opt callstack 0
 38989  00A42C                     i2_GetTde:
 38990                           	opt callstack 11
 38991                           
 38992                           ; BSR set to: 1
 38993                           
 38994                           ; BSR set to: 1
 38995                           ;incstack = 0
 38996  00A42C  90D8               	bcf	status,0,c
 38997  00A42E  35D9               	rlcf	_tde& (0+255),w,b
 38998  00A430  6E01               	movwf	?i2_GetTde^0,c
 38999  00A432  35DA               	rlcf	(_tde+1)& (0+255),w,b
 39000  00A434  6E02               	movwf	(?i2_GetTde+1)^0,c
 39001                           
 39002                           ; BSR set to: 1
 39003  00A436  0012               	return		;funcret
 39004  00A438                     __end_ofi2_GetTde:
 39005                           	opt callstack 0
 39006                           
 39007 ;; *************** function i2_GetTargetIp *****************
 39008 ;; Defined at:
 39009 ;;		line 189 in file "monitor.c"
 39010 ;; Parameters:    Size  Location     Type
 39011 ;;		None
 39012 ;; Auto vars:     Size  Location     Type
 39013 ;;		None
 39014 ;; Return value:  Size  Location     Type
 39015 ;;                  2   14[COMRAM] short 
 39016 ;; Registers used:
 39017 ;;		wreg, status,2, status,0, cstack
 39018 ;; Tracked objects:
 39019 ;;		On entry : 3F/0
 39020 ;;		On exit  : 0/0
 39021 ;;		Unchanged: 0/0
 39022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39023 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39026 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39027 ;;Total ram usage:        2 bytes
 39028 ;; Hardware stack levels used:    1
 39029 ;; Hardware stack levels required when called:    1
 39030 ;; This function calls:
 39031 ;;		i2___awdiv
 39032 ;; This function is called by:
 39033 ;;		i2_ValueDisplay
 39034 ;; This function uses a non-reentrant model
 39035 ;;
 39036                           
 39037                           	psect	text303
 39038  009B76                     __ptext303:
 39039                           	opt callstack 0
 39040  009B76                     i2_GetTargetIp:
 39041                           	opt callstack 10
 39042                           
 39043                           ; BSR set to: 0
 39044                           ;monitor.c: 190:     return targetHigh/5;
 39045                           
 39046                           ; BSR set to: 1
 39047                           ;incstack = 0
 39048  009B76  0060  F78C  F007   	movff	_targetHigh,i2___awdiv@dividend
 39049  009B7C  0060  F790  F008   	movff	_targetHigh+1,i2___awdiv@dividend+1
 39050  009B82  0E00               	movlw	0
 39051  009B84  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 39052  009B86  0E05               	movlw	5
 39053  009B88  6E09               	movwf	i2___awdiv@divisor^0,c
 39054  009B8A  ECFD  F03F         	call	i2___awdiv	;wreg free
 39055  009B8E  0060  F01C  F00F   	movff	?i2___awdiv,?i2_GetTargetIp
 39056  009B94  0060  F020  F010   	movff	?i2___awdiv+1,?i2_GetTargetIp+1
 39057  009B9A  0012               	return		;funcret
 39058  009B9C                     __end_ofi2_GetTargetIp:
 39059                           	opt callstack 0
 39060                           
 39061 ;; *************** function i2_GetTargetEp *****************
 39062 ;; Defined at:
 39063 ;;		line 193 in file "monitor.c"
 39064 ;; Parameters:    Size  Location     Type
 39065 ;;		None
 39066 ;; Auto vars:     Size  Location     Type
 39067 ;;		None
 39068 ;; Return value:  Size  Location     Type
 39069 ;;                  2   14[COMRAM] short 
 39070 ;; Registers used:
 39071 ;;		wreg, status,2, status,0, cstack
 39072 ;; Tracked objects:
 39073 ;;		On entry : 0/0
 39074 ;;		On exit  : 0/0
 39075 ;;		Unchanged: 0/0
 39076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39077 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39080 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39081 ;;Total ram usage:        2 bytes
 39082 ;; Hardware stack levels used:    1
 39083 ;; Hardware stack levels required when called:    1
 39084 ;; This function calls:
 39085 ;;		i2___awdiv
 39086 ;; This function is called by:
 39087 ;;		i2_ValueDisplay
 39088 ;; This function uses a non-reentrant model
 39089 ;;
 39090                           
 39091                           	psect	text304
 39092  009B9C                     __ptext304:
 39093                           	opt callstack 0
 39094  009B9C                     i2_GetTargetEp:
 39095                           	opt callstack 10
 39096                           
 39097                           ;monitor.c: 194:     return targetLow/5;
 39098                           
 39099                           ;incstack = 0
 39100  009B9C  0060  F784  F007   	movff	_targetLow,i2___awdiv@dividend
 39101  009BA2  0060  F788  F008   	movff	_targetLow+1,i2___awdiv@dividend+1
 39102  009BA8  0E00               	movlw	0
 39103  009BAA  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 39104  009BAC  0E05               	movlw	5
 39105  009BAE  6E09               	movwf	i2___awdiv@divisor^0,c
 39106  009BB0  ECFD  F03F         	call	i2___awdiv	;wreg free
 39107  009BB4  0060  F01C  F00F   	movff	?i2___awdiv,?i2_GetTargetEp
 39108  009BBA  0060  F020  F010   	movff	?i2___awdiv+1,?i2_GetTargetEp+1
 39109  009BC0  0012               	return		;funcret
 39110  009BC2                     __end_ofi2_GetTargetEp:
 39111                           	opt callstack 0
 39112                           
 39113 ;; *************** function i2_GetSpr *****************
 39114 ;; Defined at:
 39115 ;;		line 60 in file "controller.c"
 39116 ;; Parameters:    Size  Location     Type
 39117 ;;		None
 39118 ;; Auto vars:     Size  Location     Type
 39119 ;;		None
 39120 ;; Return value:  Size  Location     Type
 39121 ;;                  2    0[COMRAM] short 
 39122 ;; Registers used:
 39123 ;;		None
 39124 ;; Tracked objects:
 39125 ;;		On entry : 0/0
 39126 ;;		On exit  : 0/0
 39127 ;;		Unchanged: 0/0
 39128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39129 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39132 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39133 ;;Total ram usage:        2 bytes
 39134 ;; Hardware stack levels used:    1
 39135 ;; This function calls:
 39136 ;;		Nothing
 39137 ;; This function is called by:
 39138 ;;		i2_ValueDisplay
 39139 ;; This function uses a non-reentrant model
 39140 ;;
 39141                           
 39142                           	psect	text305
 39143  00A39E                     __ptext305:
 39144                           	opt callstack 0
 39145  00A39E                     i2_GetSpr:
 39146                           	opt callstack 11
 39147                           
 39148                           ;incstack = 0
 39149  00A39E  0060  F8C8  F001   	movff	_spr,?i2_GetSpr
 39150  00A3A4  0060  F8CC  F002   	movff	_spr+1,?i2_GetSpr+1
 39151  00A3AA  0012               	return		;funcret
 39152  00A3AC                     __end_ofi2_GetSpr:
 39153                           	opt callstack 0
 39154                           
 39155 ;; *************** function i2_GetPmax *****************
 39156 ;; Defined at:
 39157 ;;		line 170 in file "monitor.c"
 39158 ;; Parameters:    Size  Location     Type
 39159 ;;		None
 39160 ;; Auto vars:     Size  Location     Type
 39161 ;;		None
 39162 ;; Return value:  Size  Location     Type
 39163 ;;                  2   14[COMRAM] short 
 39164 ;; Registers used:
 39165 ;;		wreg, status,2, status,0, cstack
 39166 ;; Tracked objects:
 39167 ;;		On entry : 0/0
 39168 ;;		On exit  : 0/0
 39169 ;;		Unchanged: 0/0
 39170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39171 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39174 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39175 ;;Total ram usage:        2 bytes
 39176 ;; Hardware stack levels used:    1
 39177 ;; Hardware stack levels required when called:    1
 39178 ;; This function calls:
 39179 ;;		i2___awdiv
 39180 ;; This function is called by:
 39181 ;;		i2_ValueDisplay
 39182 ;; This function uses a non-reentrant model
 39183 ;;
 39184                           
 39185                           	psect	text306
 39186  009BC2                     __ptext306:
 39187                           	opt callstack 0
 39188  009BC2                     i2_GetPmax:
 39189                           	opt callstack 10
 39190                           
 39191                           ;incstack = 0
 39192  009BC2  0060  F360  F007   	movff	_pmax,i2___awdiv@dividend
 39193  009BC8  0060  F364  F008   	movff	_pmax+1,i2___awdiv@dividend+1
 39194  009BCE  0E00               	movlw	0
 39195  009BD0  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 39196  009BD2  0E05               	movlw	5
 39197  009BD4  6E09               	movwf	i2___awdiv@divisor^0,c
 39198  009BD6  ECFD  F03F         	call	i2___awdiv	;wreg free
 39199  009BDA  0060  F01C  F00F   	movff	?i2___awdiv,?i2_GetPmax
 39200  009BE0  0060  F020  F010   	movff	?i2___awdiv+1,?i2_GetPmax+1
 39201  009BE6  0012               	return		;funcret
 39202  009BE8                     __end_ofi2_GetPmax:
 39203                           	opt callstack 0
 39204                           
 39205 ;; *************** function i2_GetIp *****************
 39206 ;; Defined at:
 39207 ;;		line 168 in file "monitor.c"
 39208 ;; Parameters:    Size  Location     Type
 39209 ;;		None
 39210 ;; Auto vars:     Size  Location     Type
 39211 ;;		None
 39212 ;; Return value:  Size  Location     Type
 39213 ;;                  2   14[COMRAM] short 
 39214 ;; Registers used:
 39215 ;;		wreg, status,2, status,0, cstack
 39216 ;; Tracked objects:
 39217 ;;		On entry : 0/0
 39218 ;;		On exit  : 0/0
 39219 ;;		Unchanged: 0/0
 39220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39221 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39222 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39223 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39224 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39225 ;;Total ram usage:        9 bytes
 39226 ;; Hardware stack levels used:    1
 39227 ;; Hardware stack levels required when called:    1
 39228 ;; This function calls:
 39229 ;;		i2___awdiv
 39230 ;; This function is called by:
 39231 ;;		i2_ValueDisplay
 39232 ;; This function uses a non-reentrant model
 39233 ;;
 39234                           
 39235                           	psect	text307
 39236  00512E                     __ptext307:
 39237                           	opt callstack 0
 39238  00512E                     i2_GetIp:
 39239                           	opt callstack 10
 39240                           
 39241                           ;incstack = 0
 39242  00512E  0060  F74C  F007   	movff	_pHigh,i2___awdiv@dividend
 39243  005134  0060  F750  F008   	movff	_pHigh+1,i2___awdiv@dividend+1
 39244  00513A  0E00               	movlw	0
 39245  00513C  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 39246  00513E  0E05               	movlw	5
 39247  005140  6E09               	movwf	i2___awdiv@divisor^0,c
 39248  005142  ECFD  F03F         	call	i2___awdiv	;wreg free
 39249  005146  0060  F01C  F011   	movff	?i2___awdiv,??i2_GetIp
 39250  00514C  0060  F020  F012   	movff	?i2___awdiv+1,??i2_GetIp+1
 39251  005152  0060  F744  F007   	movff	_lrpi,i2___awdiv@dividend
 39252  005158  0060  F748  F008   	movff	_lrpi+1,i2___awdiv@dividend+1
 39253  00515E  0E00               	movlw	0
 39254  005160  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 39255  005162  0E05               	movlw	5
 39256  005164  6E09               	movwf	i2___awdiv@divisor^0,c
 39257  005166  ECFD  F03F         	call	i2___awdiv	;wreg free
 39258  00516A  5007               	movf	?i2___awdiv^0,w,c
 39259  00516C  5C11               	subwf	??i2_GetIp^0,w,c
 39260  00516E  5012               	movf	(??i2_GetIp+1)^0,w,c
 39261  005170  0A80               	xorlw	128
 39262  005172  6E13               	movwf	(??i2_GetIp+2)^0,c
 39263  005174  5008               	movf	(?i2___awdiv+1)^0,w,c
 39264  005176  0A80               	xorlw	128
 39265  005178  5813               	subwfb	(??i2_GetIp+2)^0,w,c
 39266  00517A  A0D8               	btfss	status,0,c
 39267  00517C  D00D               	goto	i2l18149
 39268  00517E  0060  F74C  F007   	movff	_pHigh,i2___awdiv@dividend
 39269  005184  0060  F750  F008   	movff	_pHigh+1,i2___awdiv@dividend+1
 39270  00518A  0E00               	movlw	0
 39271  00518C  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 39272  00518E  0E05               	movlw	5
 39273  005190  6E09               	movwf	i2___awdiv@divisor^0,c
 39274  005192  ECFD  F03F         	call	i2___awdiv	;wreg free
 39275  005196  D00C               	goto	L15
 39276  005198                     i2l18149:
 39277  005198  0060  F744  F007   	movff	_lrpi,i2___awdiv@dividend
 39278  00519E  0060  F748  F008   	movff	_lrpi+1,i2___awdiv@dividend+1
 39279  0051A4  0E00               	movlw	0
 39280  0051A6  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 39281  0051A8  0E05               	movlw	5
 39282  0051AA  6E09               	movwf	i2___awdiv@divisor^0,c
 39283  0051AC  ECFD  F03F         	call	i2___awdiv	;wreg free
 39284  0051B0                     L15:
 39285  0051B0  0060  F01C  F014   	movff	?i2___awdiv,i2_GetIp$4809
 39286  0051B6  0060  F020  F015   	movff	?i2___awdiv+1,i2_GetIp$4809+1
 39287  0051BC  0060  F75C  F007   	movff	_pi,i2___awdiv@dividend
 39288  0051C2  0060  F760  F008   	movff	_pi+1,i2___awdiv@dividend+1
 39289  0051C8  0E00               	movlw	0
 39290  0051CA  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 39291  0051CC  0E05               	movlw	5
 39292  0051CE  6E09               	movwf	i2___awdiv@divisor^0,c
 39293  0051D0  ECFD  F03F         	call	i2___awdiv	;wreg free
 39294  0051D4  5014               	movf	i2_GetIp$4809^0,w,c
 39295  0051D6  5C07               	subwf	?i2___awdiv^0,w,c
 39296  0051D8  5008               	movf	(?i2___awdiv+1)^0,w,c
 39297  0051DA  0A80               	xorlw	128
 39298  0051DC  6E11               	movwf	??i2_GetIp^0,c
 39299  0051DE  5015               	movf	(i2_GetIp$4809+1)^0,w,c
 39300  0051E0  0A80               	xorlw	128
 39301  0051E2  5811               	subwfb	??i2_GetIp^0,w,c
 39302  0051E4  A0D8               	btfss	status,0,c
 39303  0051E6  D013               	goto	i2l18153
 39304  0051E8  0060  F75C  F007   	movff	_pi,i2___awdiv@dividend
 39305  0051EE  0060  F760  F008   	movff	_pi+1,i2___awdiv@dividend+1
 39306  0051F4  0E00               	movlw	0
 39307  0051F6  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 39308  0051F8  0E05               	movlw	5
 39309  0051FA  6E09               	movwf	i2___awdiv@divisor^0,c
 39310  0051FC  ECFD  F03F         	call	i2___awdiv	;wreg free
 39311  005200  0060  F01C  F00F   	movff	?i2___awdiv,?i2_GetIp
 39312  005206  0060  F020  F010   	movff	?i2___awdiv+1,?i2_GetIp+1
 39313  00520C  0012               	return	
 39314  00520E                     i2l18153:
 39315  00520E  0060  F74C  F007   	movff	_pHigh,i2___awdiv@dividend
 39316  005214  0060  F750  F008   	movff	_pHigh+1,i2___awdiv@dividend+1
 39317  00521A  0E00               	movlw	0
 39318  00521C  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 39319  00521E  0E05               	movlw	5
 39320  005220  6E09               	movwf	i2___awdiv@divisor^0,c
 39321  005222  ECFD  F03F         	call	i2___awdiv	;wreg free
 39322  005226  0060  F01C  F011   	movff	?i2___awdiv,??i2_GetIp
 39323  00522C  0060  F020  F012   	movff	?i2___awdiv+1,??i2_GetIp+1
 39324  005232  0060  F744  F007   	movff	_lrpi,i2___awdiv@dividend
 39325  005238  0060  F748  F008   	movff	_lrpi+1,i2___awdiv@dividend+1
 39326  00523E  0E00               	movlw	0
 39327  005240  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 39328  005242  0E05               	movlw	5
 39329  005244  6E09               	movwf	i2___awdiv@divisor^0,c
 39330  005246  ECFD  F03F         	call	i2___awdiv	;wreg free
 39331  00524A  5007               	movf	?i2___awdiv^0,w,c
 39332  00524C  5C11               	subwf	??i2_GetIp^0,w,c
 39333  00524E  5012               	movf	(??i2_GetIp+1)^0,w,c
 39334  005250  0A80               	xorlw	128
 39335  005252  6E13               	movwf	(??i2_GetIp+2)^0,c
 39336  005254  5008               	movf	(?i2___awdiv+1)^0,w,c
 39337  005256  0A80               	xorlw	128
 39338  005258  5813               	subwfb	(??i2_GetIp+2)^0,w,c
 39339  00525A  A0D8               	btfss	status,0,c
 39340  00525C  D00D               	goto	i2l18157
 39341  00525E  0060  F74C  F007   	movff	_pHigh,i2___awdiv@dividend
 39342  005264  0060  F750  F008   	movff	_pHigh+1,i2___awdiv@dividend+1
 39343  00526A  0E00               	movlw	0
 39344  00526C  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 39345  00526E  0E05               	movlw	5
 39346  005270  6E09               	movwf	i2___awdiv@divisor^0,c
 39347  005272  ECFD  F03F         	call	i2___awdiv	;wreg free
 39348  005276  D00C               	goto	L16
 39349  005278                     i2l18157:
 39350  005278  0060  F744  F007   	movff	_lrpi,i2___awdiv@dividend
 39351  00527E  0060  F748  F008   	movff	_lrpi+1,i2___awdiv@dividend+1
 39352  005284  0E00               	movlw	0
 39353  005286  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 39354  005288  0E05               	movlw	5
 39355  00528A  6E09               	movwf	i2___awdiv@divisor^0,c
 39356  00528C  ECFD  F03F         	call	i2___awdiv	;wreg free
 39357  005290                     L16:
 39358  005290  0060  F01C  F016   	movff	?i2___awdiv,i2_GetIp$4810
 39359  005296  0060  F020  F017   	movff	?i2___awdiv+1,i2_GetIp$4810+1
 39360  00529C  0060  F058  F00F   	movff	i2_GetIp$4810,?i2_GetIp
 39361  0052A2  0060  F05C  F010   	movff	i2_GetIp$4810+1,?i2_GetIp+1
 39362  0052A8  0012               	return		;funcret
 39363  0052AA                     __end_ofi2_GetIp:
 39364                           	opt callstack 0
 39365                           
 39366 ;; *************** function i2_GetEp *****************
 39367 ;; Defined at:
 39368 ;;		line 167 in file "monitor.c"
 39369 ;; Parameters:    Size  Location     Type
 39370 ;;		None
 39371 ;; Auto vars:     Size  Location     Type
 39372 ;;		None
 39373 ;; Return value:  Size  Location     Type
 39374 ;;                  2   14[COMRAM] short 
 39375 ;; Registers used:
 39376 ;;		wreg, status,2, status,0, cstack
 39377 ;; Tracked objects:
 39378 ;;		On entry : 0/0
 39379 ;;		On exit  : 0/0
 39380 ;;		Unchanged: 0/0
 39381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39382 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39385 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39386 ;;Total ram usage:        2 bytes
 39387 ;; Hardware stack levels used:    1
 39388 ;; Hardware stack levels required when called:    1
 39389 ;; This function calls:
 39390 ;;		i2___awdiv
 39391 ;; This function is called by:
 39392 ;;		i2_ValueDisplay
 39393 ;; This function uses a non-reentrant model
 39394 ;;
 39395                           
 39396                           	psect	text308
 39397  0099DE                     __ptext308:
 39398                           	opt callstack 0
 39399  0099DE                     i2_GetEp:
 39400                           	opt callstack 10
 39401                           
 39402                           ;incstack = 0
 39403  0099DE  0101               	movlb	1	; () banked
 39404  0099E0  51D5               	movf	_pe& (0+255),w,b
 39405  0099E2  0100               	movlb	0	; () banked
 39406  0099E4  25D4               	addwf	_lrpe& (0+255),w,b
 39407  0099E6  6E07               	movwf	i2___awdiv@dividend^0,c
 39408  0099E8  0101               	movlb	1	; () banked
 39409  0099EA  51D6               	movf	(_pe+1)& (0+255),w,b
 39410  0099EC  0100               	movlb	0	; () banked
 39411  0099EE  21D5               	addwfc	(_lrpe+1)& (0+255),w,b
 39412  0099F0  6E08               	movwf	(i2___awdiv@dividend+1)^0,c
 39413  0099F2  0E00               	movlw	0
 39414  0099F4  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 39415  0099F6  0E0A               	movlw	10
 39416  0099F8  6E09               	movwf	i2___awdiv@divisor^0,c
 39417  0099FA  ECFD  F03F         	call	i2___awdiv	;wreg free
 39418  0099FE  0060  F01C  F00F   	movff	?i2___awdiv,?i2_GetEp
 39419  009A04  0060  F020  F010   	movff	?i2___awdiv+1,?i2_GetEp+1
 39420  009A0A  0012               	return		;funcret
 39421  009A0C                     __end_ofi2_GetEp:
 39422                           	opt callstack 0
 39423                           
 39424 ;; *************** function i2___awdiv *****************
 39425 ;; Defined at:
 39426 ;;		line 7 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 39427 ;; Parameters:    Size  Location     Type
 39428 ;;  dividend        2    6[COMRAM] int 
 39429 ;;  divisor         2    8[COMRAM] int 
 39430 ;; Auto vars:     Size  Location     Type
 39431 ;;  __awdiv         2   12[COMRAM] int 
 39432 ;;  __awdiv         1   11[COMRAM] unsigned char 
 39433 ;;  __awdiv         1   10[COMRAM] unsigned char 
 39434 ;; Return value:  Size  Location     Type
 39435 ;;                  2    6[COMRAM] int 
 39436 ;; Registers used:
 39437 ;;		wreg, status,2, status,0
 39438 ;; Tracked objects:
 39439 ;;		On entry : 0/2
 39440 ;;		On exit  : 0/0
 39441 ;;		Unchanged: 0/0
 39442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39443 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39444 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39446 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39447 ;;Total ram usage:        8 bytes
 39448 ;; Hardware stack levels used:    1
 39449 ;; This function calls:
 39450 ;;		Nothing
 39451 ;; This function is called by:
 39452 ;;		_MonitorPressureTask
 39453 ;;		_GetPressure_mbar02
 39454 ;;		i2_ValueDisplay
 39455 ;;		i2_GetEp
 39456 ;;		i2_GetIp
 39457 ;;		i2_GetPmax
 39458 ;;		i2_GetTargetIp
 39459 ;;		i2_GetTargetEp
 39460 ;;		i2_SetCalibrateState
 39461 ;;		i2_GetPressure_pa
 39462 ;;		i2_GetPressureV_pa
 39463 ;; This function uses a non-reentrant model
 39464 ;;
 39465                           
 39466                           	psect	text309
 39467  007FFA                     __ptext309:
 39468                           	opt callstack 0
 39469  007FFA                     i2___awdiv:
 39470                           	opt callstack 11
 39471                           
 39472                           ;incstack = 0
 39473  007FFA  0E00               	movlw	0
 39474  007FFC  6E0C               	movwf	i2___awdiv@sign^0,c
 39475  007FFE  AE0A               	btfss	(i2___awdiv@divisor+1)^0,7,c
 39476  008000  D006               	goto	i2l17901
 39477  008002  6C09               	negf	i2___awdiv@divisor^0,c
 39478  008004  1E0A               	comf	(i2___awdiv@divisor+1)^0,f,c
 39479  008006  B0D8               	btfsc	status,0,c
 39480  008008  2A0A               	incf	(i2___awdiv@divisor+1)^0,f,c
 39481  00800A  0E01               	movlw	1
 39482  00800C  6E0C               	movwf	i2___awdiv@sign^0,c
 39483  00800E                     i2l17901:
 39484  00800E  AE08               	btfss	(i2___awdiv@dividend+1)^0,7,c
 39485  008010  D006               	goto	i2l17907
 39486  008012  6C07               	negf	i2___awdiv@dividend^0,c
 39487  008014  1E08               	comf	(i2___awdiv@dividend+1)^0,f,c
 39488  008016  B0D8               	btfsc	status,0,c
 39489  008018  2A08               	incf	(i2___awdiv@dividend+1)^0,f,c
 39490  00801A  0E01               	movlw	1
 39491  00801C  1A0C               	xorwf	i2___awdiv@sign^0,f,c
 39492  00801E                     i2l17907:
 39493  00801E  0E00               	movlw	0
 39494  008020  6E0E               	movwf	(i2___awdiv@quotient+1)^0,c
 39495  008022  0E00               	movlw	0
 39496  008024  6E0D               	movwf	i2___awdiv@quotient^0,c
 39497  008026  5009               	movf	i2___awdiv@divisor^0,w,c
 39498  008028  100A               	iorwf	(i2___awdiv@divisor+1)^0,w,c
 39499  00802A  B4D8               	btfsc	status,2,c
 39500  00802C  D01C               	goto	i2l17929
 39501  00802E  0E01               	movlw	1
 39502  008030  6E0B               	movwf	i2___awdiv@counter^0,c
 39503  008032  D004               	goto	i2l17915
 39504  008034                     i2l17913:
 39505  008034  90D8               	bcf	status,0,c
 39506  008036  3609               	rlcf	i2___awdiv@divisor^0,f,c
 39507  008038  360A               	rlcf	(i2___awdiv@divisor+1)^0,f,c
 39508  00803A  2A0B               	incf	i2___awdiv@counter^0,f,c
 39509  00803C                     i2l17915:
 39510  00803C  AE0A               	btfss	(i2___awdiv@divisor+1)^0,7,c
 39511  00803E  D7FA               	goto	i2l17913
 39512  008040                     i2u1738_40:
 39513  008040  90D8               	bcf	status,0,c
 39514  008042  360D               	rlcf	i2___awdiv@quotient^0,f,c
 39515  008044  360E               	rlcf	(i2___awdiv@quotient+1)^0,f,c
 39516  008046  5009               	movf	i2___awdiv@divisor^0,w,c
 39517  008048  5C07               	subwf	i2___awdiv@dividend^0,w,c
 39518  00804A  500A               	movf	(i2___awdiv@divisor+1)^0,w,c
 39519  00804C  5808               	subwfb	(i2___awdiv@dividend+1)^0,w,c
 39520  00804E  A0D8               	btfss	status,0,c
 39521  008050  D005               	goto	i2l17925
 39522  008052  5009               	movf	i2___awdiv@divisor^0,w,c
 39523  008054  5E07               	subwf	i2___awdiv@dividend^0,f,c
 39524  008056  500A               	movf	(i2___awdiv@divisor+1)^0,w,c
 39525  008058  5A08               	subwfb	(i2___awdiv@dividend+1)^0,f,c
 39526  00805A  800D               	bsf	i2___awdiv@quotient^0,0,c
 39527  00805C                     i2l17925:
 39528  00805C  90D8               	bcf	status,0,c
 39529  00805E  320A               	rrcf	(i2___awdiv@divisor+1)^0,f,c
 39530  008060  3209               	rrcf	i2___awdiv@divisor^0,f,c
 39531  008062  2E0B               	decfsz	i2___awdiv@counter^0,f,c
 39532  008064  D7ED               	goto	i2u1738_40
 39533  008066                     i2l17929:
 39534  008066  500C               	movf	i2___awdiv@sign^0,w,c
 39535  008068  B4D8               	btfsc	status,2,c
 39536  00806A  D004               	goto	i2l17933
 39537  00806C  6C0D               	negf	i2___awdiv@quotient^0,c
 39538  00806E  1E0E               	comf	(i2___awdiv@quotient+1)^0,f,c
 39539  008070  B0D8               	btfsc	status,0,c
 39540  008072  2A0E               	incf	(i2___awdiv@quotient+1)^0,f,c
 39541  008074                     i2l17933:
 39542  008074  0060  F034  F007   	movff	i2___awdiv@quotient,?i2___awdiv
 39543  00807A  0060  F038  F008   	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 39544  008080  0012               	return		;funcret
 39545  008082                     __end_ofi2___awdiv:
 39546                           	opt callstack 0
 39547                           
 39548 ;; *************** function i2_GetDisableAlarmSV1 *****************
 39549 ;; Defined at:
 39550 ;;		line 881 in file "monitor.c"
 39551 ;; Parameters:    Size  Location     Type
 39552 ;;		None
 39553 ;; Auto vars:     Size  Location     Type
 39554 ;;		None
 39555 ;; Return value:  Size  Location     Type
 39556 ;;                  1    wreg      _Bool 
 39557 ;; Registers used:
 39558 ;;		wreg, status,2
 39559 ;; Tracked objects:
 39560 ;;		On entry : 0/0
 39561 ;;		On exit  : 3F/0
 39562 ;;		Unchanged: 0/0
 39563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39568 ;;Total ram usage:        0 bytes
 39569 ;; Hardware stack levels used:    1
 39570 ;; This function calls:
 39571 ;;		Nothing
 39572 ;; This function is called by:
 39573 ;;		i2_ValueDisplay
 39574 ;; This function uses a non-reentrant model
 39575 ;;
 39576                           
 39577                           	psect	text310
 39578  00A63A                     __ptext310:
 39579                           	opt callstack 0
 39580  00A63A                     i2_GetDisableAlarmSV1:
 39581                           	opt callstack 11
 39582                           
 39583                           ;incstack = 0
 39584  00A63A  0100               	movlb	0	; () banked
 39585  00A63C  51F3               	movf	_disableAlarmSV1& (0+255),w,b
 39586                           
 39587                           ; BSR set to: 0
 39588  00A63E  0012               	return		;funcret
 39589  00A640                     __end_ofi2_GetDisableAlarmSV1:
 39590                           	opt callstack 0
 39591                           
 39592 ;; *************** function i2_GetBpm *****************
 39593 ;; Defined at:
 39594 ;;		line 165 in file "monitor.c"
 39595 ;; Parameters:    Size  Location     Type
 39596 ;;		None
 39597 ;; Auto vars:     Size  Location     Type
 39598 ;;		None
 39599 ;; Return value:  Size  Location     Type
 39600 ;;                  2    0[COMRAM] short 
 39601 ;; Registers used:
 39602 ;;		None
 39603 ;; Tracked objects:
 39604 ;;		On entry : 0/0
 39605 ;;		On exit  : 0/0
 39606 ;;		Unchanged: 0/0
 39607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39608 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39611 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39612 ;;Total ram usage:        2 bytes
 39613 ;; Hardware stack levels used:    1
 39614 ;; This function calls:
 39615 ;;		Nothing
 39616 ;; This function is called by:
 39617 ;;		i2_ValueDisplay
 39618 ;; This function uses a non-reentrant model
 39619 ;;
 39620                           
 39621                           	psect	text311
 39622  00A3AC                     __ptext311:
 39623                           	opt callstack 0
 39624  00A3AC                     i2_GetBpm:
 39625                           	opt callstack 11
 39626                           
 39627                           ; BSR set to: 0
 39628                           ;incstack = 0
 39629  00A3AC  0060  F958  F001   	movff	_bpm,?i2_GetBpm
 39630  00A3B2  0060  F95C  F002   	movff	_bpm+1,?i2_GetBpm+1
 39631  00A3B8  0012               	return		;funcret
 39632  00A3BA                     __end_ofi2_GetBpm:
 39633                           	opt callstack 0
 39634                           
 39635 ;; *************** function i2_GetAlarmState *****************
 39636 ;; Defined at:
 39637 ;;		line 431 in file "alarm.c"
 39638 ;; Parameters:    Size  Location     Type
 39639 ;;		None
 39640 ;; Auto vars:     Size  Location     Type
 39641 ;;		None
 39642 ;; Return value:  Size  Location     Type
 39643 ;;                  2    4[COMRAM] PTR unsigned char 
 39644 ;; Registers used:
 39645 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 39646 ;; Tracked objects:
 39647 ;;		On entry : 3F/0
 39648 ;;		On exit  : 0/0
 39649 ;;		Unchanged: 0/0
 39650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39651 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39654 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39655 ;;Total ram usage:        2 bytes
 39656 ;; Hardware stack levels used:    1
 39657 ;; Hardware stack levels required when called:    1
 39658 ;; This function calls:
 39659 ;;		i2_AnyAlarm
 39660 ;; This function is called by:
 39661 ;;		i2_ValueDisplay
 39662 ;; This function uses a non-reentrant model
 39663 ;;
 39664                           
 39665                           	psect	text312
 39666  009006                     __ptext312:
 39667                           	opt callstack 0
 39668  009006                     i2_GetAlarmState:
 39669                           	opt callstack 10
 39670                           
 39671                           ; BSR set to: 0
 39672                           ;alarm.c: 432:     if (displayStatus==2) return "Hi";
 39673                           
 39674                           ;incstack = 0
 39675  009006  0E02               	movlw	2
 39676  009008  19E0               	xorwf	_displayStatus& (0+255),w,b
 39677  00900A  11E1               	iorwf	(_displayStatus+1)& (0+255),w,b
 39678  00900C  A4D8               	btfss	status,2,c
 39679  00900E  D005               	goto	i2l18097
 39680                           
 39681                           ; BSR set to: 0
 39682  009010  0EF0               	movlw	low STR_26
 39683  009012  6E05               	movwf	?i2_GetAlarmState^0,c
 39684  009014  0EFF               	movlw	high STR_26
 39685  009016  6E06               	movwf	(?i2_GetAlarmState+1)^0,c
 39686  009018  0012               	return	
 39687  00901A                     i2l18097:
 39688                           
 39689                           ; BSR set to: 0
 39690                           ;alarm.c: 434:         if (AnyAlarm() && muteSec) return "Mu";
 39691  00901A  ECAA  F04A         	call	i2_AnyAlarm	;wreg free
 39692  00901E  0900               	iorlw	0
 39693  009020  B4D8               	btfsc	status,2,c
 39694  009022  D00A               	goto	i2l18107
 39695  009024  0101               	movlb	1	; () banked
 39696  009026  51EB               	movf	_muteSec& (0+255),w,b
 39697  009028  11EC               	iorwf	(_muteSec+1)& (0+255),w,b
 39698  00902A  B4D8               	btfsc	status,2,c
 39699  00902C  D005               	goto	i2l18107
 39700                           
 39701                           ; BSR set to: 1
 39702  00902E  0EF6               	movlw	low STR_27
 39703  009030  6E05               	movwf	?i2_GetAlarmState^0,c
 39704  009032  0EFF               	movlw	high STR_27
 39705  009034  6E06               	movwf	(?i2_GetAlarmState+1)^0,c
 39706  009036  0012               	return	
 39707  009038                     i2l18107:
 39708  009038  ECAA  F04A         	call	i2_AnyAlarm	;wreg free
 39709  00903C  0900               	iorlw	0
 39710  00903E  B4D8               	btfsc	status,2,c
 39711  009040  D005               	goto	i2l18113
 39712  009042  0EF3               	movlw	low STR_28
 39713  009044  6E05               	movwf	?i2_GetAlarmState^0,c
 39714  009046  0EFF               	movlw	high STR_28
 39715  009048  6E06               	movwf	(?i2_GetAlarmState+1)^0,c
 39716  00904A  0012               	return	
 39717  00904C                     i2l18113:
 39718                           
 39719                           ;alarm.c: 437:     return "  ";
 39720  00904C  0EED               	movlw	low (STR_6+14)
 39721  00904E  6E05               	movwf	?i2_GetAlarmState^0,c
 39722  009050  0EFE               	movlw	high (STR_6+14)
 39723  009052  6E06               	movwf	(?i2_GetAlarmState+1)^0,c
 39724  009054  0012               	return		;funcret
 39725  009056                     __end_ofi2_GetAlarmState:
 39726                           	opt callstack 0
 39727                           
 39728 ;; *************** function i2_AnyAlarm *****************
 39729 ;; Defined at:
 39730 ;;		line 370 in file "alarm.c"
 39731 ;; Parameters:    Size  Location     Type
 39732 ;;		None
 39733 ;; Auto vars:     Size  Location     Type
 39734 ;;  AnyAlarm        2    2[COMRAM] int 
 39735 ;; Return value:  Size  Location     Type
 39736 ;;                  1    wreg      _Bool 
 39737 ;; Registers used:
 39738 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 39739 ;; Tracked objects:
 39740 ;;		On entry : 0/1
 39741 ;;		On exit  : 0/0
 39742 ;;		Unchanged: 0/0
 39743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39745 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39746 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39747 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39748 ;;Total ram usage:        4 bytes
 39749 ;; Hardware stack levels used:    1
 39750 ;; This function calls:
 39751 ;;		Nothing
 39752 ;; This function is called by:
 39753 ;;		_AlarmHandler
 39754 ;;		i2_MuteAlarm
 39755 ;;		i2_GetAlarmState
 39756 ;;		i2_AlarmUpdateLCD
 39757 ;; This function uses a non-reentrant model
 39758 ;;
 39759                           
 39760                           	psect	text313
 39761  009554                     __ptext313:
 39762                           	opt callstack 0
 39763  009554                     i2_AnyAlarm:
 39764                           	opt callstack 14
 39765                           
 39766                           ;alarm.c: 371:     for (int i=0; i<sizeof(alarmData)/sizeof(a); i++) {
 39767                           
 39768                           ;incstack = 0
 39769  009554  0E00               	movlw	0
 39770  009556  6E04               	movwf	(i2AnyAlarm@i+1)^0,c
 39771  009558  0E00               	movlw	0
 39772  00955A  6E03               	movwf	i2AnyAlarm@i^0,c
 39773  00955C                     i2l17871:
 39774                           
 39775                           ;alarm.c: 372:         if (alarms[i]) return 1;
 39776  00955C  90D8               	bcf	status,0,c
 39777  00955E  3403               	rlcf	i2AnyAlarm@i^0,w,c
 39778  009560  6ED9               	movwf	fsr2l,c
 39779  009562  3404               	rlcf	(i2AnyAlarm@i+1)^0,w,c
 39780  009564  6EDA               	movwf	fsr2h,c
 39781  009566  0E00               	movlw	low _alarms
 39782  009568  26D9               	addwf	fsr2l,f,c
 39783  00956A  0E03               	movlw	high _alarms
 39784  00956C  22DA               	addwfc	fsr2h,f,c
 39785  00956E  50DE               	movf	postinc2,w,c
 39786  009570  10DE               	iorwf	postinc2,w,c
 39787  009572  B4D8               	btfsc	status,2,c
 39788  009574  D002               	goto	i2l17877
 39789  009576  0E01               	movlw	1
 39790  009578  0012               	return	
 39791  00957A                     i2l17877:
 39792                           
 39793                           ;alarm.c: 373:     }
 39794  00957A  4A03               	infsnz	i2AnyAlarm@i^0,f,c
 39795  00957C  2A04               	incf	(i2AnyAlarm@i+1)^0,f,c
 39796  00957E  5004               	movf	(i2AnyAlarm@i+1)^0,w,c
 39797  009580  E104               	bnz	i2u1733_40
 39798  009582  0E13               	movlw	19
 39799  009584  5C03               	subwf	i2AnyAlarm@i^0,w,c
 39800  009586  A0D8               	btfss	status,0,c
 39801  009588  D7E9               	goto	i2l17871
 39802  00958A                     i2u1733_40:
 39803                           
 39804                           ;alarm.c: 374:     return 0;
 39805  00958A  0E00               	movlw	0
 39806  00958C  0012               	return		;funcret
 39807  00958E                     __end_ofi2_AnyAlarm:
 39808                           	opt callstack 0
 39809                           
 39810 ;; *************** function _ControllerBuzzerCheck *****************
 39811 ;; Defined at:
 39812 ;;		line 422 in file "buzzer.c"
 39813 ;; Parameters:    Size  Location     Type
 39814 ;;		None
 39815 ;; Auto vars:     Size  Location     Type
 39816 ;;		None
 39817 ;; Return value:  Size  Location     Type
 39818 ;;                  1    wreg      void 
 39819 ;; Registers used:
 39820 ;;		wreg, status,2, cstack
 39821 ;; Tracked objects:
 39822 ;;		On entry : 3F/2
 39823 ;;		On exit  : 3F/2
 39824 ;;		Unchanged: 0/0
 39825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39830 ;;Total ram usage:        0 bytes
 39831 ;; Hardware stack levels used:    1
 39832 ;; Hardware stack levels required when called:    1
 39833 ;; This function calls:
 39834 ;;		i2_CMP1_Enable
 39835 ;; This function is called by:
 39836 ;;		_UpdateState
 39837 ;; This function uses a non-reentrant model
 39838 ;;
 39839                           
 39840                           	psect	text314
 39841  00A438                     __ptext314:
 39842                           	opt callstack 0
 39843  00A438                     _ControllerBuzzerCheck:
 39844                           	opt callstack 11
 39845                           
 39846                           ; BSR set to: 2
 39847                           ;buzzer.c: 423:     CMP1_Enable();
 39848                           
 39849                           ;incstack = 0
 39850  00A438  ECBD  F052         	call	i2_CMP1_Enable	;wreg free
 39851                           
 39852                           ; BSR set to: 57
 39853                           ;buzzer.c: 424:     checkController = 1;
 39854  00A43C  0E01               	movlw	1
 39855  00A43E  0102               	movlb	2	; () banked
 39856  00A440  6FB2               	movwf	_checkController& (0+255),b
 39857                           
 39858                           ; BSR set to: 2
 39859  00A442  0012               	return		;funcret
 39860  00A444                     __end_of_ControllerBuzzerCheck:
 39861                           	opt callstack 0
 39862                           
 39863 ;; *************** function i2_CMP1_Enable *****************
 39864 ;; Defined at:
 39865 ;;		line 104 in file "mcc_generated_files/cmp1.c"
 39866 ;; Parameters:    Size  Location     Type
 39867 ;;		None
 39868 ;; Auto vars:     Size  Location     Type
 39869 ;;		None
 39870 ;; Return value:  Size  Location     Type
 39871 ;;                  1    wreg      void 
 39872 ;; Registers used:
 39873 ;;		None
 39874 ;; Tracked objects:
 39875 ;;		On entry : 3D/0
 39876 ;;		On exit  : 3F/39
 39877 ;;		Unchanged: 0/0
 39878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39883 ;;Total ram usage:        0 bytes
 39884 ;; Hardware stack levels used:    1
 39885 ;; This function calls:
 39886 ;;		Nothing
 39887 ;; This function is called by:
 39888 ;;		_ControllerBuzzerCheck
 39889 ;;		i2_BuzzerOn
 39890 ;; This function uses a non-reentrant model
 39891 ;;
 39892                           
 39893                           	psect	text315
 39894  00A57A                     __ptext315:
 39895                           	opt callstack 0
 39896  00A57A                     i2_CMP1_Enable:
 39897                           	opt callstack 12
 39898                           
 39899                           ;mcc_generated_files/cmp1.c: 106:     PIR1bits.C1IF = 0;
 39900                           
 39901                           ; BSR set to: 2
 39902                           ;incstack = 0
 39903  00A57A  0139               	movlb	57	; () banked
 39904  00A57C  99A1               	bcf	161,4,b	;volatile
 39905                           
 39906                           ;mcc_generated_files/cmp1.c: 107:     PIE1bits.C1IE = 1;
 39907  00A57E  8991               	bsf	145,4,b	;volatile
 39908                           
 39909                           ; BSR set to: 57
 39910  00A580  0012               	return		;funcret
 39911  00A582                     __end_ofi2_CMP1_Enable:
 39912                           	opt callstack 0
 39913                           
 39914 ;; *************** function _ClearAllAlarm *****************
 39915 ;; Defined at:
 39916 ;;		line 247 in file "alarm.c"
 39917 ;; Parameters:    Size  Location     Type
 39918 ;;		None
 39919 ;; Auto vars:     Size  Location     Type
 39920 ;;		None
 39921 ;; Return value:  Size  Location     Type
 39922 ;;                  1    wreg      void 
 39923 ;; Registers used:
 39924 ;;		wreg, status,2, status,0, cstack
 39925 ;; Tracked objects:
 39926 ;;		On entry : 3F/1
 39927 ;;		On exit  : 3F/2
 39928 ;;		Unchanged: 0/0
 39929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39934 ;;Total ram usage:        0 bytes
 39935 ;; Hardware stack levels used:    1
 39936 ;; Hardware stack levels required when called:    1
 39937 ;; This function calls:
 39938 ;;		_ClearHighPressureAlarmLow
 39939 ;;		_ClearTdeTooLongAlarm
 39940 ;;		_ClearTdiTooLongAlarm
 39941 ;;		_ClearVAboveMaxAlarm
 39942 ;;		_ClearVBelowMinAlarm
 39943 ;;		i2_ClearBaterryLowAlarmHigh
 39944 ;;		i2_ClearBaterryLowAlarmMed
 39945 ;;		i2_ClearBatteryFailAlarm
 39946 ;;		i2_ClearCircuitFailureAlarm
 39947 ;;		i2_ClearControlFailAlarm
 39948 ;;		i2_ClearEPAboveSetAlarm
 39949 ;;		i2_ClearEPBelowSetAlarm
 39950 ;;		i2_ClearGasFailureAlarm
 39951 ;;		i2_ClearHighPressureAlarmHigh
 39952 ;;		i2_ClearIPAboveSetAlarm
 39953 ;;		i2_ClearIPBelowSetAlarm
 39954 ;;		i2_ClearMonitorFailAlarm
 39955 ;;		i2_ClearNoPowerSupplyAlarm
 39956 ;;		i2_ClearVeryHighPressureAlarmHigh
 39957 ;; This function is called by:
 39958 ;;		_UpdateState
 39959 ;; This function uses a non-reentrant model
 39960 ;;
 39961                           
 39962                           	psect	text316
 39963  0090F4                     __ptext316:
 39964                           	opt callstack 0
 39965  0090F4                     _ClearAllAlarm:
 39966                           	opt callstack 11
 39967                           
 39968                           ; BSR set to: 1
 39969                           ;alarm.c: 248:     ClearBatteryFailAlarm();
 39970                           
 39971                           ; BSR set to: 57
 39972                           ;incstack = 0
 39973  0090F4  ECD9  F052         	call	i2_ClearBatteryFailAlarm	;wreg free
 39974                           
 39975                           ;alarm.c: 249:     ClearMonitorFailAlarm();
 39976  0090F8  ECC5  F052         	call	i2_ClearMonitorFailAlarm	;wreg free
 39977                           
 39978                           ;alarm.c: 250:     ClearControlFailAlarm();
 39979  0090FC  ECD1  F052         	call	i2_ClearControlFailAlarm	;wreg free
 39980                           
 39981                           ;alarm.c: 251:     ClearGasFailureAlarm();
 39982  009100  ECCD  F052         	call	i2_ClearGasFailureAlarm	;wreg free
 39983                           
 39984                           ;alarm.c: 252:     ClearHighPressureAlarmLow();
 39985  009104  EC2C  F053         	call	_ClearHighPressureAlarmLow	;wreg free
 39986                           
 39987                           ;alarm.c: 253:     ClearHighPressureAlarmHigh();
 39988  009108  ECC9  F052         	call	i2_ClearHighPressureAlarmHigh	;wreg free
 39989                           
 39990                           ;alarm.c: 254:     ClearVeryHighPressureAlarmHigh();
 39991  00910C  ECC1  F052         	call	i2_ClearVeryHighPressureAlarmHigh	;wreg free
 39992                           
 39993                           ;alarm.c: 255:     ClearCircuitFailureAlarm();
 39994  009110  ECD5  F052         	call	i2_ClearCircuitFailureAlarm	;wreg free
 39995                           
 39996                           ;alarm.c: 256:     ClearBaterryLowAlarmMed();
 39997  009114  EC23  F053         	call	i2_ClearBaterryLowAlarmMed	;wreg free
 39998                           
 39999                           ;alarm.c: 257:     ClearBaterryLowAlarmHigh();
 40000  009118  EC26  F053         	call	i2_ClearBaterryLowAlarmHigh	;wreg free
 40001                           
 40002                           ; BSR set to: 2
 40003                           ;alarm.c: 258:     ClearEPBelowSetAlarm();
 40004  00911C  EC37  F050         	call	i2_ClearEPBelowSetAlarm	;wreg free
 40005                           
 40006                           ; BSR set to: 0
 40007                           ;alarm.c: 259:     ClearEPAboveSetAlarm();
 40008  009120  EC42  F050         	call	i2_ClearEPAboveSetAlarm	;wreg free
 40009                           
 40010                           ; BSR set to: 0
 40011                           ;alarm.c: 260:     ClearIPBelowSetAlarm();
 40012  009124  EC21  F050         	call	i2_ClearIPBelowSetAlarm	;wreg free
 40013                           
 40014                           ; BSR set to: 0
 40015                           ;alarm.c: 261:     ClearIPAboveSetAlarm();
 40016  009128  EC2C  F050         	call	i2_ClearIPAboveSetAlarm	;wreg free
 40017                           
 40018                           ;alarm.c: 262:     ClearTdiTooLongAlarm();
 40019  00912C  ECE1  F052         	call	_ClearTdiTooLongAlarm	;wreg free
 40020                           
 40021                           ;alarm.c: 263:     ClearTdeTooLongAlarm();
 40022  009130  ECE5  F052         	call	_ClearTdeTooLongAlarm	;wreg free
 40023                           
 40024                           ;alarm.c: 264:     ClearVAboveMaxAlarm();
 40025  009134  ECDD  F052         	call	_ClearVAboveMaxAlarm	;wreg free
 40026                           
 40027                           ;alarm.c: 265:     ClearVBelowMinAlarm();
 40028  009138  EC29  F053         	call	_ClearVBelowMinAlarm	;wreg free
 40029                           
 40030                           ;alarm.c: 266:     ClearNoPowerSupplyAlarm();
 40031  00913C  EC20  F053         	call	i2_ClearNoPowerSupplyAlarm	;wreg free
 40032                           
 40033                           ; BSR set to: 2
 40034  009140  0012               	return		;funcret
 40035  009142                     __end_of_ClearAllAlarm:
 40036                           	opt callstack 0
 40037                           
 40038 ;; *************** function i2_ClearVeryHighPressureAlarmHigh *****************
 40039 ;; Defined at:
 40040 ;;		line 278 in file "alarm.c"
 40041 ;; Parameters:    Size  Location     Type
 40042 ;;		None
 40043 ;; Auto vars:     Size  Location     Type
 40044 ;;		None
 40045 ;; Return value:  Size  Location     Type
 40046 ;;                  1    wreg      void 
 40047 ;; Registers used:
 40048 ;;		wreg, status,2
 40049 ;; Tracked objects:
 40050 ;;		On entry : 0/1
 40051 ;;		On exit  : 3F/2
 40052 ;;		Unchanged: 0/0
 40053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40058 ;;Total ram usage:        0 bytes
 40059 ;; Hardware stack levels used:    1
 40060 ;; This function calls:
 40061 ;;		Nothing
 40062 ;; This function is called by:
 40063 ;;		_ClearAllAlarm
 40064 ;;		i2_MuteAlarm
 40065 ;; This function uses a non-reentrant model
 40066 ;;
 40067                           
 40068                           	psect	text317
 40069  00A582                     __ptext317:
 40070                           	opt callstack 0
 40071  00A582                     i2_ClearVeryHighPressureAlarmHigh:
 40072                           	opt callstack 13
 40073                           
 40074                           ; BSR set to: 2
 40075                           ;incstack = 0
 40076  00A582  0E00               	movlw	0
 40077  00A584  0102               	movlb	2	; () banked
 40078  00A586  6FAC               	movwf	_veryHighPressureAlarmHigh& (0+255),b
 40079                           
 40080                           ; BSR set to: 2
 40081  00A588  0012               	return		;funcret
 40082  00A58A                     __end_ofi2_ClearVeryHighPressureAlarmHigh:
 40083                           	opt callstack 0
 40084                           
 40085 ;; *************** function i2_ClearNoPowerSupplyAlarm *****************
 40086 ;; Defined at:
 40087 ;;		line 290 in file "alarm.c"
 40088 ;; Parameters:    Size  Location     Type
 40089 ;;		None
 40090 ;; Auto vars:     Size  Location     Type
 40091 ;;		None
 40092 ;; Return value:  Size  Location     Type
 40093 ;;                  1    wreg      void 
 40094 ;; Registers used:
 40095 ;;		wreg, status,2
 40096 ;; Tracked objects:
 40097 ;;		On entry : 3F/2
 40098 ;;		On exit  : 3F/2
 40099 ;;		Unchanged: 0/0
 40100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40105 ;;Total ram usage:        0 bytes
 40106 ;; Hardware stack levels used:    1
 40107 ;; This function calls:
 40108 ;;		Nothing
 40109 ;; This function is called by:
 40110 ;;		_ClearAllAlarm
 40111 ;; This function uses a non-reentrant model
 40112 ;;
 40113                           
 40114                           	psect	text318
 40115  00A640                     __ptext318:
 40116                           	opt callstack 0
 40117  00A640                     i2_ClearNoPowerSupplyAlarm:
 40118                           	opt callstack 11
 40119                           
 40120                           ; BSR set to: 2
 40121                           
 40122                           ; BSR set to: 2
 40123                           ;incstack = 0
 40124  00A640  0E00               	movlw	0
 40125  00A642  6FA4               	movwf	_noPowerSupplyAlarm& (0+255),b
 40126                           
 40127                           ; BSR set to: 2
 40128  00A644  0012               	return		;funcret
 40129  00A646                     __end_ofi2_ClearNoPowerSupplyAlarm:
 40130                           	opt callstack 0
 40131                           
 40132 ;; *************** function i2_ClearMonitorFailAlarm *****************
 40133 ;; Defined at:
 40134 ;;		line 270 in file "alarm.c"
 40135 ;; Parameters:    Size  Location     Type
 40136 ;;		None
 40137 ;; Auto vars:     Size  Location     Type
 40138 ;;		None
 40139 ;; Return value:  Size  Location     Type
 40140 ;;                  1    wreg      void 
 40141 ;; Registers used:
 40142 ;;		wreg, status,2
 40143 ;; Tracked objects:
 40144 ;;		On entry : 0/0
 40145 ;;		On exit  : 3F/2
 40146 ;;		Unchanged: 0/0
 40147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40152 ;;Total ram usage:        0 bytes
 40153 ;; Hardware stack levels used:    1
 40154 ;; This function calls:
 40155 ;;		Nothing
 40156 ;; This function is called by:
 40157 ;;		_ClearAllAlarm
 40158 ;;		i2_BuzzerTask
 40159 ;;		i2_MuteAlarm
 40160 ;; This function uses a non-reentrant model
 40161 ;;
 40162                           
 40163                           	psect	text319
 40164  00A58A                     __ptext319:
 40165                           	opt callstack 0
 40166  00A58A                     i2_ClearMonitorFailAlarm:
 40167                           	opt callstack 13
 40168                           
 40169                           ;alarm.c: 272:     monitorFailAlarm = 0;
 40170                           
 40171                           ; BSR set to: 2
 40172                           ;incstack = 0
 40173  00A58A  0E00               	movlw	0
 40174  00A58C  0102               	movlb	2	; () banked
 40175  00A58E  6FB0               	movwf	_monitorFailAlarm& (0+255),b
 40176                           
 40177                           ; BSR set to: 2
 40178  00A590  0012               	return		;funcret
 40179  00A592                     __end_ofi2_ClearMonitorFailAlarm:
 40180                           	opt callstack 0
 40181                           
 40182 ;; *************** function i2_ClearIPBelowSetAlarm *****************
 40183 ;; Defined at:
 40184 ;;		line 284 in file "alarm.c"
 40185 ;; Parameters:    Size  Location     Type
 40186 ;;		None
 40187 ;; Auto vars:     Size  Location     Type
 40188 ;;		None
 40189 ;; Return value:  Size  Location     Type
 40190 ;;                  1    wreg      void 
 40191 ;; Registers used:
 40192 ;;		wreg, status,2, status,0
 40193 ;; Tracked objects:
 40194 ;;		On entry : 3E/0
 40195 ;;		On exit  : 3F/0
 40196 ;;		Unchanged: 0/0
 40197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40202 ;;Total ram usage:        0 bytes
 40203 ;; Hardware stack levels used:    1
 40204 ;; This function calls:
 40205 ;;		Nothing
 40206 ;; This function is called by:
 40207 ;;		_ClearAllAlarm
 40208 ;;		_MonitorPressureTask
 40209 ;;		i2_ClearVars
 40210 ;; This function uses a non-reentrant model
 40211 ;;
 40212                           
 40213                           	psect	text320
 40214  00A042                     __ptext320:
 40215                           	opt callstack 0
 40216  00A042                     i2_ClearIPBelowSetAlarm:
 40217                           	opt callstack 13
 40218                           
 40219                           ; BSR set to: 2
 40220                           ;incstack = 0
 40221  00A042  0100               	movlb	0	; () banked
 40222  00A044  07E4               	decf	_ipBelowSetAlarm& (0+255),f,b
 40223  00A046  A0D8               	btfss	status,0,c
 40224  00A048  07E5               	decf	(_ipBelowSetAlarm+1)& (0+255),f,b
 40225                           
 40226                           ; BSR set to: 0
 40227  00A04A  AFE5               	btfss	(_ipBelowSetAlarm+1)& (0+255),7,b
 40228  00A04C  0012               	return	
 40229                           
 40230                           ; BSR set to: 0
 40231  00A04E  0E00               	movlw	0
 40232  00A050  6FE5               	movwf	(_ipBelowSetAlarm+1)& (0+255),b
 40233  00A052  0E00               	movlw	0
 40234  00A054  6FE4               	movwf	_ipBelowSetAlarm& (0+255),b
 40235                           
 40236                           ; BSR set to: 0
 40237  00A056  0012               	return		;funcret
 40238  00A058                     __end_ofi2_ClearIPBelowSetAlarm:
 40239                           	opt callstack 0
 40240                           
 40241 ;; *************** function i2_ClearIPAboveSetAlarm *****************
 40242 ;; Defined at:
 40243 ;;		line 285 in file "alarm.c"
 40244 ;; Parameters:    Size  Location     Type
 40245 ;;		None
 40246 ;; Auto vars:     Size  Location     Type
 40247 ;;		None
 40248 ;; Return value:  Size  Location     Type
 40249 ;;                  1    wreg      void 
 40250 ;; Registers used:
 40251 ;;		wreg, status,2, status,0
 40252 ;; Tracked objects:
 40253 ;;		On entry : 3C/0
 40254 ;;		On exit  : 3F/0
 40255 ;;		Unchanged: 0/0
 40256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40261 ;;Total ram usage:        0 bytes
 40262 ;; Hardware stack levels used:    1
 40263 ;; This function calls:
 40264 ;;		Nothing
 40265 ;; This function is called by:
 40266 ;;		_ClearAllAlarm
 40267 ;;		_MonitorPressureTask
 40268 ;;		i2_ClearVars
 40269 ;; This function uses a non-reentrant model
 40270 ;;
 40271                           
 40272                           	psect	text321
 40273  00A058                     __ptext321:
 40274                           	opt callstack 0
 40275  00A058                     i2_ClearIPAboveSetAlarm:
 40276                           	opt callstack 13
 40277                           
 40278                           ; BSR set to: 0
 40279                           ;incstack = 0
 40280  00A058  0100               	movlb	0	; () banked
 40281  00A05A  07E2               	decf	_ipAboveSetAlarm& (0+255),f,b
 40282  00A05C  A0D8               	btfss	status,0,c
 40283  00A05E  07E3               	decf	(_ipAboveSetAlarm+1)& (0+255),f,b
 40284                           
 40285                           ; BSR set to: 0
 40286  00A060  AFE3               	btfss	(_ipAboveSetAlarm+1)& (0+255),7,b
 40287  00A062  0012               	return	
 40288                           
 40289                           ; BSR set to: 0
 40290  00A064  0E00               	movlw	0
 40291  00A066  6FE3               	movwf	(_ipAboveSetAlarm+1)& (0+255),b
 40292  00A068  0E00               	movlw	0
 40293  00A06A  6FE2               	movwf	_ipAboveSetAlarm& (0+255),b
 40294                           
 40295                           ; BSR set to: 0
 40296  00A06C  0012               	return		;funcret
 40297  00A06E                     __end_ofi2_ClearIPAboveSetAlarm:
 40298                           	opt callstack 0
 40299                           
 40300 ;; *************** function i2_ClearHighPressureAlarmHigh *****************
 40301 ;; Defined at:
 40302 ;;		line 277 in file "alarm.c"
 40303 ;; Parameters:    Size  Location     Type
 40304 ;;		None
 40305 ;; Auto vars:     Size  Location     Type
 40306 ;;		None
 40307 ;; Return value:  Size  Location     Type
 40308 ;;                  1    wreg      void 
 40309 ;; Registers used:
 40310 ;;		wreg, status,2
 40311 ;; Tracked objects:
 40312 ;;		On entry : 0/1
 40313 ;;		On exit  : 3F/2
 40314 ;;		Unchanged: 0/0
 40315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40320 ;;Total ram usage:        0 bytes
 40321 ;; Hardware stack levels used:    1
 40322 ;; This function calls:
 40323 ;;		Nothing
 40324 ;; This function is called by:
 40325 ;;		_ClearAllAlarm
 40326 ;;		i2_MuteAlarm
 40327 ;; This function uses a non-reentrant model
 40328 ;;
 40329                           
 40330                           	psect	text322
 40331  00A592                     __ptext322:
 40332                           	opt callstack 0
 40333  00A592                     i2_ClearHighPressureAlarmHigh:
 40334                           	opt callstack 13
 40335                           
 40336                           ; BSR set to: 0
 40337                           ;incstack = 0
 40338  00A592  0E00               	movlw	0
 40339  00A594  0102               	movlb	2	; () banked
 40340  00A596  6FAD               	movwf	_highPressureAlarmHigh& (0+255),b
 40341                           
 40342                           ; BSR set to: 2
 40343  00A598  0012               	return		;funcret
 40344  00A59A                     __end_ofi2_ClearHighPressureAlarmHigh:
 40345                           	opt callstack 0
 40346                           
 40347 ;; *************** function i2_ClearGasFailureAlarm *****************
 40348 ;; Defined at:
 40349 ;;		line 275 in file "alarm.c"
 40350 ;; Parameters:    Size  Location     Type
 40351 ;;		None
 40352 ;; Auto vars:     Size  Location     Type
 40353 ;;		None
 40354 ;; Return value:  Size  Location     Type
 40355 ;;                  1    wreg      void 
 40356 ;; Registers used:
 40357 ;;		wreg, status,2
 40358 ;; Tracked objects:
 40359 ;;		On entry : 0/1
 40360 ;;		On exit  : 3F/2
 40361 ;;		Unchanged: 0/0
 40362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40367 ;;Total ram usage:        0 bytes
 40368 ;; Hardware stack levels used:    1
 40369 ;; This function calls:
 40370 ;;		Nothing
 40371 ;; This function is called by:
 40372 ;;		_ClearAllAlarm
 40373 ;;		_MonitorPressureTask
 40374 ;;		i2_MuteAlarm
 40375 ;; This function uses a non-reentrant model
 40376 ;;
 40377                           
 40378                           	psect	text323
 40379  00A59A                     __ptext323:
 40380                           	opt callstack 0
 40381  00A59A                     i2_ClearGasFailureAlarm:
 40382                           	opt callstack 13
 40383                           
 40384                           ; BSR set to: 2
 40385                           ;incstack = 0
 40386  00A59A  0E00               	movlw	0
 40387  00A59C  0102               	movlb	2	; () banked
 40388  00A59E  6FAF               	movwf	_gasFailureAlarm& (0+255),b
 40389                           
 40390                           ; BSR set to: 2
 40391  00A5A0  0012               	return		;funcret
 40392  00A5A2                     __end_ofi2_ClearGasFailureAlarm:
 40393                           	opt callstack 0
 40394                           
 40395 ;; *************** function i2_ClearEPBelowSetAlarm *****************
 40396 ;; Defined at:
 40397 ;;		line 282 in file "alarm.c"
 40398 ;; Parameters:    Size  Location     Type
 40399 ;;		None
 40400 ;; Auto vars:     Size  Location     Type
 40401 ;;		None
 40402 ;; Return value:  Size  Location     Type
 40403 ;;                  1    wreg      void 
 40404 ;; Registers used:
 40405 ;;		wreg, status,2, status,0
 40406 ;; Tracked objects:
 40407 ;;		On entry : 0/2
 40408 ;;		On exit  : 3F/0
 40409 ;;		Unchanged: 0/0
 40410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40415 ;;Total ram usage:        0 bytes
 40416 ;; Hardware stack levels used:    1
 40417 ;; This function calls:
 40418 ;;		Nothing
 40419 ;; This function is called by:
 40420 ;;		_ClearAllAlarm
 40421 ;;		_MonitorPressureTask
 40422 ;;		i2_ClearVars
 40423 ;; This function uses a non-reentrant model
 40424 ;;
 40425                           
 40426                           	psect	text324
 40427  00A06E                     __ptext324:
 40428                           	opt callstack 0
 40429  00A06E                     i2_ClearEPBelowSetAlarm:
 40430                           	opt callstack 13
 40431                           
 40432                           ; BSR set to: 2
 40433                           ;incstack = 0
 40434  00A06E  0100               	movlb	0	; () banked
 40435  00A070  07E8               	decf	_epBelowSetAlarm& (0+255),f,b
 40436  00A072  A0D8               	btfss	status,0,c
 40437  00A074  07E9               	decf	(_epBelowSetAlarm+1)& (0+255),f,b
 40438                           
 40439                           ; BSR set to: 0
 40440  00A076  AFE9               	btfss	(_epBelowSetAlarm+1)& (0+255),7,b
 40441  00A078  0012               	return	
 40442                           
 40443                           ; BSR set to: 0
 40444  00A07A  0E00               	movlw	0
 40445  00A07C  6FE9               	movwf	(_epBelowSetAlarm+1)& (0+255),b
 40446  00A07E  0E00               	movlw	0
 40447  00A080  6FE8               	movwf	_epBelowSetAlarm& (0+255),b
 40448                           
 40449                           ; BSR set to: 0
 40450  00A082  0012               	return		;funcret
 40451  00A084                     __end_ofi2_ClearEPBelowSetAlarm:
 40452                           	opt callstack 0
 40453                           
 40454 ;; *************** function i2_ClearEPAboveSetAlarm *****************
 40455 ;; Defined at:
 40456 ;;		line 283 in file "alarm.c"
 40457 ;; Parameters:    Size  Location     Type
 40458 ;;		None
 40459 ;; Auto vars:     Size  Location     Type
 40460 ;;		None
 40461 ;; Return value:  Size  Location     Type
 40462 ;;                  1    wreg      void 
 40463 ;; Registers used:
 40464 ;;		wreg, status,2, status,0
 40465 ;; Tracked objects:
 40466 ;;		On entry : 3C/0
 40467 ;;		On exit  : 3F/0
 40468 ;;		Unchanged: 0/0
 40469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40474 ;;Total ram usage:        0 bytes
 40475 ;; Hardware stack levels used:    1
 40476 ;; This function calls:
 40477 ;;		Nothing
 40478 ;; This function is called by:
 40479 ;;		_ClearAllAlarm
 40480 ;;		_MonitorPressureTask
 40481 ;;		i2_ClearVars
 40482 ;; This function uses a non-reentrant model
 40483 ;;
 40484                           
 40485                           	psect	text325
 40486  00A084                     __ptext325:
 40487                           	opt callstack 0
 40488  00A084                     i2_ClearEPAboveSetAlarm:
 40489                           	opt callstack 13
 40490                           
 40491                           ; BSR set to: 0
 40492                           ;incstack = 0
 40493  00A084  0100               	movlb	0	; () banked
 40494  00A086  07E6               	decf	_epAboveSetAlarm& (0+255),f,b
 40495  00A088  A0D8               	btfss	status,0,c
 40496  00A08A  07E7               	decf	(_epAboveSetAlarm+1)& (0+255),f,b
 40497                           
 40498                           ; BSR set to: 0
 40499  00A08C  AFE7               	btfss	(_epAboveSetAlarm+1)& (0+255),7,b
 40500  00A08E  0012               	return	
 40501                           
 40502                           ; BSR set to: 0
 40503  00A090  0E00               	movlw	0
 40504  00A092  6FE7               	movwf	(_epAboveSetAlarm+1)& (0+255),b
 40505  00A094  0E00               	movlw	0
 40506  00A096  6FE6               	movwf	_epAboveSetAlarm& (0+255),b
 40507                           
 40508                           ; BSR set to: 0
 40509  00A098  0012               	return		;funcret
 40510  00A09A                     __end_ofi2_ClearEPAboveSetAlarm:
 40511                           	opt callstack 0
 40512                           
 40513 ;; *************** function i2_ClearControlFailAlarm *****************
 40514 ;; Defined at:
 40515 ;;		line 274 in file "alarm.c"
 40516 ;; Parameters:    Size  Location     Type
 40517 ;;		None
 40518 ;; Auto vars:     Size  Location     Type
 40519 ;;		None
 40520 ;; Return value:  Size  Location     Type
 40521 ;;                  1    wreg      void 
 40522 ;; Registers used:
 40523 ;;		wreg, status,2
 40524 ;; Tracked objects:
 40525 ;;		On entry : 0/0
 40526 ;;		On exit  : 3F/0
 40527 ;;		Unchanged: 0/0
 40528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40533 ;;Total ram usage:        0 bytes
 40534 ;; Hardware stack levels used:    1
 40535 ;; This function calls:
 40536 ;;		Nothing
 40537 ;; This function is called by:
 40538 ;;		_ClearAllAlarm
 40539 ;;		_UpdateState
 40540 ;;		_ControllerTimerHandler
 40541 ;;		i2_MuteAlarm
 40542 ;; This function uses a non-reentrant model
 40543 ;;
 40544                           
 40545                           	psect	text326
 40546  00A5A2                     __ptext326:
 40547                           	opt callstack 0
 40548  00A5A2                     i2_ClearControlFailAlarm:
 40549                           	opt callstack 14
 40550                           
 40551                           ; BSR set to: 0
 40552                           ;incstack = 0
 40553  00A5A2  0E00               	movlw	0
 40554  00A5A4  0100               	movlb	0	; () banked
 40555  00A5A6  6FF6               	movwf	_controlFailAlarm& (0+255),b
 40556                           
 40557                           ; BSR set to: 0
 40558  00A5A8  0012               	return		;funcret
 40559  00A5AA                     __end_ofi2_ClearControlFailAlarm:
 40560                           	opt callstack 0
 40561                           
 40562 ;; *************** function i2_ClearCircuitFailureAlarm *****************
 40563 ;; Defined at:
 40564 ;;		line 279 in file "alarm.c"
 40565 ;; Parameters:    Size  Location     Type
 40566 ;;		None
 40567 ;; Auto vars:     Size  Location     Type
 40568 ;;		None
 40569 ;; Return value:  Size  Location     Type
 40570 ;;                  1    wreg      void 
 40571 ;; Registers used:
 40572 ;;		wreg, status,2
 40573 ;; Tracked objects:
 40574 ;;		On entry : 0/1
 40575 ;;		On exit  : 3F/2
 40576 ;;		Unchanged: 0/0
 40577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40582 ;;Total ram usage:        0 bytes
 40583 ;; Hardware stack levels used:    1
 40584 ;; This function calls:
 40585 ;;		Nothing
 40586 ;; This function is called by:
 40587 ;;		_ClearAllAlarm
 40588 ;;		_MonitorPressureTask
 40589 ;;		i2_MuteAlarm
 40590 ;;		i2_ClearVars
 40591 ;; This function uses a non-reentrant model
 40592 ;;
 40593                           
 40594                           	psect	text327
 40595  00A5AA                     __ptext327:
 40596                           	opt callstack 0
 40597  00A5AA                     i2_ClearCircuitFailureAlarm:
 40598                           	opt callstack 13
 40599                           
 40600                           ; BSR set to: 0
 40601                           ;incstack = 0
 40602  00A5AA  0E00               	movlw	0
 40603  00A5AC  0102               	movlb	2	; () banked
 40604  00A5AE  6FAB               	movwf	_circuitFailureAlarm& (0+255),b
 40605                           
 40606                           ; BSR set to: 2
 40607  00A5B0  0012               	return		;funcret
 40608  00A5B2                     __end_ofi2_ClearCircuitFailureAlarm:
 40609                           	opt callstack 0
 40610                           
 40611 ;; *************** function i2_ClearBatteryFailAlarm *****************
 40612 ;; Defined at:
 40613 ;;		line 269 in file "alarm.c"
 40614 ;; Parameters:    Size  Location     Type
 40615 ;;		None
 40616 ;; Auto vars:     Size  Location     Type
 40617 ;;		None
 40618 ;; Return value:  Size  Location     Type
 40619 ;;                  1    wreg      void 
 40620 ;; Registers used:
 40621 ;;		wreg, status,2
 40622 ;; Tracked objects:
 40623 ;;		On entry : 3F/1
 40624 ;;		On exit  : 3F/0
 40625 ;;		Unchanged: 0/0
 40626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40631 ;;Total ram usage:        0 bytes
 40632 ;; Hardware stack levels used:    1
 40633 ;; This function calls:
 40634 ;;		Nothing
 40635 ;; This function is called by:
 40636 ;;		_ClearAllAlarm
 40637 ;; This function uses a non-reentrant model
 40638 ;;
 40639                           
 40640                           	psect	text328
 40641  00A5B2                     __ptext328:
 40642                           	opt callstack 0
 40643  00A5B2                     i2_ClearBatteryFailAlarm:
 40644                           	opt callstack 11
 40645                           
 40646                           ; BSR set to: 1
 40647                           
 40648                           ; BSR set to: 2
 40649                           ;incstack = 0
 40650  00A5B2  0E00               	movlw	0
 40651  00A5B4  0100               	movlb	0	; () banked
 40652  00A5B6  6FF7               	movwf	_batteryFailAlarm& (0+255),b
 40653                           
 40654                           ; BSR set to: 0
 40655  00A5B8  0012               	return		;funcret
 40656  00A5BA                     __end_ofi2_ClearBatteryFailAlarm:
 40657                           	opt callstack 0
 40658                           
 40659 ;; *************** function i2_ClearBaterryLowAlarmMed *****************
 40660 ;; Defined at:
 40661 ;;		line 280 in file "alarm.c"
 40662 ;; Parameters:    Size  Location     Type
 40663 ;;		None
 40664 ;; Auto vars:     Size  Location     Type
 40665 ;;		None
 40666 ;; Return value:  Size  Location     Type
 40667 ;;                  1    wreg      void 
 40668 ;; Registers used:
 40669 ;;		wreg, status,2
 40670 ;; Tracked objects:
 40671 ;;		On entry : 3F/2
 40672 ;;		On exit  : 3F/2
 40673 ;;		Unchanged: 0/0
 40674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40679 ;;Total ram usage:        0 bytes
 40680 ;; Hardware stack levels used:    1
 40681 ;; This function calls:
 40682 ;;		Nothing
 40683 ;; This function is called by:
 40684 ;;		_ClearAllAlarm
 40685 ;; This function uses a non-reentrant model
 40686 ;;
 40687                           
 40688                           	psect	text329
 40689  00A646                     __ptext329:
 40690                           	opt callstack 0
 40691  00A646                     i2_ClearBaterryLowAlarmMed:
 40692                           	opt callstack 11
 40693                           
 40694                           ; BSR set to: 2
 40695                           
 40696                           ; BSR set to: 0
 40697                           ;incstack = 0
 40698  00A646  0E00               	movlw	0
 40699  00A648  6FAA               	movwf	_baterryLowAlarmMed& (0+255),b
 40700                           
 40701                           ; BSR set to: 2
 40702  00A64A  0012               	return		;funcret
 40703  00A64C                     __end_ofi2_ClearBaterryLowAlarmMed:
 40704                           	opt callstack 0
 40705                           
 40706 ;; *************** function i2_ClearBaterryLowAlarmHigh *****************
 40707 ;; Defined at:
 40708 ;;		line 281 in file "alarm.c"
 40709 ;; Parameters:    Size  Location     Type
 40710 ;;		None
 40711 ;; Auto vars:     Size  Location     Type
 40712 ;;		None
 40713 ;; Return value:  Size  Location     Type
 40714 ;;                  1    wreg      void 
 40715 ;; Registers used:
 40716 ;;		wreg, status,2
 40717 ;; Tracked objects:
 40718 ;;		On entry : 3F/2
 40719 ;;		On exit  : 3F/2
 40720 ;;		Unchanged: 0/0
 40721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40726 ;;Total ram usage:        0 bytes
 40727 ;; Hardware stack levels used:    1
 40728 ;; This function calls:
 40729 ;;		Nothing
 40730 ;; This function is called by:
 40731 ;;		_ClearAllAlarm
 40732 ;; This function uses a non-reentrant model
 40733 ;;
 40734                           
 40735                           	psect	text330
 40736  00A64C                     __ptext330:
 40737                           	opt callstack 0
 40738  00A64C                     i2_ClearBaterryLowAlarmHigh:
 40739                           	opt callstack 11
 40740                           
 40741                           ; BSR set to: 2
 40742                           
 40743                           ; BSR set to: 2
 40744                           ;incstack = 0
 40745  00A64C  0E00               	movlw	0
 40746  00A64E  6FA9               	movwf	_baterryLowAlarmHigh& (0+255),b
 40747                           
 40748                           ; BSR set to: 2
 40749  00A650  0012               	return		;funcret
 40750  00A652                     __end_ofi2_ClearBaterryLowAlarmHigh:
 40751                           	opt callstack 0
 40752                           
 40753 ;; *************** function _ClearVBelowMinAlarm *****************
 40754 ;; Defined at:
 40755 ;;		line 289 in file "alarm.c"
 40756 ;; Parameters:    Size  Location     Type
 40757 ;;		None
 40758 ;; Auto vars:     Size  Location     Type
 40759 ;;		None
 40760 ;; Return value:  Size  Location     Type
 40761 ;;                  1    wreg      void 
 40762 ;; Registers used:
 40763 ;;		wreg, status,2
 40764 ;; Tracked objects:
 40765 ;;		On entry : 3F/2
 40766 ;;		On exit  : 3F/2
 40767 ;;		Unchanged: 0/0
 40768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40773 ;;Total ram usage:        0 bytes
 40774 ;; Hardware stack levels used:    1
 40775 ;; This function calls:
 40776 ;;		Nothing
 40777 ;; This function is called by:
 40778 ;;		_ClearAllAlarm
 40779 ;;		_MonitorPressureTask
 40780 ;; This function uses a non-reentrant model
 40781 ;;
 40782                           
 40783                           	psect	text331
 40784  00A652                     __ptext331:
 40785                           	opt callstack 0
 40786  00A652                     _ClearVBelowMinAlarm:
 40787                           	opt callstack 14
 40788                           
 40789                           ; BSR set to: 2
 40790                           
 40791                           ; BSR set to: 2
 40792                           ;incstack = 0
 40793  00A652  0E00               	movlw	0
 40794  00A654  6FA6               	movwf	_vBelowMinAlarm& (0+255),b
 40795                           
 40796                           ; BSR set to: 2
 40797  00A656  0012               	return		;funcret
 40798  00A658                     __end_of_ClearVBelowMinAlarm:
 40799                           	opt callstack 0
 40800                           
 40801 ;; *************** function _ClearVAboveMaxAlarm *****************
 40802 ;; Defined at:
 40803 ;;		line 288 in file "alarm.c"
 40804 ;; Parameters:    Size  Location     Type
 40805 ;;		None
 40806 ;; Auto vars:     Size  Location     Type
 40807 ;;		None
 40808 ;; Return value:  Size  Location     Type
 40809 ;;                  1    wreg      void 
 40810 ;; Registers used:
 40811 ;;		wreg, status,2
 40812 ;; Tracked objects:
 40813 ;;		On entry : 3D/2
 40814 ;;		On exit  : 3F/2
 40815 ;;		Unchanged: 0/0
 40816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40821 ;;Total ram usage:        0 bytes
 40822 ;; Hardware stack levels used:    1
 40823 ;; This function calls:
 40824 ;;		Nothing
 40825 ;; This function is called by:
 40826 ;;		_ClearAllAlarm
 40827 ;;		_MonitorPressureTask
 40828 ;; This function uses a non-reentrant model
 40829 ;;
 40830                           
 40831                           	psect	text332
 40832  00A5BA                     __ptext332:
 40833                           	opt callstack 0
 40834  00A5BA                     _ClearVAboveMaxAlarm:
 40835                           	opt callstack 14
 40836                           
 40837                           ; BSR set to: 2
 40838                           ;incstack = 0
 40839  00A5BA  0E00               	movlw	0
 40840  00A5BC  0102               	movlb	2	; () banked
 40841  00A5BE  6FA5               	movwf	_vAboveMaxAlarm& (0+255),b
 40842                           
 40843                           ; BSR set to: 2
 40844  00A5C0  0012               	return		;funcret
 40845  00A5C2                     __end_of_ClearVAboveMaxAlarm:
 40846                           	opt callstack 0
 40847                           
 40848 ;; *************** function _ClearTdiTooLongAlarm *****************
 40849 ;; Defined at:
 40850 ;;		line 286 in file "alarm.c"
 40851 ;; Parameters:    Size  Location     Type
 40852 ;;		None
 40853 ;; Auto vars:     Size  Location     Type
 40854 ;;		None
 40855 ;; Return value:  Size  Location     Type
 40856 ;;                  1    wreg      void 
 40857 ;; Registers used:
 40858 ;;		wreg, status,2
 40859 ;; Tracked objects:
 40860 ;;		On entry : 3C/2
 40861 ;;		On exit  : 3F/2
 40862 ;;		Unchanged: 0/0
 40863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40868 ;;Total ram usage:        0 bytes
 40869 ;; Hardware stack levels used:    1
 40870 ;; This function calls:
 40871 ;;		Nothing
 40872 ;; This function is called by:
 40873 ;;		_ClearAllAlarm
 40874 ;;		_MonitorPressureTask
 40875 ;; This function uses a non-reentrant model
 40876 ;;
 40877                           
 40878                           	psect	text333
 40879  00A5C2                     __ptext333:
 40880                           	opt callstack 0
 40881  00A5C2                     _ClearTdiTooLongAlarm:
 40882                           	opt callstack 14
 40883                           
 40884                           ; BSR set to: 2
 40885                           ;incstack = 0
 40886  00A5C2  0E00               	movlw	0
 40887  00A5C4  0102               	movlb	2	; () banked
 40888  00A5C6  6FA8               	movwf	_tdiTooLongAlarm& (0+255),b
 40889                           
 40890                           ; BSR set to: 2
 40891  00A5C8  0012               	return		;funcret
 40892  00A5CA                     __end_of_ClearTdiTooLongAlarm:
 40893                           	opt callstack 0
 40894                           
 40895 ;; *************** function _ClearTdeTooLongAlarm *****************
 40896 ;; Defined at:
 40897 ;;		line 287 in file "alarm.c"
 40898 ;; Parameters:    Size  Location     Type
 40899 ;;		None
 40900 ;; Auto vars:     Size  Location     Type
 40901 ;;		None
 40902 ;; Return value:  Size  Location     Type
 40903 ;;                  1    wreg      void 
 40904 ;; Registers used:
 40905 ;;		wreg, status,2
 40906 ;; Tracked objects:
 40907 ;;		On entry : 3C/2
 40908 ;;		On exit  : 3F/2
 40909 ;;		Unchanged: 0/0
 40910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40915 ;;Total ram usage:        0 bytes
 40916 ;; Hardware stack levels used:    1
 40917 ;; This function calls:
 40918 ;;		Nothing
 40919 ;; This function is called by:
 40920 ;;		_ClearAllAlarm
 40921 ;;		_MonitorPressureTask
 40922 ;; This function uses a non-reentrant model
 40923 ;;
 40924                           
 40925                           	psect	text334
 40926  00A5CA                     __ptext334:
 40927                           	opt callstack 0
 40928  00A5CA                     _ClearTdeTooLongAlarm:
 40929                           	opt callstack 14
 40930                           
 40931                           ; BSR set to: 2
 40932                           ;incstack = 0
 40933  00A5CA  0E00               	movlw	0
 40934  00A5CC  0102               	movlb	2	; () banked
 40935  00A5CE  6FA7               	movwf	_tdeTooLongAlarm& (0+255),b
 40936                           
 40937                           ; BSR set to: 2
 40938  00A5D0  0012               	return		;funcret
 40939  00A5D2                     __end_of_ClearTdeTooLongAlarm:
 40940                           	opt callstack 0
 40941                           
 40942 ;; *************** function _ClearHighPressureAlarmLow *****************
 40943 ;; Defined at:
 40944 ;;		line 276 in file "alarm.c"
 40945 ;; Parameters:    Size  Location     Type
 40946 ;;		None
 40947 ;; Auto vars:     Size  Location     Type
 40948 ;;		None
 40949 ;; Return value:  Size  Location     Type
 40950 ;;                  1    wreg      void 
 40951 ;; Registers used:
 40952 ;;		wreg, status,2
 40953 ;; Tracked objects:
 40954 ;;		On entry : 3F/2
 40955 ;;		On exit  : 3F/2
 40956 ;;		Unchanged: 0/0
 40957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40962 ;;Total ram usage:        0 bytes
 40963 ;; Hardware stack levels used:    1
 40964 ;; This function calls:
 40965 ;;		Nothing
 40966 ;; This function is called by:
 40967 ;;		_ClearAllAlarm
 40968 ;; This function uses a non-reentrant model
 40969 ;;
 40970                           
 40971                           	psect	text335
 40972  00A658                     __ptext335:
 40973                           	opt callstack 0
 40974  00A658                     _ClearHighPressureAlarmLow:
 40975                           	opt callstack 11
 40976                           
 40977                           ; BSR set to: 2
 40978                           
 40979                           ; BSR set to: 2
 40980                           ;incstack = 0
 40981  00A658  0E00               	movlw	0
 40982  00A65A  6FAE               	movwf	_highPressureAlarmLow& (0+255),b
 40983                           
 40984                           ; BSR set to: 2
 40985  00A65C  0012               	return		;funcret
 40986  00A65E                     __end_of_ClearHighPressureAlarmLow:
 40987                           	opt callstack 0
 40988                           
 40989 ;; *************** function _I2C2_SlaveSetCounter *****************
 40990 ;; Defined at:
 40991 ;;		line 418 in file "mcc_generated_files/i2c2_slave.c"
 40992 ;; Parameters:    Size  Location     Type
 40993 ;;  counter         1    wreg     unsigned char 
 40994 ;; Auto vars:     Size  Location     Type
 40995 ;;  counter         1    0[COMRAM] unsigned char 
 40996 ;; Return value:  Size  Location     Type
 40997 ;;                  1    wreg      void 
 40998 ;; Registers used:
 40999 ;;		wreg
 41000 ;; Tracked objects:
 41001 ;;		On entry : 3F/3D
 41002 ;;		On exit  : 0/0
 41003 ;;		Unchanged: 0/0
 41004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41006 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41008 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41009 ;;Total ram usage:        1 bytes
 41010 ;; Hardware stack levels used:    1
 41011 ;; This function calls:
 41012 ;;		Nothing
 41013 ;; This function is called by:
 41014 ;;		_I2C2_Isr
 41015 ;; This function uses a non-reentrant model
 41016 ;;
 41017                           
 41018                           	psect	text336
 41019  00A494                     __ptext336:
 41020                           	opt callstack 0
 41021  00A494                     _I2C2_SlaveSetCounter:
 41022                           	opt callstack 15
 41023                           
 41024                           ; BSR set to: 2
 41025                           ;incstack = 0
 41026                           ;I2C2_SlaveSetCounter@counter stored from wreg
 41027  00A494  6E01               	movwf	I2C2_SlaveSetCounter@counter^0,c
 41028                           
 41029                           ;mcc_generated_files/i2c2_slave.c: 418: static __attribute__((inline)) void I2C2_SlaveSe
      +                          tCounter(uint8_t counter);mcc_generated_files/i2c2_slave.c: 419: {;mcc_generated_files/i
      +                          2c2_slave.c: 420:     I2C2CNT = counter;
 41030  00A496  0060  F007  FD56   	movff	I2C2_SlaveSetCounter@counter,15702	;volatile
 41031  00A49C  0012               	return		;funcret
 41032  00A49E                     __end_of_I2C2_SlaveSetCounter:
 41033                           	opt callstack 0
 41034                           
 41035 ;; *************** function _I2C2_SlaveReleaseClock *****************
 41036 ;; Defined at:
 41037 ;;		line 423 in file "mcc_generated_files/i2c2_slave.c"
 41038 ;; Parameters:    Size  Location     Type
 41039 ;;		None
 41040 ;; Auto vars:     Size  Location     Type
 41041 ;;		None
 41042 ;; Return value:  Size  Location     Type
 41043 ;;                  1    wreg      void 
 41044 ;; Registers used:
 41045 ;;		None
 41046 ;; Tracked objects:
 41047 ;;		On entry : 0/2
 41048 ;;		On exit  : 3F/3D
 41049 ;;		Unchanged: 0/0
 41050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41055 ;;Total ram usage:        0 bytes
 41056 ;; Hardware stack levels used:    1
 41057 ;; This function calls:
 41058 ;;		Nothing
 41059 ;; This function is called by:
 41060 ;;		_I2C2_Isr
 41061 ;; This function uses a non-reentrant model
 41062 ;;
 41063                           
 41064                           	psect	text337
 41065  00A65E                     __ptext337:
 41066                           	opt callstack 0
 41067  00A65E                     _I2C2_SlaveReleaseClock:
 41068                           	opt callstack 15
 41069                           
 41070                           ;mcc_generated_files/i2c2_slave.c: 425:     I2C2CON0bits.CSTR = 0;
 41071                           
 41072                           ;incstack = 0
 41073  00A65E  013D               	movlb	61	; () banked
 41074  00A660  995D               	bcf	93,4,b	;volatile
 41075                           
 41076                           ; BSR set to: 61
 41077  00A662  0012               	return		;funcret
 41078  00A664                     __end_of_I2C2_SlaveReleaseClock:
 41079                           	opt callstack 0
 41080                           
 41081 ;; *************** function _I2C2_SlaveRdCallBack *****************
 41082 ;; Defined at:
 41083 ;;		line 239 in file "mcc_generated_files/i2c2_slave.c"
 41084 ;; Parameters:    Size  Location     Type
 41085 ;;		None
 41086 ;; Auto vars:     Size  Location     Type
 41087 ;;		None
 41088 ;; Return value:  Size  Location     Type
 41089 ;;                  1    wreg      void 
 41090 ;; Registers used:
 41091 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 41092 ;; Tracked objects:
 41093 ;;		On entry : 3F/3D
 41094 ;;		On exit  : 0/0
 41095 ;;		Unchanged: 0/0
 41096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41101 ;;Total ram usage:        0 bytes
 41102 ;; Hardware stack levels used:    1
 41103 ;; Hardware stack levels required when called:    3
 41104 ;; This function calls:
 41105 ;;		Absolute function
 41106 ;;		_I2C2_SlaveDefRdInterruptHandler
 41107 ;;		_ReceiveHandler
 41108 ;; This function is called by:
 41109 ;;		_I2C2_Isr
 41110 ;; This function uses a non-reentrant model
 41111 ;;
 41112                           
 41113                           	psect	text338
 41114  009EB4                     __ptext338:
 41115                           	opt callstack 0
 41116  009EB4                     _I2C2_SlaveRdCallBack:
 41117                           	opt callstack 12
 41118                           
 41119                           ; BSR set to: 61
 41120                           ;mcc_generated_files/i2c2_slave.c: 241:     if (I2C2_SlaveRdInterruptHandler)
 41121                           
 41122                           ; BSR set to: 61
 41123                           ;incstack = 0
 41124  009EB4  0102               	movlb	2	; () banked
 41125  009EB6  5196               	movf	_I2C2_SlaveRdInterruptHandler& (0+255),w,b
 41126  009EB8  1197               	iorwf	(_I2C2_SlaveRdInterruptHandler+1)& (0+255),w,b
 41127  009EBA  B4D8               	btfsc	status,2,c
 41128  009EBC  0012               	return	
 41129                           
 41130                           ; BSR set to: 2
 41131                           ;mcc_generated_files/i2c2_slave.c: 242:     {;mcc_generated_files/i2c2_slave.c: 243:    
      +                               I2C2_SlaveRdInterruptHandler();
 41132  009EBE  D801               	call	i2u1953_48
 41133  009EC0  0012               	return	
 41134  009EC2                     i2u1953_48:
 41135  009EC2  0005               	push	
 41136  009EC4  6EFA               	movwf	pclath,c
 41137  009EC6  5196               	movf	_I2C2_SlaveRdInterruptHandler& (0+255),w,b
 41138  009EC8  6EFD               	movwf	tosl,c
 41139  009ECA  5197               	movf	(_I2C2_SlaveRdInterruptHandler+1)& (0+255),w,b
 41140  009ECC  6EFE               	movwf	tosh,c
 41141  009ECE  6AFF               	clrf	tosu,c
 41142  009ED0  50FA               	movf	pclath,w,c
 41143  009ED2  0012               	return		;indir
 41144  009ED4                     __end_of_I2C2_SlaveRdCallBack:
 41145                           	opt callstack 0
 41146                           
 41147 ;; *************** function _I2C2_SlaveDefRdInterruptHandler *****************
 41148 ;; Defined at:
 41149 ;;		line 247 in file "mcc_generated_files/i2c2_slave.c"
 41150 ;; Parameters:    Size  Location     Type
 41151 ;;		None
 41152 ;; Auto vars:     Size  Location     Type
 41153 ;;		None
 41154 ;; Return value:  Size  Location     Type
 41155 ;;                  1    wreg      void 
 41156 ;; Registers used:
 41157 ;;		wreg, status,2, cstack
 41158 ;; Tracked objects:
 41159 ;;		On entry : 3F/2
 41160 ;;		On exit  : 3F/2
 41161 ;;		Unchanged: 0/0
 41162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41167 ;;Total ram usage:        0 bytes
 41168 ;; Hardware stack levels used:    1
 41169 ;; Hardware stack levels required when called:    1
 41170 ;; This function calls:
 41171 ;;		_I2C2_SlaveGetRxData
 41172 ;; This function is called by:
 41173 ;;		_I2C2_Open
 41174 ;;		_I2C2_SlaveRdCallBack
 41175 ;; This function uses a non-reentrant model
 41176 ;;
 41177                           
 41178                           	psect	text339
 41179  00A49E                     __ptext339:
 41180                           	opt callstack 0
 41181  00A49E                     _I2C2_SlaveDefRdInterruptHandler:
 41182                           	opt callstack 13
 41183                           
 41184                           ; BSR set to: 2
 41185                           ;mcc_generated_files/i2c2_slave.c: 248:     i2c2RdData = I2C2_SlaveGetRxData();
 41186                           
 41187                           ;incstack = 0
 41188  00A49E  EC35  F053         	call	_I2C2_SlaveGetRxData	;wreg free
 41189  00A4A2  0102               	movlb	2	; () banked
 41190  00A4A4  6FB6               	movwf	_i2c2RdData& (0+255),b	;volatile
 41191                           
 41192                           ; BSR set to: 2
 41193  00A4A6  0012               	return		;funcret
 41194  00A4A8                     __end_of_I2C2_SlaveDefRdInterruptHandler:
 41195                           	opt callstack 0
 41196                           
 41197 ;; *************** function _ReceiveHandler *****************
 41198 ;; Defined at:
 41199 ;;		line 136 in file "controller.c"
 41200 ;; Parameters:    Size  Location     Type
 41201 ;;		None
 41202 ;; Auto vars:     Size  Location     Type
 41203 ;;  data            1    3[COMRAM] unsigned char 
 41204 ;;  stat1           1    0        unsigned char 
 41205 ;;  stat0           1    0        unsigned char 
 41206 ;;  addr            1    0        unsigned char 
 41207 ;; Return value:  Size  Location     Type
 41208 ;;                  1    wreg      void 
 41209 ;; Registers used:
 41210 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 41211 ;; Tracked objects:
 41212 ;;		On entry : 3D/0
 41213 ;;		On exit  : 0/0
 41214 ;;		Unchanged: 0/0
 41215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41217 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41219 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41220 ;;Total ram usage:        4 bytes
 41221 ;; Hardware stack levels used:    1
 41222 ;; Hardware stack levels required when called:    2
 41223 ;; This function calls:
 41224 ;;		_I2C2_Read
 41225 ;; This function is called by:
 41226 ;;		_StopHandler
 41227 ;;		_ControllerInit
 41228 ;;		_I2C2_SlaveRdCallBack
 41229 ;; This function uses a non-reentrant model
 41230 ;;
 41231                           
 41232                           	psect	text340
 41233  009142                     __ptext340:
 41234                           	opt callstack 0
 41235  009142                     _ReceiveHandler:
 41236                           	opt callstack 11
 41237                           
 41238                           ; BSR set to: 2
 41239                           ;incstack = 0
 41240  009142  013D               	movlb	61	; () banked
 41241  009144  5161               	movf	97,w,b	;volatile
 41242  009146  5162               	movf	98,w,b	;volatile
 41243  009148  5157               	movf	87,w,b	;volatile
 41244                           
 41245                           ;controller.c: 147:     if (!I2C2STAT1bits.RXBF) return;
 41246  00914A  A162               	btfss	98,0,b	;volatile
 41247  00914C  0012               	return	
 41248  00914E  D017               	goto	i2l19165
 41249  009150                     i2l19157:
 41250                           
 41251                           ; BSR set to: 61
 41252                           ;controller.c: 152:         data = I2C2_Read();
 41253  009150  EC32  F053         	call	_I2C2_Read	;wreg free
 41254  009154  6E04               	movwf	ReceiveHandler@data^0,c
 41255                           
 41256                           ; BSR set to: 61
 41257                           ;controller.c: 153:         if (cntByte<10) msg.controllerMsg[cntByte] = data;
 41258  009156  0100               	movlb	0	; () banked
 41259  009158  BFCD               	btfsc	(_cntByte+1)& (0+255),7,b
 41260  00915A  D006               	goto	i2u1883_40
 41261  00915C  51CD               	movf	(_cntByte+1)& (0+255),w,b
 41262  00915E  E10D               	bnz	i2l19163
 41263  009160  0E0A               	movlw	10
 41264  009162  5DCC               	subwf	_cntByte& (0+255),w,b
 41265  009164  B0D8               	btfsc	status,0,c
 41266  009166  D009               	goto	i2l19163
 41267  009168                     i2u1883_40:
 41268                           
 41269                           ; BSR set to: 0
 41270  009168  0E00               	movlw	low _msg
 41271  00916A  25CC               	addwf	_cntByte& (0+255),w,b
 41272  00916C  6ED9               	movwf	fsr2l,c
 41273  00916E  0E02               	movlw	high _msg
 41274  009170  21CD               	addwfc	(_cntByte+1)& (0+255),w,b
 41275  009172  6EDA               	movwf	fsr2h,c
 41276  009174  0060  F013  FFDF   	movff	ReceiveHandler@data,indf2
 41277  00917A                     i2l19163:
 41278                           
 41279                           ; BSR set to: 0
 41280                           ;controller.c: 154:         cntByte++;
 41281  00917A  4BCC               	infsnz	_cntByte& (0+255),f,b
 41282  00917C  2BCD               	incf	(_cntByte+1)& (0+255),f,b
 41283  00917E                     i2l19165:
 41284                           
 41285                           ;controller.c: 148:     while (I2C2STAT1bits.RXBF) {
 41286  00917E  013D               	movlb	61	; () banked
 41287  009180  B162               	btfsc	98,0,b	;volatile
 41288  009182  D7E6               	goto	i2l19157
 41289                           
 41290                           ; BSR set to: 61
 41291                           ;controller.c: 157:     commandReceived = 1;
 41292  009184  0E01               	movlw	1
 41293  009186  0102               	movlb	2	; () banked
 41294  009188  6F9B               	movwf	_commandReceived& (0+255),b
 41295  00918A  0012               	return		;funcret
 41296  00918C                     __end_of_ReceiveHandler:
 41297                           	opt callstack 0
 41298                           
 41299 ;; *************** function _I2C2_Read *****************
 41300 ;; Defined at:
 41301 ;;		line 149 in file "mcc_generated_files/i2c2_slave.c"
 41302 ;; Parameters:    Size  Location     Type
 41303 ;;		None
 41304 ;; Auto vars:     Size  Location     Type
 41305 ;;		None
 41306 ;; Return value:  Size  Location     Type
 41307 ;;                  1    wreg      unsigned char 
 41308 ;; Registers used:
 41309 ;;		wreg, status,2, cstack
 41310 ;; Tracked objects:
 41311 ;;		On entry : 0/3D
 41312 ;;		On exit  : 3F/3D
 41313 ;;		Unchanged: 0/0
 41314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41319 ;;Total ram usage:        0 bytes
 41320 ;; Hardware stack levels used:    1
 41321 ;; Hardware stack levels required when called:    1
 41322 ;; This function calls:
 41323 ;;		_I2C2_SlaveGetRxData
 41324 ;; This function is called by:
 41325 ;;		_ReceiveHandler
 41326 ;; This function uses a non-reentrant model
 41327 ;;
 41328                           
 41329                           	psect	text341
 41330  00A664                     __ptext341:
 41331                           	opt callstack 0
 41332  00A664                     _I2C2_Read:
 41333                           	opt callstack 11
 41334                           
 41335                           ;mcc_generated_files/i2c2_slave.c: 151:    return I2C2_SlaveGetRxData();
 41336                           
 41337                           ;incstack = 0
 41338  00A664  EC35  F053         	call	_I2C2_SlaveGetRxData	;wreg free
 41339                           
 41340                           ; BSR set to: 61
 41341  00A668  0012               	return		;funcret
 41342  00A66A                     __end_of_I2C2_Read:
 41343                           	opt callstack 0
 41344                           
 41345 ;; *************** function _I2C2_SlaveGetRxData *****************
 41346 ;; Defined at:
 41347 ;;		line 453 in file "mcc_generated_files/i2c2_slave.c"
 41348 ;; Parameters:    Size  Location     Type
 41349 ;;		None
 41350 ;; Auto vars:     Size  Location     Type
 41351 ;;		None
 41352 ;; Return value:  Size  Location     Type
 41353 ;;                  1    wreg      unsigned char 
 41354 ;; Registers used:
 41355 ;;		wreg, status,2
 41356 ;; Tracked objects:
 41357 ;;		On entry : 0/3D
 41358 ;;		On exit  : 3F/3D
 41359 ;;		Unchanged: 0/0
 41360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41365 ;;Total ram usage:        0 bytes
 41366 ;; Hardware stack levels used:    1
 41367 ;; This function calls:
 41368 ;;		Nothing
 41369 ;; This function is called by:
 41370 ;;		_I2C2_Read
 41371 ;;		_I2C2_SlaveDefRdInterruptHandler
 41372 ;; This function uses a non-reentrant model
 41373 ;;
 41374                           
 41375                           	psect	text342
 41376  00A66A                     __ptext342:
 41377                           	opt callstack 0
 41378  00A66A                     _I2C2_SlaveGetRxData:
 41379                           	opt callstack 11
 41380                           
 41381                           ;mcc_generated_files/i2c2_slave.c: 455:     return I2C2RXB;
 41382                           
 41383                           ; BSR set to: 61
 41384                           ;incstack = 0
 41385  00A66A  013D               	movlb	61	; () banked
 41386  00A66C  5154               	movf	84,w,b	;volatile
 41387                           
 41388                           ; BSR set to: 61
 41389  00A66E  0012               	return		;funcret
 41390  00A670                     __end_of_I2C2_SlaveGetRxData:
 41391                           	opt callstack 0
 41392                           
 41393 ;; *************** function _I2C2_SlaveIsRxBufFull *****************
 41394 ;; Defined at:
 41395 ;;		line 443 in file "mcc_generated_files/i2c2_slave.c"
 41396 ;; Parameters:    Size  Location     Type
 41397 ;;		None
 41398 ;; Auto vars:     Size  Location     Type
 41399 ;;		None
 41400 ;; Return value:  Size  Location     Type
 41401 ;;                  1    wreg      _Bool 
 41402 ;; Registers used:
 41403 ;;		wreg
 41404 ;; Tracked objects:
 41405 ;;		On entry : 4/2
 41406 ;;		On exit  : 3F/3D
 41407 ;;		Unchanged: 0/0
 41408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41413 ;;Total ram usage:        0 bytes
 41414 ;; Hardware stack levels used:    1
 41415 ;; This function calls:
 41416 ;;		Nothing
 41417 ;; This function is called by:
 41418 ;;		_I2C2_Isr
 41419 ;; This function uses a non-reentrant model
 41420 ;;
 41421                           
 41422                           	psect	text343
 41423  00A3BA                     __ptext343:
 41424                           	opt callstack 0
 41425  00A3BA                     _I2C2_SlaveIsRxBufFull:
 41426                           	opt callstack 15
 41427                           
 41428                           ;mcc_generated_files/i2c2_slave.c: 445:     return I2C2STAT1bits.RXBF;
 41429                           
 41430                           ; BSR set to: 61
 41431                           ;incstack = 0
 41432  00A3BA  013D               	movlb	61	; () banked
 41433  00A3BC  A162               	btfss	98,0,b	;volatile
 41434  00A3BE  D002               	goto	i2u1203_40
 41435  00A3C0  0E01               	movlw	1
 41436  00A3C2  0012               	return	
 41437  00A3C4                     i2u1203_40:
 41438  00A3C4  0E00               	movlw	0
 41439                           
 41440                           ; BSR set to: 61
 41441  00A3C6  0012               	return		;funcret
 41442  00A3C8                     __end_of_I2C2_SlaveIsRxBufFull:
 41443                           	opt callstack 0
 41444                           
 41445 ;; *************** function _I2C2_SlaveClearStopFlag *****************
 41446 ;; Defined at:
 41447 ;;		line 398 in file "mcc_generated_files/i2c2_slave.c"
 41448 ;; Parameters:    Size  Location     Type
 41449 ;;		None
 41450 ;; Auto vars:     Size  Location     Type
 41451 ;;		None
 41452 ;; Return value:  Size  Location     Type
 41453 ;;                  1    wreg      void 
 41454 ;; Registers used:
 41455 ;;		None
 41456 ;; Tracked objects:
 41457 ;;		On entry : 3F/3D
 41458 ;;		On exit  : 3F/3D
 41459 ;;		Unchanged: 0/0
 41460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41465 ;;Total ram usage:        0 bytes
 41466 ;; Hardware stack levels used:    1
 41467 ;; This function calls:
 41468 ;;		Nothing
 41469 ;; This function is called by:
 41470 ;;		_I2C2_Isr
 41471 ;; This function uses a non-reentrant model
 41472 ;;
 41473                           
 41474                           	psect	text344
 41475  00A6E2                     __ptext344:
 41476                           	opt callstack 0
 41477  00A6E2                     _I2C2_SlaveClearStopFlag:
 41478                           	opt callstack 15
 41479                           
 41480                           ; BSR set to: 61
 41481                           ;mcc_generated_files/i2c2_slave.c: 400:     I2C2PIRbits.PCIF = 0;
 41482                           
 41483                           ; BSR set to: 61
 41484                           ;incstack = 0
 41485  00A6E2  9563               	bcf	99,2,b	;volatile
 41486                           
 41487                           ; BSR set to: 61
 41488  00A6E4  0012               	return		;funcret
 41489  00A6E6                     __end_of_I2C2_SlaveClearStopFlag:
 41490                           	opt callstack 0
 41491                           
 41492 ;; *************** function _I2C2_SlaveClearBuff *****************
 41493 ;; Defined at:
 41494 ;;		line 408 in file "mcc_generated_files/i2c2_slave.c"
 41495 ;; Parameters:    Size  Location     Type
 41496 ;;		None
 41497 ;; Auto vars:     Size  Location     Type
 41498 ;;		None
 41499 ;; Return value:  Size  Location     Type
 41500 ;;                  1    wreg      void 
 41501 ;; Registers used:
 41502 ;;		None
 41503 ;; Tracked objects:
 41504 ;;		On entry : 3F/3D
 41505 ;;		On exit  : 3F/3D
 41506 ;;		Unchanged: 0/0
 41507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41512 ;;Total ram usage:        0 bytes
 41513 ;; Hardware stack levels used:    1
 41514 ;; This function calls:
 41515 ;;		Nothing
 41516 ;; This function is called by:
 41517 ;;		_I2C2_Isr
 41518 ;; This function uses a non-reentrant model
 41519 ;;
 41520                           
 41521                           	psect	text345
 41522  00A6E6                     __ptext345:
 41523                           	opt callstack 0
 41524  00A6E6                     _I2C2_SlaveClearBuff:
 41525                           	opt callstack 15
 41526                           
 41527                           ; BSR set to: 61
 41528                           ;mcc_generated_files/i2c2_slave.c: 410:     I2C2STAT1bits.CLRBF = 1;
 41529                           
 41530                           ; BSR set to: 61
 41531                           ;incstack = 0
 41532  00A6E6  8562               	bsf	98,2,b	;volatile
 41533                           
 41534                           ; BSR set to: 61
 41535  00A6E8  0012               	return		;funcret
 41536  00A6EA                     __end_of_I2C2_SlaveClearBuff:
 41537                           	opt callstack 0
 41538                           
 41539 ;; *************** function _CMP1_ISR *****************
 41540 ;; Defined at:
 41541 ;;		line 110 in file "mcc_generated_files/cmp1.c"
 41542 ;; Parameters:    Size  Location     Type
 41543 ;;		None
 41544 ;; Auto vars:     Size  Location     Type
 41545 ;;		None
 41546 ;; Return value:  Size  Location     Type
 41547 ;;                  1    wreg      void 
 41548 ;; Registers used:
 41549 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41550 ;; Tracked objects:
 41551 ;;		On entry : 3F/39
 41552 ;;		On exit  : 0/0
 41553 ;;		Unchanged: 0/0
 41554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41559 ;;Total ram usage:        0 bytes
 41560 ;; Hardware stack levels used:    1
 41561 ;; Hardware stack levels required when called:   10
 41562 ;; This function calls:
 41563 ;;		Absolute function
 41564 ;;		_BuzzerCMPHandler
 41565 ;; This function is called by:
 41566 ;;		_INTERRUPT_InterruptManager
 41567 ;; This function uses a non-reentrant model
 41568 ;;
 41569                           
 41570                           	psect	text346
 41571  009D72                     __ptext346:
 41572                           	opt callstack 0
 41573  009D72                     _CMP1_ISR:
 41574                           	opt callstack 6
 41575                           
 41576                           ; BSR set to: 57
 41577                           ;mcc_generated_files/cmp1.c: 113:     PIR1bits.C1IF = 0;
 41578                           
 41579                           ; BSR set to: 61
 41580                           ;incstack = 0
 41581  009D72  99A1               	bcf	161,4,b	;volatile
 41582                           
 41583                           ; BSR set to: 57
 41584                           ;mcc_generated_files/cmp1.c: 115:     if (CMP1_InterruptHandler) CMP1_InterruptHandler()
      +                          ;
 41585  009D74  0102               	movlb	2	; () banked
 41586  009D76  518A               	movf	_CMP1_InterruptHandler& (0+255),w,b
 41587  009D78  118B               	iorwf	(_CMP1_InterruptHandler+1)& (0+255),w,b
 41588  009D7A  B4D8               	btfsc	status,2,c
 41589  009D7C  0012               	return	
 41590                           
 41591                           ; BSR set to: 2
 41592  009D7E  D801               	call	i2u2122_48
 41593  009D80  0012               	return	
 41594  009D82                     i2u2122_48:
 41595  009D82  0005               	push	
 41596  009D84  6EFA               	movwf	pclath,c
 41597  009D86  518A               	movf	_CMP1_InterruptHandler& (0+255),w,b
 41598  009D88  6EFD               	movwf	tosl,c
 41599  009D8A  518B               	movf	(_CMP1_InterruptHandler+1)& (0+255),w,b
 41600  009D8C  6EFE               	movwf	tosh,c
 41601  009D8E  6AFF               	clrf	tosu,c
 41602  009D90  50FA               	movf	pclath,w,c
 41603  009D92  0012               	return		;indir
 41604  009D94                     __end_of_CMP1_ISR:
 41605                           	opt callstack 0
 41606                           
 41607 ;; *************** function _BuzzerCMPHandler *****************
 41608 ;; Defined at:
 41609 ;;		line 393 in file "buzzer.c"
 41610 ;; Parameters:    Size  Location     Type
 41611 ;;		None
 41612 ;; Auto vars:     Size  Location     Type
 41613 ;;		None
 41614 ;; Return value:  Size  Location     Type
 41615 ;;                  1    wreg      void 
 41616 ;; Registers used:
 41617 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41618 ;; Tracked objects:
 41619 ;;		On entry : 3F/2
 41620 ;;		On exit  : 3F/39
 41621 ;;		Unchanged: 0/0
 41622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41627 ;;Total ram usage:        0 bytes
 41628 ;; Hardware stack levels used:    1
 41629 ;; Hardware stack levels required when called:    9
 41630 ;; This function calls:
 41631 ;;		i2_CMP1_Disable
 41632 ;;		i2_printf
 41633 ;; This function is called by:
 41634 ;;		_BuzzerInit
 41635 ;;		_CMP1_ISR
 41636 ;; This function uses a non-reentrant model
 41637 ;;
 41638                           
 41639                           	psect	text347
 41640  009BE8                     __ptext347:
 41641                           	opt callstack 0
 41642  009BE8                     _BuzzerCMPHandler:
 41643                           	opt callstack 6
 41644                           
 41645                           ; BSR set to: 2
 41646                           ;buzzer.c: 395:     if (checkController) {
 41647                           
 41648                           ;incstack = 0
 41649  009BE8  51B2               	movf	_checkController& (0+255),w,b
 41650  009BEA  B4D8               	btfsc	status,2,c
 41651  009BEC  D00A               	goto	i2l20737
 41652                           
 41653                           ; BSR set to: 2
 41654                           ;buzzer.c: 396:         printf("BCMPH_Cnt\r\n");
 41655  009BEE  0E9C               	movlw	low STR_19
 41656  009BF0  0100               	movlb	0	; () banked
 41657  009BF2  6F77               	movwf	i2printf@fmt& (0+255),b
 41658  009BF4  0EFF               	movlw	high STR_19
 41659  009BF6  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 41660  009BF8  EC07  F04E         	call	i2_printf	;wreg free
 41661                           
 41662                           ; BSR set to: 2
 41663                           ;buzzer.c: 397:         controllerDetected = 1;
 41664  009BFC  0E01               	movlw	1
 41665  009BFE  6FB1               	movwf	_controllerDetected& (0+255),b
 41666                           
 41667                           ;buzzer.c: 398:     } else {
 41668  009C00  D003               	goto	i2l20739
 41669  009C02                     i2l20737:
 41670                           
 41671                           ; BSR set to: 2
 41672                           ;buzzer.c: 399:         detected = 1;
 41673  009C02  0E01               	movlw	1
 41674  009C04  0100               	movlb	0	; () banked
 41675  009C06  6FF8               	movwf	_detected& (0+255),b
 41676  009C08                     i2l20739:
 41677                           
 41678                           ;buzzer.c: 401:     CMP1_Disable();
 41679  009C08  ECE9  F052         	call	i2_CMP1_Disable	;wreg free
 41680                           
 41681                           ; BSR set to: 57
 41682  009C0C  0012               	return		;funcret
 41683  009C0E                     __end_of_BuzzerCMPHandler:
 41684                           	opt callstack 0
 41685                           
 41686 ;; *************** function i2_CMP1_Disable *****************
 41687 ;; Defined at:
 41688 ;;		line 98 in file "mcc_generated_files/cmp1.c"
 41689 ;; Parameters:    Size  Location     Type
 41690 ;;		None
 41691 ;; Auto vars:     Size  Location     Type
 41692 ;;		None
 41693 ;; Return value:  Size  Location     Type
 41694 ;;                  1    wreg      void 
 41695 ;; Registers used:
 41696 ;;		None
 41697 ;; Tracked objects:
 41698 ;;		On entry : 3D/0
 41699 ;;		On exit  : 3F/39
 41700 ;;		Unchanged: 0/0
 41701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41706 ;;Total ram usage:        0 bytes
 41707 ;; Hardware stack levels used:    1
 41708 ;; This function calls:
 41709 ;;		Nothing
 41710 ;; This function is called by:
 41711 ;;		_BuzzerCMPHandler
 41712 ;;		i2_BuzzerOff
 41713 ;; This function uses a non-reentrant model
 41714 ;;
 41715                           
 41716                           	psect	text348
 41717  00A5D2                     __ptext348:
 41718                           	opt callstack 0
 41719  00A5D2                     i2_CMP1_Disable:
 41720                           	opt callstack 13
 41721                           
 41722                           ;mcc_generated_files/cmp1.c: 100:     PIE1bits.C1IE = 0;
 41723                           
 41724                           ; BSR set to: 57
 41725                           ;incstack = 0
 41726  00A5D2  0139               	movlb	57	; () banked
 41727  00A5D4  9991               	bcf	145,4,b	;volatile
 41728                           
 41729                           ;mcc_generated_files/cmp1.c: 101:     PIR1bits.C1IF = 0;
 41730  00A5D6  99A1               	bcf	161,4,b	;volatile
 41731                           
 41732                           ; BSR set to: 57
 41733  00A5D8  0012               	return		;funcret
 41734  00A5DA                     __end_ofi2_CMP1_Disable:
 41735                           	opt callstack 0
 41736                           
 41737 ;; *************** function _ADCC_ThresholdISR *****************
 41738 ;; Defined at:
 41739 ;;		line 307 in file "mcc_generated_files/adcc.c"
 41740 ;; Parameters:    Size  Location     Type
 41741 ;;		None
 41742 ;; Auto vars:     Size  Location     Type
 41743 ;;		None
 41744 ;; Return value:  Size  Location     Type
 41745 ;;                  1    wreg      void 
 41746 ;; Registers used:
 41747 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41748 ;; Tracked objects:
 41749 ;;		On entry : 0/39
 41750 ;;		On exit  : 0/0
 41751 ;;		Unchanged: 0/0
 41752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41757 ;;Total ram usage:        0 bytes
 41758 ;; Hardware stack levels used:    1
 41759 ;; Hardware stack levels required when called:   10
 41760 ;; This function calls:
 41761 ;;		Absolute function
 41762 ;;		_ADCC_DefaultInterruptHandler
 41763 ;;		_AdcHandler
 41764 ;; This function is called by:
 41765 ;;		_INTERRUPT_InterruptManager
 41766 ;; This function uses a non-reentrant model
 41767 ;;
 41768                           
 41769                           	psect	text349
 41770  009CE8                     __ptext349:
 41771                           	opt callstack 0
 41772  009CE8                     _ADCC_ThresholdISR:
 41773                           	opt callstack 6
 41774                           
 41775                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADTIF = 0;
 41776                           
 41777                           ; BSR set to: 57
 41778                           ;incstack = 0
 41779  009CE8  0139               	movlb	57	; () banked
 41780  009CEA  97A1               	bcf	161,3,b	;volatile
 41781                           
 41782                           ; BSR set to: 57
 41783                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADTI_InterruptHandler)
 41784  009CEC  0102               	movlb	2	; () banked
 41785  009CEE  51F3               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 41786  009CF0  11F4               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 41787  009CF2  B4D8               	btfsc	status,2,c
 41788  009CF4  0012               	return	
 41789                           
 41790                           ; BSR set to: 2
 41791                           ;mcc_generated_files/adcc.c: 313:         ADCC_ADTI_InterruptHandler();
 41792  009CF6  D801               	call	i2u2118_48
 41793  009CF8  0012               	return	
 41794  009CFA                     i2u2118_48:
 41795  009CFA  0005               	push	
 41796  009CFC  6EFA               	movwf	pclath,c
 41797  009CFE  51F3               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 41798  009D00  6EFD               	movwf	tosl,c
 41799  009D02  51F4               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 41800  009D04  6EFE               	movwf	tosh,c
 41801  009D06  6AFF               	clrf	tosu,c
 41802  009D08  50FA               	movf	pclath,w,c
 41803  009D0A  0012               	return		;indir
 41804  009D0C                     __end_of_ADCC_ThresholdISR:
 41805                           	opt callstack 0
 41806                           
 41807 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 41808 ;; Defined at:
 41809 ;;		line 319 in file "mcc_generated_files/adcc.c"
 41810 ;; Parameters:    Size  Location     Type
 41811 ;;		None
 41812 ;; Auto vars:     Size  Location     Type
 41813 ;;		None
 41814 ;; Return value:  Size  Location     Type
 41815 ;;                  1    wreg      void 
 41816 ;; Registers used:
 41817 ;;		None
 41818 ;; Tracked objects:
 41819 ;;		On entry : 3F/2
 41820 ;;		On exit  : 3F/2
 41821 ;;		Unchanged: 3F/0
 41822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41827 ;;Total ram usage:        0 bytes
 41828 ;; Hardware stack levels used:    1
 41829 ;; This function calls:
 41830 ;;		Nothing
 41831 ;; This function is called by:
 41832 ;;		_ADCC_Initialize
 41833 ;;		i2_ADCC_Initialize
 41834 ;;		_ADCC_ThresholdISR
 41835 ;; This function uses a non-reentrant model
 41836 ;;
 41837                           
 41838                           	psect	text350
 41839  00A6FA                     __ptext350:
 41840                           	opt callstack 0
 41841  00A6FA                     _ADCC_DefaultInterruptHandler:
 41842                           	opt callstack 15
 41843                           
 41844                           ; BSR set to: 2
 41845                           
 41846                           ;incstack = 0
 41847  00A6FA  0012               	return		;funcret
 41848  00A6FC                     __end_of_ADCC_DefaultInterruptHandler:
 41849                           	opt callstack 0
 41850                           
 41851 ;; *************** function _AdcHandler *****************
 41852 ;; Defined at:
 41853 ;;		line 96 in file "monitor.c"
 41854 ;; Parameters:    Size  Location     Type
 41855 ;;		None
 41856 ;; Auto vars:     Size  Location     Type
 41857 ;;		None
 41858 ;; Return value:  Size  Location     Type
 41859 ;;                  1    wreg      void 
 41860 ;; Registers used:
 41861 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41862 ;; Tracked objects:
 41863 ;;		On entry : 3F/2
 41864 ;;		On exit  : 3/2
 41865 ;;		Unchanged: 0/0
 41866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41871 ;;Total ram usage:        0 bytes
 41872 ;; Hardware stack levels used:    1
 41873 ;; Hardware stack levels required when called:    9
 41874 ;; This function calls:
 41875 ;;		_ADCC_GetConversionResult
 41876 ;;		_AdcReady
 41877 ;;		i2_ADCC_Initialize
 41878 ;;		i2_ADCC_StartConversion
 41879 ;;		i2_AdcInit
 41880 ;;		i2___wmul
 41881 ;;		i2_printf
 41882 ;; This function is called by:
 41883 ;;		_AdcInit
 41884 ;;		i2_AdcInit
 41885 ;;		_ADCC_ThresholdISR
 41886 ;; This function uses a non-reentrant model
 41887 ;;
 41888                           
 41889                           	psect	text351
 41890  006050                     __ptext351:
 41891                           	opt callstack 0
 41892  006050                     _AdcHandler:
 41893                           	opt callstack 6
 41894                           
 41895                           ; BSR set to: 2
 41896                           ;monitor.c: 97:     static int cnt = 0;;monitor.c: 101:     if (!AdcReady()) {
 41897                           
 41898                           ; BSR set to: 2
 41899                           ;incstack = 0
 41900  006050  EC38  F053         	call	_AdcReady	;wreg free
 41901  006054  0900               	iorlw	0
 41902  006056  A4D8               	btfss	status,2,c
 41903  006058  D010               	goto	i2l21039
 41904                           
 41905                           ; BSR set to: 62
 41906                           ;monitor.c: 102:         printf("EAI: %02X\r\n", ADSTAT);
 41907  00605A  0E84               	movlw	low STR_31
 41908  00605C  0100               	movlb	0	; () banked
 41909  00605E  6F77               	movwf	i2printf@fmt& (0+255),b
 41910  006060  0EFF               	movlw	high STR_31
 41911  006062  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 41912  006064  006F FBF0  F079    	movff	16124,?i2_printf+2	;volatile
 41913  00606A  6B7A               	clrf	(?i2_printf+3)& (0+255),b
 41914  00606C  EC07  F04E         	call	i2_printf	;wreg free
 41915                           
 41916                           ; BSR set to: 2
 41917                           ;monitor.c: 103:         ADCC_Initialize();
 41918  006070  ECAF  F043         	call	i2_ADCC_Initialize	;wreg free
 41919                           
 41920                           ;monitor.c: 104:         AdcInit();
 41921  006074  EC65  F042         	call	i2_AdcInit	;wreg free
 41922  006078  0012               	return	
 41923  00607A                     i2l21039:
 41924                           
 41925                           ; BSR set to: 62
 41926                           ;monitor.c: 108:     adcChannels[currentChannel].data = ADCC_GetConversionResult();
 41927  00607A  0060  F794  F001   	movff	_currentChannel,i2___wmul@multiplier
 41928  006080  0060  F798  F002   	movff	_currentChannel+1,i2___wmul@multiplier+1
 41929  006086  0E00               	movlw	0
 41930  006088  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 41931  00608A  0E05               	movlw	5
 41932  00608C  6E03               	movwf	i2___wmul@multiplicand^0,c
 41933  00608E  EC06  F04D         	call	i2___wmul	;wreg free
 41934  006092  0EBE               	movlw	low (_adcChannels+2)
 41935  006094  2401               	addwf	?i2___wmul^0,w,c
 41936  006096  6ED9               	movwf	fsr2l,c
 41937  006098  0E02               	movlw	high (_adcChannels+2)
 41938  00609A  2002               	addwfc	(?i2___wmul+1)^0,w,c
 41939  00609C  6EDA               	movwf	fsr2h,c
 41940  00609E  EC4D  F050         	call	_ADCC_GetConversionResult	;wreg free
 41941  0060A2  0060  F007  FFDE   	movff	?_ADCC_GetConversionResult,postinc2
 41942  0060A8  0060  F00B  FFDD   	movff	?_ADCC_GetConversionResult+1,postdec2
 41943                           
 41944                           ;monitor.c: 109:     adcChannels[currentChannel].dataValid = 1;
 41945  0060AE  0060  F794  F001   	movff	_currentChannel,i2___wmul@multiplier
 41946  0060B4  0060  F798  F002   	movff	_currentChannel+1,i2___wmul@multiplier+1
 41947  0060BA  0E00               	movlw	0
 41948  0060BC  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 41949  0060BE  0E05               	movlw	5
 41950  0060C0  6E03               	movwf	i2___wmul@multiplicand^0,c
 41951  0060C2  EC06  F04D         	call	i2___wmul	;wreg free
 41952  0060C6  0EBD               	movlw	low (_adcChannels+1)
 41953  0060C8  2401               	addwf	?i2___wmul^0,w,c
 41954  0060CA  6ED9               	movwf	fsr2l,c
 41955  0060CC  0E02               	movlw	high (_adcChannels+1)
 41956  0060CE  2002               	addwfc	(?i2___wmul+1)^0,w,c
 41957  0060D0  6EDA               	movwf	fsr2h,c
 41958  0060D2  0E01               	movlw	1
 41959  0060D4  6EDF               	movwf	indf2,c
 41960                           
 41961                           ;monitor.c: 112:     if (currentChannel < (4 -1))
 41962  0060D6  0101               	movlb	1	; () banked
 41963  0060D8  BFE6               	btfsc	(_currentChannel+1)& (0+255),7,b
 41964  0060DA  D006               	goto	i2u2016_40
 41965  0060DC  51E6               	movf	(_currentChannel+1)& (0+255),w,b
 41966  0060DE  E133               	bnz	i2l21051
 41967  0060E0  0E03               	movlw	3
 41968  0060E2  5DE5               	subwf	_currentChannel& (0+255),w,b
 41969  0060E4  B0D8               	btfsc	status,0,c
 41970  0060E6  D02F               	goto	i2l21051
 41971  0060E8                     i2u2016_40:
 41972                           
 41973                           ; BSR set to: 1
 41974                           ;monitor.c: 113:     {;monitor.c: 115:         currentChannel++;
 41975  0060E8  4BE5               	infsnz	_currentChannel& (0+255),f,b
 41976  0060EA  2BE6               	incf	(_currentChannel+1)& (0+255),f,b
 41977                           
 41978                           ; BSR set to: 1
 41979                           ;monitor.c: 116:         ADCON0bits.ADON = 0;
 41980  0060EC  013E               	movlb	62	; () banked
 41981  0060EE  9FF8               	bcf	248,7,b	;volatile
 41982                           
 41983                           ; BSR set to: 62
 41984                           ;monitor.c: 117:         ADREF = adcChannels[currentChannel].ref;
 41985  0060F0  0060  F794  F001   	movff	_currentChannel,i2___wmul@multiplier
 41986  0060F6  0060  F798  F002   	movff	_currentChannel+1,i2___wmul@multiplier+1
 41987  0060FC  0E00               	movlw	0
 41988  0060FE  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 41989  006100  0E05               	movlw	5
 41990  006102  6E03               	movwf	i2___wmul@multiplicand^0,c
 41991  006104  EC06  F04D         	call	i2___wmul	;wreg free
 41992  006108  0EC0               	movlw	low (_adcChannels+4)
 41993  00610A  2401               	addwf	?i2___wmul^0,w,c
 41994  00610C  6ED9               	movwf	fsr2l,c
 41995  00610E  0E02               	movlw	high (_adcChannels+4)
 41996  006110  2002               	addwfc	(?i2___wmul+1)^0,w,c
 41997  006112  6EDA               	movwf	fsr2h,c
 41998  006114  50DF               	movf	indf2,w,c
 41999  006116  013E               	movlb	62	; () banked
 42000  006118  6FFD               	movwf	253,b	;volatile
 42001                           
 42002                           ; BSR set to: 62
 42003                           ;monitor.c: 118:         ADCC_StartConversion(adcChannels[currentChannel].ch);
 42004  00611A  0060  F794  F001   	movff	_currentChannel,i2___wmul@multiplier
 42005  006120  0060  F798  F002   	movff	_currentChannel+1,i2___wmul@multiplier+1
 42006  006126  0E00               	movlw	0
 42007  006128  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 42008  00612A  0E05               	movlw	5
 42009  00612C  6E03               	movwf	i2___wmul@multiplicand^0,c
 42010  00612E  EC06  F04D         	call	i2___wmul	;wreg free
 42011  006132  0EBC               	movlw	low _adcChannels
 42012  006134  2401               	addwf	?i2___wmul^0,w,c
 42013  006136  6ED9               	movwf	fsr2l,c
 42014  006138  0E02               	movlw	high _adcChannels
 42015  00613A  2002               	addwfc	(?i2___wmul+1)^0,w,c
 42016  00613C  6EDA               	movwf	fsr2h,c
 42017  00613E  50DF               	movf	indf2,w,c
 42018  006140  ECE7  F050         	call	i2_ADCC_StartConversion
 42019                           
 42020                           ;monitor.c: 119:     } else {
 42021  006144  0012               	return	
 42022  006146                     i2l21051:
 42023                           
 42024                           ; BSR set to: 1
 42025                           ;monitor.c: 121:         currentChannel = 0;
 42026  006146  0E00               	movlw	0
 42027  006148  6FE6               	movwf	(_currentChannel+1)& (0+255),b
 42028  00614A  0E00               	movlw	0
 42029  00614C  6FE5               	movwf	_currentChannel& (0+255),b
 42030                           
 42031                           ; BSR set to: 1
 42032                           ;monitor.c: 123:         cnt++;
 42033  00614E  0102               	movlb	2	; () banked
 42034  006150  4B70               	infsnz	AdcHandler@cnt& (0+255),f,b
 42035  006152  2B71               	incf	(AdcHandler@cnt+1)& (0+255),f,b
 42036                           
 42037                           ; BSR set to: 2
 42038                           ;monitor.c: 124:         if (cnt>=1000) { cnt = 0; }
 42039  006154  BF71               	btfsc	(AdcHandler@cnt+1)& (0+255),7,b
 42040  006156  D00A               	goto	i2l21059
 42041  006158  0EE8               	movlw	232
 42042  00615A  5D70               	subwf	AdcHandler@cnt& (0+255),w,b
 42043  00615C  0E03               	movlw	3
 42044  00615E  5971               	subwfb	(AdcHandler@cnt+1)& (0+255),w,b
 42045  006160  A0D8               	btfss	status,0,c
 42046  006162  D004               	goto	i2l21059
 42047                           
 42048                           ; BSR set to: 2
 42049  006164  0E00               	movlw	0
 42050  006166  6F71               	movwf	(AdcHandler@cnt+1)& (0+255),b
 42051  006168  0E00               	movlw	0
 42052  00616A  6F70               	movwf	AdcHandler@cnt& (0+255),b
 42053  00616C                     i2l21059:
 42054                           
 42055                           ; BSR set to: 2
 42056                           ;monitor.c: 125:         if (cnt==0) printf("o\r\n");
 42057  00616C  5170               	movf	AdcHandler@cnt& (0+255),w,b
 42058  00616E  1171               	iorwf	(AdcHandler@cnt+1)& (0+255),w,b
 42059  006170  A4D8               	btfss	status,2,c
 42060  006172  0012               	return	
 42061                           
 42062                           ; BSR set to: 2
 42063  006174  0EE4               	movlw	low STR_32
 42064  006176  0100               	movlb	0	; () banked
 42065  006178  6F77               	movwf	i2printf@fmt& (0+255),b
 42066  00617A  0EFF               	movlw	high STR_32
 42067  00617C  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 42068  00617E  EC07  F04E         	call	i2_printf	;wreg free
 42069  006182  0012               	return		;funcret
 42070  006184                     __end_of_AdcHandler:
 42071                           	opt callstack 0
 42072                           
 42073 ;; *************** function i2_printf *****************
 42074 ;; Defined at:
 42075 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 42076 ;; Parameters:    Size  Location     Type
 42077 ;;  fmt             2   23[BANK0 ] PTR const unsigned char 
 42078 ;;		 -> STR_55(4), STR_54(4), STR_53(15), STR_52(16), 
 42079 ;;		 -> STR_51(32), STR_50(32), STR_49(13), STR_48(12), 
 42080 ;;		 -> STR_47(14), STR_46(4), STR_45(4), STR_44(2), 
 42081 ;;		 -> STR_43(10), STR_42(4), STR_41(55), STR_40(53), 
 42082 ;;		 -> STR_39(43), STR_38(54), STR_37(40), STR_36(36), 
 42083 ;;		 -> STR_35(41), STR_34(32), STR_33(65), STR_32(4), 
 42084 ;;		 -> STR_31(12), STR_30(4), STR_25(5), STR_24(3), 
 42085 ;;		 -> STR_23(7), STR_22(18), STR_21(15), STR_20(15), 
 42086 ;;		 -> STR_19(12), STR_18(5), STR_17(5), STR_16(5), 
 42087 ;;		 -> STR_15(5), STR_14(19), STR_4(45), STR_3(4), 
 42088 ;;		 -> STR_2(15), STR_1(13), 
 42089 ;; Auto vars:     Size  Location     Type
 42090 ;;  printf          2   88[COMRAM] PTR void [1]
 42091 ;;		 -> ?i2_printf(2), ?_printf(2), ?_sprintf(2), 
 42092 ;;  printf          2    0        int 
 42093 ;; Return value:  Size  Location     Type
 42094 ;;                  2   23[BANK0 ] int 
 42095 ;; Registers used:
 42096 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 42097 ;; Tracked objects:
 42098 ;;		On entry : 0/0
 42099 ;;		On exit  : 3F/2
 42100 ;;		Unchanged: 0/0
 42101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42102 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42103 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42105 ;;      Totals:         4      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42106 ;;Total ram usage:       14 bytes
 42107 ;; Hardware stack levels used:    1
 42108 ;; Hardware stack levels required when called:    8
 42109 ;; This function calls:
 42110 ;;		i2_vfprintf
 42111 ;; This function is called by:
 42112 ;;		_ButtonTask
 42113 ;;		_BuzzerTestHandler
 42114 ;;		_BuzzerCMPHandler
 42115 ;;		_AlarmHandler
 42116 ;;		_AdcHandler
 42117 ;;		_MonitorPressureTask
 42118 ;;		_UpdateState
 42119 ;;		_StopHandler
 42120 ;;		_ControllerTimerHandler
 42121 ;;		i2_BuzzerTask
 42122 ;;		i2_MuteAlarm
 42123 ;;		i2_SetCalibrateState
 42124 ;;		i2_SetAlarmSV1
 42125 ;;		i2_SetSV1
 42126 ;; This function uses a non-reentrant model
 42127 ;;
 42128                           
 42129                           	psect	text352
 42130  009C0E                     __ptext352:
 42131                           	opt callstack 0
 42132  009C0E                     i2_printf:
 42133                           	opt callstack 6
 42134                           
 42135                           ;incstack = 0
 42136  009C0E  0E79               	movlw	low (?i2_printf+2)
 42137  009C10  6E59               	movwf	i2printf@ap^0,c
 42138  009C12  6A5A               	clrf	(i2printf@ap+1)^0,c
 42139  009C14  0E00               	movlw	0
 42140  009C16  6E4F               	movwf	i2vfprintf@fp^0,c
 42141  009C18  0E00               	movlw	0
 42142  009C1A  6E50               	movwf	(i2vfprintf@fp+1)^0,c
 42143  009C1C  0060  F1DC  F051   	movff	i2printf@fmt,i2vfprintf@fmt
 42144  009C22  0060  F1E0  F052   	movff	i2printf@fmt+1,i2vfprintf@fmt+1
 42145  009C28  0E59               	movlw	low i2printf@ap
 42146  009C2A  6E53               	movwf	i2vfprintf@ap^0,c
 42147  009C2C  6A54               	clrf	(i2vfprintf@ap+1)^0,c
 42148  009C2E  ECE5  F043         	call	i2_vfprintf	;wreg free
 42149                           
 42150                           ; BSR set to: 2
 42151  009C32  0012               	return		;funcret
 42152  009C34                     __end_ofi2_printf:
 42153                           	opt callstack 0
 42154                           
 42155 ;; *************** function i2_vfprintf *****************
 42156 ;; Defined at:
 42157 ;;		line 1368 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 42158 ;; Parameters:    Size  Location     Type
 42159 ;;  fp              2   78[COMRAM] PTR struct _IO_FILE
 42160 ;;		 -> i2sprintf@f(6), sprintf@f(6), NULL(0), 
 42161 ;;  fmt             2   80[COMRAM] PTR const unsigned char 
 42162 ;;		 -> STR_55(4), STR_54(4), STR_53(15), STR_52(16), 
 42163 ;;		 -> STR_51(32), STR_50(32), STR_49(13), STR_48(12), 
 42164 ;;		 -> STR_47(14), STR_46(4), STR_45(4), STR_44(2), 
 42165 ;;		 -> STR_43(10), STR_42(4), STR_41(55), STR_40(53), 
 42166 ;;		 -> STR_39(43), STR_38(54), STR_37(40), STR_36(36), 
 42167 ;;		 -> STR_35(41), STR_34(32), STR_33(65), STR_32(4), 
 42168 ;;		 -> STR_31(12), STR_30(4), STR_25(5), STR_24(3), 
 42169 ;;		 -> STR_23(7), STR_22(18), STR_21(15), STR_20(15), 
 42170 ;;		 -> STR_19(12), STR_18(5), STR_17(5), STR_16(5), 
 42171 ;;		 -> STR_15(5), STR_14(19), STR_13(8), STR_12(23), 
 42172 ;;		 -> STR_10(26), STR_9(17), STR_8(17), STR_7(15), 
 42173 ;;		 -> STR_4(45), STR_3(4), STR_2(15), STR_1(13), 
 42174 ;;  ap              2   82[COMRAM] PTR PTR void 
 42175 ;;		 -> i2printf@ap(2), i2sprintf@ap(2), printf@ap(2), sprintf@ap(2), 
 42176 ;; Auto vars:     Size  Location     Type
 42177 ;;  vfprintf        2   84[COMRAM] PTR unsigned char 
 42178 ;;		 -> STR_55(4), STR_54(4), STR_53(15), STR_52(16), 
 42179 ;;		 -> STR_51(32), STR_50(32), STR_49(13), STR_48(12), 
 42180 ;;		 -> STR_47(14), STR_46(4), STR_45(4), STR_44(2), 
 42181 ;;		 -> STR_43(10), STR_42(4), STR_41(55), STR_40(53), 
 42182 ;;		 -> STR_39(43), STR_38(54), STR_37(40), STR_36(36), 
 42183 ;;		 -> STR_35(41), STR_34(32), STR_33(65), STR_32(4), 
 42184 ;;		 -> STR_31(12), STR_30(4), STR_25(5), STR_24(3), 
 42185 ;;		 -> STR_23(7), STR_22(18), STR_21(15), STR_20(15), 
 42186 ;;		 -> STR_19(12), STR_18(5), STR_17(5), STR_16(5), 
 42187 ;;		 -> STR_15(5), STR_14(19), STR_13(8), STR_12(23), 
 42188 ;;		 -> STR_10(26), STR_9(17), STR_8(17), STR_7(15), 
 42189 ;;		 -> STR_4(45), STR_3(4), STR_2(15), STR_1(13), 
 42190 ;; Return value:  Size  Location     Type
 42191 ;;                  2   78[COMRAM] int 
 42192 ;; Registers used:
 42193 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 42194 ;; Tracked objects:
 42195 ;;		On entry : 0/0
 42196 ;;		On exit  : 3F/2
 42197 ;;		Unchanged: 0/0
 42198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42199 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42200 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42202 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42203 ;;Total ram usage:        8 bytes
 42204 ;; Hardware stack levels used:    1
 42205 ;; Hardware stack levels required when called:    7
 42206 ;; This function calls:
 42207 ;;		i2_vfpfcnvrt
 42208 ;; This function is called by:
 42209 ;;		i2_sprintf
 42210 ;;		i2_printf
 42211 ;; This function uses a non-reentrant model
 42212 ;;
 42213                           
 42214                           	psect	text353
 42215  0087CA                     __ptext353:
 42216                           	opt callstack 0
 42217  0087CA                     i2_vfprintf:
 42218                           	opt callstack 6
 42219                           
 42220                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.10/pic/sources/c99/
      +                          common/doprnt.c: 1369: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt
      +                          .c: 1371:     char *cfmt;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprn
      +                          t.c: 1373:     cfmt = (char *)fmt;
 42221                           
 42222                           ; BSR set to: 2
 42223                           ;incstack = 0
 42224  0087CA  0060  F144  F055   	movff	i2vfprintf@fmt,i2vfprintf@cfmt
 42225  0087D0  0060  F148  F056   	movff	i2vfprintf@fmt+1,i2vfprintf@cfmt+1
 42226                           
 42227                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 42228  0087D6  0E00               	movlw	0
 42229  0087D8  0102               	movlb	2	; () banked
 42230  0087DA  6F2B               	movwf	(_nout+1)& (0+255),b
 42231  0087DC  0E00               	movlw	0
 42232  0087DE  6F2A               	movwf	_nout& (0+255),b
 42233                           
 42234                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
 42235  0087E0  D016               	goto	i2l17891
 42236  0087E2                     i2l17889:
 42237                           
 42238                           ; BSR set to: 2
 42239                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout +
      +                          = vfpfcnvrt(fp, &cfmt, ap);
 42240  0087E2  0060  F13C  F045   	movff	i2vfprintf@fp,i2vfpfcnvrt@fp
 42241  0087E8  0060  F140  F046   	movff	i2vfprintf@fp+1,i2vfpfcnvrt@fp+1
 42242  0087EE  0E55               	movlw	low i2vfprintf@cfmt
 42243  0087F0  6E47               	movwf	i2vfpfcnvrt@fmt^0,c
 42244  0087F2  6A48               	clrf	(i2vfpfcnvrt@fmt+1)^0,c
 42245  0087F4  0060  F14C  F049   	movff	i2vfprintf@ap,i2vfpfcnvrt@ap
 42246  0087FA  0060  F150  F04A   	movff	i2vfprintf@ap+1,i2vfpfcnvrt@ap+1
 42247  008800  EC75  F009         	call	i2_vfpfcnvrt	;wreg free
 42248  008804  5045               	movf	?i2_vfpfcnvrt^0,w,c
 42249  008806  0102               	movlb	2	; () banked
 42250  008808  272A               	addwf	_nout& (0+255),f,b
 42251  00880A  5046               	movf	(?i2_vfpfcnvrt+1)^0,w,c
 42252  00880C  232B               	addwfc	(_nout+1)& (0+255),f,b
 42253  00880E                     i2l17891:
 42254                           
 42255                           ; BSR set to: 2
 42256                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
 42257  00880E  0060  F157  FFF6   	movff	i2vfprintf@cfmt,tblptrl
 42258  008814  0060  F15B  FFF7   	movff	i2vfprintf@cfmt+1,tblptrh
 42259  00881A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 42260  00881A  6AF8               	clrf	tblptru,c
 42261  00881C                     	endif
 42262  00881C                     	if	0	;tblptru may be non-zero
 42263  00881C                     	endif
 42264  00881C  0008               	tblrd		*
 42265  00881E  50F5               	movf	tablat,w,c
 42266  008820  0900               	iorlw	0
 42267  008822  A4D8               	btfss	status,2,c
 42268  008824  D7DE               	goto	i2l17889
 42269                           
 42270                           ; BSR set to: 2
 42271                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nou
      +                          t;
 42272  008826  0060  F8A8  F04F   	movff	_nout,?i2_vfprintf
 42273  00882C  0060  F8AC  F050   	movff	_nout+1,?i2_vfprintf+1
 42274                           
 42275                           ; BSR set to: 2
 42276  008832  0012               	return		;funcret
 42277  008834                     __end_ofi2_vfprintf:
 42278                           	opt callstack 0
 42279                           
 42280 ;; *************** function i2_vfpfcnvrt *****************
 42281 ;; Defined at:
 42282 ;;		line 670 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 42283 ;; Parameters:    Size  Location     Type
 42284 ;;  fp              2   68[COMRAM] PTR struct _IO_FILE
 42285 ;;		 -> i2sprintf@f(6), sprintf@f(6), NULL(0), 
 42286 ;;  fmt             2   70[COMRAM] PTR PTR unsigned char 
 42287 ;;		 -> i2vfprintf@cfmt(2), vfprintf@cfmt(2), 
 42288 ;;  ap              2   72[COMRAM] PTR PTR void 
 42289 ;;		 -> i2printf@ap(2), i2sprintf@ap(2), printf@ap(2), sprintf@ap(2), 
 42290 ;; Auto vars:     Size  Location     Type
 42291 ;;  vfpfcnvrt       8    8[BANK0 ] unsigned long long 
 42292 ;;  vfpfcnvrt       8    0[BANK0 ] long long 
 42293 ;;  vfpfcnvrt       4    0        long long 
 42294 ;;  vfpfcnvrt       3    0        PTR void 
 42295 ;;  vfpfcnvrt       3    0        unsigned char [3]
 42296 ;;  vfpfcnvrt       2   18[BANK0 ] int 
 42297 ;;  vfpfcnvrt       2   16[BANK0 ] PTR unsigned char 
 42298 ;;		 -> ?_printf(2), ?_sprintf(2), adcVOffset(2), adcOffset(2), 
 42299 ;;		 -> STR_29(3), STR_28(3), STR_27(3), STR_26(3), 
 42300 ;;		 -> alarmData(399), STR_11(3), 
 42301 ;;  vfpfcnvrt       2    0        int 
 42302 ;;  vfpfcnvrt       1   22[BANK0 ] unsigned char 
 42303 ;; Return value:  Size  Location     Type
 42304 ;;                  2   68[COMRAM] int 
 42305 ;; Registers used:
 42306 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 42307 ;; Tracked objects:
 42308 ;;		On entry : 0/2
 42309 ;;		On exit  : 0/0
 42310 ;;		Unchanged: 0/0
 42311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42312 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42313 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42314 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42315 ;;      Totals:        10      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42316 ;;Total ram usage:       33 bytes
 42317 ;; Hardware stack levels used:    1
 42318 ;; Hardware stack levels required when called:    6
 42319 ;; This function calls:
 42320 ;;		i2_atoi
 42321 ;;		i2_ctoa
 42322 ;;		i2_dtoa
 42323 ;;		i2_fputc
 42324 ;;		i2_isdigit
 42325 ;;		i2_stoa
 42326 ;;		i2_xtoa
 42327 ;; This function is called by:
 42328 ;;		i2_vfprintf
 42329 ;; This function uses a non-reentrant model
 42330 ;;
 42331                           
 42332                           	psect	text354
 42333  0012EA                     __ptext354:
 42334                           	opt callstack 0
 42335  0012EA                     i2_vfpfcnvrt:
 42336                           	opt callstack 6
 42337                           
 42338                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpf
      +                          cnvrt(FILE *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.10/pic/sources/c
      +                          99/common/doprnt.c: 671: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/dopr
      +                          nt.c: 672:     char c, *cp, ct[3];;/Applications/microchip/xc8/v2.10/pic/sources/c99/com
      +                          mon/doprnt.c: 673:     int done, i;;/Applications/microchip/xc8/v2.10/pic/sources/c99/co
      +                          mmon/doprnt.c: 674:     long long ll;;/Applications/microchip/xc8/v2.10/pic/sources/c99/
      +                          common/doprnt.c: 675:     unsigned long long llu;
 42339                           
 42340                           ; BSR set to: 2
 42341                           ;incstack = 0
 42342  0012EA  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 42343  0012F0  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 42344  0012F6  006F FF7B FFF6     	movff	postinc2,tblptrl
 42345  0012FC  006F FF77 FFF7     	movff	postdec2,tblptrh
 42346  001302                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 42347  001302  6AF8               	clrf	tblptru,c
 42348  001304                     	endif
 42349  001304                     	if	0	;tblptru may be non-zero
 42350  001304                     	endif
 42351  001304  0008               	tblrd		*
 42352  001306  50F5               	movf	tablat,w,c
 42353  001308  0A25               	xorlw	37
 42354  00130A  A4D8               	btfss	status,2,c
 42355  00130C  D2C1               	goto	i2l17625
 42356                           
 42357                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 42358  00130E  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 42359  001314  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 42360  00131A  2ADE               	incf	postinc2,f,c
 42361  00131C  0E00               	movlw	0
 42362  00131E  22DD               	addwfc	postdec2,f,c
 42363                           
 42364                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags =
      +                           width = 0;
 42365  001320  0E00               	movlw	0
 42366  001322  0101               	movlb	1	; () banked
 42367  001324  6FC8               	movwf	(_width+1)& (0+255),b
 42368  001326  0E00               	movlw	0
 42369  001328  6FC7               	movwf	_width& (0+255),b
 42370  00132A  C1C7  F1CB         	movff	_width,_flags
 42371  00132E  C1C8  F1CC         	movff	_width+1,_flags+1
 42372                           
 42373                           ; BSR set to: 1
 42374                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = 
      +                          -1;
 42375  001332  69C9               	setf	_prec& (0+255),b
 42376  001334  69CA               	setf	(_prec+1)& (0+255),b
 42377                           
 42378                           ; BSR set to: 1
 42379                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 688:         done = 
      +                          0;
 42380  001336  0E00               	movlw	0
 42381  001338  0100               	movlb	0	; () banked
 42382  00133A  6F73               	movwf	(i2vfpfcnvrt@done+1)& (0+255),b
 42383  00133C  0E00               	movlw	0
 42384  00133E  D01B               	goto	L17
 42385  001340                     i2l17521:
 42386                           
 42387                           ; BSR set to: 0
 42388                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 692:                
      +                               flags |= (1 << 0);
 42389  001340  0101               	movlb	1	; () banked
 42390  001342  81CB               	bsf	_flags& (0+255),0,b
 42391  001344  D00B               	goto	i2l17539
 42392  001346                     i2l17525:
 42393                           
 42394                           ; BSR set to: 0
 42395                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 696:                
      +                               flags |= (1 << 1);
 42396  001346  0101               	movlb	1	; () banked
 42397  001348  83CB               	bsf	_flags& (0+255),1,b
 42398  00134A  D008               	goto	i2l17539
 42399  00134C                     i2l17529:
 42400                           
 42401                           ; BSR set to: 0
 42402                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 700:                
      +                               flags |= (1 << 2);
 42403  00134C  0101               	movlb	1	; () banked
 42404  00134E  85CB               	bsf	_flags& (0+255),2,b
 42405  001350  D005               	goto	i2l17539
 42406  001352                     i2l17533:
 42407                           
 42408                           ; BSR set to: 0
 42409                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 704:                
      +                               flags |= (1 << 3);
 42410  001352  0101               	movlb	1	; () banked
 42411  001354  87CB               	bsf	_flags& (0+255),3,b
 42412  001356  D002               	goto	i2l17539
 42413  001358                     i2l17537:
 42414                           
 42415                           ; BSR set to: 0
 42416                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 708:                
      +                               flags |= (1 << 4);
 42417  001358  0101               	movlb	1	; () banked
 42418  00135A  89CB               	bsf	_flags& (0+255),4,b
 42419  00135C                     i2l17539:
 42420                           
 42421                           ; BSR set to: 1
 42422                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 709:                
      +                               ++*fmt;
 42423  00135C  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 42424  001362  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 42425  001368  2ADE               	incf	postinc2,f,c
 42426  00136A  0E00               	movlw	0
 42427  00136C  22DD               	addwfc	postdec2,f,c
 42428                           
 42429                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 710:                
      +                               break;
 42430  00136E  D02B               	goto	i2l17547
 42431  001370                     i2l17541:
 42432                           
 42433                           ; BSR set to: 0
 42434                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 712:                
      +                               done = 1;
 42435  001370  0E00               	movlw	0
 42436  001372  6F73               	movwf	(i2vfpfcnvrt@done+1)& (0+255),b
 42437  001374  0E01               	movlw	1
 42438  001376                     L17:
 42439  001376  6F72               	movwf	i2vfpfcnvrt@done& (0+255),b
 42440                           
 42441                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 713:                
      +                               break;
 42442  001378  D026               	goto	i2l17547
 42443  00137A                     i2l17545:
 42444                           
 42445                           ; BSR set to: 0
 42446  00137A  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 42447  001380  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 42448  001386  006F FF7B FFF6     	movff	postinc2,tblptrl
 42449  00138C  006F FF77 FFF7     	movff	postdec2,tblptrh
 42450  001392                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 42451  001392  6AF8               	clrf	tblptru,c
 42452  001394                     	endif
 42453  001394                     	if	0	;tblptru may be non-zero
 42454  001394                     	endif
 42455  001394  0008               	tblrd		*
 42456  001396  50F5               	movf	tablat,w,c
 42457  001398  6E4B               	movwf	??i2_vfpfcnvrt^0,c
 42458  00139A  6A4C               	clrf	(??i2_vfpfcnvrt+1)^0,c
 42459                           
 42460                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 42461                           ; Switch size 1, requested type "simple"
 42462                           ; Number of cases is 1, Range of values is 0 to 0
 42463                           ; switch strategies available:
 42464                           ; Name         Instructions Cycles
 42465                           ; simple_byte            4     3 (average)
 42466                           ;	Chosen strategy is simple_byte
 42467  00139C  504C               	movf	(??i2_vfpfcnvrt+1)^0,w,c
 42468  00139E  0A00               	xorlw	0	; case 0
 42469  0013A0  A4D8               	btfss	status,2,c
 42470  0013A2  D7E6               	goto	i2l17541
 42471                           
 42472                           ; BSR set to: 0
 42473                           ; Switch size 1, requested type "simple"
 42474                           ; Number of cases is 5, Range of values is 32 to 48
 42475                           ; switch strategies available:
 42476                           ; Name         Instructions Cycles
 42477                           ; simple_byte           16     9 (average)
 42478                           ;	Chosen strategy is simple_byte
 42479  0013A4  504B               	movf	??i2_vfpfcnvrt^0,w,c
 42480  0013A6  0A20               	xorlw	32	; case 32
 42481  0013A8  B4D8               	btfsc	status,2,c
 42482  0013AA  D7D3               	goto	i2l17533
 42483  0013AC  0A03               	xorlw	3	; case 35
 42484  0013AE  B4D8               	btfsc	status,2,c
 42485  0013B0  D7D3               	goto	i2l17537
 42486  0013B2  0A08               	xorlw	8	; case 43
 42487  0013B4  B4D8               	btfsc	status,2,c
 42488  0013B6  D7CA               	goto	i2l17529
 42489  0013B8  0A06               	xorlw	6	; case 45
 42490  0013BA  B4D8               	btfsc	status,2,c
 42491  0013BC  D7C1               	goto	i2l17521
 42492  0013BE  0A1D               	xorlw	29	; case 48
 42493  0013C0  B4D8               	btfsc	status,2,c
 42494  0013C2  D7C1               	goto	i2l17525
 42495  0013C4  D7D5               	goto	i2l17541
 42496  0013C6                     i2l17547:
 42497                           
 42498                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 689:         while (
      +                          !done) {
 42499  0013C6  0100               	movlb	0	; () banked
 42500  0013C8  5172               	movf	i2vfpfcnvrt@done& (0+255),w,b
 42501  0013CA  1173               	iorwf	(i2vfpfcnvrt@done+1)& (0+255),w,b
 42502  0013CC  B4D8               	btfsc	status,2,c
 42503  0013CE  D7D5               	goto	i2l17545
 42504                           
 42505                           ; BSR set to: 0
 42506                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 716:         if (fla
      +                          gs & (1 << 0)) {
 42507  0013D0  0101               	movlb	1	; () banked
 42508  0013D2  B1CB               	btfsc	_flags& (0+255),0,b
 42509                           
 42510                           ; BSR set to: 1
 42511                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 717:             fla
      +                          gs &= ~(1 << 1);
 42512  0013D4  93CB               	bcf	_flags& (0+255),1,b
 42513                           
 42514                           ; BSR set to: 1
 42515                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*f
      +                          mt)[0] == '*') {
 42516  0013D6  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 42517  0013DC  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 42518  0013E2  006F FF7B FFF6     	movff	postinc2,tblptrl
 42519  0013E8  006F FF77 FFF7     	movff	postdec2,tblptrh
 42520  0013EE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 42521  0013EE  6AF8               	clrf	tblptru,c
 42522  0013F0                     	endif
 42523  0013F0                     	if	0	;tblptru may be non-zero
 42524  0013F0                     	endif
 42525  0013F0  0008               	tblrd		*
 42526  0013F2  50F5               	movf	tablat,w,c
 42527  0013F4  0A2A               	xorlw	42
 42528  0013F6  A4D8               	btfss	status,2,c
 42529  0013F8  D02D               	goto	i2l17559
 42530                           
 42531                           ; BSR set to: 1
 42532                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*
      +                          fmt;
 42533  0013FA  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 42534  001400  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 42535  001406  2ADE               	incf	postinc2,f,c
 42536  001408  0E00               	movlw	0
 42537  00140A  22DD               	addwfc	postdec2,f,c
 42538                           
 42539                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             wid
      +                          th = (*(int *)__va_arg(*(int **)ap, (int)0));
 42540  00140C  0060  F127  FFD9   	movff	i2vfpfcnvrt@ap,fsr2l
 42541  001412  0060  F12B  FFDA   	movff	i2vfpfcnvrt@ap+1,fsr2h
 42542  001418  006F FF7C  F04B    	movff	indf2,??i2_vfpfcnvrt
 42543  00141E  0E02               	movlw	2
 42544  001420  26DE               	addwf	postinc2,f,c
 42545  001422  006F FF7C  F04C    	movff	indf2,??i2_vfpfcnvrt+1
 42546  001428  0E00               	movlw	0
 42547  00142A  22DD               	addwfc	postdec2,f,c
 42548  00142C  0060  F12F  FFD9   	movff	??i2_vfpfcnvrt,fsr2l
 42549  001432  0060  F133  FFDA   	movff	??i2_vfpfcnvrt+1,fsr2h
 42550  001438  006F FF78  F1C7    	movff	postinc2,_width
 42551  00143E  006F FF74  F1C8    	movff	postdec2,_width+1
 42552                           
 42553                           ; BSR set to: 1
 42554                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if 
      +                          (width < 0) {
 42555  001444  AFC8               	btfss	(_width+1)& (0+255),7,b
 42556  001446  D04D               	goto	i2u1674_40
 42557                           
 42558                           ; BSR set to: 1
 42559                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                
      +                           flags |= (1 << 0);
 42560  001448  81CB               	bsf	_flags& (0+255),0,b
 42561                           
 42562                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                
      +                           width = -width;
 42563  00144A  6DC7               	negf	_width& (0+255),b
 42564  00144C  1FC8               	comf	(_width+1)& (0+255),f,b
 42565  00144E  B0D8               	btfsc	status,0,c
 42566  001450  2BC8               	incf	(_width+1)& (0+255),f,b
 42567  001452  D047               	goto	i2u1674_40
 42568  001454                     i2l17559:
 42569                           
 42570                           ; BSR set to: 1
 42571                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             wid
      +                          th = atoi(*fmt);
 42572  001454  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 42573  00145A  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 42574  001460  006F FF78  F008    	movff	postinc2,i2atoi@s
 42575  001466  006F FF74  F009    	movff	postdec2,i2atoi@s+1
 42576  00146C  EC85  F02B         	call	i2_atoi	;wreg free
 42577  001470  0060  F020  F1C7   	movff	?i2_atoi,_width
 42578  001476  0060  F024  F1C8   	movff	?i2_atoi+1,_width+1
 42579                           
 42580                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             whi
      +                          le ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 42581  00147C  D009               	goto	i2l17563
 42582  00147E                     i2l17561:
 42583                           
 42584                           ; BSR set to: 0
 42585                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                
      +                           ++*fmt;
 42586  00147E  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 42587  001484  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 42588  00148A  2ADE               	incf	postinc2,f,c
 42589  00148C  0E00               	movlw	0
 42590  00148E  22DD               	addwfc	postdec2,f,c
 42591  001490                     i2l17563:
 42592  001490  0ED0               	movlw	208
 42593  001492  6E4B               	movwf	??i2_vfpfcnvrt^0,c
 42594  001494  0EFF               	movlw	255
 42595  001496  6E4C               	movwf	(??i2_vfpfcnvrt+1)^0,c
 42596  001498  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 42597  00149E  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 42598  0014A4  006F FF7B FFF6     	movff	postinc2,tblptrl
 42599  0014AA  006F FF77 FFF7     	movff	postdec2,tblptrh
 42600  0014B0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 42601  0014B0  6AF8               	clrf	tblptru,c
 42602  0014B2                     	endif
 42603  0014B2                     	if	0	;tblptru may be non-zero
 42604  0014B2                     	endif
 42605  0014B2  0008               	tblrd		*
 42606  0014B4  50F5               	movf	tablat,w,c
 42607  0014B6  6E4D               	movwf	(??i2_vfpfcnvrt+2)^0,c
 42608  0014B8  6A4E               	clrf	(??i2_vfpfcnvrt+3)^0,c
 42609  0014BA  504B               	movf	??i2_vfpfcnvrt^0,w,c
 42610  0014BC  264D               	addwf	(??i2_vfpfcnvrt+2)^0,f,c
 42611  0014BE  504C               	movf	(??i2_vfpfcnvrt+1)^0,w,c
 42612  0014C0  224E               	addwfc	(??i2_vfpfcnvrt+3)^0,f,c
 42613  0014C2  504E               	movf	(??i2_vfpfcnvrt+3)^0,w,c
 42614  0014C4  E106               	bnz	i2u1672_40
 42615  0014C6  0E0A               	movlw	10
 42616  0014C8  5C4D               	subwf	(??i2_vfpfcnvrt+2)^0,w,c
 42617  0014CA  B0D8               	btfsc	status,0,c
 42618  0014CC  D002               	goto	i2u1672_40
 42619  0014CE  0E01               	movlw	1
 42620  0014D0  D001               	goto	i2u1673_40
 42621  0014D2                     i2u1672_40:
 42622  0014D2  0E00               	movlw	0
 42623  0014D4                     i2u1673_40:
 42624  0014D4  0100               	movlb	0	; () banked
 42625  0014D6  6F74               	movwf	i2_vfpfcnvrt$5214& (0+255),b
 42626  0014D8  6B75               	clrf	(i2_vfpfcnvrt$5214+1)& (0+255),b
 42627                           
 42628                           ; BSR set to: 0
 42629  0014DA  5174               	movf	i2_vfpfcnvrt$5214& (0+255),w,b
 42630  0014DC  1175               	iorwf	(i2_vfpfcnvrt$5214+1)& (0+255),w,b
 42631  0014DE  A4D8               	btfss	status,2,c
 42632  0014E0  D7CE               	goto	i2l17561
 42633  0014E2                     i2u1674_40:
 42634                           
 42635                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fm
      +                          t[0] == 'c') {
 42636  0014E2  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 42637  0014E8  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 42638  0014EE  006F FF7B FFF6     	movff	postinc2,tblptrl
 42639  0014F4  006F FF77 FFF7     	movff	postdec2,tblptrh
 42640  0014FA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 42641  0014FA  6AF8               	clrf	tblptru,c
 42642  0014FC                     	endif
 42643  0014FC                     	if	0	;tblptru may be non-zero
 42644  0014FC                     	endif
 42645  0014FC  0008               	tblrd		*
 42646  0014FE  50F5               	movf	tablat,w,c
 42647  001500  0A63               	xorlw	99
 42648  001502  A4D8               	btfss	status,2,c
 42649  001504  D034               	goto	i2l17577
 42650                           
 42651                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*
      +                          fmt;
 42652  001506  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 42653  00150C  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 42654  001512  2ADE               	incf	postinc2,f,c
 42655  001514  0E00               	movlw	0
 42656  001516  22DD               	addwfc	postdec2,f,c
 42657                           
 42658                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c =
      +                           (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 42659  001518  0060  F127  FFD9   	movff	i2vfpfcnvrt@ap,fsr2l
 42660  00151E  0060  F12B  FFDA   	movff	i2vfpfcnvrt@ap+1,fsr2h
 42661  001524  006F FF7C  F04B    	movff	indf2,??i2_vfpfcnvrt
 42662  00152A  0E02               	movlw	2
 42663  00152C  26DE               	addwf	postinc2,f,c
 42664  00152E  006F FF7C  F04C    	movff	indf2,??i2_vfpfcnvrt+1
 42665  001534  0E00               	movlw	0
 42666  001536  22DD               	addwfc	postdec2,f,c
 42667  001538  0060  F12F  FFD9   	movff	??i2_vfpfcnvrt,fsr2l
 42668  00153E  0060  F133  FFDA   	movff	??i2_vfpfcnvrt+1,fsr2h
 42669  001544  50DF               	movf	indf2,w,c
 42670  001546  0100               	movlb	0	; () banked
 42671  001548  6F76               	movwf	i2vfpfcnvrt@c& (0+255),b
 42672                           
 42673                           ; BSR set to: 0
 42674                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             ret
      +                          urn ctoa(fp, c);
 42675  00154A  0060  F114  F01E   	movff	i2vfpfcnvrt@fp,i2ctoa@fp
 42676  001550  0060  F118  F01F   	movff	i2vfpfcnvrt@fp+1,i2ctoa@fp+1
 42677  001556  0060  F1D8  F020   	movff	i2vfpfcnvrt@c,i2ctoa@c
 42678  00155C  EC7E  F045         	call	i2_ctoa	;wreg free
 42679  001560  0060  F078  F045   	movff	?i2_ctoa,?i2_vfpfcnvrt
 42680  001566  0060  F07C  F046   	movff	?i2_ctoa+1,?i2_vfpfcnvrt+1
 42681  00156C  0012               	return	
 42682  00156E                     i2l17577:
 42683                           
 42684                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*f
      +                          mt[0] == 'd') || (*fmt[0] == 'i')) {
 42685  00156E  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 42686  001574  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 42687  00157A  006F FF7B FFF6     	movff	postinc2,tblptrl
 42688  001580  006F FF77 FFF7     	movff	postdec2,tblptrh
 42689  001586                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 42690  001586  6AF8               	clrf	tblptru,c
 42691  001588                     	endif
 42692  001588                     	if	0	;tblptru may be non-zero
 42693  001588                     	endif
 42694  001588  0008               	tblrd		*
 42695  00158A  50F5               	movf	tablat,w,c
 42696  00158C  0A64               	xorlw	100
 42697  00158E  B4D8               	btfsc	status,2,c
 42698  001590  D012               	goto	i2u1677_40
 42699  001592  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 42700  001598  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 42701  00159E  006F FF7B FFF6     	movff	postinc2,tblptrl
 42702  0015A4  006F FF77 FFF7     	movff	postdec2,tblptrh
 42703  0015AA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 42704  0015AA  6AF8               	clrf	tblptru,c
 42705  0015AC                     	endif
 42706  0015AC                     	if	0	;tblptru may be non-zero
 42707  0015AC                     	endif
 42708  0015AC  0008               	tblrd		*
 42709  0015AE  50F5               	movf	tablat,w,c
 42710  0015B0  0A69               	xorlw	105
 42711  0015B2  A4D8               	btfss	status,2,c
 42712  0015B4  D056               	goto	i2l17587
 42713  0015B6                     i2u1677_40:
 42714                           
 42715                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*
      +                          fmt;
 42716  0015B6  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 42717  0015BC  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 42718  0015C2  2ADE               	incf	postinc2,f,c
 42719  0015C4  0E00               	movlw	0
 42720  0015C6  22DD               	addwfc	postdec2,f,c
 42721                           
 42722                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll 
      +                          = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 42723  0015C8  0060  F127  FFD9   	movff	i2vfpfcnvrt@ap,fsr2l
 42724  0015CE  0060  F12B  FFDA   	movff	i2vfpfcnvrt@ap+1,fsr2h
 42725  0015D4  006F FF7C  F04B    	movff	indf2,??i2_vfpfcnvrt
 42726  0015DA  0E02               	movlw	2
 42727  0015DC  26DE               	addwf	postinc2,f,c
 42728  0015DE  006F FF7C  F04C    	movff	indf2,??i2_vfpfcnvrt+1
 42729  0015E4  0E00               	movlw	0
 42730  0015E6  22DD               	addwfc	postdec2,f,c
 42731  0015E8  0060  F12F  FFD9   	movff	??i2_vfpfcnvrt,fsr2l
 42732  0015EE  0060  F133  FFDA   	movff	??i2_vfpfcnvrt+1,fsr2h
 42733  0015F4  006F FF78  F060    	movff	postinc2,i2vfpfcnvrt@ll
 42734  0015FA  006F FF74  F061    	movff	postdec2,i2vfpfcnvrt@ll+1
 42735  001600  0100               	movlb	0	; () banked
 42736  001602  0E00               	movlw	0
 42737  001604  BF61               	btfsc	(i2vfpfcnvrt@ll+1)& (0+255),7,b
 42738  001606  0EFF               	movlw	-1
 42739  001608  6F62               	movwf	(i2vfpfcnvrt@ll+2)& (0+255),b
 42740  00160A  6F63               	movwf	(i2vfpfcnvrt@ll+3)& (0+255),b
 42741  00160C  6F64               	movwf	(i2vfpfcnvrt@ll+4)& (0+255),b
 42742  00160E  6F65               	movwf	(i2vfpfcnvrt@ll+5)& (0+255),b
 42743  001610  6F66               	movwf	(i2vfpfcnvrt@ll+6)& (0+255),b
 42744  001612  6F67               	movwf	(i2vfpfcnvrt@ll+7)& (0+255),b
 42745                           
 42746                           ; BSR set to: 0
 42747                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             ret
      +                          urn dtoa(fp, ll);
 42748  001614  0060  F114  F01E   	movff	i2vfpfcnvrt@fp,i2dtoa@fp
 42749  00161A  0060  F118  F01F   	movff	i2vfpfcnvrt@fp+1,i2dtoa@fp+1
 42750  001620  0060  F180  F020   	movff	i2vfpfcnvrt@ll,i2dtoa@d
 42751  001626  0060  F184  F021   	movff	i2vfpfcnvrt@ll+1,i2dtoa@d+1
 42752  00162C  0060  F188  F022   	movff	i2vfpfcnvrt@ll+2,i2dtoa@d+2
 42753  001632  0060  F18C  F023   	movff	i2vfpfcnvrt@ll+3,i2dtoa@d+3
 42754  001638  0060  F190  F024   	movff	i2vfpfcnvrt@ll+4,i2dtoa@d+4
 42755  00163E  0060  F194  F025   	movff	i2vfpfcnvrt@ll+5,i2dtoa@d+5
 42756  001644  0060  F198  F026   	movff	i2vfpfcnvrt@ll+6,i2dtoa@d+6
 42757  00164A  0060  F19C  F027   	movff	i2vfpfcnvrt@ll+7,i2dtoa@d+7
 42758  001650  EC32  F01A         	call	i2_dtoa	;wreg free
 42759  001654  0060  F078  F045   	movff	?i2_dtoa,?i2_vfpfcnvrt
 42760  00165A  0060  F07C  F046   	movff	?i2_dtoa+1,?i2_vfpfcnvrt+1
 42761  001660  0012               	return	
 42762  001662                     i2l17587:
 42763                           
 42764                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*f
      +                          mt[0] == 's') {
 42765  001662  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 42766  001668  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 42767  00166E  006F FF7B FFF6     	movff	postinc2,tblptrl
 42768  001674  006F FF77 FFF7     	movff	postdec2,tblptrh
 42769  00167A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 42770  00167A  6AF8               	clrf	tblptru,c
 42771  00167C                     	endif
 42772  00167C                     	if	0	;tblptru may be non-zero
 42773  00167C                     	endif
 42774  00167C  0008               	tblrd		*
 42775  00167E  50F5               	movf	tablat,w,c
 42776  001680  0A73               	xorlw	115
 42777  001682  A4D8               	btfss	status,2,c
 42778  001684  D03A               	goto	i2l17595
 42779                           
 42780                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++
      +                          *fmt;
 42781  001686  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 42782  00168C  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 42783  001692  2ADE               	incf	postinc2,f,c
 42784  001694  0E00               	movlw	0
 42785  001696  22DD               	addwfc	postdec2,f,c
 42786                           
 42787                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp
      +                           = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 42788  001698  0060  F127  FFD9   	movff	i2vfpfcnvrt@ap,fsr2l
 42789  00169E  0060  F12B  FFDA   	movff	i2vfpfcnvrt@ap+1,fsr2h
 42790  0016A4  006F FF7C  F04B    	movff	indf2,??i2_vfpfcnvrt
 42791  0016AA  0E02               	movlw	2
 42792  0016AC  26DE               	addwf	postinc2,f,c
 42793  0016AE  006F FF7C  F04C    	movff	indf2,??i2_vfpfcnvrt+1
 42794  0016B4  0E00               	movlw	0
 42795  0016B6  22DD               	addwfc	postdec2,f,c
 42796  0016B8  0060  F12F  FFD9   	movff	??i2_vfpfcnvrt,fsr2l
 42797  0016BE  0060  F133  FFDA   	movff	??i2_vfpfcnvrt+1,fsr2h
 42798  0016C4  006F FF78  F070    	movff	postinc2,i2vfpfcnvrt@cp
 42799  0016CA  006F FF74  F071    	movff	postdec2,i2vfpfcnvrt@cp+1
 42800                           
 42801                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             re
      +                          turn stoa(fp, cp);
 42802  0016D0  0060  F114  F00C   	movff	i2vfpfcnvrt@fp,i2stoa@fp
 42803  0016D6  0060  F118  F00D   	movff	i2vfpfcnvrt@fp+1,i2stoa@fp+1
 42804  0016DC  0060  F1C0  F00E   	movff	i2vfpfcnvrt@cp,i2stoa@s
 42805  0016E2  0060  F1C4  F00F   	movff	i2vfpfcnvrt@cp+1,i2stoa@s+1
 42806  0016E8  EC11  F02A         	call	i2_stoa	;wreg free
 42807  0016EC  0060  F030  F045   	movff	?i2_stoa,?i2_vfpfcnvrt
 42808  0016F2  0060  F034  F046   	movff	?i2_stoa+1,?i2_vfpfcnvrt+1
 42809  0016F8  0012               	return	
 42810  0016FA                     i2l17595:
 42811                           
 42812                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*
      +                          fmt[0] == 'x') || (*fmt[0] == 'X')) {
 42813  0016FA  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 42814  001700  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 42815  001706  006F FF7B FFF6     	movff	postinc2,tblptrl
 42816  00170C  006F FF77 FFF7     	movff	postdec2,tblptrh
 42817  001712                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 42818  001712  6AF8               	clrf	tblptru,c
 42819  001714                     	endif
 42820  001714                     	if	0	;tblptru may be non-zero
 42821  001714                     	endif
 42822  001714  0008               	tblrd		*
 42823  001716  50F5               	movf	tablat,w,c
 42824  001718  0A78               	xorlw	120
 42825  00171A  B4D8               	btfsc	status,2,c
 42826  00171C  D012               	goto	i2u1680_40
 42827  00171E  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 42828  001724  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 42829  00172A  006F FF7B FFF6     	movff	postinc2,tblptrl
 42830  001730  006F FF77 FFF7     	movff	postdec2,tblptrh
 42831  001736                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 42832  001736  6AF8               	clrf	tblptru,c
 42833  001738                     	endif
 42834  001738                     	if	0	;tblptru may be non-zero
 42835  001738                     	endif
 42836  001738  0008               	tblrd		*
 42837  00173A  50F5               	movf	tablat,w,c
 42838  00173C  0A58               	xorlw	88
 42839  00173E  A4D8               	btfss	status,2,c
 42840  001740  D06D               	goto	i2l17609
 42841  001742                     i2u1680_40:
 42842                           
 42843                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c 
      +                          = (*fmt)[0];
 42844  001742  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 42845  001748  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 42846  00174E  006F FF7B FFF6     	movff	postinc2,tblptrl
 42847  001754  006F FF77 FFF7     	movff	postdec2,tblptrh
 42848  00175A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 42849  00175A  6AF8               	clrf	tblptru,c
 42850  00175C                     	endif
 42851  00175C                     	if	0	;tblptru may be non-zero
 42852  00175C                     	endif
 42853  00175C  0008               	tblrd		*
 42854  00175E  006F FFD4  F076    	movff	tablat,i2vfpfcnvrt@c
 42855                           
 42856                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++
      +                          *fmt;
 42857  001764  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 42858  00176A  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 42859  001770  2ADE               	incf	postinc2,f,c
 42860  001772  0E00               	movlw	0
 42861  001774  22DD               	addwfc	postdec2,f,c
 42862                           
 42863                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             ll
      +                          u = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0
      +                          ));
 42864  001776  0060  F127  FFD9   	movff	i2vfpfcnvrt@ap,fsr2l
 42865  00177C  0060  F12B  FFDA   	movff	i2vfpfcnvrt@ap+1,fsr2h
 42866  001782  006F FF7C  F04B    	movff	indf2,??i2_vfpfcnvrt
 42867  001788  0E02               	movlw	2
 42868  00178A  26DE               	addwf	postinc2,f,c
 42869  00178C  006F FF7C  F04C    	movff	indf2,??i2_vfpfcnvrt+1
 42870  001792  0E00               	movlw	0
 42871  001794  22DD               	addwfc	postdec2,f,c
 42872  001796  0060  F12F  FFD9   	movff	??i2_vfpfcnvrt,fsr2l
 42873  00179C  0060  F133  FFDA   	movff	??i2_vfpfcnvrt+1,fsr2h
 42874  0017A2  006F FF78  F04D    	movff	postinc2,??i2_vfpfcnvrt+2
 42875  0017A8  006F FF74  F04E    	movff	postdec2,??i2_vfpfcnvrt+3
 42876  0017AE  0060  F134  F068   	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@llu
 42877  0017B4  0060  F138  F069   	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@llu+1
 42878  0017BA  0100               	movlb	0	; () banked
 42879  0017BC  6B6A               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 42880  0017BE  6B6B               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 42881  0017C0  6B6C               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 42882  0017C2  6B6D               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 42883  0017C4  6B6E               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 42884  0017C6  6B6F               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 42885                           
 42886                           ; BSR set to: 0
 42887                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             re
      +                          turn xtoa(fp, llu, c);
 42888  0017C8  0060  F114  F01E   	movff	i2vfpfcnvrt@fp,i2xtoa@fp
 42889  0017CE  0060  F118  F01F   	movff	i2vfpfcnvrt@fp+1,i2xtoa@fp+1
 42890  0017D4  0060  F1A0  F020   	movff	i2vfpfcnvrt@llu,i2xtoa@d
 42891  0017DA  0060  F1A4  F021   	movff	i2vfpfcnvrt@llu+1,i2xtoa@d+1
 42892  0017E0  0060  F1A8  F022   	movff	i2vfpfcnvrt@llu+2,i2xtoa@d+2
 42893  0017E6  0060  F1AC  F023   	movff	i2vfpfcnvrt@llu+3,i2xtoa@d+3
 42894  0017EC  0060  F1B0  F024   	movff	i2vfpfcnvrt@llu+4,i2xtoa@d+4
 42895  0017F2  0060  F1B4  F025   	movff	i2vfpfcnvrt@llu+5,i2xtoa@d+5
 42896  0017F8  0060  F1B8  F026   	movff	i2vfpfcnvrt@llu+6,i2xtoa@d+6
 42897  0017FE  0060  F1BC  F027   	movff	i2vfpfcnvrt@llu+7,i2xtoa@d+7
 42898  001804  0060  F1D8  F028   	movff	i2vfpfcnvrt@c,i2xtoa@x
 42899  00180A  ECE2  F01C         	call	i2_xtoa	;wreg free
 42900  00180E  0060  F078  F045   	movff	?i2_xtoa,?i2_vfpfcnvrt
 42901  001814  0060  F07C  F046   	movff	?i2_xtoa+1,?i2_vfpfcnvrt+1
 42902  00181A  0012               	return	
 42903  00181C                     i2l17609:
 42904                           
 42905                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*
      +                          fmt)[0] == '%') {
 42906  00181C  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 42907  001822  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 42908  001828  006F FF7B FFF6     	movff	postinc2,tblptrl
 42909  00182E  006F FF77 FFF7     	movff	postdec2,tblptrh
 42910  001834                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 42911  001834  6AF8               	clrf	tblptru,c
 42912  001836                     	endif
 42913  001836                     	if	0	;tblptru may be non-zero
 42914  001836                     	endif
 42915  001836  0008               	tblrd		*
 42916  001838  50F5               	movf	tablat,w,c
 42917  00183A  0A25               	xorlw	37
 42918  00183C  A4D8               	btfss	status,2,c
 42919  00183E  D01A               	goto	i2l17619
 42920                           
 42921                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++
      +                          *fmt;
 42922  001840  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 42923  001846  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 42924  00184C  2ADE               	incf	postinc2,f,c
 42925  00184E  0E00               	movlw	0
 42926  001850  22DD               	addwfc	postdec2,f,c
 42927                           
 42928                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fp
      +                          utc((int)'%', fp);
 42929  001852  0E00               	movlw	0
 42930  001854  6E04               	movwf	(i2fputc@c+1)^0,c
 42931  001856  0E25               	movlw	37
 42932  001858  6E03               	movwf	i2fputc@c^0,c
 42933  00185A  0060  F114  F005   	movff	i2vfpfcnvrt@fp,i2fputc@fp
 42934  001860  0060  F118  F006   	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
 42935  001866  EC41  F03A         	call	i2_fputc	;wreg free
 42936  00186A                     i2l17615:
 42937                           
 42938                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             re
      +                          turn 1;
 42939  00186A  0E00               	movlw	0
 42940  00186C  6E46               	movwf	(?i2_vfpfcnvrt+1)^0,c
 42941  00186E  0E01               	movlw	1
 42942  001870  6E45               	movwf	?i2_vfpfcnvrt^0,c
 42943  001872  0012               	return	
 42944  001874                     i2l17619:
 42945                           
 42946                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt
      +                          ;
 42947  001874  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 42948  00187A  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 42949  001880  2ADE               	incf	postinc2,f,c
 42950  001882  0E00               	movlw	0
 42951  001884  22DD               	addwfc	postdec2,f,c
 42952                           
 42953                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return
      +                           0;
 42954  001886  0E00               	movlw	0
 42955  001888  6E46               	movwf	(?i2_vfpfcnvrt+1)^0,c
 42956  00188A  0E00               	movlw	0
 42957  00188C  6E45               	movwf	?i2_vfpfcnvrt^0,c
 42958  00188E  0012               	return	
 42959  001890                     i2l17625:
 42960                           
 42961                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int
      +                          )(*fmt)[0], fp);
 42962  001890  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 42963  001896  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 42964  00189C  006F FF7B FFF6     	movff	postinc2,tblptrl
 42965  0018A2  006F FF77 FFF7     	movff	postdec2,tblptrh
 42966  0018A8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 42967  0018A8  6AF8               	clrf	tblptru,c
 42968  0018AA                     	endif
 42969  0018AA                     	if	0	;tblptru may be non-zero
 42970  0018AA                     	endif
 42971  0018AA  0008               	tblrd		*
 42972  0018AC  50F5               	movf	tablat,w,c
 42973  0018AE  6E03               	movwf	i2fputc@c^0,c
 42974  0018B0  6A04               	clrf	(i2fputc@c+1)^0,c
 42975  0018B2  0060  F114  F005   	movff	i2vfpfcnvrt@fp,i2fputc@fp
 42976  0018B8  0060  F118  F006   	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
 42977  0018BE  EC41  F03A         	call	i2_fputc	;wreg free
 42978                           
 42979                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 42980  0018C2  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 42981  0018C8  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 42982  0018CE  2ADE               	incf	postinc2,f,c
 42983  0018D0  0E00               	movlw	0
 42984  0018D2  22DD               	addwfc	postdec2,f,c
 42985  0018D4  D7CA               	goto	i2l17615
 42986  0018D6                     __end_ofi2_vfpfcnvrt:
 42987                           	opt callstack 0
 42988                           
 42989 ;; *************** function i2_xtoa *****************
 42990 ;; Defined at:
 42991 ;;		line 623 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 42992 ;; Parameters:    Size  Location     Type
 42993 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 42994 ;;		 -> i2sprintf@f(6), sprintf@f(6), NULL(0), 
 42995 ;;  d               8   31[COMRAM] unsigned long long 
 42996 ;;  x               1   39[COMRAM] unsigned char 
 42997 ;; Auto vars:     Size  Location     Type
 42998 ;;  xtoa            8   56[COMRAM] unsigned long long 
 42999 ;;  xtoa            2   66[COMRAM] int 
 43000 ;;  xtoa            2   64[COMRAM] int 
 43001 ;;  xtoa            2   54[COMRAM] int 
 43002 ;;  xtoa            2   52[COMRAM] int 
 43003 ;; Return value:  Size  Location     Type
 43004 ;;                  2   29[COMRAM] int 
 43005 ;; Registers used:
 43006 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 43007 ;; Tracked objects:
 43008 ;;		On entry : 3F/0
 43009 ;;		On exit  : 0/0
 43010 ;;		Unchanged: 0/0
 43011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43012 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43013 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43014 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43015 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43016 ;;Total ram usage:       39 bytes
 43017 ;; Hardware stack levels used:    1
 43018 ;; Hardware stack levels required when called:    5
 43019 ;; This function calls:
 43020 ;;		i2_isalpha
 43021 ;;		i2_isupper
 43022 ;;		i2_pad
 43023 ;;		i2_toupper
 43024 ;; This function is called by:
 43025 ;;		i2_vfpfcnvrt
 43026 ;; This function uses a non-reentrant model
 43027 ;;
 43028                           
 43029                           	psect	text355
 43030  0039C4                     __ptext355:
 43031                           	opt callstack 0
 43032  0039C4                     i2_xtoa:
 43033                           	opt callstack 6
 43034                           
 43035                           ; BSR set to: 0
 43036                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa
      +                          (FILE *fp, unsigned long long d, char x);/Applications/microchip/xc8/v2.10/pic/sources/c
      +                          99/common/doprnt.c: 624: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/dopr
      +                          nt.c: 625:     int c, i, p, w;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/
      +                          doprnt.c: 626:     unsigned long long n;;/Applications/microchip/xc8/v2.10/pic/sources/c
      +                          99/common/doprnt.c: 629:     if (!(prec < 0)) {
 43037                           
 43038                           ;incstack = 0
 43039  0039C4  0101               	movlb	1	; () banked
 43040  0039C6  AFCA               	btfss	(_prec+1)& (0+255),7,b
 43041                           
 43042                           ; BSR set to: 1
 43043                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &
      +                          = ~(1 << 1);
 43044  0039C8  93CB               	bcf	_flags& (0+255),1,b
 43045                           
 43046                           ; BSR set to: 1
 43047                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < pr
      +                          ec) ? prec : 1;
 43048  0039CA  BFCA               	btfsc	(_prec+1)& (0+255),7,b
 43049  0039CC  D005               	goto	i2u1615_40
 43050  0039CE  51CA               	movf	(_prec+1)& (0+255),w,b
 43051  0039D0  E108               	bnz	i2l3539
 43052  0039D2  05C9               	decf	_prec& (0+255),w,b
 43053  0039D4  B0D8               	btfsc	status,0,c
 43054  0039D6  D005               	goto	i2l3539
 43055  0039D8                     i2u1615_40:
 43056                           
 43057                           ; BSR set to: 1
 43058  0039D8  0E00               	movlw	0
 43059  0039DA  6E36               	movwf	(i2xtoa@p+1)^0,c
 43060  0039DC  0E01               	movlw	1
 43061  0039DE  6E35               	movwf	i2xtoa@p^0,c
 43062  0039E0  D006               	goto	i2l3541
 43063  0039E2                     i2l3539:
 43064                           
 43065                           ; BSR set to: 1
 43066  0039E2  0060  F724  F035   	movff	_prec,i2xtoa@p
 43067  0039E8  0060  F728  F036   	movff	_prec+1,i2xtoa@p+1
 43068  0039EE                     i2l3541:
 43069                           
 43070                           ; BSR set to: 1
 43071                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 43072  0039EE  0060  F71C  F037   	movff	_width,i2xtoa@w
 43073  0039F4  0060  F720  F038   	movff	_width+1,i2xtoa@w+1
 43074                           
 43075                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags &
      +                           (1 << 4)) {
 43076  0039FA  A9CB               	btfss	_flags& (0+255),4,b
 43077  0039FC  D004               	goto	i2l17265
 43078                           
 43079                           ; BSR set to: 1
 43080                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 43081  0039FE  0EFE               	movlw	254
 43082  003A00  2637               	addwf	i2xtoa@w^0,f,c
 43083  003A02  0EFF               	movlw	255
 43084  003A04  2238               	addwfc	(i2xtoa@w+1)^0,f,c
 43085  003A06                     i2l17265:
 43086                           
 43087                           ; BSR set to: 1
 43088                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 43089  003A06  0060  F080  F039   	movff	i2xtoa@d,i2xtoa@n
 43090  003A0C  0060  F084  F03A   	movff	i2xtoa@d+1,i2xtoa@n+1
 43091  003A12  0060  F088  F03B   	movff	i2xtoa@d+2,i2xtoa@n+2
 43092  003A18  0060  F08C  F03C   	movff	i2xtoa@d+3,i2xtoa@n+3
 43093  003A1E  0060  F090  F03D   	movff	i2xtoa@d+4,i2xtoa@n+4
 43094  003A24  0060  F094  F03E   	movff	i2xtoa@d+5,i2xtoa@n+5
 43095  003A2A  0060  F098  F03F   	movff	i2xtoa@d+6,i2xtoa@n+6
 43096  003A30  0060  F09C  F040   	movff	i2xtoa@d+7,i2xtoa@n+7
 43097                           
 43098                           ; BSR set to: 1
 43099                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(
      +                          dbuf) - 1;
 43100  003A36  0E00               	movlw	0
 43101  003A38  6E42               	movwf	(i2xtoa@i+1)^0,c
 43102  003A3A  0E1F               	movlw	31
 43103  003A3C  6E41               	movwf	i2xtoa@i^0,c
 43104                           
 43105                           ; BSR set to: 1
 43106                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '
      +                          \0';
 43107  003A3E  0E00               	movlw	0
 43108  003A40  0103               	movlb	3	; () banked
 43109  003A42  6FA8               	movwf	(_dbuf+31)& (0+255),b
 43110                           
 43111                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i 
      +                          < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 43112  003A44  D0A8               	goto	i2l17301
 43113  003A46                     i2l17271:
 43114                           
 43115                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 43116  003A46  0641               	decf	i2xtoa@i^0,f,c
 43117  003A48  A0D8               	btfss	status,0,c
 43118  003A4A  0642               	decf	(i2xtoa@i+1)^0,f,c
 43119                           
 43120                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n &
      +                           0x0f;
 43121  003A4C  0E0F               	movlw	15
 43122  003A4E  1439               	andwf	i2xtoa@n^0,w,c
 43123  003A50  6E43               	movwf	i2xtoa@c^0,c
 43124  003A52  6A44               	clrf	(i2xtoa@c+1)^0,c
 43125                           
 43126                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c 
      +                          < 10) ? '0' + c : 'a' + (c - 10);
 43127  003A54  BE44               	btfsc	(i2xtoa@c+1)^0,7,c
 43128  003A56  D008               	goto	i2l17279
 43129  003A58  5044               	movf	(i2xtoa@c+1)^0,w,c
 43130  003A5A  E104               	bnz	i2u1617_40
 43131  003A5C  0E0A               	movlw	10
 43132  003A5E  5C43               	subwf	i2xtoa@c^0,w,c
 43133  003A60  A0D8               	btfss	status,0,c
 43134  003A62  D002               	goto	i2l17279
 43135  003A64                     i2u1617_40:
 43136  003A64  0E57               	movlw	87
 43137  003A66  D001               	goto	L18
 43138  003A68                     i2l17279:
 43139  003A68  0E30               	movlw	48
 43140  003A6A                     L18:
 43141  003A6A  2443               	addwf	i2xtoa@c^0,w,c
 43142  003A6C  6E43               	movwf	i2xtoa@c^0,c
 43143  003A6E  0E00               	movlw	0
 43144  003A70  2044               	addwfc	(i2xtoa@c+1)^0,w,c
 43145  003A72  6E44               	movwf	(i2xtoa@c+1)^0,c
 43146                           
 43147                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 646:         if ((0 
      +                          ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsigned)(c)|
      +                          32)-'a') < 26)) {
 43148  003A74  0EBF               	movlw	191
 43149  003A76  6E29               	movwf	??i2_xtoa^0,c
 43150  003A78  0EFF               	movlw	255
 43151  003A7A  6E2A               	movwf	(??i2_xtoa+1)^0,c
 43152  003A7C  5028               	movf	i2xtoa@x^0,w,c
 43153  003A7E  6E2B               	movwf	(??i2_xtoa+2)^0,c
 43154  003A80  6A2C               	clrf	(??i2_xtoa+3)^0,c
 43155  003A82  5029               	movf	??i2_xtoa^0,w,c
 43156  003A84  262B               	addwf	(??i2_xtoa+2)^0,f,c
 43157  003A86  502A               	movf	(??i2_xtoa+1)^0,w,c
 43158  003A88  222C               	addwfc	(??i2_xtoa+3)^0,f,c
 43159  003A8A  502C               	movf	(??i2_xtoa+3)^0,w,c
 43160  003A8C  E106               	bnz	i2u1618_40
 43161  003A8E  0E1A               	movlw	26
 43162  003A90  5C2B               	subwf	(??i2_xtoa+2)^0,w,c
 43163  003A92  B0D8               	btfsc	status,0,c
 43164  003A94  D002               	goto	i2u1618_40
 43165  003A96  0E01               	movlw	1
 43166  003A98  D001               	goto	i2u1619_40
 43167  003A9A                     i2u1618_40:
 43168  003A9A  0E00               	movlw	0
 43169  003A9C                     i2u1619_40:
 43170  003A9C  6E31               	movwf	i2_xtoa$5199^0,c
 43171  003A9E  6A32               	clrf	(i2_xtoa$5199+1)^0,c
 43172  003AA0  5031               	movf	i2_xtoa$5199^0,w,c
 43173  003AA2  1032               	iorwf	(i2_xtoa$5199+1)^0,w,c
 43174  003AA4  B4D8               	btfsc	status,2,c
 43175  003AA6  D02B               	goto	i2l17293
 43176  003AA8  0E9F               	movlw	159
 43177  003AAA  6E29               	movwf	??i2_xtoa^0,c
 43178  003AAC  0EFF               	movlw	255
 43179  003AAE  6E2A               	movwf	(??i2_xtoa+1)^0,c
 43180  003AB0  0E20               	movlw	32
 43181  003AB2  1043               	iorwf	i2xtoa@c^0,w,c
 43182  003AB4  6E2B               	movwf	(??i2_xtoa+2)^0,c
 43183  003AB6  0E00               	movlw	0
 43184  003AB8  1044               	iorwf	(i2xtoa@c+1)^0,w,c
 43185  003ABA  6E2C               	movwf	(??i2_xtoa+3)^0,c
 43186  003ABC  5029               	movf	??i2_xtoa^0,w,c
 43187  003ABE  262B               	addwf	(??i2_xtoa+2)^0,f,c
 43188  003AC0  502A               	movf	(??i2_xtoa+1)^0,w,c
 43189  003AC2  222C               	addwfc	(??i2_xtoa+3)^0,f,c
 43190  003AC4  502C               	movf	(??i2_xtoa+3)^0,w,c
 43191  003AC6  E106               	bnz	i2u1621_40
 43192  003AC8  0E1A               	movlw	26
 43193  003ACA  5C2B               	subwf	(??i2_xtoa+2)^0,w,c
 43194  003ACC  B0D8               	btfsc	status,0,c
 43195  003ACE  D002               	goto	i2u1621_40
 43196  003AD0  0E01               	movlw	1
 43197  003AD2  D001               	goto	i2u1622_40
 43198  003AD4                     i2u1621_40:
 43199  003AD4  0E00               	movlw	0
 43200  003AD6                     i2u1622_40:
 43201  003AD6  6E33               	movwf	i2_xtoa$5200^0,c
 43202  003AD8  6A34               	clrf	(i2_xtoa$5200+1)^0,c
 43203  003ADA  5033               	movf	i2_xtoa$5200^0,w,c
 43204  003ADC  1034               	iorwf	(i2_xtoa$5200+1)^0,w,c
 43205  003ADE  B4D8               	btfsc	status,2,c
 43206  003AE0  D00E               	goto	i2l17293
 43207                           
 43208                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c =
      +                           toupper(c);
 43209  003AE2  0060  F10C  F007   	movff	i2xtoa@c,i2toupper@c
 43210  003AE8  0060  F110  F008   	movff	i2xtoa@c+1,i2toupper@c+1
 43211  003AEE  EC8A  F047         	call	i2_toupper	;wreg free
 43212  003AF2  0060  F01C  F043   	movff	?i2_toupper,i2xtoa@c
 43213  003AF8  0060  F020  F044   	movff	?i2_toupper+1,i2xtoa@c+1
 43214  003AFE                     i2l17293:
 43215                           
 43216                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i]
      +                           = (char)c;
 43217  003AFE  0E89               	movlw	low _dbuf
 43218  003B00  2441               	addwf	i2xtoa@i^0,w,c
 43219  003B02  6ED9               	movwf	fsr2l,c
 43220  003B04  0E03               	movlw	high _dbuf
 43221  003B06  2042               	addwfc	(i2xtoa@i+1)^0,w,c
 43222  003B08  6EDA               	movwf	fsr2h,c
 43223  003B0A  0060  F10F  FFDF   	movff	i2xtoa@c,indf2
 43224                           
 43225                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 43226  003B10  0635               	decf	i2xtoa@p^0,f,c
 43227  003B12  A0D8               	btfss	status,0,c
 43228  003B14  0636               	decf	(i2xtoa@p+1)^0,f,c
 43229                           
 43230                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 43231  003B16  0637               	decf	i2xtoa@w^0,f,c
 43232  003B18  A0D8               	btfss	status,0,c
 43233  003B1A  0638               	decf	(i2xtoa@w+1)^0,f,c
 43234                           
 43235                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >
      +                          > 4;
 43236  003B1C  0060  F0E4  F029   	movff	i2xtoa@n,??i2_xtoa
 43237  003B22  0060  F0E8  F02A   	movff	i2xtoa@n+1,??i2_xtoa+1
 43238  003B28  0060  F0EC  F02B   	movff	i2xtoa@n+2,??i2_xtoa+2
 43239  003B2E  0060  F0F0  F02C   	movff	i2xtoa@n+3,??i2_xtoa+3
 43240  003B34  0060  F0F4  F02D   	movff	i2xtoa@n+4,??i2_xtoa+4
 43241  003B3A  0060  F0F8  F02E   	movff	i2xtoa@n+5,??i2_xtoa+5
 43242  003B40  0060  F0FC  F02F   	movff	i2xtoa@n+6,??i2_xtoa+6
 43243  003B46  0060  F100  F030   	movff	i2xtoa@n+7,??i2_xtoa+7
 43244  003B4C  0E05               	movlw	5
 43245  003B4E  D009               	goto	i2u1624_40
 43246  003B50                     i2u1624_45:
 43247  003B50  90D8               	bcf	status,0,c
 43248  003B52  3230               	rrcf	(??i2_xtoa+7)^0,f,c
 43249  003B54  322F               	rrcf	(??i2_xtoa+6)^0,f,c
 43250  003B56  322E               	rrcf	(??i2_xtoa+5)^0,f,c
 43251  003B58  322D               	rrcf	(??i2_xtoa+4)^0,f,c
 43252  003B5A  322C               	rrcf	(??i2_xtoa+3)^0,f,c
 43253  003B5C  322B               	rrcf	(??i2_xtoa+2)^0,f,c
 43254  003B5E  322A               	rrcf	(??i2_xtoa+1)^0,f,c
 43255  003B60  3229               	rrcf	??i2_xtoa^0,f,c
 43256  003B62                     i2u1624_40:
 43257  003B62  2EE8               	decfsz	wreg,f,c
 43258  003B64  D7F5               	goto	i2u1624_45
 43259  003B66  0060  F0A4  F039   	movff	??i2_xtoa,i2xtoa@n
 43260  003B6C  0060  F0A8  F03A   	movff	??i2_xtoa+1,i2xtoa@n+1
 43261  003B72  0060  F0AC  F03B   	movff	??i2_xtoa+2,i2xtoa@n+2
 43262  003B78  0060  F0B0  F03C   	movff	??i2_xtoa+3,i2xtoa@n+3
 43263  003B7E  0060  F0B4  F03D   	movff	??i2_xtoa+4,i2xtoa@n+4
 43264  003B84  0060  F0B8  F03E   	movff	??i2_xtoa+5,i2xtoa@n+5
 43265  003B8A  0060  F0BC  F03F   	movff	??i2_xtoa+6,i2xtoa@n+6
 43266  003B90  0060  F0C0  F040   	movff	??i2_xtoa+7,i2xtoa@n+7
 43267  003B96                     i2l17301:
 43268                           
 43269                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i 
      +                          < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 43270  003B96  BE42               	btfsc	(i2xtoa@i+1)^0,7,c
 43271  003B98  D021               	goto	i2u1629_40
 43272  003B9A  5042               	movf	(i2xtoa@i+1)^0,w,c
 43273  003B9C  E104               	bnz	i2u1625_40
 43274  003B9E  0E02               	movlw	2
 43275  003BA0  5C41               	subwf	i2xtoa@i^0,w,c
 43276  003BA2  A0D8               	btfss	status,0,c
 43277  003BA4  D01B               	goto	i2u1629_40
 43278  003BA6                     i2u1625_40:
 43279  003BA6  5039               	movf	i2xtoa@n^0,w,c
 43280  003BA8  103A               	iorwf	(i2xtoa@n+1)^0,w,c
 43281  003BAA  103B               	iorwf	(i2xtoa@n+2)^0,w,c
 43282  003BAC  103C               	iorwf	(i2xtoa@n+3)^0,w,c
 43283  003BAE  103D               	iorwf	(i2xtoa@n+4)^0,w,c
 43284  003BB0  103E               	iorwf	(i2xtoa@n+5)^0,w,c
 43285  003BB2  103F               	iorwf	(i2xtoa@n+6)^0,w,c
 43286  003BB4  1040               	iorwf	(i2xtoa@n+7)^0,w,c
 43287  003BB6  A4D8               	btfss	status,2,c
 43288  003BB8  D746               	goto	i2l17271
 43289  003BBA  BE36               	btfsc	(i2xtoa@p+1)^0,7,c
 43290  003BBC  D005               	goto	i2u1627_40
 43291  003BBE  5036               	movf	(i2xtoa@p+1)^0,w,c
 43292  003BC0  E102               	bnz	i2u1627_41
 43293  003BC2  0435               	decf	i2xtoa@p^0,w,c
 43294  003BC4  B0D8               	btfsc	status,0,c
 43295  003BC6                     i2u1627_41:
 43296  003BC6  D73F               	goto	i2l17271
 43297  003BC8                     i2u1627_40:
 43298  003BC8  BE38               	btfsc	(i2xtoa@w+1)^0,7,c
 43299  003BCA  D008               	goto	i2u1629_40
 43300  003BCC  5038               	movf	(i2xtoa@w+1)^0,w,c
 43301  003BCE  E103               	bnz	i2u1628_40
 43302  003BD0  0437               	decf	i2xtoa@w^0,w,c
 43303  003BD2  A0D8               	btfss	status,0,c
 43304  003BD4  D003               	goto	i2u1629_40
 43305  003BD6                     i2u1628_40:
 43306  003BD6  0101               	movlb	1	; () banked
 43307  003BD8  B3CB               	btfsc	_flags& (0+255),1,b
 43308  003BDA  D735               	goto	i2l17271
 43309  003BDC                     i2u1629_40:
 43310                           
 43311                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags &
      +                           (1 << 4)) {
 43312  003BDC  0101               	movlb	1	; () banked
 43313  003BDE  A9CB               	btfss	_flags& (0+255),4,b
 43314  003BE0  D017               	goto	i2l17317
 43315                           
 43316                           ; BSR set to: 1
 43317                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 43318  003BE2  0641               	decf	i2xtoa@i^0,f,c
 43319  003BE4  A0D8               	btfss	status,0,c
 43320  003BE6  0642               	decf	(i2xtoa@i+1)^0,f,c
 43321                           
 43322                           ; BSR set to: 1
 43323                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i]
      +                           = x;
 43324  003BE8  0E89               	movlw	low _dbuf
 43325  003BEA  2441               	addwf	i2xtoa@i^0,w,c
 43326  003BEC  6ED9               	movwf	fsr2l,c
 43327  003BEE  0E03               	movlw	high _dbuf
 43328  003BF0  2042               	addwfc	(i2xtoa@i+1)^0,w,c
 43329  003BF2  6EDA               	movwf	fsr2h,c
 43330  003BF4  0060  F0A3  FFDF   	movff	i2xtoa@x,indf2
 43331                           
 43332                           ; BSR set to: 1
 43333                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 43334  003BFA  0641               	decf	i2xtoa@i^0,f,c
 43335  003BFC  A0D8               	btfss	status,0,c
 43336  003BFE  0642               	decf	(i2xtoa@i+1)^0,f,c
 43337                           
 43338                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i]
      +                           = '0';
 43339  003C00  0E89               	movlw	low _dbuf
 43340  003C02  2441               	addwf	i2xtoa@i^0,w,c
 43341  003C04  6ED9               	movwf	fsr2l,c
 43342  003C06  0E03               	movlw	high _dbuf
 43343  003C08  2042               	addwfc	(i2xtoa@i+1)^0,w,c
 43344  003C0A  6EDA               	movwf	fsr2h,c
 43345  003C0C  0E30               	movlw	48
 43346  003C0E  6EDF               	movwf	indf2,c
 43347  003C10                     i2l17317:
 43348                           
 43349                           ; BSR set to: 1
 43350                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(
      +                          fp, &dbuf[i], w);
 43351  003C10  0060  F078  F013   	movff	i2xtoa@fp,i2pad@fp
 43352  003C16  0060  F07C  F014   	movff	i2xtoa@fp+1,i2pad@fp+1
 43353  003C1C  0E89               	movlw	low _dbuf
 43354  003C1E  2441               	addwf	i2xtoa@i^0,w,c
 43355  003C20  6E15               	movwf	i2pad@buf^0,c
 43356  003C22  0E03               	movlw	high _dbuf
 43357  003C24  2042               	addwfc	(i2xtoa@i+1)^0,w,c
 43358  003C26  6E16               	movwf	(i2pad@buf+1)^0,c
 43359  003C28  0060  F0DC  F017   	movff	i2xtoa@w,i2pad@p
 43360  003C2E  0060  F0E0  F018   	movff	i2xtoa@w+1,i2pad@p+1
 43361  003C34  EC2B  F038         	call	i2_pad	;wreg free
 43362  003C38  0060  F04C  F01E   	movff	?i2_pad,?i2_xtoa
 43363  003C3E  0060  F050  F01F   	movff	?i2_pad+1,?i2_xtoa+1
 43364  003C44  0012               	return		;funcret
 43365  003C46                     __end_ofi2_xtoa:
 43366                           	opt callstack 0
 43367                           
 43368 ;; *************** function i2_toupper *****************
 43369 ;; Defined at:
 43370 ;;		line 4 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 43371 ;; Parameters:    Size  Location     Type
 43372 ;;  c               2    6[COMRAM] int 
 43373 ;; Auto vars:     Size  Location     Type
 43374 ;;		None
 43375 ;; Return value:  Size  Location     Type
 43376 ;;                  2    6[COMRAM] int 
 43377 ;; Registers used:
 43378 ;;		wreg, status,2, status,0
 43379 ;; Tracked objects:
 43380 ;;		On entry : 0/3
 43381 ;;		On exit  : 0/0
 43382 ;;		Unchanged: 0/0
 43383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43384 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43385 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43386 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43387 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43388 ;;Total ram usage:        8 bytes
 43389 ;; Hardware stack levels used:    1
 43390 ;; Hardware stack levels required when called:    1
 43391 ;; This function calls:
 43392 ;;		i2_islower
 43393 ;; This function is called by:
 43394 ;;		i2_xtoa
 43395 ;; This function uses a non-reentrant model
 43396 ;;
 43397                           
 43398                           	psect	text356
 43399  008F14                     __ptext356:
 43400                           	opt callstack 0
 43401  008F14                     i2_toupper:
 43402                           	opt callstack 9
 43403                           
 43404                           ;incstack = 0
 43405  008F14  0E9F               	movlw	159
 43406  008F16  6E09               	movwf	??i2_toupper^0,c
 43407  008F18  0EFF               	movlw	255
 43408  008F1A  6E0A               	movwf	(??i2_toupper+1)^0,c
 43409  008F1C  0060  F01C  F00B   	movff	i2toupper@c,??i2_toupper+2
 43410  008F22  0060  F020  F00C   	movff	i2toupper@c+1,??i2_toupper+3
 43411  008F28  5009               	movf	??i2_toupper^0,w,c
 43412  008F2A  260B               	addwf	(??i2_toupper+2)^0,f,c
 43413  008F2C  500A               	movf	(??i2_toupper+1)^0,w,c
 43414  008F2E  220C               	addwfc	(??i2_toupper+3)^0,f,c
 43415  008F30  500C               	movf	(??i2_toupper+3)^0,w,c
 43416  008F32  E106               	bnz	i2u1580_40
 43417  008F34  0E1A               	movlw	26
 43418  008F36  5C0B               	subwf	(??i2_toupper+2)^0,w,c
 43419  008F38  B0D8               	btfsc	status,0,c
 43420  008F3A  D002               	goto	i2u1580_40
 43421  008F3C  0E01               	movlw	1
 43422  008F3E  D001               	goto	i2u1581_40
 43423  008F40                     i2u1580_40:
 43424  008F40  0E00               	movlw	0
 43425  008F42                     i2u1581_40:
 43426  008F42  6E0D               	movwf	i2_toupper$5789^0,c
 43427  008F44  6A0E               	clrf	(i2_toupper$5789+1)^0,c
 43428  008F46  500D               	movf	i2_toupper$5789^0,w,c
 43429  008F48  100E               	iorwf	(i2_toupper$5789+1)^0,w,c
 43430  008F4A  B4D8               	btfsc	status,2,c
 43431  008F4C  D005               	goto	i2l4393
 43432  008F4E  0E5F               	movlw	95
 43433  008F50  1407               	andwf	i2toupper@c^0,w,c
 43434  008F52  6E07               	movwf	?i2_toupper^0,c
 43435  008F54  6A08               	clrf	(?i2_toupper+1)^0,c
 43436  008F56  0012               	return	
 43437  008F58                     i2l4393:
 43438  008F58  0060  F01C  F007   	movff	i2toupper@c,?i2_toupper
 43439  008F5E  0060  F020  F008   	movff	i2toupper@c+1,?i2_toupper+1
 43440  008F64  0012               	return		;funcret
 43441  008F66                     __end_ofi2_toupper:
 43442                           	opt callstack 0
 43443                           
 43444 ;; *************** function i2_islower *****************
 43445 ;; Defined at:
 43446 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 43447 ;; Parameters:    Size  Location     Type
 43448 ;;  c               2    0[COMRAM] int 
 43449 ;; Auto vars:     Size  Location     Type
 43450 ;;		None
 43451 ;; Return value:  Size  Location     Type
 43452 ;;                  2    0[COMRAM] int 
 43453 ;; Registers used:
 43454 ;;		wreg, status,2, status,0
 43455 ;; Tracked objects:
 43456 ;;		On entry : 0/0
 43457 ;;		On exit  : 0/0
 43458 ;;		Unchanged: 0/0
 43459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43460 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43462 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43463 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43464 ;;Total ram usage:        6 bytes
 43465 ;; Hardware stack levels used:    1
 43466 ;; This function calls:
 43467 ;;		Nothing
 43468 ;; This function is called by:
 43469 ;;		i2_toupper
 43470 ;; This function uses a non-reentrant model
 43471 ;;
 43472                           
 43473                           	psect	text357
 43474  009738                     __ptext357:
 43475                           	opt callstack 0
 43476  009738                     i2_islower:
 43477                           	opt callstack 9
 43478                           
 43479                           ;incstack = 0
 43480  009738  0E9F               	movlw	159
 43481  00973A  6E03               	movwf	??i2_islower^0,c
 43482  00973C  0EFF               	movlw	255
 43483  00973E  6E04               	movwf	(??i2_islower+1)^0,c
 43484  009740  0060  F004  F005   	movff	i2islower@c,??i2_islower+2
 43485  009746  0060  F008  F006   	movff	i2islower@c+1,??i2_islower+3
 43486  00974C  5003               	movf	??i2_islower^0,w,c
 43487  00974E  2605               	addwf	(??i2_islower+2)^0,f,c
 43488  009750  5004               	movf	(??i2_islower+1)^0,w,c
 43489  009752  2206               	addwfc	(??i2_islower+3)^0,f,c
 43490  009754  5006               	movf	(??i2_islower+3)^0,w,c
 43491  009756  E106               	bnz	i2u1548_40
 43492  009758  0E1A               	movlw	26
 43493  00975A  5C05               	subwf	(??i2_islower+2)^0,w,c
 43494  00975C  B0D8               	btfsc	status,0,c
 43495  00975E  D002               	goto	i2u1548_40
 43496  009760  0E01               	movlw	1
 43497  009762  D001               	goto	i2u1549_40
 43498  009764                     i2u1548_40:
 43499  009764  0E00               	movlw	0
 43500  009766                     i2u1549_40:
 43501  009766  6E01               	movwf	?i2_islower^0,c
 43502  009768  6A02               	clrf	(?i2_islower+1)^0,c
 43503  00976A  0012               	return		;funcret
 43504  00976C                     __end_ofi2_islower:
 43505                           	opt callstack 0
 43506                           
 43507 ;; *************** function i2_isupper *****************
 43508 ;; Defined at:
 43509 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 43510 ;; Parameters:    Size  Location     Type
 43511 ;;  c               2    0[COMRAM] int 
 43512 ;; Auto vars:     Size  Location     Type
 43513 ;;		None
 43514 ;; Return value:  Size  Location     Type
 43515 ;;                  2    0[COMRAM] int 
 43516 ;; Registers used:
 43517 ;;		wreg, status,2, status,0
 43518 ;; Tracked objects:
 43519 ;;		On entry : 0/0
 43520 ;;		On exit  : 0/0
 43521 ;;		Unchanged: 0/0
 43522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43523 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43525 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43526 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43527 ;;Total ram usage:        6 bytes
 43528 ;; Hardware stack levels used:    1
 43529 ;; This function calls:
 43530 ;;		Nothing
 43531 ;; This function is called by:
 43532 ;;		i2_xtoa
 43533 ;; This function uses a non-reentrant model
 43534 ;;
 43535                           
 43536                           	psect	text358
 43537  00976C                     __ptext358:
 43538                           	opt callstack 0
 43539  00976C                     i2_isupper:
 43540                           	opt callstack 10
 43541                           
 43542                           ;incstack = 0
 43543  00976C  0EBF               	movlw	191
 43544  00976E  6E03               	movwf	??i2_isupper^0,c
 43545  009770  0EFF               	movlw	255
 43546  009772  6E04               	movwf	(??i2_isupper+1)^0,c
 43547  009774  0060  F004  F005   	movff	i2isupper@c,??i2_isupper+2
 43548  00977A  0060  F008  F006   	movff	i2isupper@c+1,??i2_isupper+3
 43549  009780  5003               	movf	??i2_isupper^0,w,c
 43550  009782  2605               	addwf	(??i2_isupper+2)^0,f,c
 43551  009784  5004               	movf	(??i2_isupper+1)^0,w,c
 43552  009786  2206               	addwfc	(??i2_isupper+3)^0,f,c
 43553  009788  5006               	movf	(??i2_isupper+3)^0,w,c
 43554  00978A  E106               	bnz	i2u1578_40
 43555  00978C  0E1A               	movlw	26
 43556  00978E  5C05               	subwf	(??i2_isupper+2)^0,w,c
 43557  009790  B0D8               	btfsc	status,0,c
 43558  009792  D002               	goto	i2u1578_40
 43559  009794  0E01               	movlw	1
 43560  009796  D001               	goto	i2u1579_40
 43561  009798                     i2u1578_40:
 43562  009798  0E00               	movlw	0
 43563  00979A                     i2u1579_40:
 43564  00979A  6E01               	movwf	?i2_isupper^0,c
 43565  00979C  6A02               	clrf	(?i2_isupper+1)^0,c
 43566  00979E  0012               	return		;funcret
 43567  0097A0                     __end_ofi2_isupper:
 43568                           	opt callstack 0
 43569                           
 43570 ;; *************** function i2_isalpha *****************
 43571 ;; Defined at:
 43572 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 43573 ;; Parameters:    Size  Location     Type
 43574 ;;  c               2    0[COMRAM] int 
 43575 ;; Auto vars:     Size  Location     Type
 43576 ;;		None
 43577 ;; Return value:  Size  Location     Type
 43578 ;;                  2    0[COMRAM] int 
 43579 ;; Registers used:
 43580 ;;		wreg, status,2, status,0
 43581 ;; Tracked objects:
 43582 ;;		On entry : 0/0
 43583 ;;		On exit  : 0/0
 43584 ;;		Unchanged: 0/0
 43585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43586 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43588 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43589 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43590 ;;Total ram usage:        6 bytes
 43591 ;; Hardware stack levels used:    1
 43592 ;; This function calls:
 43593 ;;		Nothing
 43594 ;; This function is called by:
 43595 ;;		i2_xtoa
 43596 ;; This function uses a non-reentrant model
 43597 ;;
 43598                           
 43599                           	psect	text359
 43600  0097A0                     __ptext359:
 43601                           	opt callstack 0
 43602  0097A0                     i2_isalpha:
 43603                           	opt callstack 10
 43604                           
 43605                           ;incstack = 0
 43606  0097A0  0E9F               	movlw	159
 43607  0097A2  6E03               	movwf	??i2_isalpha^0,c
 43608  0097A4  0EFF               	movlw	255
 43609  0097A6  6E04               	movwf	(??i2_isalpha+1)^0,c
 43610  0097A8  0E20               	movlw	32
 43611  0097AA  1001               	iorwf	i2isalpha@c^0,w,c
 43612  0097AC  6E05               	movwf	(??i2_isalpha+2)^0,c
 43613  0097AE  0E00               	movlw	0
 43614  0097B0  1002               	iorwf	(i2isalpha@c+1)^0,w,c
 43615  0097B2  6E06               	movwf	(??i2_isalpha+3)^0,c
 43616  0097B4  5003               	movf	??i2_isalpha^0,w,c
 43617  0097B6  2605               	addwf	(??i2_isalpha+2)^0,f,c
 43618  0097B8  5004               	movf	(??i2_isalpha+1)^0,w,c
 43619  0097BA  2206               	addwfc	(??i2_isalpha+3)^0,f,c
 43620  0097BC  5006               	movf	(??i2_isalpha+3)^0,w,c
 43621  0097BE  E106               	bnz	i2u1572_40
 43622  0097C0  0E1A               	movlw	26
 43623  0097C2  5C05               	subwf	(??i2_isalpha+2)^0,w,c
 43624  0097C4  B0D8               	btfsc	status,0,c
 43625  0097C6  D002               	goto	i2u1572_40
 43626  0097C8  0E01               	movlw	1
 43627  0097CA  D001               	goto	i2u1573_40
 43628  0097CC                     i2u1572_40:
 43629  0097CC  0E00               	movlw	0
 43630  0097CE                     i2u1573_40:
 43631  0097CE  6E01               	movwf	?i2_isalpha^0,c
 43632  0097D0  6A02               	clrf	(?i2_isalpha+1)^0,c
 43633  0097D2  0012               	return		;funcret
 43634  0097D4                     __end_ofi2_isalpha:
 43635                           	opt callstack 0
 43636                           
 43637 ;; *************** function i2_stoa *****************
 43638 ;; Defined at:
 43639 ;;		line 546 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 43640 ;; Parameters:    Size  Location     Type
 43641 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 43642 ;;		 -> i2sprintf@f(6), sprintf@f(6), NULL(0), 
 43643 ;;  s               2   13[COMRAM] PTR unsigned char 
 43644 ;;		 -> ?_printf(2), ?_sprintf(2), adcVOffset(2), adcOffset(2), 
 43645 ;;		 -> STR_29(3), STR_28(3), STR_27(3), STR_26(3), 
 43646 ;;		 -> alarmData(399), STR_11(3), 
 43647 ;; Auto vars:     Size  Location     Type
 43648 ;;  stoa            7   16[COMRAM] unsigned char [7]
 43649 ;;  stoa            2   31[COMRAM] int 
 43650 ;;  stoa            2   29[COMRAM] int 
 43651 ;;  stoa            2   27[COMRAM] PTR unsigned char 
 43652 ;;		 -> i2stoa@nuls(7), ?_printf(2), ?_sprintf(2), stoa@nuls(7), 
 43653 ;;		 -> adcVOffset(2), adcOffset(2), STR_29(3), STR_28(3), 
 43654 ;;		 -> STR_27(3), STR_26(3), alarmData(399), STR_11(3), 
 43655 ;;  stoa            2   25[COMRAM] int 
 43656 ;;  stoa            2   23[COMRAM] int 
 43657 ;; Return value:  Size  Location     Type
 43658 ;;                  2   11[COMRAM] int 
 43659 ;; Registers used:
 43660 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 43661 ;; Tracked objects:
 43662 ;;		On entry : 3E/1
 43663 ;;		On exit  : 0/0
 43664 ;;		Unchanged: 0/0
 43665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43666 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43667 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43668 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43669 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43670 ;;Total ram usage:       22 bytes
 43671 ;; Hardware stack levels used:    1
 43672 ;; Hardware stack levels required when called:    3
 43673 ;; This function calls:
 43674 ;;		i2_fputc
 43675 ;;		i2_strlen
 43676 ;; This function is called by:
 43677 ;;		i2_vfpfcnvrt
 43678 ;; This function uses a non-reentrant model
 43679 ;;
 43680                           
 43681                           	psect	text360
 43682  005422                     __ptext360:
 43683                           	opt callstack 0
 43684  005422                     i2_stoa:
 43685                           	opt callstack 8
 43686                           
 43687                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa
      +                          (FILE *fp, char *s);/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 5
      +                          47: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *
      +                          cp, nuls[] = "(null)";
 43688                           
 43689                           ;incstack = 0
 43690  005422  EE20  F2D0         	lfsr	2,stoa@F1144
 43691  005426  EE10  F011         	lfsr	1,i2stoa@nuls
 43692  00542A  0E06               	movlw	6
 43693  00542C                     i2u1604_41:
 43694  00542C  006F FF6F FFE3     	movff	plusw2,plusw1
 43695  005432  06E8               	decf	wreg,f,c
 43696  005434  E2FB               	bc	i2u1604_41
 43697                           
 43698                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p
      +                          , w;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 43699  005436  0060  F038  F01C   	movff	i2stoa@s,i2stoa@cp
 43700  00543C  0060  F03C  F01D   	movff	i2stoa@s+1,i2stoa@cp+1
 43701                           
 43702                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 43703  005442  501C               	movf	i2stoa@cp^0,w,c
 43704  005444  101D               	iorwf	(i2stoa@cp+1)^0,w,c
 43705  005446  A4D8               	btfss	status,2,c
 43706  005448  D003               	goto	i2l17221
 43707                           
 43708                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nu
      +                          ls;
 43709  00544A  0E11               	movlw	low i2stoa@nuls
 43710  00544C  6E1C               	movwf	i2stoa@cp^0,c
 43711  00544E  6A1D               	clrf	(i2stoa@cp+1)^0,c
 43712  005450                     i2l17221:
 43713                           
 43714                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(
      +                          cp);
 43715  005450  0060  F070  F001   	movff	i2stoa@cp,i2strlen@s
 43716  005456  0060  F074  F002   	movff	i2stoa@cp+1,i2strlen@s+1
 43717  00545C  EC2B  F048         	call	i2_strlen	;wreg free
 43718  005460  0060  F004  F020   	movff	?i2_strlen,i2stoa@l
 43719  005466  0060  F008  F021   	movff	?i2_strlen+1,i2stoa@l+1
 43720                           
 43721                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 43722  00546C  0060  F724  F01E   	movff	_prec,i2stoa@p
 43723  005472  0060  F728  F01F   	movff	_prec+1,i2stoa@p+1
 43724                           
 43725                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 
      +                          0) && (p < l)) ? p : l;
 43726  005478  BE1F               	btfsc	(i2stoa@p+1)^0,7,c
 43727  00547A  D010               	goto	i2l3520
 43728  00547C  5020               	movf	i2stoa@l^0,w,c
 43729  00547E  5C1E               	subwf	i2stoa@p^0,w,c
 43730  005480  501F               	movf	(i2stoa@p+1)^0,w,c
 43731  005482  0A80               	xorlw	128
 43732  005484  6E10               	movwf	??i2_stoa^0,c
 43733  005486  5021               	movf	(i2stoa@l+1)^0,w,c
 43734  005488  0A80               	xorlw	128
 43735  00548A  5810               	subwfb	??i2_stoa^0,w,c
 43736  00548C  B0D8               	btfsc	status,0,c
 43737  00548E  D006               	goto	i2l3520
 43738  005490  0060  F078  F020   	movff	i2stoa@p,i2stoa@l
 43739  005496  0060  F07C  F021   	movff	i2stoa@p+1,i2stoa@l+1
 43740  00549C                     i2l3520:
 43741                           
 43742                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 43743  00549C  0060  F080  F01E   	movff	i2stoa@l,i2stoa@p
 43744  0054A2  0060  F084  F01F   	movff	i2stoa@l+1,i2stoa@p+1
 43745                           
 43746                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 43747  0054A8  0060  F71C  F01A   	movff	_width,i2stoa@w
 43748  0054AE  0060  F720  F01B   	movff	_width+1,i2stoa@w+1
 43749                           
 43750                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags
      +                           & (1 << 0))) {
 43751  0054B4  0101               	movlb	1	; () banked
 43752  0054B6  A1CB               	btfss	_flags& (0+255),0,b
 43753  0054B8  D00F               	goto	i2l17235
 43754  0054BA  D018               	goto	i2u1609_40
 43755  0054BC                     i2l17231:
 43756                           
 43757                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fpu
      +                          tc(' ', fp);
 43758  0054BC  0E00               	movlw	0
 43759  0054BE  6E04               	movwf	(i2fputc@c+1)^0,c
 43760  0054C0  0E20               	movlw	32
 43761  0054C2  6E03               	movwf	i2fputc@c^0,c
 43762  0054C4  0060  F030  F005   	movff	i2stoa@fp,i2fputc@fp
 43763  0054CA  0060  F034  F006   	movff	i2stoa@fp+1,i2fputc@fp+1
 43764  0054D0  EC41  F03A         	call	i2_fputc	;wreg free
 43765                           
 43766                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l
      +                          ;
 43767  0054D4  4A20               	infsnz	i2stoa@l^0,f,c
 43768  0054D6  2A21               	incf	(i2stoa@l+1)^0,f,c
 43769  0054D8                     i2l17235:
 43770                           
 43771                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (
      +                          l < w) {
 43772  0054D8  501A               	movf	i2stoa@w^0,w,c
 43773  0054DA  5C20               	subwf	i2stoa@l^0,w,c
 43774  0054DC  5021               	movf	(i2stoa@l+1)^0,w,c
 43775  0054DE  0A80               	xorlw	128
 43776  0054E0  6E10               	movwf	??i2_stoa^0,c
 43777  0054E2  501B               	movf	(i2stoa@w+1)^0,w,c
 43778  0054E4  0A80               	xorlw	128
 43779  0054E6  5810               	subwfb	??i2_stoa^0,w,c
 43780  0054E8  A0D8               	btfss	status,0,c
 43781  0054EA  D7E8               	goto	i2l17231
 43782  0054EC                     i2u1609_40:
 43783                           
 43784                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 43785  0054EC  0E00               	movlw	0
 43786  0054EE  6E19               	movwf	(i2stoa@i+1)^0,c
 43787  0054F0  0E00               	movlw	0
 43788  0054F2  6E18               	movwf	i2stoa@i^0,c
 43789                           
 43790                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < 
      +                          p) {
 43791  0054F4  D025               	goto	i2l17245
 43792  0054F6                     i2l17239:
 43793                           
 43794                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*
      +                          cp, fp);
 43795  0054F6  0060  F073  FFF6   	movff	i2stoa@cp,tblptrl
 43796  0054FC  0060  F077  FFF7   	movff	i2stoa@cp+1,tblptrh
 43797  005502  0E00               	movlw	low (__mediumconst shr (0+16))
 43798  005504  6EF8               	movwf	tblptru,c
 43799  005506  0E0F               	movlw	(high __ramtop+-1)
 43800  005508  64F7               	cpfsgt	tblptrh,c
 43801  00550A  D003               	bra	i2u1610_47
 43802  00550C  0008               	tblrd		*
 43803  00550E  50F5               	movf	tablat,w,c
 43804  005510  D007               	bra	i2u1610_40
 43805  005512                     i2u1610_47:
 43806  005512  006F FFDB FFE1     	movff	tblptrl,fsr1l
 43807  005518  006F FFDF FFE2     	movff	tblptrh,fsr1h
 43808  00551E  50E7               	movf	indf1,w,c
 43809  005520                     i2u1610_40:
 43810  005520  6E10               	movwf	??i2_stoa^0,c
 43811  005522  5010               	movf	??i2_stoa^0,w,c
 43812  005524  6E03               	movwf	i2fputc@c^0,c
 43813  005526  6A04               	clrf	(i2fputc@c+1)^0,c
 43814  005528  0060  F030  F005   	movff	i2stoa@fp,i2fputc@fp
 43815  00552E  0060  F034  F006   	movff	i2stoa@fp+1,i2fputc@fp+1
 43816  005534  EC41  F03A         	call	i2_fputc	;wreg free
 43817                           
 43818                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 43819  005538  4A1C               	infsnz	i2stoa@cp^0,f,c
 43820  00553A  2A1D               	incf	(i2stoa@cp+1)^0,f,c
 43821                           
 43822                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 43823  00553C  4A18               	infsnz	i2stoa@i^0,f,c
 43824  00553E  2A19               	incf	(i2stoa@i+1)^0,f,c
 43825  005540                     i2l17245:
 43826                           
 43827                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < 
      +                          p) {
 43828  005540  501E               	movf	i2stoa@p^0,w,c
 43829  005542  5C18               	subwf	i2stoa@i^0,w,c
 43830  005544  5019               	movf	(i2stoa@i+1)^0,w,c
 43831  005546  0A80               	xorlw	128
 43832  005548  6E10               	movwf	??i2_stoa^0,c
 43833  00554A  501F               	movf	(i2stoa@p+1)^0,w,c
 43834  00554C  0A80               	xorlw	128
 43835  00554E  5810               	subwfb	??i2_stoa^0,w,c
 43836  005550  A0D8               	btfss	status,0,c
 43837  005552  D7D1               	goto	i2l17239
 43838                           
 43839                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags &
      +                           (1 << 0)) {
 43840  005554  0101               	movlb	1	; () banked
 43841  005556  B1CB               	btfsc	_flags& (0+255),0,b
 43842  005558  D00F               	goto	i2l17253
 43843  00555A  D018               	goto	i2u1613_40
 43844  00555C                     i2l17249:
 43845                           
 43846                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fpu
      +                          tc(' ', fp);
 43847  00555C  0E00               	movlw	0
 43848  00555E  6E04               	movwf	(i2fputc@c+1)^0,c
 43849  005560  0E20               	movlw	32
 43850  005562  6E03               	movwf	i2fputc@c^0,c
 43851  005564  0060  F030  F005   	movff	i2stoa@fp,i2fputc@fp
 43852  00556A  0060  F034  F006   	movff	i2stoa@fp+1,i2fputc@fp+1
 43853  005570  EC41  F03A         	call	i2_fputc	;wreg free
 43854                           
 43855                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l
      +                          ;
 43856  005574  4A20               	infsnz	i2stoa@l^0,f,c
 43857  005576  2A21               	incf	(i2stoa@l+1)^0,f,c
 43858  005578                     i2l17253:
 43859                           
 43860                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (
      +                          l < w) {
 43861  005578  501A               	movf	i2stoa@w^0,w,c
 43862  00557A  5C20               	subwf	i2stoa@l^0,w,c
 43863  00557C  5021               	movf	(i2stoa@l+1)^0,w,c
 43864  00557E  0A80               	xorlw	128
 43865  005580  6E10               	movwf	??i2_stoa^0,c
 43866  005582  501B               	movf	(i2stoa@w+1)^0,w,c
 43867  005584  0A80               	xorlw	128
 43868  005586  5810               	subwfb	??i2_stoa^0,w,c
 43869  005588  A0D8               	btfss	status,0,c
 43870  00558A  D7E8               	goto	i2l17249
 43871  00558C                     i2u1613_40:
 43872                           
 43873                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 43874                           
 43875                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 586:     }
 43876  00558C  0060  F080  F00C   	movff	i2stoa@l,?i2_stoa
 43877  005592  0060  F084  F00D   	movff	i2stoa@l+1,?i2_stoa+1
 43878  005598  0012               	return		;funcret
 43879  00559A                     __end_ofi2_stoa:
 43880                           	opt callstack 0
 43881                           
 43882 ;; *************** function i2_dtoa *****************
 43883 ;; Defined at:
 43884 ;;		line 274 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 43885 ;; Parameters:    Size  Location     Type
 43886 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 43887 ;;		 -> i2sprintf@f(6), sprintf@f(6), NULL(0), 
 43888 ;;  d               8   31[COMRAM] long long 
 43889 ;; Auto vars:     Size  Location     Type
 43890 ;;  dtoa            8   55[COMRAM] long long 
 43891 ;;  dtoa            2   63[COMRAM] int 
 43892 ;;  dtoa            2   53[COMRAM] int 
 43893 ;;  dtoa            2   51[COMRAM] int 
 43894 ;;  dtoa            2   49[COMRAM] int 
 43895 ;; Return value:  Size  Location     Type
 43896 ;;                  2   29[COMRAM] int 
 43897 ;; Registers used:
 43898 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 43899 ;; Tracked objects:
 43900 ;;		On entry : 3F/0
 43901 ;;		On exit  : 0/0
 43902 ;;		Unchanged: 0/0
 43903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43904 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43905 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43906 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43907 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43908 ;;Total ram usage:       36 bytes
 43909 ;; Hardware stack levels used:    1
 43910 ;; Hardware stack levels required when called:    5
 43911 ;; This function calls:
 43912 ;;		i2___aodiv
 43913 ;;		i2___aomod
 43914 ;;		i2_abs
 43915 ;;		i2_pad
 43916 ;; This function is called by:
 43917 ;;		i2_vfpfcnvrt
 43918 ;; This function uses a non-reentrant model
 43919 ;;
 43920                           
 43921                           	psect	text361
 43922  003464                     __ptext361:
 43923                           	opt callstack 0
 43924  003464                     i2_dtoa:
 43925                           	opt callstack 6
 43926                           
 43927                           ; BSR set to: 0
 43928                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa
      +                          (FILE *fp, long long d);/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.
      +                          c: 275: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     in
      +                          t i, p, s, w;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:   
      +                            long long n;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 280:  
      +                             n = d;
 43929                           
 43930                           ;incstack = 0
 43931  003464  0060  F080  F038   	movff	i2dtoa@d,i2dtoa@n
 43932  00346A  0060  F084  F039   	movff	i2dtoa@d+1,i2dtoa@n+1
 43933  003470  0060  F088  F03A   	movff	i2dtoa@d+2,i2dtoa@n+2
 43934  003476  0060  F08C  F03B   	movff	i2dtoa@d+3,i2dtoa@n+3
 43935  00347C  0060  F090  F03C   	movff	i2dtoa@d+4,i2dtoa@n+4
 43936  003482  0060  F094  F03D   	movff	i2dtoa@d+5,i2dtoa@n+5
 43937  003488  0060  F098  F03E   	movff	i2dtoa@d+6,i2dtoa@n+6
 43938  00348E  0060  F09C  F03F   	movff	i2dtoa@d+7,i2dtoa@n+7
 43939                           
 43940                           ; BSR set to: 0
 43941                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ?
      +                           1 : 0;
 43942  003494  AE3F               	btfss	(i2dtoa@n+7)^0,7,c
 43943  003496  D002               	goto	i2u1589_40
 43944  003498  0E01               	movlw	1
 43945  00349A  D001               	goto	i2u1590_40
 43946  00349C                     i2u1589_40:
 43947  00349C  0E00               	movlw	0
 43948  00349E                     i2u1590_40:
 43949  00349E  6E36               	movwf	i2dtoa@s^0,c
 43950  0034A0  6A37               	clrf	(i2dtoa@s+1)^0,c
 43951                           
 43952                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 43953  0034A2  5036               	movf	i2dtoa@s^0,w,c
 43954  0034A4  1037               	iorwf	(i2dtoa@s+1)^0,w,c
 43955  0034A6  B4D8               	btfsc	status,2,c
 43956  0034A8  D010               	goto	i2l17157
 43957                           
 43958                           ; BSR set to: 0
 43959                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 43960  0034AA  1E3F               	comf	(i2dtoa@n+7)^0,f,c
 43961  0034AC  1E3E               	comf	(i2dtoa@n+6)^0,f,c
 43962  0034AE  1E3D               	comf	(i2dtoa@n+5)^0,f,c
 43963  0034B0  1E3C               	comf	(i2dtoa@n+4)^0,f,c
 43964  0034B2  1E3B               	comf	(i2dtoa@n+3)^0,f,c
 43965  0034B4  1E3A               	comf	(i2dtoa@n+2)^0,f,c
 43966  0034B6  1E39               	comf	(i2dtoa@n+1)^0,f,c
 43967  0034B8  6C38               	negf	i2dtoa@n^0,c
 43968  0034BA  0E00               	movlw	0
 43969  0034BC  2239               	addwfc	(i2dtoa@n+1)^0,f,c
 43970  0034BE  223A               	addwfc	(i2dtoa@n+2)^0,f,c
 43971  0034C0  223B               	addwfc	(i2dtoa@n+3)^0,f,c
 43972  0034C2  223C               	addwfc	(i2dtoa@n+4)^0,f,c
 43973  0034C4  223D               	addwfc	(i2dtoa@n+5)^0,f,c
 43974  0034C6  223E               	addwfc	(i2dtoa@n+6)^0,f,c
 43975  0034C8  223F               	addwfc	(i2dtoa@n+7)^0,f,c
 43976  0034CA                     i2l17157:
 43977                           
 43978                           ; BSR set to: 0
 43979                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec 
      +                          < 0)) {
 43980  0034CA  0101               	movlb	1	; () banked
 43981  0034CC  AFCA               	btfss	(_prec+1)& (0+255),7,b
 43982                           
 43983                           ; BSR set to: 1
 43984                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &
      +                          = ~(1 << 1);
 43985  0034CE  93CB               	bcf	_flags& (0+255),1,b
 43986                           
 43987                           ; BSR set to: 1
 43988                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < pr
      +                          ec) ? prec : 1;
 43989  0034D0  BFCA               	btfsc	(_prec+1)& (0+255),7,b
 43990  0034D2  D005               	goto	i2u1593_40
 43991  0034D4  51CA               	movf	(_prec+1)& (0+255),w,b
 43992  0034D6  E108               	bnz	i2l3491
 43993  0034D8  05C9               	decf	_prec& (0+255),w,b
 43994  0034DA  B0D8               	btfsc	status,0,c
 43995  0034DC  D005               	goto	i2l3491
 43996  0034DE                     i2u1593_40:
 43997                           
 43998                           ; BSR set to: 1
 43999  0034DE  0E00               	movlw	0
 44000  0034E0  6E33               	movwf	(i2dtoa@p+1)^0,c
 44001  0034E2  0E01               	movlw	1
 44002  0034E4  6E32               	movwf	i2dtoa@p^0,c
 44003  0034E6  D006               	goto	i2l3493
 44004  0034E8                     i2l3491:
 44005                           
 44006                           ; BSR set to: 1
 44007  0034E8  0060  F724  F032   	movff	_prec,i2dtoa@p
 44008  0034EE  0060  F728  F033   	movff	_prec+1,i2dtoa@p+1
 44009  0034F4                     i2l3493:
 44010                           
 44011                           ; BSR set to: 1
 44012                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 44013  0034F4  0060  F71C  F034   	movff	_width,i2dtoa@w
 44014  0034FA  0060  F720  F035   	movff	_width+1,i2dtoa@w+1
 44015                           
 44016                           ; BSR set to: 1
 44017                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (f
      +                          lags & (1 << 2))) {
 44018  003500  5036               	movf	i2dtoa@s^0,w,c
 44019  003502  1037               	iorwf	(i2dtoa@s+1)^0,w,c
 44020  003504  A4D8               	btfss	status,2,c
 44021  003506  D002               	goto	i2u1595_40
 44022                           
 44023                           ; BSR set to: 1
 44024  003508  A5CB               	btfss	_flags& (0+255),2,b
 44025  00350A  D003               	goto	i2l17171
 44026  00350C                     i2u1595_40:
 44027                           
 44028                           ; BSR set to: 1
 44029                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 44030  00350C  0634               	decf	i2dtoa@w^0,f,c
 44031  00350E  A0D8               	btfss	status,0,c
 44032  003510  0635               	decf	(i2dtoa@w+1)^0,f,c
 44033  003512                     i2l17171:
 44034                           
 44035                           ; BSR set to: 1
 44036                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(
      +                          dbuf) - 1;
 44037  003512  0E00               	movlw	0
 44038  003514  6E41               	movwf	(i2dtoa@i+1)^0,c
 44039  003516  0E1F               	movlw	31
 44040  003518  6E40               	movwf	i2dtoa@i^0,c
 44041                           
 44042                           ; BSR set to: 1
 44043                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '
      +                          \0';
 44044  00351A  0E00               	movlw	0
 44045  00351C  0103               	movlb	3	; () banked
 44046  00351E  6FA8               	movwf	(_dbuf+31)& (0+255),b
 44047                           
 44048                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 44049  003520  D09E               	goto	i2l17185
 44050  003522                     i2l17175:
 44051                           
 44052                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 44053  003522  0640               	decf	i2dtoa@i^0,f,c
 44054  003524  A0D8               	btfss	status,0,c
 44055  003526  0641               	decf	(i2dtoa@i+1)^0,f,c
 44056                           
 44057                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i]
      +                           = '0' + abs(n % 10);
 44058  003528  0E89               	movlw	low _dbuf
 44059  00352A  2440               	addwf	i2dtoa@i^0,w,c
 44060  00352C  6ED9               	movwf	fsr2l,c
 44061  00352E  0E03               	movlw	high _dbuf
 44062  003530  2041               	addwfc	(i2dtoa@i+1)^0,w,c
 44063  003532  6EDA               	movwf	fsr2h,c
 44064  003534  0060  F0E0  F001   	movff	i2dtoa@n,i2___aomod@dividend
 44065  00353A  0060  F0E4  F002   	movff	i2dtoa@n+1,i2___aomod@dividend+1
 44066  003540  0060  F0E8  F003   	movff	i2dtoa@n+2,i2___aomod@dividend+2
 44067  003546  0060  F0EC  F004   	movff	i2dtoa@n+3,i2___aomod@dividend+3
 44068  00354C  0060  F0F0  F005   	movff	i2dtoa@n+4,i2___aomod@dividend+4
 44069  003552  0060  F0F4  F006   	movff	i2dtoa@n+5,i2___aomod@dividend+5
 44070  003558  0060  F0F8  F007   	movff	i2dtoa@n+6,i2___aomod@dividend+6
 44071  00355E  0060  F0FC  F008   	movff	i2dtoa@n+7,i2___aomod@dividend+7
 44072  003564  0E0A               	movlw	10
 44073  003566  6E09               	movwf	i2___aomod@divisor^0,c
 44074  003568  0E00               	movlw	0
 44075  00356A  6E0A               	movwf	(i2___aomod@divisor+1)^0,c
 44076  00356C  0E00               	movlw	0
 44077  00356E  6E0B               	movwf	(i2___aomod@divisor+2)^0,c
 44078  003570  0E00               	movlw	0
 44079  003572  6E0C               	movwf	(i2___aomod@divisor+3)^0,c
 44080  003574  0E00               	movlw	0
 44081  003576  6E0D               	movwf	(i2___aomod@divisor+4)^0,c
 44082  003578  0E00               	movlw	0
 44083  00357A  6E0E               	movwf	(i2___aomod@divisor+5)^0,c
 44084  00357C  0E00               	movlw	0
 44085  00357E  6E0F               	movwf	(i2___aomod@divisor+6)^0,c
 44086  003580  0E00               	movlw	0
 44087  003582  6E10               	movwf	(i2___aomod@divisor+7)^0,c
 44088  003584  ECC2  F030         	call	i2___aomod	;wreg free
 44089  003588  0060  F004  F028   	movff	?i2___aomod,??i2_dtoa
 44090  00358E  0060  F008  F029   	movff	?i2___aomod+1,??i2_dtoa+1
 44091  003594  0060  F00C  F02A   	movff	?i2___aomod+2,??i2_dtoa+2
 44092  00359A  0060  F010  F02B   	movff	?i2___aomod+3,??i2_dtoa+3
 44093  0035A0  0060  F014  F02C   	movff	?i2___aomod+4,??i2_dtoa+4
 44094  0035A6  0060  F018  F02D   	movff	?i2___aomod+5,??i2_dtoa+5
 44095  0035AC  0060  F01C  F02E   	movff	?i2___aomod+6,??i2_dtoa+6
 44096  0035B2  0060  F020  F02F   	movff	?i2___aomod+7,??i2_dtoa+7
 44097  0035B8  0060  F0A0  F013   	movff	??i2_dtoa,i2abs@a
 44098  0035BE  0060  F0A8  F014   	movff	??i2_dtoa+2,i2abs@a+1
 44099  0035C4  EC4E  F04A         	call	i2_abs	;wreg free
 44100  0035C8  5013               	movf	?i2_abs^0,w,c
 44101  0035CA  0F30               	addlw	48
 44102  0035CC  6EDF               	movwf	indf2,c
 44103                           
 44104                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 44105  0035CE  0632               	decf	i2dtoa@p^0,f,c
 44106  0035D0  A0D8               	btfss	status,0,c
 44107  0035D2  0633               	decf	(i2dtoa@p+1)^0,f,c
 44108                           
 44109                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 44110  0035D4  0634               	decf	i2dtoa@w^0,f,c
 44111  0035D6  A0D8               	btfss	status,0,c
 44112  0035D8  0635               	decf	(i2dtoa@w+1)^0,f,c
 44113                           
 44114                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n /
      +                           10;
 44115  0035DA  0060  F0E0  F001   	movff	i2dtoa@n,i2___aodiv@dividend
 44116  0035E0  0060  F0E4  F002   	movff	i2dtoa@n+1,i2___aodiv@dividend+1
 44117  0035E6  0060  F0E8  F003   	movff	i2dtoa@n+2,i2___aodiv@dividend+2
 44118  0035EC  0060  F0EC  F004   	movff	i2dtoa@n+3,i2___aodiv@dividend+3
 44119  0035F2  0060  F0F0  F005   	movff	i2dtoa@n+4,i2___aodiv@dividend+4
 44120  0035F8  0060  F0F4  F006   	movff	i2dtoa@n+5,i2___aodiv@dividend+5
 44121  0035FE  0060  F0F8  F007   	movff	i2dtoa@n+6,i2___aodiv@dividend+6
 44122  003604  0060  F0FC  F008   	movff	i2dtoa@n+7,i2___aodiv@dividend+7
 44123  00360A  0E0A               	movlw	10
 44124  00360C  6E09               	movwf	i2___aodiv@divisor^0,c
 44125  00360E  0E00               	movlw	0
 44126  003610  6E0A               	movwf	(i2___aodiv@divisor+1)^0,c
 44127  003612  0E00               	movlw	0
 44128  003614  6E0B               	movwf	(i2___aodiv@divisor+2)^0,c
 44129  003616  0E00               	movlw	0
 44130  003618  6E0C               	movwf	(i2___aodiv@divisor+3)^0,c
 44131  00361A  0E00               	movlw	0
 44132  00361C  6E0D               	movwf	(i2___aodiv@divisor+4)^0,c
 44133  00361E  0E00               	movlw	0
 44134  003620  6E0E               	movwf	(i2___aodiv@divisor+5)^0,c
 44135  003622  0E00               	movlw	0
 44136  003624  6E0F               	movwf	(i2___aodiv@divisor+6)^0,c
 44137  003626  0E00               	movlw	0
 44138  003628  6E10               	movwf	(i2___aodiv@divisor+7)^0,c
 44139  00362A  ECA0  F02D         	call	i2___aodiv	;wreg free
 44140  00362E  0060  F004  F038   	movff	?i2___aodiv,i2dtoa@n
 44141  003634  0060  F008  F039   	movff	?i2___aodiv+1,i2dtoa@n+1
 44142  00363A  0060  F00C  F03A   	movff	?i2___aodiv+2,i2dtoa@n+2
 44143  003640  0060  F010  F03B   	movff	?i2___aodiv+3,i2dtoa@n+3
 44144  003646  0060  F014  F03C   	movff	?i2___aodiv+4,i2dtoa@n+4
 44145  00364C  0060  F018  F03D   	movff	?i2___aodiv+5,i2dtoa@n+5
 44146  003652  0060  F01C  F03E   	movff	?i2___aodiv+6,i2dtoa@n+6
 44147  003658  0060  F020  F03F   	movff	?i2___aodiv+7,i2dtoa@n+7
 44148  00365E                     i2l17185:
 44149                           
 44150                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 44151  00365E  BE41               	btfsc	(i2dtoa@i+1)^0,7,c
 44152  003660  D020               	goto	i2u1600_40
 44153  003662  5041               	movf	(i2dtoa@i+1)^0,w,c
 44154  003664  E103               	bnz	i2u1596_40
 44155  003666  0440               	decf	i2dtoa@i^0,w,c
 44156  003668  A0D8               	btfss	status,0,c
 44157  00366A  D01B               	goto	i2u1600_40
 44158  00366C                     i2u1596_40:
 44159  00366C  5038               	movf	i2dtoa@n^0,w,c
 44160  00366E  1039               	iorwf	(i2dtoa@n+1)^0,w,c
 44161  003670  103A               	iorwf	(i2dtoa@n+2)^0,w,c
 44162  003672  103B               	iorwf	(i2dtoa@n+3)^0,w,c
 44163  003674  103C               	iorwf	(i2dtoa@n+4)^0,w,c
 44164  003676  103D               	iorwf	(i2dtoa@n+5)^0,w,c
 44165  003678  103E               	iorwf	(i2dtoa@n+6)^0,w,c
 44166  00367A  103F               	iorwf	(i2dtoa@n+7)^0,w,c
 44167  00367C  A4D8               	btfss	status,2,c
 44168  00367E  D751               	goto	i2l17175
 44169  003680  BE33               	btfsc	(i2dtoa@p+1)^0,7,c
 44170  003682  D005               	goto	i2u1598_40
 44171  003684  5033               	movf	(i2dtoa@p+1)^0,w,c
 44172  003686  E102               	bnz	i2u1598_41
 44173  003688  0432               	decf	i2dtoa@p^0,w,c
 44174  00368A  B0D8               	btfsc	status,0,c
 44175  00368C                     i2u1598_41:
 44176  00368C  D74A               	goto	i2l17175
 44177  00368E                     i2u1598_40:
 44178  00368E  BE35               	btfsc	(i2dtoa@w+1)^0,7,c
 44179  003690  D008               	goto	i2u1600_40
 44180  003692  5035               	movf	(i2dtoa@w+1)^0,w,c
 44181  003694  E103               	bnz	i2u1599_40
 44182  003696  0434               	decf	i2dtoa@w^0,w,c
 44183  003698  A0D8               	btfss	status,0,c
 44184  00369A  D003               	goto	i2u1600_40
 44185  00369C                     i2u1599_40:
 44186  00369C  0101               	movlb	1	; () banked
 44187  00369E  B3CB               	btfsc	_flags& (0+255),1,b
 44188  0036A0  D740               	goto	i2l17175
 44189  0036A2                     i2u1600_40:
 44190                           
 44191                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (f
      +                          lags & (1 << 2))) {
 44192  0036A2  5036               	movf	i2dtoa@s^0,w,c
 44193  0036A4  1037               	iorwf	(i2dtoa@s+1)^0,w,c
 44194  0036A6  A4D8               	btfss	status,2,c
 44195  0036A8  D003               	goto	i2u1602_40
 44196  0036AA  0101               	movlb	1	; () banked
 44197  0036AC  A5CB               	btfss	_flags& (0+255),2,b
 44198  0036AE  D018               	goto	i2l17209
 44199  0036B0                     i2u1602_40:
 44200                           
 44201                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 44202  0036B0  0640               	decf	i2dtoa@i^0,f,c
 44203  0036B2  A0D8               	btfss	status,0,c
 44204  0036B4  0641               	decf	(i2dtoa@i+1)^0,f,c
 44205                           
 44206                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i]
      +                           = s ? '-' : '+';
 44207  0036B6  5036               	movf	i2dtoa@s^0,w,c
 44208  0036B8  1037               	iorwf	(i2dtoa@s+1)^0,w,c
 44209  0036BA  A4D8               	btfss	status,2,c
 44210  0036BC  D004               	goto	i2l17205
 44211  0036BE  0E00               	movlw	0
 44212  0036C0  6E31               	movwf	(i2_dtoa$5178+1)^0,c
 44213  0036C2  0E2B               	movlw	43
 44214  0036C4  D003               	goto	L19
 44215  0036C6                     i2l17205:
 44216  0036C6  0E00               	movlw	0
 44217  0036C8  6E31               	movwf	(i2_dtoa$5178+1)^0,c
 44218  0036CA  0E2D               	movlw	45
 44219  0036CC                     L19:
 44220  0036CC  6E30               	movwf	i2_dtoa$5178^0,c
 44221  0036CE  0E89               	movlw	low _dbuf
 44222  0036D0  2440               	addwf	i2dtoa@i^0,w,c
 44223  0036D2  6ED9               	movwf	fsr2l,c
 44224  0036D4  0E03               	movlw	high _dbuf
 44225  0036D6  2041               	addwfc	(i2dtoa@i+1)^0,w,c
 44226  0036D8  6EDA               	movwf	fsr2h,c
 44227  0036DA  0060  F0C3  FFDF   	movff	i2_dtoa$5178,indf2
 44228  0036E0                     i2l17209:
 44229                           
 44230                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(
      +                          fp, &dbuf[i], w);
 44231  0036E0  0060  F078  F013   	movff	i2dtoa@fp,i2pad@fp
 44232  0036E6  0060  F07C  F014   	movff	i2dtoa@fp+1,i2pad@fp+1
 44233  0036EC  0E89               	movlw	low _dbuf
 44234  0036EE  2440               	addwf	i2dtoa@i^0,w,c
 44235  0036F0  6E15               	movwf	i2pad@buf^0,c
 44236  0036F2  0E03               	movlw	high _dbuf
 44237  0036F4  2041               	addwfc	(i2dtoa@i+1)^0,w,c
 44238  0036F6  6E16               	movwf	(i2pad@buf+1)^0,c
 44239  0036F8  0060  F0D0  F017   	movff	i2dtoa@w,i2pad@p
 44240  0036FE  0060  F0D4  F018   	movff	i2dtoa@w+1,i2pad@p+1
 44241  003704  EC2B  F038         	call	i2_pad	;wreg free
 44242  003708  0060  F04C  F01E   	movff	?i2_pad,?i2_dtoa
 44243  00370E  0060  F050  F01F   	movff	?i2_pad+1,?i2_dtoa+1
 44244  003714  0012               	return		;funcret
 44245  003716                     __end_ofi2_dtoa:
 44246                           	opt callstack 0
 44247                           
 44248 ;; *************** function i2_abs *****************
 44249 ;; Defined at:
 44250 ;;		line 1 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 44251 ;; Parameters:    Size  Location     Type
 44252 ;;  a               2   18[COMRAM] int 
 44253 ;; Auto vars:     Size  Location     Type
 44254 ;;		None
 44255 ;; Return value:  Size  Location     Type
 44256 ;;                  2   18[COMRAM] int 
 44257 ;; Registers used:
 44258 ;;		wreg, status,2, status,0
 44259 ;; Tracked objects:
 44260 ;;		On entry : 0/3
 44261 ;;		On exit  : 0/0
 44262 ;;		Unchanged: 0/0
 44263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44264 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44266 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44267 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44268 ;;Total ram usage:        4 bytes
 44269 ;; Hardware stack levels used:    1
 44270 ;; This function calls:
 44271 ;;		Nothing
 44272 ;; This function is called by:
 44273 ;;		i2_dtoa
 44274 ;; This function uses a non-reentrant model
 44275 ;;
 44276                           
 44277                           	psect	text362
 44278  00949C                     __ptext362:
 44279                           	opt callstack 0
 44280  00949C                     i2_abs:
 44281                           	opt callstack 10
 44282                           
 44283                           ;incstack = 0
 44284  00949C  BE14               	btfsc	(i2abs@a+1)^0,7,c
 44285  00949E  D005               	goto	i2u1571_40
 44286  0094A0  5014               	movf	(i2abs@a+1)^0,w,c
 44287  0094A2  E114               	bnz	i2l4283
 44288  0094A4  0413               	decf	i2abs@a^0,w,c
 44289  0094A6  B0D8               	btfsc	status,0,c
 44290  0094A8  D011               	goto	i2l4283
 44291  0094AA                     i2u1571_40:
 44292  0094AA  0060  F04C  F015   	movff	i2abs@a,??i2_abs
 44293  0094B0  0060  F050  F016   	movff	i2abs@a+1,??i2_abs+1
 44294  0094B6  1E15               	comf	??i2_abs^0,f,c
 44295  0094B8  1E16               	comf	(??i2_abs+1)^0,f,c
 44296  0094BA  4A15               	infsnz	??i2_abs^0,f,c
 44297  0094BC  2A16               	incf	(??i2_abs+1)^0,f,c
 44298  0094BE  0060  F054  F013   	movff	??i2_abs,?i2_abs
 44299  0094C4  0060  F058  F014   	movff	??i2_abs+1,?i2_abs+1
 44300  0094CA  0012               	return	
 44301  0094CC                     i2l4283:
 44302  0094CC  0060  F04C  F013   	movff	i2abs@a,?i2_abs
 44303  0094D2  0060  F050  F014   	movff	i2abs@a+1,?i2_abs+1
 44304  0094D8  0012               	return		;funcret
 44305  0094DA                     __end_ofi2_abs:
 44306                           	opt callstack 0
 44307                           
 44308 ;; *************** function i2___aomod *****************
 44309 ;; Defined at:
 44310 ;;		line 9 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 44311 ;; Parameters:    Size  Location     Type
 44312 ;;  dividend        8    0[COMRAM] long long 
 44313 ;;  divisor         8    8[COMRAM] long long 
 44314 ;; Auto vars:     Size  Location     Type
 44315 ;;  __aomod         1   17[COMRAM] unsigned char 
 44316 ;;  __aomod         1   16[COMRAM] unsigned char 
 44317 ;; Return value:  Size  Location     Type
 44318 ;;                  8    0[COMRAM] long long 
 44319 ;; Registers used:
 44320 ;;		wreg, status,2, status,0
 44321 ;; Tracked objects:
 44322 ;;		On entry : 0/3
 44323 ;;		On exit  : 0/0
 44324 ;;		Unchanged: 0/0
 44325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44326 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44327 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44329 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44330 ;;Total ram usage:       18 bytes
 44331 ;; Hardware stack levels used:    1
 44332 ;; This function calls:
 44333 ;;		Nothing
 44334 ;; This function is called by:
 44335 ;;		i2_dtoa
 44336 ;; This function uses a non-reentrant model
 44337 ;;
 44338                           
 44339                           	psect	text363
 44340  006184                     __ptext363:
 44341                           	opt callstack 0
 44342  006184                     i2___aomod:
 44343                           	opt callstack 10
 44344                           
 44345                           ;incstack = 0
 44346  006184  0E00               	movlw	0
 44347  006186  6E12               	movwf	i2___aomod@sign^0,c
 44348  006188  AE08               	btfss	(i2___aomod@dividend+7)^0,7,c
 44349  00618A  D012               	goto	i2l17049
 44350  00618C  1E08               	comf	(i2___aomod@dividend+7)^0,f,c
 44351  00618E  1E07               	comf	(i2___aomod@dividend+6)^0,f,c
 44352  006190  1E06               	comf	(i2___aomod@dividend+5)^0,f,c
 44353  006192  1E05               	comf	(i2___aomod@dividend+4)^0,f,c
 44354  006194  1E04               	comf	(i2___aomod@dividend+3)^0,f,c
 44355  006196  1E03               	comf	(i2___aomod@dividend+2)^0,f,c
 44356  006198  1E02               	comf	(i2___aomod@dividend+1)^0,f,c
 44357  00619A  6C01               	negf	i2___aomod@dividend^0,c
 44358  00619C  0E00               	movlw	0
 44359  00619E  2202               	addwfc	(i2___aomod@dividend+1)^0,f,c
 44360  0061A0  2203               	addwfc	(i2___aomod@dividend+2)^0,f,c
 44361  0061A2  2204               	addwfc	(i2___aomod@dividend+3)^0,f,c
 44362  0061A4  2205               	addwfc	(i2___aomod@dividend+4)^0,f,c
 44363  0061A6  2206               	addwfc	(i2___aomod@dividend+5)^0,f,c
 44364  0061A8  2207               	addwfc	(i2___aomod@dividend+6)^0,f,c
 44365  0061AA  2208               	addwfc	(i2___aomod@dividend+7)^0,f,c
 44366  0061AC  0E01               	movlw	1
 44367  0061AE  6E12               	movwf	i2___aomod@sign^0,c
 44368  0061B0                     i2l17049:
 44369  0061B0  AE10               	btfss	(i2___aomod@divisor+7)^0,7,c
 44370  0061B2  D010               	goto	i2l17053
 44371  0061B4  1E10               	comf	(i2___aomod@divisor+7)^0,f,c
 44372  0061B6  1E0F               	comf	(i2___aomod@divisor+6)^0,f,c
 44373  0061B8  1E0E               	comf	(i2___aomod@divisor+5)^0,f,c
 44374  0061BA  1E0D               	comf	(i2___aomod@divisor+4)^0,f,c
 44375  0061BC  1E0C               	comf	(i2___aomod@divisor+3)^0,f,c
 44376  0061BE  1E0B               	comf	(i2___aomod@divisor+2)^0,f,c
 44377  0061C0  1E0A               	comf	(i2___aomod@divisor+1)^0,f,c
 44378  0061C2  6C09               	negf	i2___aomod@divisor^0,c
 44379  0061C4  0E00               	movlw	0
 44380  0061C6  220A               	addwfc	(i2___aomod@divisor+1)^0,f,c
 44381  0061C8  220B               	addwfc	(i2___aomod@divisor+2)^0,f,c
 44382  0061CA  220C               	addwfc	(i2___aomod@divisor+3)^0,f,c
 44383  0061CC  220D               	addwfc	(i2___aomod@divisor+4)^0,f,c
 44384  0061CE  220E               	addwfc	(i2___aomod@divisor+5)^0,f,c
 44385  0061D0  220F               	addwfc	(i2___aomod@divisor+6)^0,f,c
 44386  0061D2  2210               	addwfc	(i2___aomod@divisor+7)^0,f,c
 44387  0061D4                     i2l17053:
 44388  0061D4  5009               	movf	i2___aomod@divisor^0,w,c
 44389  0061D6  100A               	iorwf	(i2___aomod@divisor+1)^0,w,c
 44390  0061D8  100B               	iorwf	(i2___aomod@divisor+2)^0,w,c
 44391  0061DA  100C               	iorwf	(i2___aomod@divisor+3)^0,w,c
 44392  0061DC  100D               	iorwf	(i2___aomod@divisor+4)^0,w,c
 44393  0061DE  100E               	iorwf	(i2___aomod@divisor+5)^0,w,c
 44394  0061E0  100F               	iorwf	(i2___aomod@divisor+6)^0,w,c
 44395  0061E2  1010               	iorwf	(i2___aomod@divisor+7)^0,w,c
 44396  0061E4  B4D8               	btfsc	status,2,c
 44397  0061E6  D03C               	goto	i2l17069
 44398  0061E8  0E01               	movlw	1
 44399  0061EA  6E11               	movwf	i2___aomod@counter^0,c
 44400  0061EC  D00A               	goto	i2l17059
 44401  0061EE                     i2l17057:
 44402  0061EE  90D8               	bcf	status,0,c
 44403  0061F0  3609               	rlcf	i2___aomod@divisor^0,f,c
 44404  0061F2  360A               	rlcf	(i2___aomod@divisor+1)^0,f,c
 44405  0061F4  360B               	rlcf	(i2___aomod@divisor+2)^0,f,c
 44406  0061F6  360C               	rlcf	(i2___aomod@divisor+3)^0,f,c
 44407  0061F8  360D               	rlcf	(i2___aomod@divisor+4)^0,f,c
 44408  0061FA  360E               	rlcf	(i2___aomod@divisor+5)^0,f,c
 44409  0061FC  360F               	rlcf	(i2___aomod@divisor+6)^0,f,c
 44410  0061FE  3610               	rlcf	(i2___aomod@divisor+7)^0,f,c
 44411  006200  2A11               	incf	i2___aomod@counter^0,f,c
 44412  006202                     i2l17059:
 44413  006202  AE10               	btfss	(i2___aomod@divisor+7)^0,7,c
 44414  006204  D7F4               	goto	i2l17057
 44415  006206                     i2u1568_40:
 44416  006206  5009               	movf	i2___aomod@divisor^0,w,c
 44417  006208  5C01               	subwf	i2___aomod@dividend^0,w,c
 44418  00620A  500A               	movf	(i2___aomod@divisor+1)^0,w,c
 44419  00620C  5802               	subwfb	(i2___aomod@dividend+1)^0,w,c
 44420  00620E  500B               	movf	(i2___aomod@divisor+2)^0,w,c
 44421  006210  5803               	subwfb	(i2___aomod@dividend+2)^0,w,c
 44422  006212  500C               	movf	(i2___aomod@divisor+3)^0,w,c
 44423  006214  5804               	subwfb	(i2___aomod@dividend+3)^0,w,c
 44424  006216  500D               	movf	(i2___aomod@divisor+4)^0,w,c
 44425  006218  5805               	subwfb	(i2___aomod@dividend+4)^0,w,c
 44426  00621A  500E               	movf	(i2___aomod@divisor+5)^0,w,c
 44427  00621C  5806               	subwfb	(i2___aomod@dividend+5)^0,w,c
 44428  00621E  500F               	movf	(i2___aomod@divisor+6)^0,w,c
 44429  006220  5807               	subwfb	(i2___aomod@dividend+6)^0,w,c
 44430  006222  5010               	movf	(i2___aomod@divisor+7)^0,w,c
 44431  006224  5808               	subwfb	(i2___aomod@dividend+7)^0,w,c
 44432  006226  A0D8               	btfss	status,0,c
 44433  006228  D010               	goto	i2l17065
 44434  00622A  5009               	movf	i2___aomod@divisor^0,w,c
 44435  00622C  5E01               	subwf	i2___aomod@dividend^0,f,c
 44436  00622E  500A               	movf	(i2___aomod@divisor+1)^0,w,c
 44437  006230  5A02               	subwfb	(i2___aomod@dividend+1)^0,f,c
 44438  006232  500B               	movf	(i2___aomod@divisor+2)^0,w,c
 44439  006234  5A03               	subwfb	(i2___aomod@dividend+2)^0,f,c
 44440  006236  500C               	movf	(i2___aomod@divisor+3)^0,w,c
 44441  006238  5A04               	subwfb	(i2___aomod@dividend+3)^0,f,c
 44442  00623A  500D               	movf	(i2___aomod@divisor+4)^0,w,c
 44443  00623C  5A05               	subwfb	(i2___aomod@dividend+4)^0,f,c
 44444  00623E  500E               	movf	(i2___aomod@divisor+5)^0,w,c
 44445  006240  5A06               	subwfb	(i2___aomod@dividend+5)^0,f,c
 44446  006242  500F               	movf	(i2___aomod@divisor+6)^0,w,c
 44447  006244  5A07               	subwfb	(i2___aomod@dividend+6)^0,f,c
 44448  006246  5010               	movf	(i2___aomod@divisor+7)^0,w,c
 44449  006248  5A08               	subwfb	(i2___aomod@dividend+7)^0,f,c
 44450  00624A                     i2l17065:
 44451  00624A  90D8               	bcf	status,0,c
 44452  00624C  3210               	rrcf	(i2___aomod@divisor+7)^0,f,c
 44453  00624E  320F               	rrcf	(i2___aomod@divisor+6)^0,f,c
 44454  006250  320E               	rrcf	(i2___aomod@divisor+5)^0,f,c
 44455  006252  320D               	rrcf	(i2___aomod@divisor+4)^0,f,c
 44456  006254  320C               	rrcf	(i2___aomod@divisor+3)^0,f,c
 44457  006256  320B               	rrcf	(i2___aomod@divisor+2)^0,f,c
 44458  006258  320A               	rrcf	(i2___aomod@divisor+1)^0,f,c
 44459  00625A  3209               	rrcf	i2___aomod@divisor^0,f,c
 44460  00625C  2E11               	decfsz	i2___aomod@counter^0,f,c
 44461  00625E  D7D3               	goto	i2u1568_40
 44462  006260                     i2l17069:
 44463  006260  5012               	movf	i2___aomod@sign^0,w,c
 44464  006262  B4D8               	btfsc	status,2,c
 44465  006264  D010               	goto	i2l17073
 44466  006266  1E08               	comf	(i2___aomod@dividend+7)^0,f,c
 44467  006268  1E07               	comf	(i2___aomod@dividend+6)^0,f,c
 44468  00626A  1E06               	comf	(i2___aomod@dividend+5)^0,f,c
 44469  00626C  1E05               	comf	(i2___aomod@dividend+4)^0,f,c
 44470  00626E  1E04               	comf	(i2___aomod@dividend+3)^0,f,c
 44471  006270  1E03               	comf	(i2___aomod@dividend+2)^0,f,c
 44472  006272  1E02               	comf	(i2___aomod@dividend+1)^0,f,c
 44473  006274  6C01               	negf	i2___aomod@dividend^0,c
 44474  006276  0E00               	movlw	0
 44475  006278  2202               	addwfc	(i2___aomod@dividend+1)^0,f,c
 44476  00627A  2203               	addwfc	(i2___aomod@dividend+2)^0,f,c
 44477  00627C  2204               	addwfc	(i2___aomod@dividend+3)^0,f,c
 44478  00627E  2205               	addwfc	(i2___aomod@dividend+4)^0,f,c
 44479  006280  2206               	addwfc	(i2___aomod@dividend+5)^0,f,c
 44480  006282  2207               	addwfc	(i2___aomod@dividend+6)^0,f,c
 44481  006284  2208               	addwfc	(i2___aomod@dividend+7)^0,f,c
 44482  006286                     i2l17073:
 44483  006286  0060  F004  F001   	movff	i2___aomod@dividend,?i2___aomod
 44484  00628C  0060  F008  F002   	movff	i2___aomod@dividend+1,?i2___aomod+1
 44485  006292  0060  F00C  F003   	movff	i2___aomod@dividend+2,?i2___aomod+2
 44486  006298  0060  F010  F004   	movff	i2___aomod@dividend+3,?i2___aomod+3
 44487  00629E  0060  F014  F005   	movff	i2___aomod@dividend+4,?i2___aomod+4
 44488  0062A4  0060  F018  F006   	movff	i2___aomod@dividend+5,?i2___aomod+5
 44489  0062AA  0060  F01C  F007   	movff	i2___aomod@dividend+6,?i2___aomod+6
 44490  0062B0  0060  F020  F008   	movff	i2___aomod@dividend+7,?i2___aomod+7
 44491  0062B6  0012               	return		;funcret
 44492  0062B8                     __end_ofi2___aomod:
 44493                           	opt callstack 0
 44494                           
 44495 ;; *************** function i2___aodiv *****************
 44496 ;; Defined at:
 44497 ;;		line 9 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 44498 ;; Parameters:    Size  Location     Type
 44499 ;;  dividend        8    0[COMRAM] long long 
 44500 ;;  divisor         8    8[COMRAM] long long 
 44501 ;; Auto vars:     Size  Location     Type
 44502 ;;  __aodiv         8   18[COMRAM] long long 
 44503 ;;  __aodiv         1   17[COMRAM] unsigned char 
 44504 ;;  __aodiv         1   16[COMRAM] unsigned char 
 44505 ;; Return value:  Size  Location     Type
 44506 ;;                  8    0[COMRAM] long long 
 44507 ;; Registers used:
 44508 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 44509 ;; Tracked objects:
 44510 ;;		On entry : 0/3
 44511 ;;		On exit  : 0/0
 44512 ;;		Unchanged: 0/0
 44513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44514 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44515 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44517 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44518 ;;Total ram usage:       26 bytes
 44519 ;; Hardware stack levels used:    1
 44520 ;; This function calls:
 44521 ;;		Nothing
 44522 ;; This function is called by:
 44523 ;;		i2_dtoa
 44524 ;; This function uses a non-reentrant model
 44525 ;;
 44526                           
 44527                           	psect	text364
 44528  005B40                     __ptext364:
 44529                           	opt callstack 0
 44530  005B40                     i2___aodiv:
 44531                           	opt callstack 10
 44532                           
 44533                           ;incstack = 0
 44534  005B40  0E00               	movlw	0
 44535  005B42  6E12               	movwf	i2___aodiv@sign^0,c
 44536  005B44  AE10               	btfss	(i2___aodiv@divisor+7)^0,7,c
 44537  005B46  D012               	goto	i2l17005
 44538  005B48  1E10               	comf	(i2___aodiv@divisor+7)^0,f,c
 44539  005B4A  1E0F               	comf	(i2___aodiv@divisor+6)^0,f,c
 44540  005B4C  1E0E               	comf	(i2___aodiv@divisor+5)^0,f,c
 44541  005B4E  1E0D               	comf	(i2___aodiv@divisor+4)^0,f,c
 44542  005B50  1E0C               	comf	(i2___aodiv@divisor+3)^0,f,c
 44543  005B52  1E0B               	comf	(i2___aodiv@divisor+2)^0,f,c
 44544  005B54  1E0A               	comf	(i2___aodiv@divisor+1)^0,f,c
 44545  005B56  6C09               	negf	i2___aodiv@divisor^0,c
 44546  005B58  0E00               	movlw	0
 44547  005B5A  220A               	addwfc	(i2___aodiv@divisor+1)^0,f,c
 44548  005B5C  220B               	addwfc	(i2___aodiv@divisor+2)^0,f,c
 44549  005B5E  220C               	addwfc	(i2___aodiv@divisor+3)^0,f,c
 44550  005B60  220D               	addwfc	(i2___aodiv@divisor+4)^0,f,c
 44551  005B62  220E               	addwfc	(i2___aodiv@divisor+5)^0,f,c
 44552  005B64  220F               	addwfc	(i2___aodiv@divisor+6)^0,f,c
 44553  005B66  2210               	addwfc	(i2___aodiv@divisor+7)^0,f,c
 44554  005B68  0E01               	movlw	1
 44555  005B6A  6E12               	movwf	i2___aodiv@sign^0,c
 44556  005B6C                     i2l17005:
 44557  005B6C  AE08               	btfss	(i2___aodiv@dividend+7)^0,7,c
 44558  005B6E  D012               	goto	i2l17011
 44559  005B70  1E08               	comf	(i2___aodiv@dividend+7)^0,f,c
 44560  005B72  1E07               	comf	(i2___aodiv@dividend+6)^0,f,c
 44561  005B74  1E06               	comf	(i2___aodiv@dividend+5)^0,f,c
 44562  005B76  1E05               	comf	(i2___aodiv@dividend+4)^0,f,c
 44563  005B78  1E04               	comf	(i2___aodiv@dividend+3)^0,f,c
 44564  005B7A  1E03               	comf	(i2___aodiv@dividend+2)^0,f,c
 44565  005B7C  1E02               	comf	(i2___aodiv@dividend+1)^0,f,c
 44566  005B7E  6C01               	negf	i2___aodiv@dividend^0,c
 44567  005B80  0E00               	movlw	0
 44568  005B82  2202               	addwfc	(i2___aodiv@dividend+1)^0,f,c
 44569  005B84  2203               	addwfc	(i2___aodiv@dividend+2)^0,f,c
 44570  005B86  2204               	addwfc	(i2___aodiv@dividend+3)^0,f,c
 44571  005B88  2205               	addwfc	(i2___aodiv@dividend+4)^0,f,c
 44572  005B8A  2206               	addwfc	(i2___aodiv@dividend+5)^0,f,c
 44573  005B8C  2207               	addwfc	(i2___aodiv@dividend+6)^0,f,c
 44574  005B8E  2208               	addwfc	(i2___aodiv@dividend+7)^0,f,c
 44575  005B90  0E01               	movlw	1
 44576  005B92  1A12               	xorwf	i2___aodiv@sign^0,f,c
 44577  005B94                     i2l17011:
 44578  005B94  EE20  F013         	lfsr	2,i2___aodiv@quotient
 44579  005B98  0E07               	movlw	7
 44580  005B9A                     i2u1560_41:
 44581  005B9A  6ADE               	clrf	postinc2,c
 44582  005B9C  06E8               	decf	wreg,f,c
 44583  005B9E  E2FD               	bc	i2u1560_41
 44584  005BA0  5009               	movf	i2___aodiv@divisor^0,w,c
 44585  005BA2  100A               	iorwf	(i2___aodiv@divisor+1)^0,w,c
 44586  005BA4  100B               	iorwf	(i2___aodiv@divisor+2)^0,w,c
 44587  005BA6  100C               	iorwf	(i2___aodiv@divisor+3)^0,w,c
 44588  005BA8  100D               	iorwf	(i2___aodiv@divisor+4)^0,w,c
 44589  005BAA  100E               	iorwf	(i2___aodiv@divisor+5)^0,w,c
 44590  005BAC  100F               	iorwf	(i2___aodiv@divisor+6)^0,w,c
 44591  005BAE  1010               	iorwf	(i2___aodiv@divisor+7)^0,w,c
 44592  005BB0  B4D8               	btfsc	status,2,c
 44593  005BB2  D046               	goto	i2l17033
 44594  005BB4  0E01               	movlw	1
 44595  005BB6  6E11               	movwf	i2___aodiv@counter^0,c
 44596  005BB8  D00A               	goto	i2l17019
 44597  005BBA                     i2l17017:
 44598  005BBA  90D8               	bcf	status,0,c
 44599  005BBC  3609               	rlcf	i2___aodiv@divisor^0,f,c
 44600  005BBE  360A               	rlcf	(i2___aodiv@divisor+1)^0,f,c
 44601  005BC0  360B               	rlcf	(i2___aodiv@divisor+2)^0,f,c
 44602  005BC2  360C               	rlcf	(i2___aodiv@divisor+3)^0,f,c
 44603  005BC4  360D               	rlcf	(i2___aodiv@divisor+4)^0,f,c
 44604  005BC6  360E               	rlcf	(i2___aodiv@divisor+5)^0,f,c
 44605  005BC8  360F               	rlcf	(i2___aodiv@divisor+6)^0,f,c
 44606  005BCA  3610               	rlcf	(i2___aodiv@divisor+7)^0,f,c
 44607  005BCC  2A11               	incf	i2___aodiv@counter^0,f,c
 44608  005BCE                     i2l17019:
 44609  005BCE  AE10               	btfss	(i2___aodiv@divisor+7)^0,7,c
 44610  005BD0  D7F4               	goto	i2l17017
 44611  005BD2                     i2u1562_40:
 44612  005BD2  90D8               	bcf	status,0,c
 44613  005BD4  3613               	rlcf	i2___aodiv@quotient^0,f,c
 44614  005BD6  3614               	rlcf	(i2___aodiv@quotient+1)^0,f,c
 44615  005BD8  3615               	rlcf	(i2___aodiv@quotient+2)^0,f,c
 44616  005BDA  3616               	rlcf	(i2___aodiv@quotient+3)^0,f,c
 44617  005BDC  3617               	rlcf	(i2___aodiv@quotient+4)^0,f,c
 44618  005BDE  3618               	rlcf	(i2___aodiv@quotient+5)^0,f,c
 44619  005BE0  3619               	rlcf	(i2___aodiv@quotient+6)^0,f,c
 44620  005BE2  361A               	rlcf	(i2___aodiv@quotient+7)^0,f,c
 44621  005BE4  5009               	movf	i2___aodiv@divisor^0,w,c
 44622  005BE6  5C01               	subwf	i2___aodiv@dividend^0,w,c
 44623  005BE8  500A               	movf	(i2___aodiv@divisor+1)^0,w,c
 44624  005BEA  5802               	subwfb	(i2___aodiv@dividend+1)^0,w,c
 44625  005BEC  500B               	movf	(i2___aodiv@divisor+2)^0,w,c
 44626  005BEE  5803               	subwfb	(i2___aodiv@dividend+2)^0,w,c
 44627  005BF0  500C               	movf	(i2___aodiv@divisor+3)^0,w,c
 44628  005BF2  5804               	subwfb	(i2___aodiv@dividend+3)^0,w,c
 44629  005BF4  500D               	movf	(i2___aodiv@divisor+4)^0,w,c
 44630  005BF6  5805               	subwfb	(i2___aodiv@dividend+4)^0,w,c
 44631  005BF8  500E               	movf	(i2___aodiv@divisor+5)^0,w,c
 44632  005BFA  5806               	subwfb	(i2___aodiv@dividend+5)^0,w,c
 44633  005BFC  500F               	movf	(i2___aodiv@divisor+6)^0,w,c
 44634  005BFE  5807               	subwfb	(i2___aodiv@dividend+6)^0,w,c
 44635  005C00  5010               	movf	(i2___aodiv@divisor+7)^0,w,c
 44636  005C02  5808               	subwfb	(i2___aodiv@dividend+7)^0,w,c
 44637  005C04  A0D8               	btfss	status,0,c
 44638  005C06  D011               	goto	i2l17029
 44639  005C08  5009               	movf	i2___aodiv@divisor^0,w,c
 44640  005C0A  5E01               	subwf	i2___aodiv@dividend^0,f,c
 44641  005C0C  500A               	movf	(i2___aodiv@divisor+1)^0,w,c
 44642  005C0E  5A02               	subwfb	(i2___aodiv@dividend+1)^0,f,c
 44643  005C10  500B               	movf	(i2___aodiv@divisor+2)^0,w,c
 44644  005C12  5A03               	subwfb	(i2___aodiv@dividend+2)^0,f,c
 44645  005C14  500C               	movf	(i2___aodiv@divisor+3)^0,w,c
 44646  005C16  5A04               	subwfb	(i2___aodiv@dividend+3)^0,f,c
 44647  005C18  500D               	movf	(i2___aodiv@divisor+4)^0,w,c
 44648  005C1A  5A05               	subwfb	(i2___aodiv@dividend+4)^0,f,c
 44649  005C1C  500E               	movf	(i2___aodiv@divisor+5)^0,w,c
 44650  005C1E  5A06               	subwfb	(i2___aodiv@dividend+5)^0,f,c
 44651  005C20  500F               	movf	(i2___aodiv@divisor+6)^0,w,c
 44652  005C22  5A07               	subwfb	(i2___aodiv@dividend+6)^0,f,c
 44653  005C24  5010               	movf	(i2___aodiv@divisor+7)^0,w,c
 44654  005C26  5A08               	subwfb	(i2___aodiv@dividend+7)^0,f,c
 44655  005C28  8013               	bsf	i2___aodiv@quotient^0,0,c
 44656  005C2A                     i2l17029:
 44657  005C2A  90D8               	bcf	status,0,c
 44658  005C2C  3210               	rrcf	(i2___aodiv@divisor+7)^0,f,c
 44659  005C2E  320F               	rrcf	(i2___aodiv@divisor+6)^0,f,c
 44660  005C30  320E               	rrcf	(i2___aodiv@divisor+5)^0,f,c
 44661  005C32  320D               	rrcf	(i2___aodiv@divisor+4)^0,f,c
 44662  005C34  320C               	rrcf	(i2___aodiv@divisor+3)^0,f,c
 44663  005C36  320B               	rrcf	(i2___aodiv@divisor+2)^0,f,c
 44664  005C38  320A               	rrcf	(i2___aodiv@divisor+1)^0,f,c
 44665  005C3A  3209               	rrcf	i2___aodiv@divisor^0,f,c
 44666  005C3C  2E11               	decfsz	i2___aodiv@counter^0,f,c
 44667  005C3E  D7C9               	goto	i2u1562_40
 44668  005C40                     i2l17033:
 44669  005C40  5012               	movf	i2___aodiv@sign^0,w,c
 44670  005C42  B4D8               	btfsc	status,2,c
 44671  005C44  D010               	goto	i2l17037
 44672  005C46  1E1A               	comf	(i2___aodiv@quotient+7)^0,f,c
 44673  005C48  1E19               	comf	(i2___aodiv@quotient+6)^0,f,c
 44674  005C4A  1E18               	comf	(i2___aodiv@quotient+5)^0,f,c
 44675  005C4C  1E17               	comf	(i2___aodiv@quotient+4)^0,f,c
 44676  005C4E  1E16               	comf	(i2___aodiv@quotient+3)^0,f,c
 44677  005C50  1E15               	comf	(i2___aodiv@quotient+2)^0,f,c
 44678  005C52  1E14               	comf	(i2___aodiv@quotient+1)^0,f,c
 44679  005C54  6C13               	negf	i2___aodiv@quotient^0,c
 44680  005C56  0E00               	movlw	0
 44681  005C58  2214               	addwfc	(i2___aodiv@quotient+1)^0,f,c
 44682  005C5A  2215               	addwfc	(i2___aodiv@quotient+2)^0,f,c
 44683  005C5C  2216               	addwfc	(i2___aodiv@quotient+3)^0,f,c
 44684  005C5E  2217               	addwfc	(i2___aodiv@quotient+4)^0,f,c
 44685  005C60  2218               	addwfc	(i2___aodiv@quotient+5)^0,f,c
 44686  005C62  2219               	addwfc	(i2___aodiv@quotient+6)^0,f,c
 44687  005C64  221A               	addwfc	(i2___aodiv@quotient+7)^0,f,c
 44688  005C66                     i2l17037:
 44689  005C66  0060  F04C  F001   	movff	i2___aodiv@quotient,?i2___aodiv
 44690  005C6C  0060  F050  F002   	movff	i2___aodiv@quotient+1,?i2___aodiv+1
 44691  005C72  0060  F054  F003   	movff	i2___aodiv@quotient+2,?i2___aodiv+2
 44692  005C78  0060  F058  F004   	movff	i2___aodiv@quotient+3,?i2___aodiv+3
 44693  005C7E  0060  F05C  F005   	movff	i2___aodiv@quotient+4,?i2___aodiv+4
 44694  005C84  0060  F060  F006   	movff	i2___aodiv@quotient+5,?i2___aodiv+5
 44695  005C8A  0060  F064  F007   	movff	i2___aodiv@quotient+6,?i2___aodiv+6
 44696  005C90  0060  F068  F008   	movff	i2___aodiv@quotient+7,?i2___aodiv+7
 44697  005C96  0012               	return		;funcret
 44698  005C98                     __end_ofi2___aodiv:
 44699                           	opt callstack 0
 44700                           
 44701 ;; *************** function i2_ctoa *****************
 44702 ;; Defined at:
 44703 ;;		line 259 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 44704 ;; Parameters:    Size  Location     Type
 44705 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 44706 ;;		 -> i2sprintf@f(6), sprintf@f(6), NULL(0), 
 44707 ;;  c               1   31[COMRAM] unsigned char 
 44708 ;; Auto vars:     Size  Location     Type
 44709 ;;  ctoa            2   32[COMRAM] int 
 44710 ;;  ctoa            2    0        int 
 44711 ;; Return value:  Size  Location     Type
 44712 ;;                  2   29[COMRAM] int 
 44713 ;; Registers used:
 44714 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 44715 ;; Tracked objects:
 44716 ;;		On entry : 3F/0
 44717 ;;		On exit  : 0/0
 44718 ;;		Unchanged: 0/0
 44719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44720 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44721 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44723 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44724 ;;Total ram usage:        5 bytes
 44725 ;; Hardware stack levels used:    1
 44726 ;; Hardware stack levels required when called:    5
 44727 ;; This function calls:
 44728 ;;		i2_pad
 44729 ;; This function is called by:
 44730 ;;		i2_vfpfcnvrt
 44731 ;; This function uses a non-reentrant model
 44732 ;;
 44733                           
 44734                           	psect	text365
 44735  008AFC                     __ptext365:
 44736                           	opt callstack 0
 44737  008AFC                     i2_ctoa:
 44738                           	opt callstack 6
 44739                           
 44740                           ; BSR set to: 0
 44741                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa
      +                          (FILE *fp, char c);/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 26
      +                          0: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, 
      +                          w;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 264:     w = width
      +                           ? width - 1 : width;
 44742                           
 44743                           ;incstack = 0
 44744  008AFC  0101               	movlb	1	; () banked
 44745  008AFE  51C7               	movf	_width& (0+255),w,b
 44746  008B00  11C8               	iorwf	(_width+1)& (0+255),w,b
 44747  008B02  A4D8               	btfss	status,2,c
 44748  008B04  D007               	goto	i2l17141
 44749                           
 44750                           ; BSR set to: 1
 44751  008B06  0060  F71C  F021   	movff	_width,i2ctoa@w
 44752  008B0C  0060  F720  F022   	movff	_width+1,i2ctoa@w+1
 44753  008B12  D006               	goto	i2l17143
 44754  008B14                     i2l17141:
 44755                           
 44756                           ; BSR set to: 1
 44757  008B14  0EFF               	movlw	255
 44758  008B16  25C7               	addwf	_width& (0+255),w,b
 44759  008B18  6E21               	movwf	i2ctoa@w^0,c
 44760  008B1A  0EFF               	movlw	255
 44761  008B1C  21C8               	addwfc	(_width+1)& (0+255),w,b
 44762  008B1E  6E22               	movwf	(i2ctoa@w+1)^0,c
 44763  008B20                     i2l17143:
 44764                           
 44765                           ; BSR set to: 1
 44766                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c
      +                          ;
 44767  008B20  0060  F080  F389   	movff	i2ctoa@c,_dbuf
 44768                           
 44769                           ; BSR set to: 1
 44770                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '
      +                          \0';
 44771  008B26  0E00               	movlw	0
 44772  008B28  0103               	movlb	3	; () banked
 44773  008B2A  6F8A               	movwf	(_dbuf+1)& (0+255),b
 44774                           
 44775                           ; BSR set to: 3
 44776                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(
      +                          fp, &dbuf[0], w);
 44777  008B2C  0060  F078  F013   	movff	i2ctoa@fp,i2pad@fp
 44778  008B32  0060  F07C  F014   	movff	i2ctoa@fp+1,i2pad@fp+1
 44779  008B38  0E89               	movlw	low _dbuf
 44780  008B3A  6E15               	movwf	i2pad@buf^0,c
 44781  008B3C  0E03               	movlw	high _dbuf
 44782  008B3E  6E16               	movwf	(i2pad@buf+1)^0,c
 44783  008B40  0060  F084  F017   	movff	i2ctoa@w,i2pad@p
 44784  008B46  0060  F088  F018   	movff	i2ctoa@w+1,i2pad@p+1
 44785  008B4C  EC2B  F038         	call	i2_pad	;wreg free
 44786  008B50  0060  F04C  F01E   	movff	?i2_pad,?i2_ctoa
 44787  008B56  0060  F050  F01F   	movff	?i2_pad+1,?i2_ctoa+1
 44788  008B5C  0012               	return		;funcret
 44789  008B5E                     __end_ofi2_ctoa:
 44790                           	opt callstack 0
 44791                           
 44792 ;; *************** function i2_pad *****************
 44793 ;; Defined at:
 44794 ;;		line 72 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 44795 ;; Parameters:    Size  Location     Type
 44796 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
 44797 ;;		 -> i2sprintf@f(6), sprintf@f(6), NULL(0), 
 44798 ;;  buf             2   20[COMRAM] PTR unsigned char 
 44799 ;;		 -> dbuf(32), 
 44800 ;;  p               2   22[COMRAM] int 
 44801 ;; Auto vars:     Size  Location     Type
 44802 ;;  pad             2   27[COMRAM] int 
 44803 ;;  pad             2   25[COMRAM] int 
 44804 ;; Return value:  Size  Location     Type
 44805 ;;                  2   18[COMRAM] int 
 44806 ;; Registers used:
 44807 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 44808 ;; Tracked objects:
 44809 ;;		On entry : 0/1
 44810 ;;		On exit  : 0/0
 44811 ;;		Unchanged: 0/0
 44812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44813 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44814 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44815 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44816 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44817 ;;Total ram usage:       11 bytes
 44818 ;; Hardware stack levels used:    1
 44819 ;; Hardware stack levels required when called:    4
 44820 ;; This function calls:
 44821 ;;		i2_fputc
 44822 ;;		i2_fputs
 44823 ;;		i2_strlen
 44824 ;; This function is called by:
 44825 ;;		i2_ctoa
 44826 ;;		i2_dtoa
 44827 ;;		i2_xtoa
 44828 ;; This function uses a non-reentrant model
 44829 ;;
 44830                           
 44831                           	psect	text366
 44832  007056                     __ptext366:
 44833                           	opt callstack 0
 44834  007056                     i2_pad:
 44835                           	opt callstack 6
 44836                           
 44837                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(F
      +                          ILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.10/pic/sources/c99/common/dopr
      +                          nt.c: 73: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     i
      +                          nt i, w;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 77:     if (
      +                          flags & (1 << 0)) {
 44838                           
 44839                           ;incstack = 0
 44840  007056  0101               	movlb	1	; () banked
 44841  007058  A1CB               	btfss	_flags& (0+255),0,b
 44842  00705A  D00E               	goto	i2l16973
 44843                           
 44844                           ; BSR set to: 1
 44845                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((c
      +                          onst char *)buf, fp);
 44846  00705C  0060  F054  F00C   	movff	i2pad@buf,i2fputs@s
 44847  007062  0060  F058  F00D   	movff	i2pad@buf+1,i2fputs@s+1
 44848  007068  0060  F04C  F00E   	movff	i2pad@fp,i2fputs@fp
 44849  00706E  0060  F050  F00F   	movff	i2pad@fp+1,i2fputs@fp+1
 44850  007074  EC6D  F04A         	call	i2_fputs	;wreg free
 44851  007078                     i2l16973:
 44852                           
 44853                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) 
      +                          ? 0 : p;
 44854  007078  BE18               	btfsc	(i2pad@p+1)^0,7,c
 44855  00707A  D007               	goto	i2l16977
 44856  00707C  0060  F05C  F01C   	movff	i2pad@p,i2pad@w
 44857  007082  0060  F060  F01D   	movff	i2pad@p+1,i2pad@w+1
 44858  007088  D004               	goto	i2l3473
 44859  00708A                     i2l16977:
 44860  00708A  0E00               	movlw	0
 44861  00708C  6E1D               	movwf	(i2pad@w+1)^0,c
 44862  00708E  0E00               	movlw	0
 44863  007090  6E1C               	movwf	i2pad@w^0,c
 44864  007092                     i2l3473:
 44865                           
 44866                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 44867  007092  0E00               	movlw	0
 44868  007094  6E1B               	movwf	(i2pad@i+1)^0,c
 44869  007096  0E00               	movlw	0
 44870  007098  6E1A               	movwf	i2pad@i^0,c
 44871                           
 44872                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
 44873  00709A  D00E               	goto	i2l16983
 44874  00709C                     i2l16979:
 44875                           
 44876                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' 
      +                          ', fp);
 44877  00709C  0E00               	movlw	0
 44878  00709E  6E04               	movwf	(i2fputc@c+1)^0,c
 44879  0070A0  0E20               	movlw	32
 44880  0070A2  6E03               	movwf	i2fputc@c^0,c
 44881  0070A4  0060  F04C  F005   	movff	i2pad@fp,i2fputc@fp
 44882  0070AA  0060  F050  F006   	movff	i2pad@fp+1,i2fputc@fp+1
 44883  0070B0  EC41  F03A         	call	i2_fputc	;wreg free
 44884                           
 44885                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 44886  0070B4  4A1A               	infsnz	i2pad@i^0,f,c
 44887  0070B6  2A1B               	incf	(i2pad@i+1)^0,f,c
 44888  0070B8                     i2l16983:
 44889                           
 44890                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
 44891  0070B8  501C               	movf	i2pad@w^0,w,c
 44892  0070BA  5C1A               	subwf	i2pad@i^0,w,c
 44893  0070BC  501B               	movf	(i2pad@i+1)^0,w,c
 44894  0070BE  0A80               	xorlw	128
 44895  0070C0  6E19               	movwf	??i2_pad^0,c
 44896  0070C2  501D               	movf	(i2pad@w+1)^0,w,c
 44897  0070C4  0A80               	xorlw	128
 44898  0070C6  5819               	subwfb	??i2_pad^0,w,c
 44899  0070C8  A0D8               	btfss	status,0,c
 44900  0070CA  D7E8               	goto	i2l16979
 44901                           
 44902                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags 
      +                          & (1 << 0))) {
 44903  0070CC  0101               	movlb	1	; () banked
 44904  0070CE  B1CB               	btfsc	_flags& (0+255),0,b
 44905  0070D0  D00E               	goto	i2l16987
 44906                           
 44907                           ; BSR set to: 1
 44908                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((c
      +                          onst char *)buf, fp);
 44909  0070D2  0060  F054  F00C   	movff	i2pad@buf,i2fputs@s
 44910  0070D8  0060  F058  F00D   	movff	i2pad@buf+1,i2fputs@s+1
 44911  0070DE  0060  F04C  F00E   	movff	i2pad@fp,i2fputs@fp
 44912  0070E4  0060  F050  F00F   	movff	i2pad@fp+1,i2fputs@fp+1
 44913  0070EA  EC6D  F04A         	call	i2_fputs	;wreg free
 44914  0070EE                     i2l16987:
 44915                           
 44916                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strle
      +                          n(buf) + w;
 44917  0070EE  0060  F054  F001   	movff	i2pad@buf,i2strlen@s
 44918  0070F4  0060  F058  F002   	movff	i2pad@buf+1,i2strlen@s+1
 44919  0070FA  EC2B  F048         	call	i2_strlen	;wreg free
 44920  0070FE  501C               	movf	i2pad@w^0,w,c
 44921  007100  2401               	addwf	?i2_strlen^0,w,c
 44922  007102  6E13               	movwf	?i2_pad^0,c
 44923  007104  501D               	movf	(i2pad@w+1)^0,w,c
 44924  007106  2002               	addwfc	(?i2_strlen+1)^0,w,c
 44925  007108  6E14               	movwf	(?i2_pad+1)^0,c
 44926  00710A  0012               	return		;funcret
 44927  00710C                     __end_ofi2_pad:
 44928                           	opt callstack 0
 44929                           
 44930 ;; *************** function i2_strlen *****************
 44931 ;; Defined at:
 44932 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 44933 ;; Parameters:    Size  Location     Type
 44934 ;;  s               2    0[COMRAM] PTR const unsigned char 
 44935 ;;		 -> i2stoa@nuls(7), ?_printf(2), ?_sprintf(2), stoa@nuls(7), 
 44936 ;;		 -> dbuf(32), adcVOffset(2), adcOffset(2), STR_29(3), 
 44937 ;;		 -> STR_28(3), STR_27(3), STR_26(3), alarmData(399), 
 44938 ;;		 -> msg3(20), STR_11(3), msg2(20), msg1(20), 
 44939 ;;		 -> msg4(20), LCDTest@msg2(17), LCDTest@msg1(17), STR_6(17), 
 44940 ;;		 -> STR_5(17), 
 44941 ;; Auto vars:     Size  Location     Type
 44942 ;;  strlen          2    2[COMRAM] PTR const unsigned char 
 44943 ;;		 -> i2stoa@nuls(7), ?_printf(2), ?_sprintf(2), stoa@nuls(7), 
 44944 ;;		 -> dbuf(32), adcVOffset(2), adcOffset(2), STR_29(3), 
 44945 ;;		 -> STR_28(3), STR_27(3), STR_26(3), alarmData(399), 
 44946 ;;		 -> msg3(20), STR_11(3), msg2(20), msg1(20), 
 44947 ;;		 -> msg4(20), LCDTest@msg2(17), LCDTest@msg1(17), STR_6(17), 
 44948 ;;		 -> STR_5(17), 
 44949 ;; Return value:  Size  Location     Type
 44950 ;;                  2    0[COMRAM] unsigned int 
 44951 ;; Registers used:
 44952 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 44953 ;; Tracked objects:
 44954 ;;		On entry : 0/1
 44955 ;;		On exit  : 0/0
 44956 ;;		Unchanged: 0/0
 44957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44958 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44959 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44961 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44962 ;;Total ram usage:        4 bytes
 44963 ;; Hardware stack levels used:    1
 44964 ;; This function calls:
 44965 ;;		Nothing
 44966 ;; This function is called by:
 44967 ;;		i2_pad
 44968 ;;		i2_stoa
 44969 ;; This function uses a non-reentrant model
 44970 ;;
 44971                           
 44972                           	psect	text367
 44973  009056                     __ptext367:
 44974                           	opt callstack 0
 44975  009056                     i2_strlen:
 44976                           	opt callstack 9
 44977                           
 44978                           ;incstack = 0
 44979  009056  0060  F004  F003   	movff	i2strlen@s,i2strlen@a
 44980  00905C  0060  F008  F004   	movff	i2strlen@s+1,i2strlen@a+1
 44981  009062  D002               	goto	i2l16943
 44982  009064                     i2l16941:
 44983  009064  4A01               	infsnz	i2strlen@s^0,f,c
 44984  009066  2A02               	incf	(i2strlen@s+1)^0,f,c
 44985  009068                     i2l16943:
 44986  009068  0060  F007  FFF6   	movff	i2strlen@s,tblptrl
 44987  00906E  0060  F00B  FFF7   	movff	i2strlen@s+1,tblptrh
 44988  009074  0E00               	movlw	low (__mediumconst shr (0+16))
 44989  009076  6EF8               	movwf	tblptru,c
 44990  009078  0E0F               	movlw	(high __ramtop+-1)
 44991  00907A  64F7               	cpfsgt	tblptrh,c
 44992  00907C  D003               	bra	i2u1546_47
 44993  00907E  0008               	tblrd		*
 44994  009080  50F5               	movf	tablat,w,c
 44995  009082  D007               	bra	i2u1546_40
 44996  009084                     i2u1546_47:
 44997  009084  006F FFDB FFE1     	movff	tblptrl,fsr1l
 44998  00908A  006F FFDF FFE2     	movff	tblptrh,fsr1h
 44999  009090  50E7               	movf	indf1,w,c
 45000  009092                     i2u1546_40:
 45001  009092  0900               	iorlw	0
 45002  009094  A4D8               	btfss	status,2,c
 45003  009096  D7E6               	goto	i2l16941
 45004  009098  5003               	movf	i2strlen@a^0,w,c
 45005  00909A  5C01               	subwf	i2strlen@s^0,w,c
 45006  00909C  6E01               	movwf	?i2_strlen^0,c
 45007  00909E  5004               	movf	(i2strlen@a+1)^0,w,c
 45008  0090A0  5802               	subwfb	(i2strlen@s+1)^0,w,c
 45009  0090A2  6E02               	movwf	(?i2_strlen+1)^0,c
 45010  0090A4  0012               	return		;funcret
 45011  0090A6                     __end_ofi2_strlen:
 45012                           	opt callstack 0
 45013                           
 45014 ;; *************** function i2_fputs *****************
 45015 ;; Defined at:
 45016 ;;		line 8 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 45017 ;; Parameters:    Size  Location     Type
 45018 ;;  s               2   11[COMRAM] PTR const unsigned char 
 45019 ;;		 -> dbuf(32), 
 45020 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
 45021 ;;		 -> i2sprintf@f(6), sprintf@f(6), NULL(0), 
 45022 ;; Auto vars:     Size  Location     Type
 45023 ;;  fputs           2   16[COMRAM] int 
 45024 ;;  fputs           1   15[COMRAM] unsigned char 
 45025 ;; Return value:  Size  Location     Type
 45026 ;;                  2   11[COMRAM] int 
 45027 ;; Registers used:
 45028 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 45029 ;; Tracked objects:
 45030 ;;		On entry : 3F/1
 45031 ;;		On exit  : 0/0
 45032 ;;		Unchanged: 0/0
 45033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45034 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45035 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45037 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45038 ;;Total ram usage:        7 bytes
 45039 ;; Hardware stack levels used:    1
 45040 ;; Hardware stack levels required when called:    3
 45041 ;; This function calls:
 45042 ;;		i2_fputc
 45043 ;; This function is called by:
 45044 ;;		i2_pad
 45045 ;; This function uses a non-reentrant model
 45046 ;;
 45047                           
 45048                           	psect	text368
 45049  0094DA                     __ptext368:
 45050                           	opt callstack 0
 45051  0094DA                     i2_fputs:
 45052                           	opt callstack 6
 45053                           
 45054                           ; BSR set to: 1
 45055                           
 45056                           ;incstack = 0
 45057  0094DA  0E00               	movlw	0
 45058  0094DC  6E12               	movwf	(i2fputs@i+1)^0,c
 45059  0094DE  0E00               	movlw	0
 45060  0094E0  6E11               	movwf	i2fputs@i^0,c
 45061  0094E2  D00E               	goto	i2l16937
 45062  0094E4                     i2l16933:
 45063  0094E4  0060  F040  F003   	movff	i2fputs@c,i2fputc@c
 45064  0094EA  6A04               	clrf	(i2fputc@c+1)^0,c
 45065  0094EC  0060  F038  F005   	movff	i2fputs@fp,i2fputc@fp
 45066  0094F2  0060  F03C  F006   	movff	i2fputs@fp+1,i2fputc@fp+1
 45067  0094F8  EC41  F03A         	call	i2_fputc	;wreg free
 45068  0094FC  4A11               	infsnz	i2fputs@i^0,f,c
 45069  0094FE  2A12               	incf	(i2fputs@i+1)^0,f,c
 45070  009500                     i2l16937:
 45071  009500  5011               	movf	i2fputs@i^0,w,c
 45072  009502  240C               	addwf	i2fputs@s^0,w,c
 45073  009504  6ED9               	movwf	fsr2l,c
 45074  009506  5012               	movf	(i2fputs@i+1)^0,w,c
 45075  009508  200D               	addwfc	(i2fputs@s+1)^0,w,c
 45076  00950A  6EDA               	movwf	fsr2h,c
 45077  00950C  50DF               	movf	indf2,w,c
 45078  00950E  6E10               	movwf	i2fputs@c^0,c
 45079  009510  5010               	movf	i2fputs@c^0,w,c
 45080  009512  B4D8               	btfsc	status,2,c
 45081  009514  0012               	return	
 45082  009516  D7E6               	goto	i2l16933
 45083  009518                     __end_ofi2_fputs:
 45084                           	opt callstack 0
 45085                           
 45086 ;; *************** function i2_fputc *****************
 45087 ;; Defined at:
 45088 ;;		line 8 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 45089 ;; Parameters:    Size  Location     Type
 45090 ;;  c               2    2[COMRAM] int 
 45091 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
 45092 ;;		 -> i2sprintf@f(6), sprintf@f(6), NULL(0), 
 45093 ;; Auto vars:     Size  Location     Type
 45094 ;;		None
 45095 ;; Return value:  Size  Location     Type
 45096 ;;                  2    2[COMRAM] int 
 45097 ;; Registers used:
 45098 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 45099 ;; Tracked objects:
 45100 ;;		On entry : 0/1
 45101 ;;		On exit  : 0/0
 45102 ;;		Unchanged: 0/0
 45103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45104 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45106 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45107 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45108 ;;Total ram usage:        9 bytes
 45109 ;; Hardware stack levels used:    1
 45110 ;; Hardware stack levels required when called:    2
 45111 ;; This function calls:
 45112 ;;		i2_putch
 45113 ;; This function is called by:
 45114 ;;		i2_pad
 45115 ;;		i2_stoa
 45116 ;;		i2_vfpfcnvrt
 45117 ;;		i2_fputs
 45118 ;; This function uses a non-reentrant model
 45119 ;;
 45120                           
 45121                           	psect	text369
 45122  007482                     __ptext369:
 45123                           	opt callstack 0
 45124  007482                     i2_fputc:
 45125                           	opt callstack 6
 45126                           
 45127                           ;incstack = 0
 45128  007482  5005               	movf	i2fputc@fp^0,w,c
 45129  007484  1006               	iorwf	(i2fputc@fp+1)^0,w,c
 45130  007486  B4D8               	btfsc	status,2,c
 45131  007488  D004               	goto	i2u1542_40
 45132  00748A  5005               	movf	i2fputc@fp^0,w,c
 45133  00748C  1006               	iorwf	(i2fputc@fp+1)^0,w,c
 45134  00748E  A4D8               	btfss	status,2,c
 45135  007490  D004               	goto	i2l16921
 45136  007492                     i2u1542_40:
 45137  007492  5003               	movf	i2fputc@c^0,w,c
 45138  007494  EC54  F052         	call	i2_putch
 45139  007498  0012               	return	
 45140  00749A                     i2l16921:
 45141  00749A  EE20 F004          	lfsr	2,4
 45142  00749E  5005               	movf	i2fputc@fp^0,w,c
 45143  0074A0  26D9               	addwf	fsr2l,f,c
 45144  0074A2  5006               	movf	(i2fputc@fp+1)^0,w,c
 45145  0074A4  22DA               	addwfc	fsr2h,f,c
 45146  0074A6  50DE               	movf	postinc2,w,c
 45147  0074A8  10DE               	iorwf	postinc2,w,c
 45148  0074AA  B4D8               	btfsc	status,2,c
 45149  0074AC  D016               	goto	i2u1544_40
 45150  0074AE  EE20 F004          	lfsr	2,4
 45151  0074B2  5005               	movf	i2fputc@fp^0,w,c
 45152  0074B4  26D9               	addwf	fsr2l,f,c
 45153  0074B6  5006               	movf	(i2fputc@fp+1)^0,w,c
 45154  0074B8  22DA               	addwfc	fsr2h,f,c
 45155  0074BA  EE10 F002          	lfsr	1,2
 45156  0074BE  5005               	movf	i2fputc@fp^0,w,c
 45157  0074C0  26E1               	addwf	fsr1l,f,c
 45158  0074C2  5006               	movf	(i2fputc@fp+1)^0,w,c
 45159  0074C4  22E2               	addwfc	fsr1h,f,c
 45160  0074C6  50DE               	movf	postinc2,w,c
 45161  0074C8  5CE6               	subwf	postinc1,w,c
 45162  0074CA  50E6               	movf	postinc1,w,c
 45163  0074CC  0A80               	xorlw	128
 45164  0074CE  6E0B               	movwf	(??i2_fputc+4)^0,c
 45165  0074D0  50DE               	movf	postinc2,w,c
 45166  0074D2  0A80               	xorlw	128
 45167  0074D4  580B               	subwfb	(??i2_fputc+4)^0,w,c
 45168  0074D6  B0D8               	btfsc	status,0,c
 45169  0074D8  0012               	return	
 45170  0074DA                     i2u1544_40:
 45171  0074DA  EE20 F002          	lfsr	2,2
 45172  0074DE  5005               	movf	i2fputc@fp^0,w,c
 45173  0074E0  26D9               	addwf	fsr2l,f,c
 45174  0074E2  5006               	movf	(i2fputc@fp+1)^0,w,c
 45175  0074E4  22DA               	addwfc	fsr2h,f,c
 45176  0074E6  006F FF78  F007    	movff	postinc2,??i2_fputc
 45177  0074EC  006F FF74  F008    	movff	postdec2,??i2_fputc+1
 45178  0074F2  0060  F017  FFD9   	movff	i2fputc@fp,fsr2l
 45179  0074F8  0060  F01B  FFDA   	movff	i2fputc@fp+1,fsr2h
 45180  0074FE  006F FF78  F009    	movff	postinc2,??i2_fputc+2
 45181  007504  006F FF74  F00A    	movff	postdec2,??i2_fputc+3
 45182  00750A  5007               	movf	??i2_fputc^0,w,c
 45183  00750C  2409               	addwf	(??i2_fputc+2)^0,w,c
 45184  00750E  6ED9               	movwf	fsr2l,c
 45185  007510  5008               	movf	(??i2_fputc+1)^0,w,c
 45186  007512  200A               	addwfc	(??i2_fputc+3)^0,w,c
 45187  007514  6EDA               	movwf	fsr2h,c
 45188  007516  0060  F00F  FFDF   	movff	i2fputc@c,indf2
 45189  00751C  EE20 F002          	lfsr	2,2
 45190  007520  5005               	movf	i2fputc@fp^0,w,c
 45191  007522  26D9               	addwf	fsr2l,f,c
 45192  007524  5006               	movf	(i2fputc@fp+1)^0,w,c
 45193  007526  22DA               	addwfc	fsr2h,f,c
 45194  007528  2ADE               	incf	postinc2,f,c
 45195  00752A  0E00               	movlw	0
 45196  00752C  22DD               	addwfc	postdec2,f,c
 45197  00752E  0012               	return		;funcret
 45198  007530                     __end_ofi2_fputc:
 45199                           	opt callstack 0
 45200                           
 45201 ;; *************** function i2_putch *****************
 45202 ;; Defined at:
 45203 ;;		line 229 in file "mcc_generated_files/uart1.c"
 45204 ;; Parameters:    Size  Location     Type
 45205 ;;  txData          1    wreg     unsigned char 
 45206 ;; Auto vars:     Size  Location     Type
 45207 ;;  txData          1    1[COMRAM] unsigned char 
 45208 ;; Return value:  Size  Location     Type
 45209 ;;                  1    wreg      void 
 45210 ;; Registers used:
 45211 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 45212 ;; Tracked objects:
 45213 ;;		On entry : 0/1
 45214 ;;		On exit  : 3F/39
 45215 ;;		Unchanged: 0/0
 45216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45218 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45220 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45221 ;;Total ram usage:        1 bytes
 45222 ;; Hardware stack levels used:    1
 45223 ;; Hardware stack levels required when called:    1
 45224 ;; This function calls:
 45225 ;;		i2_UART1_Write
 45226 ;; This function is called by:
 45227 ;;		i2_fputc
 45228 ;; This function uses a non-reentrant model
 45229 ;;
 45230                           
 45231                           	psect	text370
 45232  00A4A8                     __ptext370:
 45233                           	opt callstack 0
 45234  00A4A8                     i2_putch:
 45235                           	opt callstack 6
 45236                           
 45237                           ;incstack = 0
 45238                           ;i2putch@txData stored from wreg
 45239  00A4A8  6E02               	movwf	i2putch@txData^0,c
 45240                           
 45241                           ;mcc_generated_files/uart1.c: 229: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          230: {;mcc_generated_files/uart1.c: 231:     UART1_Write(txData);
 45242  00A4AA  5002               	movf	i2putch@txData^0,w,c
 45243  00A4AC  ECBA  F046         	call	i2_UART1_Write
 45244                           
 45245                           ; BSR set to: 57
 45246  00A4B0  0012               	return		;funcret
 45247  00A4B2                     __end_ofi2_putch:
 45248                           	opt callstack 0
 45249                           
 45250 ;; *************** function i2_UART1_Write *****************
 45251 ;; Defined at:
 45252 ;;		line 201 in file "mcc_generated_files/uart1.c"
 45253 ;; Parameters:    Size  Location     Type
 45254 ;;  txData          1    wreg     unsigned char 
 45255 ;; Auto vars:     Size  Location     Type
 45256 ;;  txData          1    0[COMRAM] unsigned char 
 45257 ;; Return value:  Size  Location     Type
 45258 ;;                  1    wreg      void 
 45259 ;; Registers used:
 45260 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 45261 ;; Tracked objects:
 45262 ;;		On entry : 0/1
 45263 ;;		On exit  : 3F/39
 45264 ;;		Unchanged: 0/0
 45265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45267 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45269 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45270 ;;Total ram usage:        1 bytes
 45271 ;; Hardware stack levels used:    1
 45272 ;; This function calls:
 45273 ;;		Nothing
 45274 ;; This function is called by:
 45275 ;;		i2_putch
 45276 ;; This function uses a non-reentrant model
 45277 ;;
 45278                           
 45279                           	psect	text371
 45280  008D74                     __ptext371:
 45281                           	opt callstack 0
 45282  008D74                     i2_UART1_Write:
 45283                           	opt callstack 6
 45284                           
 45285                           ; BSR set to: 57
 45286                           ;incstack = 0
 45287                           ;i2UART1_Write@txData stored from wreg
 45288  008D74  6E01               	movwf	i2UART1_Write@txData^0,c
 45289  008D76                     
 45290                           ;mcc_generated_files/uart1.c: 203:     while(0 == uart1TxBufferRemaining)
 45291                           
 45292                           ;mcc_generated_files/uart1.c: 201: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 202: {;mcc_generated_files/uart1.c: 203:     while(0 == uart1TxBufferRemaining)
 45293  008D76  0102               	movlb	2	; () banked
 45294  008D78  51EB               	movf	_uart1TxBufferRemaining& (0+255),w,b	;volatile
 45295  008D7A  11EC               	iorwf	(_uart1TxBufferRemaining+1)& (0+255),w,b	;volatile
 45296  008D7C  B4D8               	btfsc	status,2,c
 45297  008D7E  D7FB               	goto	i2l16877
 45298                           
 45299                           ; BSR set to: 2
 45300                           ;mcc_generated_files/uart1.c: 207:     if(0 == PIE3bits.U1TXIE)
 45301  008D80  0139               	movlb	57	; () banked
 45302  008D82  B993               	btfsc	147,4,b	;volatile
 45303  008D84  D004               	goto	i2l657
 45304                           
 45305                           ; BSR set to: 57
 45306                           ;mcc_generated_files/uart1.c: 208:     {;mcc_generated_files/uart1.c: 209:         U1TXB
      +                           = txData;
 45307  008D86  0060  F007  FDEA   	movff	i2UART1_Write@txData,15850	;volatile
 45308                           
 45309                           ;mcc_generated_files/uart1.c: 210:     }
 45310  008D8C  D01B               	goto	i2l16893
 45311  008D8E                     i2l657:
 45312                           
 45313                           ; BSR set to: 57
 45314                           ;mcc_generated_files/uart1.c: 212:     {;mcc_generated_files/uart1.c: 213:         PIE3b
      +                          its.U1TXIE = 0;
 45315  008D8E  9993               	bcf	147,4,b	;volatile
 45316                           
 45317                           ; BSR set to: 57
 45318                           ;mcc_generated_files/uart1.c: 214:         uart1TxBuffer[uart1TxHead++] = txData;
 45319  008D90  0E64               	movlw	low _uart1TxBuffer
 45320  008D92  0101               	movlb	1	; () banked
 45321  008D94  25ED               	addwf	_uart1TxHead& (0+255),w,b	;volatile
 45322  008D96  6ED9               	movwf	fsr2l,c
 45323  008D98  0E04               	movlw	high _uart1TxBuffer
 45324  008D9A  21EE               	addwfc	(_uart1TxHead+1)& (0+255),w,b	;volatile
 45325  008D9C  6EDA               	movwf	fsr2h,c
 45326  008D9E  0060  F007  FFDF   	movff	i2UART1_Write@txData,indf2
 45327                           
 45328                           ; BSR set to: 1
 45329  008DA4  4BED               	infsnz	_uart1TxHead& (0+255),f,b	;volatile
 45330  008DA6  2BEE               	incf	(_uart1TxHead+1)& (0+255),f,b	;volatile
 45331                           
 45332                           ; BSR set to: 1
 45333                           ;mcc_generated_files/uart1.c: 215:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
 45334  008DA8  0EB0               	movlw	176
 45335  008DAA  5DED               	subwf	_uart1TxHead& (0+255),w,b	;volatile
 45336  008DAC  0E04               	movlw	4
 45337  008DAE  59EE               	subwfb	(_uart1TxHead+1)& (0+255),w,b	;volatile
 45338  008DB0  A0D8               	btfss	status,0,c
 45339  008DB2  D004               	goto	i2l16891
 45340                           
 45341                           ; BSR set to: 1
 45342                           ;mcc_generated_files/uart1.c: 216:         {;mcc_generated_files/uart1.c: 217:          
      +                             uart1TxHead = 0;
 45343  008DB4  0E00               	movlw	0
 45344  008DB6  6FEE               	movwf	(_uart1TxHead+1)& (0+255),b	;volatile
 45345  008DB8  0E00               	movlw	0
 45346  008DBA  6FED               	movwf	_uart1TxHead& (0+255),b	;volatile
 45347  008DBC                     i2l16891:
 45348                           
 45349                           ; BSR set to: 1
 45350                           ;mcc_generated_files/uart1.c: 219:         uart1TxBufferRemaining--;
 45351  008DBC  0102               	movlb	2	; () banked
 45352  008DBE  07EB               	decf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
 45353  008DC0  A0D8               	btfss	status,0,c
 45354  008DC2  07EC               	decf	(_uart1TxBufferRemaining+1)& (0+255),f,b	;volatile
 45355  008DC4                     i2l16893:
 45356                           
 45357                           ;mcc_generated_files/uart1.c: 221:     PIE3bits.U1TXIE = 1;
 45358  008DC4  0139               	movlb	57	; () banked
 45359  008DC6  8993               	bsf	147,4,b	;volatile
 45360                           
 45361                           ; BSR set to: 57
 45362  008DC8  0012               	return		;funcret
 45363  008DCA                     __end_ofi2_UART1_Write:
 45364                           	opt callstack 0
 45365                           
 45366 ;; *************** function i2_atoi *****************
 45367 ;; Defined at:
 45368 ;;		line 4 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 45369 ;; Parameters:    Size  Location     Type
 45370 ;;  s               2    7[COMRAM] PTR const unsigned char 
 45371 ;;		 -> STR_55(4), STR_54(4), STR_53(15), STR_52(16), 
 45372 ;;		 -> STR_51(32), STR_50(32), STR_49(13), STR_48(12), 
 45373 ;;		 -> STR_47(14), STR_46(4), STR_45(4), STR_44(2), 
 45374 ;;		 -> STR_43(10), STR_42(4), STR_41(55), STR_40(53), 
 45375 ;;		 -> STR_39(43), STR_38(54), STR_37(40), STR_36(36), 
 45376 ;;		 -> STR_35(41), STR_34(32), STR_33(65), STR_32(4), 
 45377 ;;		 -> STR_31(12), STR_30(4), STR_25(5), STR_24(3), 
 45378 ;;		 -> STR_23(7), STR_22(18), STR_21(15), STR_20(15), 
 45379 ;;		 -> STR_19(12), STR_18(5), STR_17(5), STR_16(5), 
 45380 ;;		 -> STR_15(5), STR_14(19), STR_13(8), STR_12(23), 
 45381 ;;		 -> STR_10(26), STR_9(17), STR_8(17), STR_7(15), 
 45382 ;;		 -> STR_4(45), STR_3(4), STR_2(15), STR_1(13), 
 45383 ;; Auto vars:     Size  Location     Type
 45384 ;;  atoi            2   20[COMRAM] int 
 45385 ;;  atoi            2   13[COMRAM] int 
 45386 ;; Return value:  Size  Location     Type
 45387 ;;                  2    7[COMRAM] int 
 45388 ;; Registers used:
 45389 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 45390 ;; Tracked objects:
 45391 ;;		On entry : 3F/1
 45392 ;;		On exit  : 0/0
 45393 ;;		Unchanged: 0/0
 45394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45395 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45396 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45397 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45398 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45399 ;;Total ram usage:       15 bytes
 45400 ;; Hardware stack levels used:    1
 45401 ;; Hardware stack levels required when called:    1
 45402 ;; This function calls:
 45403 ;;		i2___wmul
 45404 ;;		i2_isdigit
 45405 ;;		i2_isspace
 45406 ;; This function is called by:
 45407 ;;		i2_vfpfcnvrt
 45408 ;; This function uses a non-reentrant model
 45409 ;;
 45410                           
 45411                           	psect	text372
 45412  00570A                     __ptext372:
 45413                           	opt callstack 0
 45414  00570A                     i2_atoi:
 45415                           	opt callstack 10
 45416                           
 45417                           ; BSR set to: 1
 45418                           
 45419                           ; BSR set to: 57
 45420                           ;incstack = 0
 45421  00570A  0E00               	movlw	0
 45422  00570C  6E16               	movwf	(i2atoi@n+1)^0,c
 45423  00570E  0E00               	movlw	0
 45424  005710  6E15               	movwf	i2atoi@n^0,c
 45425  005712  0E00               	movlw	0
 45426  005714  6E0F               	movwf	(i2atoi@neg+1)^0,c
 45427  005716  0E00               	movlw	0
 45428  005718  6E0E               	movwf	i2atoi@neg^0,c
 45429  00571A  D002               	goto	i2l17325
 45430  00571C                     i2l17323:
 45431                           
 45432                           ; BSR set to: 1
 45433  00571C  4A08               	infsnz	i2atoi@s^0,f,c
 45434  00571E  2A09               	incf	(i2atoi@s+1)^0,f,c
 45435  005720                     i2l17325:
 45436                           
 45437                           ; BSR set to: 1
 45438  005720  0E01               	movlw	1
 45439  005722  6E14               	movwf	i2_atoi$5675^0,c
 45440                           
 45441                           ; BSR set to: 1
 45442  005724  0060  F023  FFF6   	movff	i2atoi@s,tblptrl
 45443  00572A  0060  F027  FFF7   	movff	i2atoi@s+1,tblptrh
 45444  005730                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 45445  005730  6AF8               	clrf	tblptru,c
 45446  005732                     	endif
 45447  005732                     	if	0	;tblptru may be non-zero
 45448  005732                     	endif
 45449  005732  0008               	tblrd		*
 45450  005734  50F5               	movf	tablat,w,c
 45451  005736  0A20               	xorlw	32
 45452  005738  B4D8               	btfsc	status,2,c
 45453  00573A  D01B               	goto	i2l17333
 45454                           
 45455                           ; BSR set to: 1
 45456  00573C  0EF7               	movlw	247
 45457  00573E  6E0A               	movwf	??i2_atoi^0,c
 45458  005740  0EFF               	movlw	255
 45459  005742  6E0B               	movwf	(??i2_atoi+1)^0,c
 45460  005744  0060  F023  FFF6   	movff	i2atoi@s,tblptrl
 45461  00574A  0060  F027  FFF7   	movff	i2atoi@s+1,tblptrh
 45462  005750                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 45463  005750  6AF8               	clrf	tblptru,c
 45464  005752                     	endif
 45465  005752                     	if	0	;tblptru may be non-zero
 45466  005752                     	endif
 45467  005752  0008               	tblrd		*
 45468  005754  50F5               	movf	tablat,w,c
 45469  005756  6E0C               	movwf	(??i2_atoi+2)^0,c
 45470  005758  6A0D               	clrf	(??i2_atoi+3)^0,c
 45471  00575A  500A               	movf	??i2_atoi^0,w,c
 45472  00575C  260C               	addwf	(??i2_atoi+2)^0,f,c
 45473  00575E  500B               	movf	(??i2_atoi+1)^0,w,c
 45474  005760  220D               	addwfc	(??i2_atoi+3)^0,f,c
 45475  005762  500D               	movf	(??i2_atoi+3)^0,w,c
 45476  005764  E104               	bnz	i2u1632_40
 45477  005766  0E05               	movlw	5
 45478  005768  5C0C               	subwf	(??i2_atoi+2)^0,w,c
 45479  00576A  A0D8               	btfss	status,0,c
 45480  00576C  D002               	goto	i2l17333
 45481  00576E                     i2u1632_40:
 45482                           
 45483                           ; BSR set to: 1
 45484  00576E  0E00               	movlw	0
 45485  005770  6E14               	movwf	i2_atoi$5675^0,c
 45486  005772                     i2l17333:
 45487                           
 45488                           ; BSR set to: 1
 45489  005772  0060  F050  F010   	movff	i2_atoi$5675,i2_atoi$5674
 45490  005778  6A11               	clrf	(i2_atoi$5674+1)^0,c
 45491                           
 45492                           ; BSR set to: 1
 45493  00577A  5010               	movf	i2_atoi$5674^0,w,c
 45494  00577C  1011               	iorwf	(i2_atoi$5674+1)^0,w,c
 45495  00577E  B4D8               	btfsc	status,2,c
 45496  005780  D008               	goto	i2l17343
 45497  005782  D7CC               	goto	i2l17323
 45498  005784                     i2l17339:
 45499                           
 45500                           ; BSR set to: 1
 45501  005784  0E00               	movlw	0
 45502  005786  6E0F               	movwf	(i2atoi@neg+1)^0,c
 45503  005788  0E01               	movlw	1
 45504  00578A  6E0E               	movwf	i2atoi@neg^0,c
 45505  00578C                     i2l17341:
 45506  00578C  4A08               	infsnz	i2atoi@s^0,f,c
 45507  00578E  2A09               	incf	(i2atoi@s+1)^0,f,c
 45508  005790  D036               	goto	i2l17349
 45509  005792                     i2l17343:
 45510                           
 45511                           ; BSR set to: 1
 45512  005792  0060  F023  FFF6   	movff	i2atoi@s,tblptrl
 45513  005798  0060  F027  FFF7   	movff	i2atoi@s+1,tblptrh
 45514  00579E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 45515  00579E  6AF8               	clrf	tblptru,c
 45516  0057A0                     	endif
 45517  0057A0                     	if	0	;tblptru may be non-zero
 45518  0057A0                     	endif
 45519  0057A0  0008               	tblrd		*
 45520  0057A2  50F5               	movf	tablat,w,c
 45521  0057A4  6E0A               	movwf	??i2_atoi^0,c
 45522  0057A6  6A0B               	clrf	(??i2_atoi+1)^0,c
 45523                           
 45524                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 45525                           ; Switch size 1, requested type "simple"
 45526                           ; Number of cases is 1, Range of values is 0 to 0
 45527                           ; switch strategies available:
 45528                           ; Name         Instructions Cycles
 45529                           ; simple_byte            4     3 (average)
 45530                           ;	Chosen strategy is simple_byte
 45531  0057A8  500B               	movf	(??i2_atoi+1)^0,w,c
 45532  0057AA  0A00               	xorlw	0	; case 0
 45533  0057AC  A4D8               	btfss	status,2,c
 45534  0057AE  D027               	goto	i2l17349
 45535                           
 45536                           ; BSR set to: 1
 45537                           ; Switch size 1, requested type "simple"
 45538                           ; Number of cases is 2, Range of values is 43 to 45
 45539                           ; switch strategies available:
 45540                           ; Name         Instructions Cycles
 45541                           ; simple_byte            7     4 (average)
 45542                           ;	Chosen strategy is simple_byte
 45543  0057B0  500A               	movf	??i2_atoi^0,w,c
 45544  0057B2  0A2B               	xorlw	43	; case 43
 45545  0057B4  B4D8               	btfsc	status,2,c
 45546  0057B6  D7EA               	goto	i2l17341
 45547  0057B8  0A06               	xorlw	6	; case 45
 45548  0057BA  B4D8               	btfsc	status,2,c
 45549  0057BC  D7E3               	goto	i2l17339
 45550  0057BE  D01F               	goto	i2l17349
 45551  0057C0                     i2l17345:
 45552  0057C0  0060  F054  F001   	movff	i2atoi@n,i2___wmul@multiplier
 45553  0057C6  0060  F058  F002   	movff	i2atoi@n+1,i2___wmul@multiplier+1
 45554  0057CC  0E00               	movlw	0
 45555  0057CE  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 45556  0057D0  0E0A               	movlw	10
 45557  0057D2  6E03               	movwf	i2___wmul@multiplicand^0,c
 45558  0057D4  EC06  F04D         	call	i2___wmul	;wreg free
 45559  0057D8  0060  F023  FFF6   	movff	i2atoi@s,tblptrl
 45560  0057DE  0060  F027  FFF7   	movff	i2atoi@s+1,tblptrh
 45561  0057E4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 45562  0057E4  6AF8               	clrf	tblptru,c
 45563  0057E6                     	endif
 45564  0057E6                     	if	0	;tblptru may be non-zero
 45565  0057E6                     	endif
 45566  0057E6  0008               	tblrd		*
 45567  0057E8  50F5               	movf	tablat,w,c
 45568  0057EA  5E01               	subwf	?i2___wmul^0,f,c
 45569  0057EC  0E00               	movlw	0
 45570  0057EE  5A02               	subwfb	(?i2___wmul+1)^0,f,c
 45571  0057F0  0E30               	movlw	48
 45572  0057F2  2401               	addwf	?i2___wmul^0,w,c
 45573  0057F4  6E15               	movwf	i2atoi@n^0,c
 45574  0057F6  0E00               	movlw	0
 45575  0057F8  2002               	addwfc	(?i2___wmul+1)^0,w,c
 45576  0057FA  6E16               	movwf	(i2atoi@n+1)^0,c
 45577  0057FC  D7C7               	goto	i2l17341
 45578  0057FE                     i2l17349:
 45579  0057FE  0ED0               	movlw	208
 45580  005800  6E0A               	movwf	??i2_atoi^0,c
 45581  005802  0EFF               	movlw	255
 45582  005804  6E0B               	movwf	(??i2_atoi+1)^0,c
 45583  005806  0060  F023  FFF6   	movff	i2atoi@s,tblptrl
 45584  00580C  0060  F027  FFF7   	movff	i2atoi@s+1,tblptrh
 45585  005812                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 45586  005812  6AF8               	clrf	tblptru,c
 45587  005814                     	endif
 45588  005814                     	if	0	;tblptru may be non-zero
 45589  005814                     	endif
 45590  005814  0008               	tblrd		*
 45591  005816  50F5               	movf	tablat,w,c
 45592  005818  6E0C               	movwf	(??i2_atoi+2)^0,c
 45593  00581A  6A0D               	clrf	(??i2_atoi+3)^0,c
 45594  00581C  500A               	movf	??i2_atoi^0,w,c
 45595  00581E  260C               	addwf	(??i2_atoi+2)^0,f,c
 45596  005820  500B               	movf	(??i2_atoi+1)^0,w,c
 45597  005822  220D               	addwfc	(??i2_atoi+3)^0,f,c
 45598  005824  500D               	movf	(??i2_atoi+3)^0,w,c
 45599  005826  E106               	bnz	i2u1634_40
 45600  005828  0E0A               	movlw	10
 45601  00582A  5C0C               	subwf	(??i2_atoi+2)^0,w,c
 45602  00582C  B0D8               	btfsc	status,0,c
 45603  00582E  D002               	goto	i2u1634_40
 45604  005830  0E01               	movlw	1
 45605  005832  D001               	goto	i2u1635_40
 45606  005834                     i2u1634_40:
 45607  005834  0E00               	movlw	0
 45608  005836                     i2u1635_40:
 45609  005836  6E12               	movwf	i2_atoi$5676^0,c
 45610  005838  6A13               	clrf	(i2_atoi$5676+1)^0,c
 45611  00583A  5012               	movf	i2_atoi$5676^0,w,c
 45612  00583C  1013               	iorwf	(i2_atoi$5676+1)^0,w,c
 45613  00583E  A4D8               	btfss	status,2,c
 45614  005840  D7BF               	goto	i2l17345
 45615  005842  500E               	movf	i2atoi@neg^0,w,c
 45616  005844  100F               	iorwf	(i2atoi@neg+1)^0,w,c
 45617  005846  A4D8               	btfss	status,2,c
 45618  005848  D011               	goto	i2l4314
 45619  00584A  0060  F054  F00A   	movff	i2atoi@n,??i2_atoi
 45620  005850  0060  F058  F00B   	movff	i2atoi@n+1,??i2_atoi+1
 45621  005856  1E0A               	comf	??i2_atoi^0,f,c
 45622  005858  1E0B               	comf	(??i2_atoi+1)^0,f,c
 45623  00585A  4A0A               	infsnz	??i2_atoi^0,f,c
 45624  00585C  2A0B               	incf	(??i2_atoi+1)^0,f,c
 45625  00585E  0060  F028  F008   	movff	??i2_atoi,?i2_atoi
 45626  005864  0060  F02C  F009   	movff	??i2_atoi+1,?i2_atoi+1
 45627  00586A  0012               	return	
 45628  00586C                     i2l4314:
 45629  00586C  0060  F054  F008   	movff	i2atoi@n,?i2_atoi
 45630  005872  0060  F058  F009   	movff	i2atoi@n+1,?i2_atoi+1
 45631  005878  0012               	return		;funcret
 45632  00587A                     __end_ofi2_atoi:
 45633                           	opt callstack 0
 45634                           
 45635 ;; *************** function i2_isspace *****************
 45636 ;; Defined at:
 45637 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 45638 ;; Parameters:    Size  Location     Type
 45639 ;;  c               2    0[COMRAM] int 
 45640 ;; Auto vars:     Size  Location     Type
 45641 ;;		None
 45642 ;; Return value:  Size  Location     Type
 45643 ;;                  2    0[COMRAM] int 
 45644 ;; Registers used:
 45645 ;;		wreg, status,2, status,0
 45646 ;; Tracked objects:
 45647 ;;		On entry : 0/0
 45648 ;;		On exit  : 0/0
 45649 ;;		Unchanged: 0/0
 45650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45651 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45652 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45653 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45654 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45655 ;;Total ram usage:        7 bytes
 45656 ;; Hardware stack levels used:    1
 45657 ;; This function calls:
 45658 ;;		Nothing
 45659 ;; This function is called by:
 45660 ;;		i2_atoi
 45661 ;; This function uses a non-reentrant model
 45662 ;;
 45663                           
 45664                           	psect	text373
 45665  009262                     __ptext373:
 45666                           	opt callstack 0
 45667  009262                     i2_isspace:
 45668                           	opt callstack 10
 45669                           
 45670                           ;incstack = 0
 45671  009262  0E01               	movlw	1
 45672  009264  6E07               	movwf	i2_isspace$5701^0,c
 45673  009266  0E20               	movlw	32
 45674  009268  1801               	xorwf	i2isspace@c^0,w,c
 45675  00926A  1002               	iorwf	(i2isspace@c+1)^0,w,c
 45676  00926C  B4D8               	btfsc	status,2,c
 45677  00926E  D016               	goto	i2l17097
 45678  009270  0EF7               	movlw	247
 45679  009272  6E03               	movwf	??i2_isspace^0,c
 45680  009274  0EFF               	movlw	255
 45681  009276  6E04               	movwf	(??i2_isspace+1)^0,c
 45682  009278  0060  F004  F005   	movff	i2isspace@c,??i2_isspace+2
 45683  00927E  0060  F008  F006   	movff	i2isspace@c+1,??i2_isspace+3
 45684  009284  5003               	movf	??i2_isspace^0,w,c
 45685  009286  2605               	addwf	(??i2_isspace+2)^0,f,c
 45686  009288  5004               	movf	(??i2_isspace+1)^0,w,c
 45687  00928A  2206               	addwfc	(??i2_isspace+3)^0,f,c
 45688  00928C  5006               	movf	(??i2_isspace+3)^0,w,c
 45689  00928E  E104               	bnz	i2u1577_40
 45690  009290  0E05               	movlw	5
 45691  009292  5C05               	subwf	(??i2_isspace+2)^0,w,c
 45692  009294  A0D8               	btfss	status,0,c
 45693  009296  D002               	goto	i2l17097
 45694  009298                     i2u1577_40:
 45695  009298  0E00               	movlw	0
 45696  00929A  6E07               	movwf	i2_isspace$5701^0,c
 45697  00929C                     i2l17097:
 45698  00929C  0060  F01C  F001   	movff	i2_isspace$5701,?i2_isspace
 45699  0092A2  6A02               	clrf	(?i2_isspace+1)^0,c
 45700  0092A4  0012               	return		;funcret
 45701  0092A6                     __end_ofi2_isspace:
 45702                           	opt callstack 0
 45703                           
 45704 ;; *************** function i2_isdigit *****************
 45705 ;; Defined at:
 45706 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 45707 ;; Parameters:    Size  Location     Type
 45708 ;;  c               2    0[COMRAM] int 
 45709 ;; Auto vars:     Size  Location     Type
 45710 ;;		None
 45711 ;; Return value:  Size  Location     Type
 45712 ;;                  2    0[COMRAM] int 
 45713 ;; Registers used:
 45714 ;;		wreg, status,2, status,0
 45715 ;; Tracked objects:
 45716 ;;		On entry : 0/0
 45717 ;;		On exit  : 0/0
 45718 ;;		Unchanged: 0/0
 45719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45720 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45722 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45723 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45724 ;;Total ram usage:        6 bytes
 45725 ;; Hardware stack levels used:    1
 45726 ;; This function calls:
 45727 ;;		Nothing
 45728 ;; This function is called by:
 45729 ;;		i2_vfpfcnvrt
 45730 ;;		i2_atoi
 45731 ;; This function uses a non-reentrant model
 45732 ;;
 45733                           
 45734                           	psect	text374
 45735  0097D4                     __ptext374:
 45736                           	opt callstack 0
 45737  0097D4                     i2_isdigit:
 45738                           	opt callstack 11
 45739                           
 45740                           ;incstack = 0
 45741  0097D4  0ED0               	movlw	208
 45742  0097D6  6E03               	movwf	??i2_isdigit^0,c
 45743  0097D8  0EFF               	movlw	255
 45744  0097DA  6E04               	movwf	(??i2_isdigit+1)^0,c
 45745  0097DC  0060  F004  F005   	movff	i2isdigit@c,??i2_isdigit+2
 45746  0097E2  0060  F008  F006   	movff	i2isdigit@c+1,??i2_isdigit+3
 45747  0097E8  5003               	movf	??i2_isdigit^0,w,c
 45748  0097EA  2605               	addwf	(??i2_isdigit+2)^0,f,c
 45749  0097EC  5004               	movf	(??i2_isdigit+1)^0,w,c
 45750  0097EE  2206               	addwfc	(??i2_isdigit+3)^0,f,c
 45751  0097F0  5006               	movf	(??i2_isdigit+3)^0,w,c
 45752  0097F2  E106               	bnz	i2u1574_40
 45753  0097F4  0E0A               	movlw	10
 45754  0097F6  5C05               	subwf	(??i2_isdigit+2)^0,w,c
 45755  0097F8  B0D8               	btfsc	status,0,c
 45756  0097FA  D002               	goto	i2u1574_40
 45757  0097FC  0E01               	movlw	1
 45758  0097FE  D001               	goto	i2u1575_40
 45759  009800                     i2u1574_40:
 45760  009800  0E00               	movlw	0
 45761  009802                     i2u1575_40:
 45762  009802  6E01               	movwf	?i2_isdigit^0,c
 45763  009804  6A02               	clrf	(?i2_isdigit+1)^0,c
 45764  009806  0012               	return		;funcret
 45765  009808                     __end_ofi2_isdigit:
 45766                           	opt callstack 0
 45767                           
 45768 ;; *************** function i2_AdcInit *****************
 45769 ;; Defined at:
 45770 ;;		line 57 in file "monitor.c"
 45771 ;; Parameters:    Size  Location     Type
 45772 ;;		None
 45773 ;; Auto vars:     Size  Location     Type
 45774 ;;		None
 45775 ;; Return value:  Size  Location     Type
 45776 ;;                  1    wreg      void 
 45777 ;; Registers used:
 45778 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 45779 ;; Tracked objects:
 45780 ;;		On entry : 7/1
 45781 ;;		On exit  : 3F/3E
 45782 ;;		Unchanged: 0/0
 45783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45788 ;;Total ram usage:        0 bytes
 45789 ;; Hardware stack levels used:    1
 45790 ;; Hardware stack levels required when called:    1
 45791 ;; This function calls:
 45792 ;;		i2_ADCC_SetADTIInterruptHandler
 45793 ;;		i2_ADCC_StartConversion
 45794 ;;		i2___wmul
 45795 ;; This function is called by:
 45796 ;;		_AdcHandler
 45797 ;; This function uses a non-reentrant model
 45798 ;;
 45799                           
 45800                           	psect	text375
 45801  0084CA                     __ptext375:
 45802                           	opt callstack 0
 45803  0084CA                     i2_AdcInit:
 45804                           	opt callstack 13
 45805                           
 45806                           ;monitor.c: 58:     currentChannel = 0;
 45807                           
 45808                           ;incstack = 0
 45809  0084CA  0E00               	movlw	0
 45810  0084CC  0101               	movlb	1	; () banked
 45811  0084CE  6FE6               	movwf	(_currentChannel+1)& (0+255),b
 45812  0084D0  0E00               	movlw	0
 45813  0084D2  6FE5               	movwf	_currentChannel& (0+255),b
 45814                           
 45815                           ; BSR set to: 1
 45816                           ;monitor.c: 59:     ADCC_SetADTIInterruptHandler(AdcHandler);
 45817  0084D4  0E50               	movlw	low _AdcHandler
 45818  0084D6  6E01               	movwf	i2ADCC_SetADTIInterruptHandler@InterruptHandler^0,c
 45819  0084D8  0E60               	movlw	high _AdcHandler
 45820  0084DA  6E02               	movwf	(i2ADCC_SetADTIInterruptHandler@InterruptHandler+1)^0,c
 45821  0084DC  ECE4  F051         	call	i2_ADCC_SetADTIInterruptHandler	;wreg free
 45822                           
 45823                           ;monitor.c: 62:     ADCON0bits.ADON = 0;
 45824  0084E0  013E               	movlb	62	; () banked
 45825  0084E2  9FF8               	bcf	248,7,b	;volatile
 45826                           
 45827                           ; BSR set to: 62
 45828                           ;monitor.c: 63:     ADREF = adcChannels[currentChannel].ref;
 45829  0084E4  0060  F794  F001   	movff	_currentChannel,i2___wmul@multiplier
 45830  0084EA  0060  F798  F002   	movff	_currentChannel+1,i2___wmul@multiplier+1
 45831  0084F0  0E00               	movlw	0
 45832  0084F2  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 45833  0084F4  0E05               	movlw	5
 45834  0084F6  6E03               	movwf	i2___wmul@multiplicand^0,c
 45835  0084F8  EC06  F04D         	call	i2___wmul	;wreg free
 45836  0084FC  0EC0               	movlw	low (_adcChannels+4)
 45837  0084FE  2401               	addwf	?i2___wmul^0,w,c
 45838  008500  6ED9               	movwf	fsr2l,c
 45839  008502  0E02               	movlw	high (_adcChannels+4)
 45840  008504  2002               	addwfc	(?i2___wmul+1)^0,w,c
 45841  008506  6EDA               	movwf	fsr2h,c
 45842  008508  50DF               	movf	indf2,w,c
 45843  00850A  013E               	movlb	62	; () banked
 45844  00850C  6FFD               	movwf	253,b	;volatile
 45845                           
 45846                           ; BSR set to: 62
 45847                           ;monitor.c: 64:     ADCC_StartConversion(adcChannels[currentChannel].ch);
 45848  00850E  0060  F794  F001   	movff	_currentChannel,i2___wmul@multiplier
 45849  008514  0060  F798  F002   	movff	_currentChannel+1,i2___wmul@multiplier+1
 45850  00851A  0E00               	movlw	0
 45851  00851C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 45852  00851E  0E05               	movlw	5
 45853  008520  6E03               	movwf	i2___wmul@multiplicand^0,c
 45854  008522  EC06  F04D         	call	i2___wmul	;wreg free
 45855  008526  0EBC               	movlw	low _adcChannels
 45856  008528  2401               	addwf	?i2___wmul^0,w,c
 45857  00852A  6ED9               	movwf	fsr2l,c
 45858  00852C  0E02               	movlw	high _adcChannels
 45859  00852E  2002               	addwfc	(?i2___wmul+1)^0,w,c
 45860  008530  6EDA               	movwf	fsr2h,c
 45861  008532  50DF               	movf	indf2,w,c
 45862  008534  ECE7  F050         	call	i2_ADCC_StartConversion
 45863                           
 45864                           ; BSR set to: 62
 45865  008538  0012               	return		;funcret
 45866  00853A                     __end_ofi2_AdcInit:
 45867                           	opt callstack 0
 45868                           
 45869 ;; *************** function i2___wmul *****************
 45870 ;; Defined at:
 45871 ;;		line 15 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/Umul16.c"
 45872 ;; Parameters:    Size  Location     Type
 45873 ;;  multiplier      2    0[COMRAM] unsigned int 
 45874 ;;  multiplicand    2    2[COMRAM] unsigned int 
 45875 ;; Auto vars:     Size  Location     Type
 45876 ;;  __wmul          2    4[COMRAM] unsigned int 
 45877 ;; Return value:  Size  Location     Type
 45878 ;;                  2    0[COMRAM] unsigned int 
 45879 ;; Registers used:
 45880 ;;		wreg, status,2, status,0, prodl, prodh
 45881 ;; Tracked objects:
 45882 ;;		On entry : 0/1
 45883 ;;		On exit  : 0/0
 45884 ;;		Unchanged: 0/0
 45885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45886 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45887 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45889 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45890 ;;Total ram usage:        6 bytes
 45891 ;; Hardware stack levels used:    1
 45892 ;; This function calls:
 45893 ;;		Nothing
 45894 ;; This function is called by:
 45895 ;;		_SetTarget
 45896 ;;		_MonitorPressureTask
 45897 ;;		i2_ValueDisplay
 45898 ;;		i2_HigherAlarm
 45899 ;;		i2_MuteAlarm
 45900 ;;		i2_AlarmUpdateLCD
 45901 ;;		i2_atoi
 45902 ;;		_AdcHandler
 45903 ;;		i2_AdcInit
 45904 ;;		i2_AdcGetData
 45905 ;;		_AdcReStartCycle
 45906 ;;		i2_AdcSeeData
 45907 ;;		i2_AdcDataReady
 45908 ;; This function uses a non-reentrant model
 45909 ;;
 45910                           
 45911                           	psect	text376
 45912  009A0C                     __ptext376:
 45913                           	opt callstack 0
 45914  009A0C                     i2___wmul:
 45915                           	opt callstack 10
 45916                           
 45917                           ; BSR set to: 62
 45918                           ;incstack = 0
 45919  009A0C  5001               	movf	i2___wmul@multiplier^0,w,c
 45920  009A0E  0203               	mulwf	i2___wmul@multiplicand^0,c
 45921  009A10  006F FFCC  F005    	movff	prodl,i2___wmul@product
 45922  009A16  006F FFD0  F006    	movff	prodh,i2___wmul@product+1
 45923  009A1C  5001               	movf	i2___wmul@multiplier^0,w,c
 45924  009A1E  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
 45925  009A20  50F3               	movf	243,w,c
 45926  009A22  2606               	addwf	(i2___wmul@product+1)^0,f,c
 45927  009A24  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
 45928  009A26  0203               	mulwf	i2___wmul@multiplicand^0,c
 45929  009A28  50F3               	movf	243,w,c
 45930  009A2A  2606               	addwf	(i2___wmul@product+1)^0,f,c
 45931  009A2C  0060  F014  F001   	movff	i2___wmul@product,?i2___wmul
 45932  009A32  0060  F018  F002   	movff	i2___wmul@product+1,?i2___wmul+1
 45933  009A38  0012               	return		;funcret
 45934  009A3A                     __end_ofi2___wmul:
 45935                           	opt callstack 0
 45936                           
 45937 ;; *************** function i2_ADCC_StartConversion *****************
 45938 ;; Defined at:
 45939 ;;		line 120 in file "mcc_generated_files/adcc.c"
 45940 ;; Parameters:    Size  Location     Type
 45941 ;;  channel         1    wreg     enum E16053
 45942 ;; Auto vars:     Size  Location     Type
 45943 ;;  channel         1    0[COMRAM] enum E16053
 45944 ;; Return value:  Size  Location     Type
 45945 ;;                  1    wreg      void 
 45946 ;; Registers used:
 45947 ;;		wreg
 45948 ;; Tracked objects:
 45949 ;;		On entry : 0/3E
 45950 ;;		On exit  : 3F/3E
 45951 ;;		Unchanged: 0/0
 45952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45954 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45956 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45957 ;;Total ram usage:        1 bytes
 45958 ;; Hardware stack levels used:    1
 45959 ;; This function calls:
 45960 ;;		Nothing
 45961 ;; This function is called by:
 45962 ;;		_AdcReStartCycle
 45963 ;;		_AdcHandler
 45964 ;;		i2_AdcInit
 45965 ;; This function uses a non-reentrant model
 45966 ;;
 45967                           
 45968                           	psect	text377
 45969  00A1CE                     __ptext377:
 45970                           	opt callstack 0
 45971  00A1CE                     i2_ADCC_StartConversion:
 45972                           	opt callstack 13
 45973                           
 45974                           ;incstack = 0
 45975                           ;i2ADCC_StartConversion@channel stored from wreg
 45976  00A1CE  6E01               	movwf	i2ADCC_StartConversion@channel^0,c
 45977                           
 45978                           ;mcc_generated_files/adcc.c: 120: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 121: {;mcc_generated_files/adcc.c: 123:     ADPCH = channel;
 45979  00A1D0  0060  F007  FEF1   	movff	i2ADCC_StartConversion@channel,16113	;volatile
 45980                           
 45981                           ;mcc_generated_files/adcc.c: 126:     ADCON0bits.ADON = 1;
 45982  00A1D6  013E               	movlb	62	; () banked
 45983  00A1D8  8FF8               	bsf	248,7,b	;volatile
 45984                           
 45985                           ; BSR set to: 62
 45986                           ;mcc_generated_files/adcc.c: 129:     ADCON0bits.ADGO = 1;
 45987  00A1DA  81F8               	bsf	248,0,b	;volatile
 45988                           
 45989                           ; BSR set to: 62
 45990  00A1DC  0012               	return		;funcret
 45991  00A1DE                     __end_ofi2_ADCC_StartConversion:
 45992                           	opt callstack 0
 45993                           
 45994 ;; *************** function i2_ADCC_Initialize *****************
 45995 ;; Defined at:
 45996 ;;		line 63 in file "mcc_generated_files/adcc.c"
 45997 ;; Parameters:    Size  Location     Type
 45998 ;;		None
 45999 ;; Auto vars:     Size  Location     Type
 46000 ;;		None
 46001 ;; Return value:  Size  Location     Type
 46002 ;;                  1    wreg      void 
 46003 ;; Registers used:
 46004 ;;		wreg, status,2, status,0, cstack
 46005 ;; Tracked objects:
 46006 ;;		On entry : 3F/2
 46007 ;;		On exit  : 7/1
 46008 ;;		Unchanged: 0/0
 46009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 46010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46014 ;;Total ram usage:        0 bytes
 46015 ;; Hardware stack levels used:    1
 46016 ;; Hardware stack levels required when called:    1
 46017 ;; This function calls:
 46018 ;;		i2_ADCC_SetADTIInterruptHandler
 46019 ;; This function is called by:
 46020 ;;		_AdcHandler
 46021 ;; This function uses a non-reentrant model
 46022 ;;
 46023                           
 46024                           	psect	text378
 46025  00875E                     __ptext378:
 46026                           	opt callstack 0
 46027  00875E                     i2_ADCC_Initialize:
 46028                           	opt callstack 13
 46029                           
 46030                           ; BSR set to: 2
 46031                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0xFF;
 46032                           
 46033                           ; BSR set to: 62
 46034                           ;incstack = 0
 46035  00875E  013E               	movlb	62	; () banked
 46036  008760  69DE               	setf	222,b	;volatile
 46037                           
 46038                           ; BSR set to: 62
 46039                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x7F;
 46040  008762  0E7F               	movlw	127
 46041  008764  6FDF               	movwf	223,b	;volatile
 46042                           
 46043                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
 46044  008766  0E00               	movlw	0
 46045  008768  6FE0               	movwf	224,b	;volatile
 46046                           
 46047                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x80;
 46048  00876A  0E80               	movlw	128
 46049  00876C  6FE1               	movwf	225,b	;volatile
 46050                           
 46051                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
 46052  00876E  0E00               	movlw	0
 46053  008770  6FE4               	movwf	228,b	;volatile
 46054                           
 46055                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
 46056  008772  0E00               	movlw	0
 46057  008774  6FE5               	movwf	229,b	;volatile
 46058                           
 46059                           ;mcc_generated_files/adcc.c: 79:     ADACCU = 0x00;
 46060  008776  0E00               	movlw	0
 46061  008778  6FEA               	movwf	234,b	;volatile
 46062                           
 46063                           ;mcc_generated_files/adcc.c: 81:     ADRPT = 0x10;
 46064  00877A  0E10               	movlw	16
 46065  00877C  6FEC               	movwf	236,b	;volatile
 46066                           
 46067                           ;mcc_generated_files/adcc.c: 83:     ADPCH = 0x00;
 46068  00877E  0E00               	movlw	0
 46069  008780  6FF1               	movwf	241,b	;volatile
 46070                           
 46071                           ;mcc_generated_files/adcc.c: 85:     ADACQL = 0x80;
 46072  008782  0E80               	movlw	128
 46073  008784  6FF3               	movwf	243,b	;volatile
 46074                           
 46075                           ;mcc_generated_files/adcc.c: 87:     ADACQH = 0x00;
 46076  008786  0E00               	movlw	0
 46077  008788  6FF4               	movwf	244,b	;volatile
 46078                           
 46079                           ;mcc_generated_files/adcc.c: 89:     ADCAP = 0x00;
 46080  00878A  0E00               	movlw	0
 46081  00878C  6FF5               	movwf	245,b	;volatile
 46082                           
 46083                           ;mcc_generated_files/adcc.c: 91:     ADPREL = 0x00;
 46084  00878E  0E00               	movlw	0
 46085  008790  6FF6               	movwf	246,b	;volatile
 46086                           
 46087                           ;mcc_generated_files/adcc.c: 93:     ADPREH = 0x00;
 46088  008792  0E00               	movlw	0
 46089  008794  6FF7               	movwf	247,b	;volatile
 46090                           
 46091                           ;mcc_generated_files/adcc.c: 95:     ADCON1 = 0x00;
 46092  008796  0E00               	movlw	0
 46093  008798  6FF9               	movwf	249,b	;volatile
 46094                           
 46095                           ;mcc_generated_files/adcc.c: 97:     ADCON2 = 0x43;
 46096  00879A  0E43               	movlw	67
 46097  00879C  6FFA               	movwf	250,b	;volatile
 46098                           
 46099                           ;mcc_generated_files/adcc.c: 99:     ADCON3 = 0x27;
 46100  00879E  0E27               	movlw	39
 46101  0087A0  6FFB               	movwf	251,b	;volatile
 46102                           
 46103                           ;mcc_generated_files/adcc.c: 101:     ADSTAT = 0x00;
 46104  0087A2  0E00               	movlw	0
 46105  0087A4  6FFC               	movwf	252,b	;volatile
 46106                           
 46107                           ;mcc_generated_files/adcc.c: 103:     ADREF = 0x03;
 46108  0087A6  0E03               	movlw	3
 46109  0087A8  6FFD               	movwf	253,b	;volatile
 46110                           
 46111                           ;mcc_generated_files/adcc.c: 105:     ADACT = 0x00;
 46112  0087AA  0E00               	movlw	0
 46113  0087AC  6FFE               	movwf	254,b	;volatile
 46114                           
 46115                           ;mcc_generated_files/adcc.c: 107:     ADCLK = 0x27;
 46116  0087AE  0E27               	movlw	39
 46117  0087B0  6FFF               	movwf	255,b	;volatile
 46118                           
 46119                           ;mcc_generated_files/adcc.c: 109:     ADCON0 = 0x84;
 46120  0087B2  0E84               	movlw	132
 46121  0087B4  6FF8               	movwf	248,b	;volatile
 46122                           
 46123                           ; BSR set to: 62
 46124                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADTIF = 0;
 46125  0087B6  0139               	movlb	57	; () banked
 46126  0087B8  97A1               	bcf	161,3,b	;volatile
 46127                           
 46128                           ; BSR set to: 57
 46129                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADTIE = 1;
 46130  0087BA  8791               	bsf	145,3,b	;volatile
 46131                           
 46132                           ; BSR set to: 57
 46133                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 46134  0087BC  0EFA               	movlw	low _ADCC_DefaultInterruptHandler
 46135  0087BE  6E01               	movwf	i2ADCC_SetADTIInterruptHandler@InterruptHandler^0,c
 46136  0087C0  0EA6               	movlw	high _ADCC_DefaultInterruptHandler
 46137  0087C2  6E02               	movwf	(i2ADCC_SetADTIInterruptHandler@InterruptHandler+1)^0,c
 46138  0087C4  ECE4  F051         	call	i2_ADCC_SetADTIInterruptHandler	;wreg free
 46139  0087C8  0012               	return		;funcret
 46140  0087CA                     __end_ofi2_ADCC_Initialize:
 46141                           	opt callstack 0
 46142                           
 46143 ;; *************** function i2_ADCC_SetADTIInterruptHandler *****************
 46144 ;; Defined at:
 46145 ;;		line 316 in file "mcc_generated_files/adcc.c"
 46146 ;; Parameters:    Size  Location     Type
 46147 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
 46148 ;;		 -> AdcHandler(1), ADCC_DefaultInterruptHandler(1), 
 46149 ;; Auto vars:     Size  Location     Type
 46150 ;;		None
 46151 ;; Return value:  Size  Location     Type
 46152 ;;                  1    wreg      void 
 46153 ;; Registers used:
 46154 ;;		wreg, status,2, status,0
 46155 ;; Tracked objects:
 46156 ;;		On entry : 7/1
 46157 ;;		On exit  : 7/1
 46158 ;;		Unchanged: 7/0
 46159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 46160 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46163 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46164 ;;Total ram usage:        2 bytes
 46165 ;; Hardware stack levels used:    1
 46166 ;; This function calls:
 46167 ;;		Nothing
 46168 ;; This function is called by:
 46169 ;;		i2_ADCC_Initialize
 46170 ;;		i2_AdcInit
 46171 ;; This function uses a non-reentrant model
 46172 ;;
 46173                           
 46174                           	psect	text379
 46175  00A3C8                     __ptext379:
 46176                           	opt callstack 0
 46177  00A3C8                     i2_ADCC_SetADTIInterruptHandler:
 46178                           	opt callstack 13
 46179                           
 46180                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 46181                           
 46182                           ;incstack = 0
 46183  00A3C8  0060  F004  F2F3   	movff	i2ADCC_SetADTIInterruptHandler@InterruptHandler,_ADCC_ADTI_InterruptHandler
 46184  00A3CE  0060  F008  F2F4   	movff	i2ADCC_SetADTIInterruptHandler@InterruptHandler+1,_ADCC_ADTI_InterruptHandler+1
 46185  00A3D4  0012               	return		;funcret
 46186  00A3D6                     __end_ofi2_ADCC_SetADTIInterruptHandler:
 46187                           	opt callstack 0
 46188                           
 46189 ;; *************** function _AdcReady *****************
 46190 ;; Defined at:
 46191 ;;		line 67 in file "monitor.c"
 46192 ;; Parameters:    Size  Location     Type
 46193 ;;		None
 46194 ;; Auto vars:     Size  Location     Type
 46195 ;;		None
 46196 ;; Return value:  Size  Location     Type
 46197 ;;                  1    wreg      _Bool 
 46198 ;; Registers used:
 46199 ;;		wreg, cstack
 46200 ;; Tracked objects:
 46201 ;;		On entry : 0/2
 46202 ;;		On exit  : 3F/3E
 46203 ;;		Unchanged: 0/0
 46204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 46205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46209 ;;Total ram usage:        0 bytes
 46210 ;; Hardware stack levels used:    1
 46211 ;; Hardware stack levels required when called:    1
 46212 ;; This function calls:
 46213 ;;		_ADCC_IsConversionDone
 46214 ;; This function is called by:
 46215 ;;		_AdcHandler
 46216 ;;		_MonitorPressureTask
 46217 ;; This function uses a non-reentrant model
 46218 ;;
 46219                           
 46220                           	psect	text380
 46221  00A670                     __ptext380:
 46222                           	opt callstack 0
 46223  00A670                     _AdcReady:
 46224                           	opt callstack 13
 46225                           
 46226                           ;monitor.c: 68:     return ADCC_IsConversionDone();
 46227                           
 46228                           ;incstack = 0
 46229  00A670  ECEB  F051         	call	_ADCC_IsConversionDone	;wreg free
 46230                           
 46231                           ; BSR set to: 62
 46232  00A674  0012               	return		;funcret
 46233  00A676                     __end_of_AdcReady:
 46234                           	opt callstack 0
 46235                           
 46236 ;; *************** function _ADCC_IsConversionDone *****************
 46237 ;; Defined at:
 46238 ;;		line 132 in file "mcc_generated_files/adcc.c"
 46239 ;; Parameters:    Size  Location     Type
 46240 ;;		None
 46241 ;; Auto vars:     Size  Location     Type
 46242 ;;		None
 46243 ;; Return value:  Size  Location     Type
 46244 ;;                  1    wreg      _Bool 
 46245 ;; Registers used:
 46246 ;;		wreg
 46247 ;; Tracked objects:
 46248 ;;		On entry : 0/2
 46249 ;;		On exit  : 3F/3E
 46250 ;;		Unchanged: 0/0
 46251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 46252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46256 ;;Total ram usage:        0 bytes
 46257 ;; Hardware stack levels used:    1
 46258 ;; This function calls:
 46259 ;;		Nothing
 46260 ;; This function is called by:
 46261 ;;		_AdcReady
 46262 ;; This function uses a non-reentrant model
 46263 ;;
 46264                           
 46265                           	psect	text381
 46266  00A3D6                     __ptext381:
 46267                           	opt callstack 0
 46268  00A3D6                     _ADCC_IsConversionDone:
 46269                           	opt callstack 13
 46270                           
 46271                           ;mcc_generated_files/adcc.c: 135:     return ((unsigned char)(!ADCON0bits.ADGO));
 46272                           
 46273                           ; BSR set to: 62
 46274                           ;incstack = 0
 46275  00A3D6  013E               	movlb	62	; () banked
 46276  00A3D8  B1F8               	btfsc	248,0,b	;volatile
 46277  00A3DA  D002               	goto	i2u1081_40
 46278  00A3DC  0E01               	movlw	1
 46279  00A3DE  0012               	return	
 46280  00A3E0                     i2u1081_40:
 46281  00A3E0  0E00               	movlw	0
 46282                           
 46283                           ; BSR set to: 62
 46284  00A3E2  0012               	return		;funcret
 46285  00A3E4                     __end_of_ADCC_IsConversionDone:
 46286                           	opt callstack 0
 46287                           
 46288 ;; *************** function _ADCC_GetConversionResult *****************
 46289 ;; Defined at:
 46290 ;;		line 138 in file "mcc_generated_files/adcc.c"
 46291 ;; Parameters:    Size  Location     Type
 46292 ;;		None
 46293 ;; Auto vars:     Size  Location     Type
 46294 ;;		None
 46295 ;; Return value:  Size  Location     Type
 46296 ;;                  2    0[COMRAM] unsigned short 
 46297 ;; Registers used:
 46298 ;;		wreg, status,2, status,0
 46299 ;; Tracked objects:
 46300 ;;		On entry : 0/3E
 46301 ;;		On exit  : 3F/3E
 46302 ;;		Unchanged: 0/0
 46303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 46304 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46306 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46307 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46308 ;;Total ram usage:        4 bytes
 46309 ;; Hardware stack levels used:    1
 46310 ;; This function calls:
 46311 ;;		Nothing
 46312 ;; This function is called by:
 46313 ;;		_AdcHandler
 46314 ;; This function uses a non-reentrant model
 46315 ;;
 46316                           
 46317                           	psect	text382
 46318  00A09A                     __ptext382:
 46319                           	opt callstack 0
 46320  00A09A                     _ADCC_GetConversionResult:
 46321                           	opt callstack 14
 46322                           
 46323                           ;mcc_generated_files/adcc.c: 141:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 46324                           
 46325                           ; BSR set to: 62
 46326                           ;incstack = 0
 46327  00A09A  013E               	movlb	62	; () banked
 46328  00A09C  51F0               	movf	240,w,b	;volatile
 46329  00A09E  6E04               	movwf	(??_ADCC_GetConversionResult+1)^0,c
 46330  00A0A0  6A03               	clrf	??_ADCC_GetConversionResult^0,c
 46331  00A0A2  51EF               	movf	239,w,b	;volatile
 46332  00A0A4  2403               	addwf	??_ADCC_GetConversionResult^0,w,c
 46333  00A0A6  6E01               	movwf	?_ADCC_GetConversionResult^0,c
 46334  00A0A8  0E00               	movlw	0
 46335  00A0AA  2004               	addwfc	(??_ADCC_GetConversionResult+1)^0,w,c
 46336  00A0AC  6E02               	movwf	(?_ADCC_GetConversionResult+1)^0,c
 46337                           
 46338                           ; BSR set to: 62
 46339  00A0AE  0012               	return		;funcret
 46340  00A0B0                     __end_of_ADCC_GetConversionResult:
 46341                           	opt callstack 0
 46342                           
 46343                           ;
 46344                           ; Interrupt Vector Table @ 0x8
 46345                           ;
 46346                           
 46347                           	psect	ivt0x8
 46348  000008                     __pivt0x8:
 46349                           	opt callstack 0
 46350  000008                     ivt0x8_base:
 46351                           	opt callstack 0
 46352                           
 46353                           ; high-priority vector
 46354  000008  EF06  F034         	goto	_INTERRUPT_InterruptManager
 46355  000018                     	org	16
 46356                           
 46357                           ; low-priority vector
 46358  000018  00FF               	reset	
 46359                           
 46360                           	psect	text383
 46361  000000                     __ptext383:
 46362                           	opt callstack 0
 46363                           
 46364                           	psect	rparam
 46365  0000                     tosu	equ	0x3FFF
 46366                           tosh	equ	0x3FFE
 46367                           tosl	equ	0x3FFD
 46368                           stkptr	equ	0x3FFC
 46369                           pclatu	equ	0x3FFB
 46370                           pclath	equ	0x3FFA
 46371                           pcl	equ	0x3FF9
 46372                           tblptru	equ	0x3FF8
 46373                           tblptrh	equ	0x3FF7
 46374                           tblptrl	equ	0x3FF6
 46375                           tablat	equ	0x3FF5
 46376                           prodh	equ	0x3FF4
 46377                           prodl	equ	0x3FF3
 46378                           indf0	equ	0x3FEF
 46379                           postinc0	equ	0x3FEE
 46380                           postdec0	equ	0x3FED
 46381                           preinc0	equ	0x3FEC
 46382                           plusw0	equ	0x3FEB
 46383                           fsr0h	equ	0x3FEA
 46384                           fsr0l	equ	0x3FE9
 46385                           wreg	equ	0x3FE8
 46386                           indf1	equ	0x3FE7
 46387                           postinc1	equ	0x3FE6
 46388                           postdec1	equ	0x3FE5
 46389                           preinc1	equ	0x3FE4
 46390                           plusw1	equ	0x3FE3
 46391                           fsr1h	equ	0x3FE2
 46392                           fsr1l	equ	0x3FE1
 46393                           bsr	equ	0x3FE0
 46394                           indf2	equ	0x3FDF
 46395                           postinc2	equ	0x3FDE
 46396                           postdec2	equ	0x3FDD
 46397                           preinc2	equ	0x3FDC
 46398                           plusw2	equ	0x3FDB
 46399                           fsr2h	equ	0x3FDA
 46400                           fsr2l	equ	0x3FD9
 46401                           status	equ	0x3FD8


Data Sizes:
    Strings     935
    Constant    0
    Data        432
    BSS         1842
    Persistent  28
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    104     160
    BANK1           256    199     252
    BANK2           256     11     256
    BANK3           256      1     250
    BANK4           256      0     100
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    i2_AlarmUpdateLCD$7132	PTR unsigned char [17] size(2) Largest target is 399
		 -> alarmData(BIGRAM[399]), 

    i2sprintf@f.buffer	PTR unsigned char  size(2) Largest target is 0
		 -> msg3(BANK3[20]), msg2(BANK3[20]), msg1(BANK3[20]), msg4(BANK3[20]), 

    AlarmCheckTask$6537	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NoPowerSupplyAlarm(), VBelowMinAlarm(), VAboveMaxAlarm(), TdeTooLongAlarm(), 
		 -> TdiTooLongAlarm(), IPAboveSetAlarm(), IPBelowSetAlarm(), EPAboveSetAlarm(), 
		 -> EPBelowSetAlarm(), BaterryLowAlarmHigh(), BaterryLowAlarmMed(), CircuitFailureAlarm(), 
		 -> VeryHighPressureAlarmHigh(), HighPressureAlarmHigh(), HighPressureAlarmLow(), GasFailureAlarm(), 
		 -> ControlFailAlarm(), MonitorFailAlarm(), BatteryFailAlarm(), 

    AlarmUpdateLCD$6532	PTR unsigned char [17] size(2) Largest target is 399
		 -> alarmData(BIGRAM[399]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), stoa@nuls(BANK1[7]), dbuf(BANK3[32]), 
		 -> adcVOffset(BANK1[2]), adcOffset(BANK1[2]), STR_29(CODE[3]), STR_28(CODE[3]), 
		 -> STR_27(CODE[3]), STR_26(CODE[3]), alarmData(BIGRAM[399]), msg3(BANK3[20]), 
		 -> STR_11(CODE[3]), msg2(BANK3[20]), msg1(BANK3[20]), msg4(BANK3[20]), 
		 -> LCDTest@msg2(BANK1[17]), LCDTest@msg1(BANK1[17]), STR_6(CODE[17]), STR_5(CODE[17]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), stoa@nuls(BANK1[7]), dbuf(BANK3[32]), 
		 -> adcVOffset(BANK1[2]), adcOffset(BANK1[2]), STR_29(CODE[3]), STR_28(CODE[3]), 
		 -> STR_27(CODE[3]), STR_26(CODE[3]), alarmData(BIGRAM[399]), msg3(BANK3[20]), 
		 -> STR_11(CODE[3]), msg2(BANK3[20]), msg1(BANK3[20]), msg4(BANK3[20]), 
		 -> LCDTest@msg2(BANK1[17]), LCDTest@msg1(BANK1[17]), STR_6(CODE[17]), STR_5(CODE[17]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 65
		 -> STR_55(CODE[4]), STR_54(CODE[4]), STR_53(CODE[15]), STR_52(CODE[16]), 
		 -> STR_51(CODE[32]), STR_50(CODE[32]), STR_49(CODE[13]), STR_48(CODE[12]), 
		 -> STR_47(CODE[14]), STR_46(CODE[4]), STR_45(CODE[4]), STR_44(CODE[2]), 
		 -> STR_43(CODE[10]), STR_42(CODE[4]), STR_41(CODE[55]), STR_40(CODE[53]), 
		 -> STR_39(CODE[43]), STR_38(CODE[54]), STR_37(CODE[40]), STR_36(CODE[36]), 
		 -> STR_35(CODE[41]), STR_34(CODE[32]), STR_33(CODE[65]), STR_32(CODE[4]), 
		 -> STR_31(CODE[12]), STR_30(CODE[4]), STR_25(CODE[5]), STR_24(CODE[3]), 
		 -> STR_23(CODE[7]), STR_22(CODE[18]), STR_21(CODE[15]), STR_20(CODE[15]), 
		 -> STR_19(CODE[12]), STR_18(CODE[5]), STR_17(CODE[5]), STR_16(CODE[5]), 
		 -> STR_15(CODE[5]), STR_14(CODE[19]), STR_4(CODE[45]), STR_3(CODE[4]), 
		 -> STR_2(CODE[15]), STR_1(CODE[13]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_13(CODE[8]), STR_12(CODE[23]), STR_10(CODE[26]), STR_9(CODE[17]), 
		 -> STR_8(CODE[17]), STR_7(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> msg3(BANK3[20]), msg2(BANK3[20]), msg1(BANK3[20]), msg4(BANK3[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> msg3(BANK3[20]), msg2(BANK3[20]), msg1(BANK3[20]), msg4(BANK3[20]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    S5714_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> msg3(BANK3[20]), msg2(BANK3[20]), msg1(BANK3[20]), msg4(BANK3[20]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> msg3(BANK3[20]), msg2(BANK3[20]), msg1(BANK3[20]), msg4(BANK3[20]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 65
		 -> STR_55(CODE[4]), STR_54(CODE[4]), STR_53(CODE[15]), STR_52(CODE[16]), 
		 -> STR_51(CODE[32]), STR_50(CODE[32]), STR_49(CODE[13]), STR_48(CODE[12]), 
		 -> STR_47(CODE[14]), STR_46(CODE[4]), STR_45(CODE[4]), STR_44(CODE[2]), 
		 -> STR_43(CODE[10]), STR_42(CODE[4]), STR_41(CODE[55]), STR_40(CODE[53]), 
		 -> STR_39(CODE[43]), STR_38(CODE[54]), STR_37(CODE[40]), STR_36(CODE[36]), 
		 -> STR_35(CODE[41]), STR_34(CODE[32]), STR_33(CODE[65]), STR_32(CODE[4]), 
		 -> STR_31(CODE[12]), STR_30(CODE[4]), STR_25(CODE[5]), STR_24(CODE[3]), 
		 -> STR_23(CODE[7]), STR_22(CODE[18]), STR_21(CODE[15]), STR_20(CODE[15]), 
		 -> STR_19(CODE[12]), STR_18(CODE[5]), STR_17(CODE[5]), STR_16(CODE[5]), 
		 -> STR_15(CODE[5]), STR_14(CODE[19]), STR_13(CODE[8]), STR_12(CODE[23]), 
		 -> STR_10(CODE[26]), STR_9(CODE[17]), STR_8(CODE[17]), STR_7(CODE[15]), 
		 -> STR_4(CODE[45]), STR_3(CODE[4]), STR_2(CODE[15]), STR_1(CODE[13]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 1
		 -> printf@ap(BANK1[2]), sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 65
		 -> STR_55(CODE[4]), STR_54(CODE[4]), STR_53(CODE[15]), STR_52(CODE[16]), 
		 -> STR_51(CODE[32]), STR_50(CODE[32]), STR_49(CODE[13]), STR_48(CODE[12]), 
		 -> STR_47(CODE[14]), STR_46(CODE[4]), STR_45(CODE[4]), STR_44(CODE[2]), 
		 -> STR_43(CODE[10]), STR_42(CODE[4]), STR_41(CODE[55]), STR_40(CODE[53]), 
		 -> STR_39(CODE[43]), STR_38(CODE[54]), STR_37(CODE[40]), STR_36(CODE[36]), 
		 -> STR_35(CODE[41]), STR_34(CODE[32]), STR_33(CODE[65]), STR_32(CODE[4]), 
		 -> STR_31(CODE[12]), STR_30(CODE[4]), STR_25(CODE[5]), STR_24(CODE[3]), 
		 -> STR_23(CODE[7]), STR_22(CODE[18]), STR_21(CODE[15]), STR_20(CODE[15]), 
		 -> STR_19(CODE[12]), STR_18(CODE[5]), STR_17(CODE[5]), STR_16(CODE[5]), 
		 -> STR_15(CODE[5]), STR_14(CODE[19]), STR_13(CODE[8]), STR_12(CODE[23]), 
		 -> STR_10(CODE[26]), STR_9(CODE[17]), STR_8(CODE[17]), STR_7(CODE[15]), 
		 -> STR_4(CODE[45]), STR_3(CODE[4]), STR_2(CODE[15]), STR_1(CODE[13]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 65
		 -> STR_55(CODE[4]), STR_54(CODE[4]), STR_53(CODE[15]), STR_52(CODE[16]), 
		 -> STR_51(CODE[32]), STR_50(CODE[32]), STR_49(CODE[13]), STR_48(CODE[12]), 
		 -> STR_47(CODE[14]), STR_46(CODE[4]), STR_45(CODE[4]), STR_44(CODE[2]), 
		 -> STR_43(CODE[10]), STR_42(CODE[4]), STR_41(CODE[55]), STR_40(CODE[53]), 
		 -> STR_39(CODE[43]), STR_38(CODE[54]), STR_37(CODE[40]), STR_36(CODE[36]), 
		 -> STR_35(CODE[41]), STR_34(CODE[32]), STR_33(CODE[65]), STR_32(CODE[4]), 
		 -> STR_31(CODE[12]), STR_30(CODE[4]), STR_25(CODE[5]), STR_24(CODE[3]), 
		 -> STR_23(CODE[7]), STR_22(CODE[18]), STR_21(CODE[15]), STR_20(CODE[15]), 
		 -> STR_19(CODE[12]), STR_18(CODE[5]), STR_17(CODE[5]), STR_16(CODE[5]), 
		 -> STR_15(CODE[5]), STR_14(CODE[19]), STR_13(CODE[8]), STR_12(CODE[23]), 
		 -> STR_10(CODE[26]), STR_9(CODE[17]), STR_8(CODE[17]), STR_7(CODE[15]), 
		 -> STR_4(CODE[45]), STR_3(CODE[4]), STR_2(CODE[15]), STR_1(CODE[13]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), adcVOffset(BANK1[2]), adcOffset(BANK1[2]), 
		 -> STR_29(CODE[3]), STR_28(CODE[3]), STR_27(CODE[3]), STR_26(CODE[3]), 
		 -> alarmData(BIGRAM[399]), STR_11(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> printf@ap(BANK1[2]), sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), adcVOffset(BANK1[2]), adcOffset(BANK1[2]), 
		 -> STR_29(CODE[3]), STR_28(CODE[3]), STR_27(CODE[3]), STR_26(CODE[3]), 
		 -> alarmData(BIGRAM[399]), STR_11(CODE[3]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), stoa@nuls(BANK1[7]), adcVOffset(BANK1[2]), 
		 -> adcOffset(BANK1[2]), STR_29(CODE[3]), STR_28(CODE[3]), STR_27(CODE[3]), 
		 -> STR_26(CODE[3]), alarmData(BIGRAM[399]), STR_11(CODE[3]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK3[32]), 

    alarmData.func	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NoPowerSupplyAlarm(), VBelowMinAlarm(), VAboveMaxAlarm(), TdeTooLongAlarm(), 
		 -> TdiTooLongAlarm(), IPAboveSetAlarm(), IPBelowSetAlarm(), EPAboveSetAlarm(), 
		 -> EPBelowSetAlarm(), BaterryLowAlarmHigh(), BaterryLowAlarmMed(), CircuitFailureAlarm(), 
		 -> VeryHighPressureAlarmHigh(), HighPressureAlarmHigh(), HighPressureAlarmLow(), GasFailureAlarm(), 
		 -> ControlFailAlarm(), MonitorFailAlarm(), BatteryFailAlarm(), 

    S4382alarm$func	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NoPowerSupplyAlarm(), VBelowMinAlarm(), VAboveMaxAlarm(), TdeTooLongAlarm(), 
		 -> TdiTooLongAlarm(), IPAboveSetAlarm(), IPBelowSetAlarm(), EPAboveSetAlarm(), 
		 -> EPBelowSetAlarm(), BaterryLowAlarmHigh(), BaterryLowAlarmMed(), CircuitFailureAlarm(), 
		 -> VeryHighPressureAlarmHigh(), HighPressureAlarmHigh(), HighPressureAlarmLow(), GasFailureAlarm(), 
		 -> ControlFailAlarm(), MonitorFailAlarm(), BatteryFailAlarm(), 

    a.func	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NoPowerSupplyAlarm(), VBelowMinAlarm(), VAboveMaxAlarm(), TdeTooLongAlarm(), 
		 -> TdiTooLongAlarm(), IPAboveSetAlarm(), IPBelowSetAlarm(), EPAboveSetAlarm(), 
		 -> EPBelowSetAlarm(), BaterryLowAlarmHigh(), BaterryLowAlarmMed(), CircuitFailureAlarm(), 
		 -> VeryHighPressureAlarmHigh(), HighPressureAlarmHigh(), HighPressureAlarmLow(), GasFailureAlarm(), 
		 -> ControlFailAlarm(), MonitorFailAlarm(), BatteryFailAlarm(), 

    AlarmDisplay@alarm	PTR unsigned char  size(2) Largest target is 399
		 -> alarmData(BIGRAM[399]), 

    ValueDisplay$4007	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_29(CODE[3]), STR_28(CODE[3]), STR_27(CODE[3]), STR_26(CODE[3]), 
		 -> STR_11(CODE[3]), 

    sp__GetAlarmState	PTR unsigned char  size(2) Largest target is 3
		 -> STR_29(CODE[3]), STR_28(CODE[3]), STR_27(CODE[3]), STR_26(CODE[3]), 

    LCDMessage2@str	PTR unsigned char  size(2) Largest target is 20
		 -> msg2(BANK3[20]), msg4(BANK3[20]), 

    LCDMessage12@str2	PTR unsigned char  size(2) Largest target is 20
		 -> msg3(BANK3[20]), msg2(BANK3[20]), LCDTest@msg2(BANK1[17]), 

    LCDMessage12@str1	PTR unsigned char  size(2) Largest target is 20
		 -> msg1(BANK3[20]), LCDTest@msg1(BANK1[17]), 

    LCDMessage1@str	PTR unsigned char  size(2) Largest target is 20
		 -> msg1(BANK3[20]), 

    LCDMessage@str	PTR unsigned char  size(2) Largest target is 20
		 -> msg3(BANK3[20]), msg2(BANK3[20]), msg1(BANK3[20]), msg4(BANK3[20]), 
		 -> LCDTest@msg2(BANK1[17]), LCDTest@msg1(BANK1[17]), STR_6(CODE[17]), STR_5(CODE[17]), 

    CMP1_SetIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> BuzzerCMPHandler(), 

    CMP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> BuzzerCMPHandler(), Absolute function(), 

    I2C2_SlaveSetBusColIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C2_SlaveDefBusColInterruptHandler(), 

    I2C2_SlaveBusColInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C2_SlaveDefBusColInterruptHandler(), Absolute function(), 

    I2C2_SlaveSetWrColIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C2_SlaveDefWrColInterruptHandler(), 

    I2C2_SlaveWrColInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C2_SlaveDefWrColInterruptHandler(), Absolute function(), 

    I2C2_SlaveSetAddrIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C2_SlaveDefAddrInterruptHandler(), 

    I2C2_SlaveAddrInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C2_SlaveDefAddrInterruptHandler(), Absolute function(), 

    I2C2_SlaveSetStopIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> StopHandler(), 

    I2C2_SlaveStopInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> StopHandler(), Absolute function(), 

    I2C2_SlaveSetWriteIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C2_SlaveDefWrInterruptHandler(), 

    I2C2_SlaveWrInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C2_SlaveDefWrInterruptHandler(), Absolute function(), 

    I2C2_SlaveSetReadIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> ReceiveHandler(), I2C2_SlaveDefRdInterruptHandler(), 

    I2C2_SlaveRdInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ReceiveHandler(), I2C2_SlaveDefRdInterruptHandler(), Absolute function(), 

    I2C2_SlaveSetIsrHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C2_Isr(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ControllerTimerHandler(), TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ControllerTimerHandler(), TMR6_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ButtonTask(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ButtonTask(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> MonitorPressureTask(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> MonitorPressureTask(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> AlarmHandler(), TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> AlarmHandler(), TMR5_DefaultInterruptHandler(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), Absolute function(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), Absolute function(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> BuzzerTestHandler(), BuzzerHandler(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> BuzzerTestHandler(), BuzzerHandler(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    I2C2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C2_Isr(), Absolute function(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> AdcHandler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> AdcHandler(), Absolute function(), ADCC_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _ControllerTimerHandler->i2_printf
    _TMR5_ISR->_AlarmHandler
    _AlarmHandler->i2_printf
    _BuzzerTestHandler->i2_printf
    _BuzzerHandler->i2_BuzzerTask
    i2_BuzzerTask->i2_printf
    _ButtonTask->i2_HistAlarm
    i2_MuteAlarm->i2_SetAlarmSV1
    i2_SetAlarmSV1->i2_printf
    i2_AlarmUpdateLCD->i2_AlarmDisplay
    i2_HigherAlarm->i2___wmul
    _TMR0_ISR->_MonitorPressureTask
    _MonitorPressureTask->i2_printf
    i2_See5V->i2___aldiv
    i2_See12V->i2___aldiv
    i2_AdcSeeData->i2___wmul
    i2_AdcDataReady->i2___wmul
    _GetPressure_mbar02->i2_GetPressure_pa
    _AdcReStartCycle->i2___wmul
    _I2C2_SlaveStopCallBack->_StopHandler
    _StopHandler->_UpdateState
    _UpdateState->i2_SetCalibrateState
    _UpdateState->i2_SetSV1
    i2_SetSV1->i2_printf
    i2_SetCalibrateState->i2_printf
    i2_GetPressure_pa->i2___aldiv
    i2_GetPressureV_pa->i2___awdiv
    i2_AdcGetData->i2___wmul
    _SetTarget->i2___aldiv
    i2___aldiv->i2___lmul
    i2_sprintf->i2_vfprintf
    i2_GetTargetIp->i2___awdiv
    i2_GetTargetEp->i2___awdiv
    i2_GetPmax->i2___awdiv
    i2_GetIp->i2___awdiv
    i2_GetEp->i2___awdiv
    i2___awdiv->i2___wmul
    i2_GetAlarmState->i2_AnyAlarm
    _I2C2_SlaveRdCallBack->_ReceiveHandler
    _BuzzerCMPHandler->i2_printf
    _AdcHandler->i2_printf
    i2_printf->i2_vfprintf
    i2_vfprintf->i2_vfpfcnvrt
    i2_vfpfcnvrt->i2_xtoa
    i2_xtoa->i2_pad
    i2_toupper->i2_islower
    i2_stoa->i2_fputc
    i2_dtoa->i2_pad
    i2_abs->i2___aomod
    i2_ctoa->i2_pad
    i2_pad->i2_fputs
    i2_fputs->i2_fputc
    i2_fputc->i2_putch
    i2_putch->i2_UART1_Write
    i2_atoi->i2_isspace
    i2_AdcInit->i2___wmul
    i2_ADCC_Initialize->i2_ADCC_SetADTIInterruptHandler

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _ControllerTimerHandler->i2_printf
    _AlarmHandler->i2_printf
    _BuzzerTestHandler->i2_printf
    i2_BuzzerTask->i2_printf
    _TMR1_ISR->_ButtonTask
    i2_MuteAlarm->i2_printf
    i2_SetAlarmSV1->i2_printf
    i2_HistAlarm->i2_AlarmUpdateLCD
    i2_AlarmUpdateLCD->i2_AlarmDisplay
    i2_AlarmDisplay->i2_ValueDisplay
    _TMR0_ISR->_MonitorPressureTask
    _MonitorPressureTask->_DisplayCalibrate
    _DisplayCalibrate->i2_sprintf
    _StopHandler->_UpdateState
    i2_SetSV1->i2_printf
    i2_SetCalibrateState->i2_printf
    _DisplayEnable->i2_ValueDisplay
    _DisplayDisable->i2_ValueDisplay
    i2_ValueDisplay->i2_sprintf
    _BuzzerCMPHandler->i2_printf
    _AdcHandler->i2_printf
    i2_vfprintf->i2_vfpfcnvrt

Critical Paths under _main in BANK1

    _getch->_UART1_Read
    _TestAlarm->_printf
    _putchar->_fputc
    _SetSV1->_printf
    _SetCalibrateState->_printf
    _GetPressure_pa->___aldiv
    _GetPressureV_pa->___awdiv
    _SeePressure_pa->___aldiv
    _SeePressureV_pa->___awdiv
    _SYSTEM_Initialize->_TMR1_Initialize
    _SYSTEM_Initialize->_TMR5_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _MuteAlarm->_SetAlarmSV1
    _AdcInit->___wmul
    _MonitorDump->_printf
    _See5V->___aldiv
    _See12V->___aldiv
    _AdcSeeData->___wmul
    _InitDisplay->_LCDInit
    _LCDInit->_LCDTest
    _LCDTest->_LCDMessage12
    _HistAlarm->_AlarmUpdateLCD
    _DisplayTask->_LCDMessage12
    _LCDMessage2->_LCDMessage
    _LCDMessage12->_LCDMessage
    _LCDMessage1->_LCDMessage
    _LCDMessage->_strlen
    _ControllerInit->_I2C2_SlaveSetReadIntHandler
    _ControllerInit->_I2C2_SlaveSetStopIntHandler
    _ControllerInit->_TMR6_SetInterruptHandler
    _I2C2_Open->_I2C2_SlaveSetAddrIntHandler
    _I2C2_Open->_I2C2_SlaveSetBusColIntHandler
    _I2C2_Open->_I2C2_SlaveSetIsrHandler
    _I2C2_Open->_I2C2_SlaveSetReadIntHandler
    _I2C2_Open->_I2C2_SlaveSetWrColIntHandler
    _I2C2_Open->_I2C2_SlaveSetWriteIntHandler
    _BuzzerTest->_TMR4_SetInterruptHandler
    _BuzzerCheck->_printf
    _ButtonInit->_TMR1_SetInterruptHandler
    _AlarmInit->_TMR5_SetInterruptHandler
    _BuzzerInit->_CMP1_SetIntHandler
    _BuzzerInit->_TMR4_SetInterruptHandler
    _AlarmCheckTask->_AlarmUpdateLCD
    _SetAlarmSV1->_printf
    _MonitorFailAlarm->_printf
    _Get5V->___aldiv
    _HighPressureAlarmLow->_GetMaxPressure
    _GetMaxPressure->___awdiv
    _BuzzerSet->_BuzzerTask
    _BuzzerTask->_printf
    _printf->_vfprintf
    _BatteryFailAlarm->_Get12V
    _Get12V->___aldiv
    ___aldiv->___lmul
    _AdcGetData->___wmul
    _AdcDataReady->___wmul
    _AlarmUpdateLCD->_AlarmDisplay
    _HigherAlarm->___wmul
    _AlarmDisplay->_ValueDisplay
    _ValueDisplay->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _stoa->_fputc
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART1_Write
    _atoi->_isspace
    _GetTargetIp->___awdiv
    _GetTargetEp->___awdiv
    _GetPmax->___awdiv
    _GetIp->___awdiv
    _GetEp->___awdiv
    ___awdiv->___wmul
    _GetAlarmState->_AnyAlarm

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_AlarmCheckTask

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0 1292641
                                            198 BANK1      1     1      0
                                              0 BANK3      1     1      0
                     _AlarmCheckTask
                          _AlarmInit
                         _ButtonInit
                        _BuzzerCheck
                         _BuzzerTest
                     _ControllerInit
                    _DisableAlarmSV1
                        _DisplayTask
                            _DumpI2C
                     _EnableAlarmSV1
                          _HistAlarm
                        _InitDisplay
                             _LCDOff
                              _LCDOn
                     _MonitorDisable
                        _MonitorDump
                      _MonitorEnable
                        _MonitorInit
                          _MuteAlarm
                  _SYSTEM_Initialize
                             _See12V
                              _See5V
                    _SeePressureV_pa
                     _SeePressure_pa
                        _SetAlarmSV1
                  _SetCalibrateState
                             _SetSV1
                          _TestAlarm
                  _UART1_is_rx_ready
                            ___llmod
                              _getch
                             _printf
 ---------------------------------------------------------------------------------
 (1) _getch                                                0     0      0      37
                         _UART1_Read
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           1     1      0      37
                                              4 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___llmod                                              9     1      8     412
                                              4 BANK1      9     1      8
 ---------------------------------------------------------------------------------
 (1) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TestAlarm                                            8     6      2   43918
                                            131 BANK1      8     6      2
                             _printf
                            _putchar
 ---------------------------------------------------------------------------------
 (2) _putchar                                              2     0      2    2085
                                             15 BANK1      2     0      2
                              _fputc
 ---------------------------------------------------------------------------------
 (1) _SetSV1                                               1     1      0   40865
                                            131 BANK1      1     1      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _SetCalibrateState                                    1     1      0   91640
                                            131 BANK1      1     1      0
                          _ClearVars
                    _GetPressureV_pa
                     _GetPressure_pa
                    _TMR0_StartTimer
                     _TMR0_StopTimer
                 _UnDisplayCalibrate
                            ___awdiv
                             _printf
 ---------------------------------------------------------------------------------
 (2) _UnDisplayCalibrate                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _GetPressure_pa                                      16    14      2   21581
                                             30 BANK1     16    14      2
                         _AdcGetData
                            ___aldiv
                            ___awdiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) _GetPressureV_pa                                     12    10      2   17832
                                             18 BANK1     12    10      2
                         _AdcGetData
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _SeePressure_pa                                      16    14      2   21519
                                             30 BANK1     16    14      2
                         _AdcSeeData
                            ___aldiv
                            ___awdiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _SeePressureV_pa                                     12    10      2   17736
                                             18 BANK1     12    10      2
                         _AdcSeeData
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2051
                    _ADCC_Initialize
                    _CMP1_Initialize
                     _FVR_Initialize
                    _I2C2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM6_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     605
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          2     0      2     121
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          2     0      2     121
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2     121
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2     121
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2     121
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     211
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0     211
                                              6 BANK1      2     2      0
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     391
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0     211
                                              6 BANK1      2     2      0
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
                       _CMP1_Disable
                        _CMP1_Enable
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _MuteAlarm                                            5     5      0   94185
                                            132 BANK1      5     5      0
                           _AnyAlarm
                        _BuzzerClear
           _ClearCircuitFailureAlarm
              _ClearControlFailAlarm
               _ClearGasFailureAlarm
         _ClearHighPressureAlarmHigh
              _ClearMonitorFailAlarm
     _ClearVeryHighPressureAlarmHigh
                        _HigherAlarm
                        _SetAlarmSV1
                             ___wmul
                             _printf
 ---------------------------------------------------------------------------------
 (2) _ClearVeryHighPressureAlarmHigh                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ClearHighPressureAlarmHigh                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ClearGasFailureAlarm                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ClearControlFailAlarm                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MonitorInit                                          0     0      0    6693
                            _AdcInit
                          _ClearVars
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (2) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     211
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ClearVars                                            4     4      0     260
                                              4 BANK1      4     4      0
           _ClearCircuitFailureAlarm
               _ClearEPAboveSetAlarm
               _ClearEPBelowSetAlarm
               _ClearIPAboveSetAlarm
               _ClearIPBelowSetAlarm
 ---------------------------------------------------------------------------------
 (3) _ClearIPBelowSetAlarm                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ClearIPAboveSetAlarm                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ClearEPBelowSetAlarm                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ClearEPAboveSetAlarm                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ClearCircuitFailureAlarm                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _AdcInit                                              0     0      0    6222
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _ADCC_StartConversion                                 1     1      0      31
                                              4 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADTIInterruptHandler                         2     0      2     211
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _MonitorEnable                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MonitorDump                                          0     0      0   70956
                             _See12V
                              _See5V
                            ___awdiv
                             _printf
 ---------------------------------------------------------------------------------
 (1) _See5V                                               10     8      2    8832
                                             30 BANK1     10     8      2
                         _AdcSeeData
                            ___aldiv
 ---------------------------------------------------------------------------------
 (1) _See12V                                              10     8      2   10188
                                             30 BANK1     10     8      2
                         _AdcSeeData
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) _AdcSeeData                                           4     2      2    6405
                                             10 BANK1      4     2      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _MonitorDisable                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDOn                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDOff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitDisplay                                          0     0      0    4588
                            _LCDInit
 ---------------------------------------------------------------------------------
 (2) _LCDInit                                              2     2      0    4588
                                             60 BANK1      2     2      0
                         _LCDMessage
                            _LCDTest
                          _LCDWrite4
                        _LCDWriteCmd
 ---------------------------------------------------------------------------------
 (3) _LCDWrite4                                            1     1      0     124
                                              4 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCDTest                                             40    40      0    2740
                                             20 BANK1     40    40      0
                       _LCDMessage12
 ---------------------------------------------------------------------------------
 (1) _HistAlarm                                            4     4      0  284036
                                              0 BANK2      4     4      0
                     _AlarmUpdateLCD
                    _TMR5_StartTimer
                     _TMR5_StopTimer
 ---------------------------------------------------------------------------------
 (2) _TMR5_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EnableAlarmSV1                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DumpI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DisplayTask                                          0     0      0    6106
                        _LCDMessage1
                       _LCDMessage12
                        _LCDMessage2
 ---------------------------------------------------------------------------------
 (2) _LCDMessage2                                          2     0      2    1935
                                             16 BANK1      2     0      2
                         _LCDMessage
                        _LCDWriteCmd
 ---------------------------------------------------------------------------------
 (4) _LCDMessage12                                         4     0      4    2326
                                             16 BANK1      4     0      4
                         _LCDMessage
                        _LCDWriteCmd
 ---------------------------------------------------------------------------------
 (2) _LCDMessage1                                          2     0      2    1845
                                             16 BANK1      2     0      2
                         _LCDMessage
                        _LCDWriteCmd
 ---------------------------------------------------------------------------------
 (3) _LCDWriteCmd                                          1     1      0     248
                                              4 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (5) _LCDMessage                                           8     6      2    1476
                                              8 BANK1      8     6      2
                       _LCDWriteChar
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _LCDWriteChar                                         1     1      0     248
                                              4 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DisableAlarmSV1                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ControllerInit                                       0     0      0    1421
                          _I2C2_Open
        _I2C2_SlaveSetReadIntHandler
        _I2C2_SlaveSetStopIntHandler
           _TMR6_SetInterruptHandler
                    _TMR6_StartTimer
 ---------------------------------------------------------------------------------
 (2) _TMR6_StartTimer                                      0     0      0       0
                         _TMR6_Start
 ---------------------------------------------------------------------------------
 (3) _TMR6_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             2     0      2     211
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C2_SlaveSetStopIntHandler                          2     0      2     121
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C2_Open                                            0     0      0     878
                _I2C2_SlaveEnableIrq
                     _I2C2_SlaveOpen
        _I2C2_SlaveSetAddrIntHandler
      _I2C2_SlaveSetBusColIntHandler
            _I2C2_SlaveSetIsrHandler
        _I2C2_SlaveSetReadIntHandler
             _I2C2_SlaveSetSlaveAddr
             _I2C2_SlaveSetSlaveMask
       _I2C2_SlaveSetWrColIntHandler
       _I2C2_SlaveSetWriteIntHandler
 ---------------------------------------------------------------------------------
 (3) _I2C2_SlaveSetWriteIntHandler                         2     0      2     121
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _I2C2_SlaveSetWrColIntHandler                         2     0      2     121
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _I2C2_SlaveSetSlaveMask                               1     1      0      31
                                              4 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C2_SlaveSetSlaveAddr                               1     1      0      31
                                              4 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C2_SlaveSetReadIntHandler                          2     0      2     211
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _I2C2_SlaveSetIsrHandler                              2     0      2     121
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _I2C2_SlaveSetBusColIntHandler                        2     0      2     121
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _I2C2_SlaveSetAddrIntHandler                          2     0      2     121
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _I2C2_SlaveOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C2_SlaveEnableIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BuzzerTest                                           3     3      0     484
                                              6 BANK1      3     3      0
                          _BuzzerOff
                           _BuzzerOn
                 _TMR4_Period8BitSet
           _TMR4_SetInterruptHandler
                         _TMR4_Start
 ---------------------------------------------------------------------------------
 (1) _BuzzerCheck                                          2     2      0   40772
                                            131 BANK1      2     2      0
                          _BuzzerOff
                           _BuzzerOn
                _SetMonitorFailAlarm
                             _printf
 ---------------------------------------------------------------------------------
 (1) _ButtonInit                                           0     0      0     211
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (2) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     211
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _AlarmInit                                            2     2      0     853
                                              6 BANK1      2     2      0
                         _BuzzerInit
           _TMR5_SetInterruptHandler
                    _TMR5_StartTimer
 ---------------------------------------------------------------------------------
 (2) _TMR5_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             2     0      2     211
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _BuzzerInit                                           0     0      0     512
                          _BuzzerOff
                 _CMP1_SetIntHandler
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _CMP1_SetIntHandler                                   2     0      2     121
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _AlarmCheckTask                                      11    11      0  462413
                                              0 BANK2     11    11      0
                         _AlarmClear
                           _AlarmSet
                     _AlarmUpdateLCD
                           _AnyAlarm
                _BaterryLowAlarmHigh *
                 _BaterryLowAlarmMed *
                   _BatteryFailAlarm *
                        _BuzzerClear
                          _BuzzerSet
                _CircuitFailureAlarm *
                      _ClearAlarmLED
                   _ControlFailAlarm *
                    _EPAboveSetAlarm *
                    _EPBelowSetAlarm *
                    _GasFailureAlarm *
              _HighPressureAlarmHigh *
               _HighPressureAlarmLow *
                        _HigherAlarm
                    _IPAboveSetAlarm *
                    _IPBelowSetAlarm *
                   _MonitorFailAlarm *
                 _NoPowerSupplyAlarm *
                        _SetAlarmLED
                        _SetAlarmSV1
                    _TdeTooLongAlarm *
                    _TdiTooLongAlarm *
                     _VAboveMaxAlarm *
                     _VBelowMinAlarm *
          _VeryHighPressureAlarmHigh *
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _VeryHighPressureAlarmHigh                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _VBelowMinAlarm                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _VAboveMaxAlarm                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TdiTooLongAlarm                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TdeTooLongAlarm                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetAlarmSV1                                          1     1      0   40865
                                            131 BANK1      1     1      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _SetAlarmLED                                          1     1      0      31
                                              4 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _NoPowerSupplyAlarm                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MonitorFailAlarm                                     3     3      0   56014
                                            131 BANK1      3     3      0
                       _AdcDataReady
                              _Get5V
                             _printf
 ---------------------------------------------------------------------------------
 (3) _Get5V                                               10     8      2    8863
                                             30 BANK1     10     8      2
                         _AdcGetData
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) _IPBelowSetAlarm                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IPAboveSetAlarm                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HighPressureAlarmLow                                 3     3      0   11294
                                             22 BANK1      3     3      0
                     _GetMaxPressure
           _SetHighPressureAlarmHigh
       _SetVeryHighPressureAlarmHigh
 ---------------------------------------------------------------------------------
 (3) _SetVeryHighPressureAlarmHigh                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SetHighPressureAlarmHigh                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _GetMaxPressure                                       4     2      2   11229
                                             18 BANK1      4     2      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) _HighPressureAlarmHigh                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _GasFailureAlarm                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPBelowSetAlarm                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPAboveSetAlarm                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ControlFailAlarm                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ClearAlarmLED                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CircuitFailureAlarm                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BuzzerSet                                            1     1      0   41225
                                            133 BANK1      1     1      0
                          _BuzzerOff
                         _BuzzerTask
 ---------------------------------------------------------------------------------
 (3) _BuzzerTask                                           2     2      0   41194
                                            131 BANK1      2     2      0
                          _BuzzerOff
                           _BuzzerOn
              _ClearMonitorFailAlarm
                _SetMonitorFailAlarm
                 _TMR4_Period8BitSet
           _TMR4_SetInterruptHandler
                         _TMR4_Start
                          _TMR4_Stop
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              18     4     14   40741
                                            113 BANK1     18     4     14
                    _GetPressureV_pa (ARG)
                     _GetPressure_pa (ARG)
                             _See12V (ARG)
                              _See5V (ARG)
                    _SeePressureV_pa (ARG)
                     _SeePressure_pa (ARG)
                            ___awdiv (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _TMR4_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR4_SetInterruptHandler                             2     0      2     391
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Period8BitSet                                   1     1      0      31
                                              4 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _SetMonitorFailAlarm                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ClearMonitorFailAlarm                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BuzzerOn                                             1     1      0      31
                                              4 BANK1      1     1      0
                        _CMP1_Enable
 ---------------------------------------------------------------------------------
 (3) _CMP1_Enable                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BuzzerClear                                          0     0      0       0
                          _BuzzerOff
                          _TMR4_Stop
 ---------------------------------------------------------------------------------
 (3) _TMR4_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BuzzerOff                                            0     0      0       0
                       _CMP1_Disable
 ---------------------------------------------------------------------------------
 (3) _CMP1_Disable                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BatteryFailAlarm                                     2     2      0   16561
                                             40 BANK1      2     2      0
                       _AdcDataReady
           _ClearBaterryLowAlarmHigh
            _ClearBaterryLowAlarmMed
              _ClearBatteryFailAlarm
            _ClearNoPowerSupplyAlarm
                             _Get12V
             _SetBaterryLowAlarmHigh
              _SetBaterryLowAlarmMed
                _SetBatteryFailAlarm
              _SetNoPowerSupplyAlarm
 ---------------------------------------------------------------------------------
 (3) _SetNoPowerSupplyAlarm                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SetBatteryFailAlarm                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SetBaterryLowAlarmMed                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SetBaterryLowAlarmHigh                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Get12V                                              10     8      2   10219
                                             30 BANK1     10     8      2
                         _AdcGetData
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8    1356
                                              4 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8    2325
                                             16 BANK1     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _AdcGetData                                           4     2      2    6436
                                             10 BANK1      4     2      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _ClearNoPowerSupplyAlarm                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ClearBatteryFailAlarm                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ClearBaterryLowAlarmMed                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ClearBaterryLowAlarmHigh                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _AdcDataReady                                         2     0      2    6246
                                             10 BANK1      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _BaterryLowAlarmMed                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BaterryLowAlarmHigh                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _AlarmUpdateLCD                                       6     6      0  283584
                                            192 BANK1      6     6      0
                       _AlarmDisplay
                           _AnyAlarm
                        _HigherAlarm
                       _ValueDisplay
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _HigherAlarm                                         11     9      2    6274
                                             10 BANK1     11     9      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _AlarmDisplay                                         9     5      4  156073
                                            183 BANK1      9     5      4
                       _ValueDisplay
                            ___awmod
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _ValueDisplay                                        42    42      0  114957
                                            141 BANK1     42    42      0
                      _GetAlarmState
                             _GetBpm
                 _GetDisableAlarmSV1
                              _GetEp
                              _GetIp
                            _GetPmax
                             _GetSpr
                        _GetTargetEp
                        _GetTargetIp
                             _GetTde
                             _GetTdi
                              _GetTe
                              _GetTi
                          _GetVolume
                            ___awdiv
                            ___awmod
                             ___wmul
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             28    10     18   38882
                                            113 BANK1     28    10     18
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   37491
                                            105 BANK1      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           45    39      6   36523
                                             72 BANK1     33    27      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    7931
                                             33 BANK1     39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                             10 BANK1      8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                              4 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     191
                                              4 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     191
                                              4 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    3222
                                             15 BANK1     22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    8167
                                             33 BANK1     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             22 BANK1      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              4 BANK1     18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              4 BANK1     26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    6180
                                             33 BANK1      5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    5901
                                             22 BANK1     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     490
                                              4 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2374
                                             15 BANK1      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1874
                                              6 BANK1      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      93
                                              5 BANK1      1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (9) _UART1_Write                                          1     1      0      62
                                              4 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    7083
                                             11 BANK1     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              4 BANK1      7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              4 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    5980
                                              4 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1673
                                              4 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (4) _GetVolume                                            2     0      2       0
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (4) _GetTi                                                2     0      2       0
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (4) _GetTe                                                2     0      2       0
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (4) _GetTdi                                               2     0      2       0
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (4) _GetTde                                               2     0      2       0
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (4) _GetTargetIp                                          2     0      2   11195
                                             18 BANK1      2     0      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) _GetTargetEp                                          2     0      2   11195
                                             18 BANK1      2     0      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) _GetSpr                                               2     0      2       0
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (4) _GetPmax                                              2     0      2   11195
                                             18 BANK1      2     0      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) _GetIp                                                9     7      2   11269
                                             18 BANK1      9     7      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) _GetEp                                                2     0      2   11195
                                             18 BANK1      2     0      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4   11195
                                             10 BANK1      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _GetDisableAlarmSV1                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _GetBpm                                               2     0      2       0
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (4) _GetAlarmState                                        2     0      2      99
                                              8 BANK1      2     0      2
                           _AnyAlarm
 ---------------------------------------------------------------------------------
 (2) _AnyAlarm                                             4     4      0      99
                                              4 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 (2) _AlarmSet                                             1     1      0      31
                                              4 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _AlarmClear                                           1     1      0      31
                                              4 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INTERRUPT_InterruptManager                          4     4      0  606649
                                              0 BANK1      4     4      0
                   Absolute function *
                  _ADCC_ThresholdISR
                           _CMP1_ISR
                           _I2C2_Isr *
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR4_ISR
                           _TMR5_ISR
                           _TMR6_ISR
                  _UART1_Receive_ISR *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (15) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR6_ISR                                            0     0      0   22054
                   Absolute function *
             _ControllerTimerHandler *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR6_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _ControllerTimerHandler                              0     0      0   22054
                _SetControlFailAlarm
            i2_ClearControlFailAlarm
                          i2___awmod
                           i2_printf
 ---------------------------------------------------------------------------------
 (15) _TMR5_ISR                                            0     0      0   21249
                   Absolute function *
                       _AlarmHandler *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR5_WriteTimer                                     2     0      2     229
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _AlarmHandler                                        2     2      0   21020
                                             90 COMRAM     2     2      0
                         i2_AnyAlarm
                           i2_printf
 ---------------------------------------------------------------------------------
 (15) _TMR4_ISR                                            0     0      0   41943
                   Absolute function *
                      _BuzzerHandler *
                  _BuzzerTestHandler *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _BuzzerTestHandler                                   0     0      0   20921
                        i2_BuzzerOff
                           i2_printf
 ---------------------------------------------------------------------------------
 (16) _BuzzerHandler                                       0     0      0   21022
                       i2_BuzzerTask
 ---------------------------------------------------------------------------------
 (17) i2_BuzzerTask                                        2     2      0   21022
                                             90 COMRAM     2     2      0
                        i2_BuzzerOff
                         i2_BuzzerOn
            i2_ClearMonitorFailAlarm
              i2_SetMonitorFailAlarm
               i2_TMR4_Period8BitSet
         i2_TMR4_SetInterruptHandler
                       i2_TMR4_Start
                        i2_TMR4_Stop
                           i2_printf
 ---------------------------------------------------------------------------------
 (18) i2_TMR4_Start                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_TMR4_SetInterruptHandler                          2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) i2_TMR4_Period8BitSet                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (18) i2_SetMonitorFailAlarm                               0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_BuzzerOn                                          1     1      0      31
                                              0 COMRAM     1     1      0
                      i2_CMP1_Enable
 ---------------------------------------------------------------------------------
 (15) _TMR1_ISR                                            0     0      0  188601
                   Absolute function *
                         _ButtonTask *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR1_WriteTimer                                     2     0      2     229
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _ButtonTask                                          1     1      0  188372
                                            103 BANK0      1     1      0
                  i2_DisableAlarmSV1
                        i2_HistAlarm
                        i2_MuteAlarm
                           i2_printf
 ---------------------------------------------------------------------------------
 (17) i2_MuteAlarm                                         5     5      0   46461
                                             91 COMRAM     2     2      0
                                             33 BANK0      3     3      0
                         i2_AnyAlarm
                      i2_BuzzerClear
         i2_ClearCircuitFailureAlarm
            i2_ClearControlFailAlarm
             i2_ClearGasFailureAlarm
       i2_ClearHighPressureAlarmHigh
            i2_ClearMonitorFailAlarm
   i2_ClearVeryHighPressureAlarmHigh
                      i2_HigherAlarm
                      i2_SetAlarmSV1
                           i2___wmul
                           i2_printf
 ---------------------------------------------------------------------------------
 (18) i2_SetAlarmSV1                                       1     1      0   21045
                                             90 COMRAM     1     1      0
                           i2_printf
 ---------------------------------------------------------------------------------
 (18) i2_BuzzerClear                                       0     0      0       0
                        i2_BuzzerOff
                        i2_TMR4_Stop
 ---------------------------------------------------------------------------------
 (18) i2_TMR4_Stop                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (17) i2_BuzzerOff                                         0     0      0       0
                     i2_CMP1_Disable
 ---------------------------------------------------------------------------------
 (17) i2_HistAlarm                                         4     4      0  120990
                                             91 COMRAM     4     4      0
                   i2_AlarmUpdateLCD
                  i2_TMR5_StartTimer
                   i2_TMR5_StopTimer
 ---------------------------------------------------------------------------------
 (18) i2_TMR5_StopTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_TMR5_StartTimer                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_AlarmUpdateLCD                                    6     6      0  120538
                                             97 BANK0      6     6      0
                     i2_AlarmDisplay
                         i2_AnyAlarm
                      i2_HigherAlarm
                     i2_ValueDisplay
                           i2___wmul
 ---------------------------------------------------------------------------------
 (18) i2_HigherAlarm                                      11     9      2    2232
                                              6 COMRAM    11     9      2
                           i2___wmul
 ---------------------------------------------------------------------------------
 (19) i2_AlarmDisplay                                      9     5      4   69099
                                             86 COMRAM     5     5      0
                                             93 BANK0      4     0      4
                     i2_ValueDisplay
                          i2___awmod
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (17) i2_DisableAlarmSV1                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR0_ISR                                            0     0      0   87425
                   Absolute function *
                _MonitorPressureTask *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _MonitorPressureTask                                49    49      0   87425
                                             90 COMRAM     5     5      0
                                             59 BANK0     40    40      0
                    _AdcReStartCycle
                           _AdcReady
               _ClearTdeTooLongAlarm
               _ClearTdiTooLongAlarm
                _ClearVAboveMaxAlarm
                _ClearVBelowMinAlarm
                   _DisplayCalibrate
                 _GetPressure_mbar02
             _SetCircuitFailureAlarm
                 _SetEPAboveSetAlarm
                 _SetEPBelowSetAlarm
                 _SetGasFailureAlarm
                 _SetIPAboveSetAlarm
                 _SetIPBelowSetAlarm
                 _SetTdeTooLongAlarm
                 _SetTdiTooLongAlarm
                  _SetVAboveMaxAlarm
                  _SetVBelowMinAlarm
                            ___lldiv
                            ___lwdiv
                              _isqrt
                     i2_AdcDataReady
         i2_ClearCircuitFailureAlarm
             i2_ClearEPAboveSetAlarm
             i2_ClearEPBelowSetAlarm
             i2_ClearGasFailureAlarm
             i2_ClearIPAboveSetAlarm
             i2_ClearIPBelowSetAlarm
                        i2_ClearVars
                  i2_GetPressureV_pa
                   i2_GetPressure_pa
                           i2_See12V
                            i2_See5V
                          i2___aldiv
                          i2___awdiv
                          i2___awmod
                           i2___wmul
                           i2_printf
 ---------------------------------------------------------------------------------
 (17) i2_See5V                                            10     8      2    3180
                                             26 COMRAM    10     8      2
                       i2_AdcSeeData
                          i2___aldiv
 ---------------------------------------------------------------------------------
 (17) i2_See12V                                           10     8      2    3526
                                             26 COMRAM    10     8      2
                       i2_AdcSeeData
                          i2___aldiv
                           i2___lmul
 ---------------------------------------------------------------------------------
 (18) i2_AdcSeeData                                        4     2      2    2073
                                              6 COMRAM     4     2      2
                           i2___wmul
 ---------------------------------------------------------------------------------
 (17) i2_AdcDataReady                                      2     0      2    2004
                                              6 COMRAM     2     0      2
                           i2___wmul
 ---------------------------------------------------------------------------------
 (17) _isqrt                                              10     8      2     326
                                              0 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (17) ___lwdiv                                             7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (17) ___lldiv                                            13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (17) _SetVBelowMinAlarm                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _SetVAboveMaxAlarm                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _SetTdiTooLongAlarm                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _SetTdeTooLongAlarm                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _SetIPBelowSetAlarm                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _SetIPAboveSetAlarm                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _SetGasFailureAlarm                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _SetEPBelowSetAlarm                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _SetEPAboveSetAlarm                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _SetCircuitFailureAlarm                              0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _GetPressure_mbar02                                  4     2      2   11088
                                             42 COMRAM     4     2      2
                   i2_GetPressure_pa
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (17) _DisplayCalibrate                                    8     0      8   21078
                                             51 BANK0      8     0      8
                          i2___awdiv (ARG)
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (17) _AdcReStartCycle                                     0     0      0    1960
             i2_ADCC_StartConversion
                           i2___wmul
 ---------------------------------------------------------------------------------
 (15) _I2C2_Isr                                            0     0      0  199467
                _I2C2_SlaveClearBuff
            _I2C2_SlaveClearStopFlag
              _I2C2_SlaveIsRxBufFull
               _I2C2_SlaveRdCallBack
             _I2C2_SlaveReleaseClock
               _I2C2_SlaveSetCounter
             _I2C2_SlaveStopCallBack
 ---------------------------------------------------------------------------------
 (16) _I2C2_SlaveStopCallBack                              0     0      0  199402
                   Absolute function *
                        _StopHandler *
 ---------------------------------------------------------------------------------
 (17) _StopHandler                                         2     2      0  199402
                                             93 COMRAM     2     2      0
                     _ReceiveHandler
                        _UpdateState
                           i2_printf
 ---------------------------------------------------------------------------------
 (18) _UpdateState                                         8     8      0  178432
                                             91 COMRAM     2     2      0
                                             93 BANK0      6     6      0
                      _ClearAllAlarm
              _ControllerBuzzerCheck
                     _DisplayDisable
                      _DisplayEnable
           _GetControllerBuzzerCheck
                _SetControlFailAlarm
                     _SetMaxPressure
                          _SetTarget
                   _SetVolumeControl
            i2_ClearControlFailAlarm
                   i2_EnableAlarmSV1
                           i2_LCDOff
                            i2_LCDOn
                   i2_MonitorDisable
                    i2_MonitorEnable
                i2_SetCalibrateState
                           i2_SetSV1
                           i2_printf
 ---------------------------------------------------------------------------------
 (19) i2_SetSV1                                            1     1      0   21045
                                             90 COMRAM     1     1      0
                           i2_printf
 ---------------------------------------------------------------------------------
 (19) i2_SetCalibrateState                                 1     1      0   38236
                                             90 COMRAM     1     1      0
                        i2_ClearVars
                  i2_GetPressureV_pa
                   i2_GetPressure_pa
                  i2_TMR0_StartTimer
                   i2_TMR0_StopTimer
               i2_UnDisplayCalibrate
                          i2___awdiv
                           i2_printf
 ---------------------------------------------------------------------------------
 (20) i2_UnDisplayCalibrate                                0     0      0       0
 ---------------------------------------------------------------------------------
 (20) i2_TMR0_StopTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (20) i2_TMR0_StartTimer                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) i2_GetPressure_pa                                   16    14      2    7389
                                             26 COMRAM    16    14      2
                       i2_AdcGetData
                          i2___aldiv
                          i2___awdiv
                           i2___lmul
 ---------------------------------------------------------------------------------
 (18) i2___lmul                                           12     4      8     346
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (17) i2_GetPressureV_pa                                  12    10      2    5970
                                             14 COMRAM    12    10      2
                       i2_AdcGetData
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (18) i2_AdcGetData                                        4     2      2    2104
                                              6 COMRAM     4     2      2
                           i2___wmul
 ---------------------------------------------------------------------------------
 (17) i2_ClearVars                                         4     4      0     260
                                              0 COMRAM     4     4      0
         i2_ClearCircuitFailureAlarm
             i2_ClearEPAboveSetAlarm
             i2_ClearEPBelowSetAlarm
             i2_ClearIPAboveSetAlarm
             i2_ClearIPBelowSetAlarm
 ---------------------------------------------------------------------------------
 (19) i2_MonitorEnable                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (19) i2_MonitorDisable                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (19) i2_LCDOn                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (19) i2_LCDOff                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (19) i2_EnableAlarmSV1                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _SetVolumeControl                                    1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (19) _SetTarget                                          12     0     12    3700
                                             26 COMRAM    12     0     12
                          i2___aldiv
                           i2___wmul
 ---------------------------------------------------------------------------------
 (17) i2___aldiv                                          14     6      8    1005
                                             12 COMRAM    14     6      8
                           i2___lmul (ARG)
 ---------------------------------------------------------------------------------
 (19) _SetMaxPressure                                      2     0      2     121
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) _SetControlFailAlarm                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _GetControllerBuzzerCheck                            1     1      0      34
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (19) _DisplayEnable                                       0     0      0   46969
                     i2_ValueDisplay
 ---------------------------------------------------------------------------------
 (19) _DisplayDisable                                      0     0      0   46969
                     i2_ValueDisplay
 ---------------------------------------------------------------------------------
 (19) i2_ValueDisplay                                     42    42      0   46969
                                             51 BANK0     42    42      0
                    i2_GetAlarmState
                           i2_GetBpm
               i2_GetDisableAlarmSV1
                            i2_GetEp
                            i2_GetIp
                          i2_GetPmax
                           i2_GetSpr
                      i2_GetTargetEp
                      i2_GetTargetIp
                           i2_GetTde
                           i2_GetTdi
                            i2_GetTe
                            i2_GetTi
                        i2_GetVolume
                          i2___awdiv
                          i2___awmod
                           i2___wmul
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (20) i2_sprintf                                          28    10     18   20656
                                             23 BANK0     28    10     18
                         i2_vfprintf
 ---------------------------------------------------------------------------------
 (17) i2___awmod                                           6     2      4    1133
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (20) i2_GetVolume                                         2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (20) i2_GetTi                                             2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (20) i2_GetTe                                             2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (20) i2_GetTdi                                            2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (20) i2_GetTde                                            2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (20) i2_GetTargetIp                                       2     0      2    3665
                                             14 COMRAM     2     0      2
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (20) i2_GetTargetEp                                       2     0      2    3665
                                             14 COMRAM     2     0      2
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (20) i2_GetSpr                                            2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (20) i2_GetPmax                                           2     0      2    3665
                                             14 COMRAM     2     0      2
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (20) i2_GetIp                                             9     7      2    3739
                                             14 COMRAM     9     7      2
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (20) i2_GetEp                                             2     0      2    3665
                                             14 COMRAM     2     0      2
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (20) i2___awdiv                                           8     4      4    3665
                                              6 COMRAM     8     4      4
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (20) i2_GetDisableAlarmSV1                                0     0      0       0
 ---------------------------------------------------------------------------------
 (20) i2_GetBpm                                            2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (20) i2_GetAlarmState                                     2     0      2      99
                                              4 COMRAM     2     0      2
                         i2_AnyAlarm
 ---------------------------------------------------------------------------------
 (17) i2_AnyAlarm                                          4     4      0      99
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (19) _ControllerBuzzerCheck                               0     0      0       0
                      i2_CMP1_Enable
 ---------------------------------------------------------------------------------
 (19) i2_CMP1_Enable                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _ClearAllAlarm                                       0     0      0       0
          _ClearHighPressureAlarmLow
               _ClearTdeTooLongAlarm
               _ClearTdiTooLongAlarm
                _ClearVAboveMaxAlarm
                _ClearVBelowMinAlarm
         i2_ClearBaterryLowAlarmHigh
          i2_ClearBaterryLowAlarmMed
            i2_ClearBatteryFailAlarm
         i2_ClearCircuitFailureAlarm
            i2_ClearControlFailAlarm
             i2_ClearEPAboveSetAlarm
             i2_ClearEPBelowSetAlarm
             i2_ClearGasFailureAlarm
       i2_ClearHighPressureAlarmHigh
             i2_ClearIPAboveSetAlarm
             i2_ClearIPBelowSetAlarm
            i2_ClearMonitorFailAlarm
          i2_ClearNoPowerSupplyAlarm
   i2_ClearVeryHighPressureAlarmHigh
 ---------------------------------------------------------------------------------
 (18) i2_ClearVeryHighPressureAlarmHigh                    0     0      0       0
 ---------------------------------------------------------------------------------
 (20) i2_ClearNoPowerSupplyAlarm                           0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_ClearMonitorFailAlarm                             0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_ClearIPBelowSetAlarm                              0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_ClearIPAboveSetAlarm                              0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_ClearHighPressureAlarmHigh                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_ClearGasFailureAlarm                              0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_ClearEPBelowSetAlarm                              0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_ClearEPAboveSetAlarm                              0     0      0       0
 ---------------------------------------------------------------------------------
 (17) i2_ClearControlFailAlarm                             0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_ClearCircuitFailureAlarm                          0     0      0       0
 ---------------------------------------------------------------------------------
 (20) i2_ClearBatteryFailAlarm                             0     0      0       0
 ---------------------------------------------------------------------------------
 (20) i2_ClearBaterryLowAlarmMed                           0     0      0       0
 ---------------------------------------------------------------------------------
 (20) i2_ClearBaterryLowAlarmHigh                          0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _ClearVBelowMinAlarm                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _ClearVAboveMaxAlarm                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _ClearTdiTooLongAlarm                                0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _ClearTdeTooLongAlarm                                0     0      0       0
 ---------------------------------------------------------------------------------
 (20) _ClearHighPressureAlarmLow                           0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _I2C2_SlaveSetCounter                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) _I2C2_SlaveReleaseClock                              0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _I2C2_SlaveRdCallBack                                0     0      0      43
                   Absolute function *
    _I2C2_SlaveDefRdInterruptHandler *
                     _ReceiveHandler *
 ---------------------------------------------------------------------------------
 (18) _ReceiveHandler                                      4     4      0      43
                                              0 COMRAM     4     4      0
                          _I2C2_Read
 ---------------------------------------------------------------------------------
 (19) _I2C2_Read                                           0     0      0       0
                _I2C2_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (17) _I2C2_SlaveDefRdInterruptHandler                     0     0      0       0
                _I2C2_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (20) _I2C2_SlaveGetRxData                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _I2C2_SlaveIsRxBufFull                               0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _I2C2_SlaveClearStopFlag                             0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _I2C2_SlaveClearBuff                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _CMP1_ISR                                            0     0      0   20921
                   Absolute function *
                   _BuzzerCMPHandler *
 ---------------------------------------------------------------------------------
 (16) _BuzzerCMPHandler                                    0     0      0   20921
                     i2_CMP1_Disable
                           i2_printf
 ---------------------------------------------------------------------------------
 (18) i2_CMP1_Disable                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _ADCC_ThresholdISR                                   0     0      0   24989
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                         _AdcHandler *
 ---------------------------------------------------------------------------------
 (16) _AdcHandler                                          0     0      0   24989
           _ADCC_GetConversionResult
                           _AdcReady
                  i2_ADCC_Initialize
             i2_ADCC_StartConversion
                          i2_AdcInit
                           i2___wmul
                           i2_printf
 ---------------------------------------------------------------------------------
 (17) i2_printf                                           14     4     10   20921
                                             86 COMRAM     4     4      0
                                             23 BANK0     10     0     10
                  i2_GetPressureV_pa (ARG)
                   i2_GetPressure_pa (ARG)
                          i2___awdiv (ARG)
                         i2_vfprintf
 ---------------------------------------------------------------------------------
 (18) i2_vfprintf                                          8     2      6   19906
                                             78 COMRAM     8     2      6
                        i2_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) i2_vfpfcnvrt                                        45    39      6   19403
                                             68 COMRAM    10     4      6
                                              0 BANK0     23    23      0
                             i2_atoi
                             i2_ctoa
                             i2_dtoa
                            i2_fputc
                          i2_isdigit
                             i2_stoa
                             i2_xtoa
 ---------------------------------------------------------------------------------
 (20) i2_xtoa                                             39    28     11    4313
                                             29 COMRAM    39    28     11
                          i2_isalpha
                          i2_isupper
                              i2_pad
                          i2_toupper
 ---------------------------------------------------------------------------------
 (21) i2_toupper                                           8     6      2     262
                                              6 COMRAM     8     6      2
                          i2_islower
 ---------------------------------------------------------------------------------
 (22) i2_islower                                           6     4      2      66
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (21) i2_isupper                                           6     4      2      66
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (21) i2_isalpha                                           6     4      2      66
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (20) i2_stoa                                             22    18      4    1842
                                             11 COMRAM    22    18      4
                            i2_fputc
                           i2_strlen
 ---------------------------------------------------------------------------------
 (20) i2_dtoa                                             36    26     10    4829
                                             29 COMRAM    36    26     10
                          i2___aodiv
                          i2___aomod
                              i2_abs
                              i2_pad
 ---------------------------------------------------------------------------------
 (21) i2_abs                                               4     2      2     128
                                             18 COMRAM     4     2      2
                          i2___aomod (ARG)
 ---------------------------------------------------------------------------------
 (21) i2___aomod                                          18     2     16     503
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (21) i2___aodiv                                          26    10     16     515
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (20) i2_ctoa                                              7     4      3    3117
                                             29 COMRAM     5     2      3
                              i2_pad
 ---------------------------------------------------------------------------------
 (21) i2_pad                                              11     5      6    2948
                                             18 COMRAM    11     5      6
                            i2_fputc
                            i2_fputs
                           i2_strlen
 ---------------------------------------------------------------------------------
 (22) i2_strlen                                            4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (22) i2_fputs                                             7     3      4    1180
                                             11 COMRAM     7     3      4
                            i2_fputc
 ---------------------------------------------------------------------------------
 (23) i2_fputc                                             9     5      4     900
                                              2 COMRAM     9     5      4
                            i2_putch
 ---------------------------------------------------------------------------------
 (24) i2_putch                                             1     1      0      93
                                              1 COMRAM     1     1      0
                      i2_UART1_Write
 ---------------------------------------------------------------------------------
 (25) i2_UART1_Write                                       1     1      0      62
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (20) i2_atoi                                             15    13      2    2681
                                              7 COMRAM    15    13      2
                           i2___wmul
                          i2_isdigit
                          i2_isspace
 ---------------------------------------------------------------------------------
 (21) i2_isspace                                           7     5      2     134
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (20) i2_isdigit                                           6     4      2     101
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (17) i2_AdcInit                                           0     0      0    2034
     i2_ADCC_SetADTIInterruptHandler
             i2_ADCC_StartConversion
                           i2___wmul
 ---------------------------------------------------------------------------------
 (21) i2___wmul                                            6     2      4    1938
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (18) i2_ADCC_StartConversion                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) i2_ADCC_Initialize                                   0     0      0      74
     i2_ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (18) i2_ADCC_SetADTIInterruptHandler                      2     0      2      74
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) _AdcReady                                            0     0      0       0
              _ADCC_IsConversionDone
 ---------------------------------------------------------------------------------
 (18) _ADCC_IsConversionDone                               0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _ADCC_GetConversionResult                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (16) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 25
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AlarmCheckTask
     _AlarmClear
     _AlarmSet
     _AlarmUpdateLCD
       _AlarmDisplay
         _ValueDisplay
           _GetAlarmState
             _AnyAlarm
           _GetBpm
           _GetDisableAlarmSV1
           _GetEp
             ___awdiv
               ___wmul (ARG)
           _GetIp
             ___awdiv
               ___wmul (ARG)
           _GetPmax
             ___awdiv
               ___wmul (ARG)
           _GetSpr
           _GetTargetEp
             ___awdiv
               ___wmul (ARG)
           _GetTargetIp
             ___awdiv
               ___wmul (ARG)
           _GetTde
           _GetTdi
           _GetTe
           _GetTi
           _GetVolume
           ___awdiv
             ___wmul (ARG)
           ___awmod
           ___wmul
           _sprintf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   ___wmul
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                     _strlen
                 _fputc
                   _putch
                     _UART1_Write
                 _isdigit
                 _stoa
                   _fputc
                     _putch
                       _UART1_Write
                   _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                     _strlen
                   _toupper
                     _islower
         ___awmod
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _AnyAlarm
       _HigherAlarm
         ___wmul
       _ValueDisplay
         _GetAlarmState
           _AnyAlarm
         _GetBpm
         _GetDisableAlarmSV1
         _GetEp
           ___awdiv
             ___wmul (ARG)
         _GetIp
           ___awdiv
             ___wmul (ARG)
         _GetPmax
           ___awdiv
             ___wmul (ARG)
         _GetSpr
         _GetTargetEp
           ___awdiv
             ___wmul (ARG)
         _GetTargetIp
           ___awdiv
             ___wmul (ARG)
         _GetTde
         _GetTdi
         _GetTe
         _GetTi
         _GetVolume
         ___awdiv
           ___wmul (ARG)
         ___awmod
         ___wmul
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       ___wmul
     _AnyAlarm
     _BaterryLowAlarmHigh *
     _BaterryLowAlarmMed *
     _BatteryFailAlarm *
       _AdcDataReady
         ___wmul
       _ClearBaterryLowAlarmHigh
       _ClearBaterryLowAlarmMed
       _ClearBatteryFailAlarm
       _ClearNoPowerSupplyAlarm
       _Get12V
         _AdcGetData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___lmul
       _SetBaterryLowAlarmHigh
       _SetBaterryLowAlarmMed
       _SetBatteryFailAlarm
       _SetNoPowerSupplyAlarm
     _BuzzerClear *
       _BuzzerOff
         _CMP1_Disable
       _TMR4_Stop
     _BuzzerSet *
       _BuzzerOff
         _CMP1_Disable
       _BuzzerTask
         _BuzzerOff
           _CMP1_Disable
         _BuzzerOn
           _CMP1_Enable
         _ClearMonitorFailAlarm
         _SetMonitorFailAlarm
         _TMR4_Period8BitSet
         _TMR4_SetInterruptHandler
         _TMR4_Start
         _TMR4_Stop
         _printf
           _GetPressureV_pa (ARG)
             _AdcGetData
               ___wmul
             ___awdiv
               ___wmul (ARG)
           _GetPressure_pa (ARG)
             _AdcGetData
               ___wmul
             ___aldiv
               ___lmul (ARG)
             ___awdiv
               ___wmul (ARG)
             ___lmul
           _See12V (ARG)
             _AdcSeeData
               ___wmul
             ___aldiv
               ___lmul (ARG)
             ___lmul
           _See5V (ARG)
             _AdcSeeData
               ___wmul
             ___aldiv
               ___lmul (ARG)
           _SeePressureV_pa (ARG)
             _AdcSeeData
               ___wmul
             ___awdiv
               ___wmul (ARG)
           _SeePressure_pa (ARG)
             _AdcSeeData
               ___wmul
             ___aldiv
               ___lmul (ARG)
             ___awdiv
               ___wmul (ARG)
             ___lmul
           ___awdiv (ARG)
             ___wmul (ARG)
           _vfprintf (ARG)
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
     _CircuitFailureAlarm *
     _ClearAlarmLED *
     _ControlFailAlarm *
     _EPAboveSetAlarm *
     _EPBelowSetAlarm *
     _GasFailureAlarm *
     _HighPressureAlarmHigh *
     _HighPressureAlarmLow *
       _GetMaxPressure
         ___awdiv
           ___wmul (ARG)
       _SetHighPressureAlarmHigh
       _SetVeryHighPressureAlarmHigh
     _HigherAlarm *
       ___wmul
     _IPAboveSetAlarm *
     _IPBelowSetAlarm *
     _MonitorFailAlarm *
       _AdcDataReady
         ___wmul
       _Get5V
         _AdcGetData
           ___wmul
         ___aldiv
           ___lmul (ARG)
       _printf
         _GetPressureV_pa (ARG)
           _AdcGetData
             ___wmul
           ___awdiv
             ___wmul (ARG)
         _GetPressure_pa (ARG)
           _AdcGetData
             ___wmul
           ___aldiv
             ___lmul (ARG)
           ___awdiv
             ___wmul (ARG)
           ___lmul
         _See12V (ARG)
           _AdcSeeData
             ___wmul
           ___aldiv
             ___lmul (ARG)
           ___lmul
         _See5V (ARG)
           _AdcSeeData
             ___wmul
           ___aldiv
             ___lmul (ARG)
         _SeePressureV_pa (ARG)
           _AdcSeeData
             ___wmul
           ___awdiv
             ___wmul (ARG)
         _SeePressure_pa (ARG)
           _AdcSeeData
             ___wmul
           ___aldiv
             ___lmul (ARG)
           ___awdiv
             ___wmul (ARG)
           ___lmul
         ___awdiv (ARG)
           ___wmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                 _strlen
             _fputc
               _putch
                 _UART1_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _UART1_Write
               _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                 _strlen
               _toupper
                 _islower
     _NoPowerSupplyAlarm *
     _SetAlarmLED *
     _SetAlarmSV1 *
       _printf
         _GetPressureV_pa (ARG)
           _AdcGetData
             ___wmul
           ___awdiv
             ___wmul (ARG)
         _GetPressure_pa (ARG)
           _AdcGetData
             ___wmul
           ___aldiv
             ___lmul (ARG)
           ___awdiv
             ___wmul (ARG)
           ___lmul
         _See12V (ARG)
           _AdcSeeData
             ___wmul
           ___aldiv
             ___lmul (ARG)
           ___lmul
         _See5V (ARG)
           _AdcSeeData
             ___wmul
           ___aldiv
             ___lmul (ARG)
         _SeePressureV_pa (ARG)
           _AdcSeeData
             ___wmul
           ___awdiv
             ___wmul (ARG)
         _SeePressure_pa (ARG)
           _AdcSeeData
             ___wmul
           ___aldiv
             ___lmul (ARG)
           ___awdiv
             ___wmul (ARG)
           ___lmul
         ___awdiv (ARG)
           ___wmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                 _strlen
             _fputc
               _putch
                 _UART1_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _UART1_Write
               _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                 _strlen
               _toupper
                 _islower
     _TdeTooLongAlarm *
     _TdiTooLongAlarm *
     _VAboveMaxAlarm *
     _VBelowMinAlarm *
     _VeryHighPressureAlarmHigh *
     ___wmul *
   _AlarmInit
     _BuzzerInit
       _BuzzerOff
         _CMP1_Disable
       _CMP1_SetIntHandler
       _TMR4_SetInterruptHandler
     _TMR5_SetInterruptHandler
     _TMR5_StartTimer
   _ButtonInit
     _TMR1_SetInterruptHandler
     _TMR1_StartTimer
   _BuzzerCheck
     _BuzzerOff
       _CMP1_Disable
     _BuzzerOn
       _CMP1_Enable
     _SetMonitorFailAlarm
     _printf
       _GetPressureV_pa (ARG)
         _AdcGetData
           ___wmul
         ___awdiv
           ___wmul (ARG)
       _GetPressure_pa (ARG)
         _AdcGetData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       _See12V (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___lmul
       _See5V (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
       _SeePressureV_pa (ARG)
         _AdcSeeData
           ___wmul
         ___awdiv
           ___wmul (ARG)
       _SeePressure_pa (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       ___awdiv (ARG)
         ___wmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
           _fputc
             _putch
               _UART1_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _UART1_Write
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
             _toupper
               _islower
   _BuzzerTest
     _BuzzerOff
       _CMP1_Disable
     _BuzzerOn
       _CMP1_Enable
     _TMR4_Period8BitSet
     _TMR4_SetInterruptHandler
     _TMR4_Start
   _ControllerInit
     _I2C2_Open
       _I2C2_SlaveEnableIrq
       _I2C2_SlaveOpen
       _I2C2_SlaveSetAddrIntHandler
       _I2C2_SlaveSetBusColIntHandler
       _I2C2_SlaveSetIsrHandler
       _I2C2_SlaveSetReadIntHandler
       _I2C2_SlaveSetSlaveAddr
       _I2C2_SlaveSetSlaveMask
       _I2C2_SlaveSetWrColIntHandler
       _I2C2_SlaveSetWriteIntHandler
     _I2C2_SlaveSetReadIntHandler
     _I2C2_SlaveSetStopIntHandler
     _TMR6_SetInterruptHandler
     _TMR6_StartTimer
       _TMR6_Start
   _DisableAlarmSV1
   _DisplayTask
     _LCDMessage1
       _LCDMessage
         _LCDWriteChar
         _strlen
       _LCDWriteCmd
     _LCDMessage12
       _LCDMessage
         _LCDWriteChar
         _strlen
       _LCDWriteCmd
     _LCDMessage2
       _LCDMessage
         _LCDWriteChar
         _strlen
       _LCDWriteCmd
   _DumpI2C
   _EnableAlarmSV1
   _HistAlarm
     _AlarmUpdateLCD
       _AlarmDisplay
         _ValueDisplay
           _GetAlarmState
             _AnyAlarm
           _GetBpm
           _GetDisableAlarmSV1
           _GetEp
             ___awdiv
               ___wmul (ARG)
           _GetIp
             ___awdiv
               ___wmul (ARG)
           _GetPmax
             ___awdiv
               ___wmul (ARG)
           _GetSpr
           _GetTargetEp
             ___awdiv
               ___wmul (ARG)
           _GetTargetIp
             ___awdiv
               ___wmul (ARG)
           _GetTde
           _GetTdi
           _GetTe
           _GetTi
           _GetVolume
           ___awdiv
             ___wmul (ARG)
           ___awmod
           ___wmul
           _sprintf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   ___wmul
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                     _strlen
                 _fputc
                   _putch
                     _UART1_Write
                 _isdigit
                 _stoa
                   _fputc
                     _putch
                       _UART1_Write
                   _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                     _strlen
                   _toupper
                     _islower
         ___awmod
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _AnyAlarm
       _HigherAlarm
         ___wmul
       _ValueDisplay
         _GetAlarmState
           _AnyAlarm
         _GetBpm
         _GetDisableAlarmSV1
         _GetEp
           ___awdiv
             ___wmul (ARG)
         _GetIp
           ___awdiv
             ___wmul (ARG)
         _GetPmax
           ___awdiv
             ___wmul (ARG)
         _GetSpr
         _GetTargetEp
           ___awdiv
             ___wmul (ARG)
         _GetTargetIp
           ___awdiv
             ___wmul (ARG)
         _GetTde
         _GetTdi
         _GetTe
         _GetTi
         _GetVolume
         ___awdiv
           ___wmul (ARG)
         ___awmod
         ___wmul
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       ___wmul
     _TMR5_StartTimer
     _TMR5_StopTimer
   _InitDisplay
     _LCDInit
       _LCDMessage
         _LCDWriteChar
         _strlen
       _LCDTest
         _LCDMessage12
           _LCDMessage
             _LCDWriteChar
             _strlen
           _LCDWriteCmd
       _LCDWrite4
       _LCDWriteCmd
   _LCDOff
   _LCDOn
   _MonitorDisable
   _MonitorDump
     _See12V
       _AdcSeeData
         ___wmul
       ___aldiv
         ___lmul (ARG)
       ___lmul
     _See5V
       _AdcSeeData
         ___wmul
       ___aldiv
         ___lmul (ARG)
     ___awdiv
       ___wmul (ARG)
     _printf
       _GetPressureV_pa (ARG)
         _AdcGetData
           ___wmul
         ___awdiv
           ___wmul (ARG)
       _GetPressure_pa (ARG)
         _AdcGetData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       _See12V (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___lmul
       _See5V (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
       _SeePressureV_pa (ARG)
         _AdcSeeData
           ___wmul
         ___awdiv
           ___wmul (ARG)
       _SeePressure_pa (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       ___awdiv (ARG)
         ___wmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
           _fputc
             _putch
               _UART1_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _UART1_Write
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
             _toupper
               _islower
   _MonitorEnable
   _MonitorInit
     _AdcInit
       _ADCC_SetADTIInterruptHandler
       _ADCC_StartConversion
       ___wmul
     _ClearVars
       _ClearCircuitFailureAlarm
       _ClearEPAboveSetAlarm
       _ClearEPBelowSetAlarm
       _ClearIPAboveSetAlarm
       _ClearIPBelowSetAlarm
     _TMR0_SetInterruptHandler
     _TMR0_StartTimer
   _MuteAlarm
     _AnyAlarm
     _BuzzerClear
       _BuzzerOff
         _CMP1_Disable
       _TMR4_Stop
     _ClearCircuitFailureAlarm
     _ClearControlFailAlarm
     _ClearGasFailureAlarm
     _ClearHighPressureAlarmHigh
     _ClearMonitorFailAlarm
     _ClearVeryHighPressureAlarmHigh
     _HigherAlarm
       ___wmul
     _SetAlarmSV1
       _printf
         _GetPressureV_pa (ARG)
           _AdcGetData
             ___wmul
           ___awdiv
             ___wmul (ARG)
         _GetPressure_pa (ARG)
           _AdcGetData
             ___wmul
           ___aldiv
             ___lmul (ARG)
           ___awdiv
             ___wmul (ARG)
           ___lmul
         _See12V (ARG)
           _AdcSeeData
             ___wmul
           ___aldiv
             ___lmul (ARG)
           ___lmul
         _See5V (ARG)
           _AdcSeeData
             ___wmul
           ___aldiv
             ___lmul (ARG)
         _SeePressureV_pa (ARG)
           _AdcSeeData
             ___wmul
           ___awdiv
             ___wmul (ARG)
         _SeePressure_pa (ARG)
           _AdcSeeData
             ___wmul
           ___aldiv
             ___lmul (ARG)
           ___awdiv
             ___wmul (ARG)
           ___lmul
         ___awdiv (ARG)
           ___wmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                 _strlen
             _fputc
               _putch
                 _UART1_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _UART1_Write
               _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                 _strlen
               _toupper
                 _islower
     ___wmul
     _printf
       _GetPressureV_pa (ARG)
         _AdcGetData
           ___wmul
         ___awdiv
           ___wmul (ARG)
       _GetPressure_pa (ARG)
         _AdcGetData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       _See12V (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___lmul
       _See5V (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
       _SeePressureV_pa (ARG)
         _AdcSeeData
           ___wmul
         ___awdiv
           ___wmul (ARG)
       _SeePressure_pa (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       ___awdiv (ARG)
         ___wmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
           _fputc
             _putch
               _UART1_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _UART1_Write
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
             _toupper
               _islower
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _CMP1_Initialize
       _CMP1_Disable
       _CMP1_Enable
     _FVR_Initialize
     _I2C2_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM6_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _See12V
     _AdcSeeData
       ___wmul
     ___aldiv
       ___lmul (ARG)
     ___lmul
   _See5V
     _AdcSeeData
       ___wmul
     ___aldiv
       ___lmul (ARG)
   _SeePressureV_pa
     _AdcSeeData
       ___wmul
     ___awdiv
       ___wmul (ARG)
   _SeePressure_pa
     _AdcSeeData
       ___wmul
     ___aldiv
       ___lmul (ARG)
     ___awdiv
       ___wmul (ARG)
     ___lmul
   _SetAlarmSV1
     _printf
       _GetPressureV_pa (ARG)
         _AdcGetData
           ___wmul
         ___awdiv
           ___wmul (ARG)
       _GetPressure_pa (ARG)
         _AdcGetData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       _See12V (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___lmul
       _See5V (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
       _SeePressureV_pa (ARG)
         _AdcSeeData
           ___wmul
         ___awdiv
           ___wmul (ARG)
       _SeePressure_pa (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       ___awdiv (ARG)
         ___wmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
           _fputc
             _putch
               _UART1_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _UART1_Write
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
             _toupper
               _islower
   _SetCalibrateState
     _ClearVars
       _ClearCircuitFailureAlarm
       _ClearEPAboveSetAlarm
       _ClearEPBelowSetAlarm
       _ClearIPAboveSetAlarm
       _ClearIPBelowSetAlarm
     _GetPressureV_pa
       _AdcGetData
         ___wmul
       ___awdiv
         ___wmul (ARG)
     _GetPressure_pa
       _AdcGetData
         ___wmul
       ___aldiv
         ___lmul (ARG)
       ___awdiv
         ___wmul (ARG)
       ___lmul
     _TMR0_StartTimer
     _TMR0_StopTimer
     _UnDisplayCalibrate
     ___awdiv
       ___wmul (ARG)
     _printf
       _GetPressureV_pa (ARG)
         _AdcGetData
           ___wmul
         ___awdiv
           ___wmul (ARG)
       _GetPressure_pa (ARG)
         _AdcGetData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       _See12V (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___lmul
       _See5V (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
       _SeePressureV_pa (ARG)
         _AdcSeeData
           ___wmul
         ___awdiv
           ___wmul (ARG)
       _SeePressure_pa (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       ___awdiv (ARG)
         ___wmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
           _fputc
             _putch
               _UART1_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _UART1_Write
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
             _toupper
               _islower
   _SetSV1
     _printf
       _GetPressureV_pa (ARG)
         _AdcGetData
           ___wmul
         ___awdiv
           ___wmul (ARG)
       _GetPressure_pa (ARG)
         _AdcGetData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       _See12V (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___lmul
       _See5V (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
       _SeePressureV_pa (ARG)
         _AdcSeeData
           ___wmul
         ___awdiv
           ___wmul (ARG)
       _SeePressure_pa (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       ___awdiv (ARG)
         ___wmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
           _fputc
             _putch
               _UART1_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _UART1_Write
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
             _toupper
               _islower
   _TestAlarm
     _printf
       _GetPressureV_pa (ARG)
         _AdcGetData
           ___wmul
         ___awdiv
           ___wmul (ARG)
       _GetPressure_pa (ARG)
         _AdcGetData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       _See12V (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___lmul
       _See5V (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
       _SeePressureV_pa (ARG)
         _AdcSeeData
           ___wmul
         ___awdiv
           ___wmul (ARG)
       _SeePressure_pa (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       ___awdiv (ARG)
         ___wmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
           _fputc
             _putch
               _UART1_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _UART1_Write
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
             _toupper
               _islower
     _putchar
       _fputc
         _putch
           _UART1_Write
   _UART1_is_rx_ready
   ___llmod
   _getch
     _UART1_Read
   _printf
     _GetPressureV_pa (ARG)
       _AdcGetData
         ___wmul
       ___awdiv
         ___wmul (ARG)
     _GetPressure_pa (ARG)
       _AdcGetData
         ___wmul
       ___aldiv
         ___lmul (ARG)
       ___awdiv
         ___wmul (ARG)
       ___lmul
     _See12V (ARG)
       _AdcSeeData
         ___wmul
       ___aldiv
         ___lmul (ARG)
       ___lmul
     _See5V (ARG)
       _AdcSeeData
         ___wmul
       ___aldiv
         ___lmul (ARG)
     _SeePressureV_pa (ARG)
       _AdcSeeData
         ___wmul
       ___awdiv
         ___wmul (ARG)
     _SeePressure_pa (ARG)
       _AdcSeeData
         ___wmul
       ___aldiv
         ___lmul (ARG)
       ___awdiv
         ___wmul (ARG)
       ___lmul
     ___awdiv (ARG)
       ___wmul (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _UART1_Write
             _fputs
               _fputc
                 _putch
                   _UART1_Write
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _UART1_Write
             _fputs
               _fputc
                 _putch
                   _UART1_Write
             _strlen
         _fputc
           _putch
             _UART1_Write
         _isdigit
         _stoa
           _fputc
             _putch
               _UART1_Write
           _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _UART1_Write
             _fputs
               _fputc
                 _putch
                   _UART1_Write
             _strlen
           _toupper
             _islower

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _AdcHandler *
       _ADCC_GetConversionResult
       _AdcReady
         _ADCC_IsConversionDone
       i2_ADCC_Initialize
         i2_ADCC_SetADTIInterruptHandler
       i2_ADCC_StartConversion
       i2_AdcInit
         i2_ADCC_SetADTIInterruptHandler
         i2_ADCC_StartConversion
         i2___wmul
       i2___wmul
       i2_printf
         i2_GetPressureV_pa (ARG)
           i2_AdcGetData
             i2___wmul
           i2___awdiv
             i2___wmul (ARG)
         i2_GetPressure_pa (ARG)
           i2_AdcGetData
             i2___wmul
           i2___aldiv
             i2___lmul (ARG)
           i2___awdiv
             i2___wmul (ARG)
           i2___lmul
         i2___awdiv (ARG)
           i2___wmul (ARG)
         i2_vfprintf (ARG)
           i2_vfpfcnvrt
             i2_atoi
               i2___wmul
               i2_isdigit
               i2_isspace
             i2_ctoa
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
             i2_dtoa
               i2___aodiv
               i2___aomod
               i2_abs
                 i2___aomod (ARG)
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
             i2_fputc
               i2_putch
                 i2_UART1_Write
             i2_isdigit
             i2_stoa
               i2_fputc
                 i2_putch
                   i2_UART1_Write
               i2_strlen
             i2_xtoa
               i2_isalpha
               i2_isupper
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
               i2_toupper
                 i2_islower
   _CMP1_ISR *
     Absolute function(Fake) *
     _BuzzerCMPHandler *
       i2_CMP1_Disable
       i2_printf
         i2_GetPressureV_pa (ARG)
           i2_AdcGetData
             i2___wmul
           i2___awdiv
             i2___wmul (ARG)
         i2_GetPressure_pa (ARG)
           i2_AdcGetData
             i2___wmul
           i2___aldiv
             i2___lmul (ARG)
           i2___awdiv
             i2___wmul (ARG)
           i2___lmul
         i2___awdiv (ARG)
           i2___wmul (ARG)
         i2_vfprintf (ARG)
           i2_vfpfcnvrt
             i2_atoi
               i2___wmul
               i2_isdigit
               i2_isspace
             i2_ctoa
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
             i2_dtoa
               i2___aodiv
               i2___aomod
               i2_abs
                 i2___aomod (ARG)
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
             i2_fputc
               i2_putch
                 i2_UART1_Write
             i2_isdigit
             i2_stoa
               i2_fputc
                 i2_putch
                   i2_UART1_Write
               i2_strlen
             i2_xtoa
               i2_isalpha
               i2_isupper
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
               i2_toupper
                 i2_islower
   _I2C2_Isr *
     _I2C2_SlaveClearBuff
     _I2C2_SlaveClearStopFlag
     _I2C2_SlaveIsRxBufFull
     _I2C2_SlaveRdCallBack
       Absolute function(Fake) *
       _I2C2_SlaveDefRdInterruptHandler *
         _I2C2_SlaveGetRxData
       _ReceiveHandler *
         _I2C2_Read
           _I2C2_SlaveGetRxData
     _I2C2_SlaveReleaseClock
     _I2C2_SlaveSetCounter
     _I2C2_SlaveStopCallBack
       Absolute function(Fake) *
       _StopHandler *
         _ReceiveHandler
           _I2C2_Read
             _I2C2_SlaveGetRxData
         _UpdateState
           _ClearAllAlarm
             _ClearHighPressureAlarmLow
             _ClearTdeTooLongAlarm
             _ClearTdiTooLongAlarm
             _ClearVAboveMaxAlarm
             _ClearVBelowMinAlarm
             i2_ClearBaterryLowAlarmHigh
             i2_ClearBaterryLowAlarmMed
             i2_ClearBatteryFailAlarm
             i2_ClearCircuitFailureAlarm
             i2_ClearControlFailAlarm
             i2_ClearEPAboveSetAlarm
             i2_ClearEPBelowSetAlarm
             i2_ClearGasFailureAlarm
             i2_ClearHighPressureAlarmHigh
             i2_ClearIPAboveSetAlarm
             i2_ClearIPBelowSetAlarm
             i2_ClearMonitorFailAlarm
             i2_ClearNoPowerSupplyAlarm
             i2_ClearVeryHighPressureAlarmHigh
           _ControllerBuzzerCheck
             i2_CMP1_Enable
           _DisplayDisable
             i2_ValueDisplay
               i2_GetAlarmState
                 i2_AnyAlarm
               i2_GetBpm
               i2_GetDisableAlarmSV1
               i2_GetEp
                 i2___awdiv
                   i2___wmul (ARG)
               i2_GetIp
                 i2___awdiv
                   i2___wmul (ARG)
               i2_GetPmax
                 i2___awdiv
                   i2___wmul (ARG)
               i2_GetSpr
               i2_GetTargetEp
                 i2___awdiv
                   i2___wmul (ARG)
               i2_GetTargetIp
                 i2___awdiv
                   i2___wmul (ARG)
               i2_GetTde
               i2_GetTdi
               i2_GetTe
               i2_GetTi
               i2_GetVolume
               i2___awdiv
                 i2___wmul (ARG)
               i2___awmod
               i2___wmul
               i2_sprintf
                 i2_vfprintf
                   i2_vfpfcnvrt
                     i2_atoi
                       i2___wmul
                       i2_isdigit
                       i2_isspace
                     i2_ctoa
                       i2_pad
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                         i2_fputs
                           i2_fputc
                             i2_putch
                               i2_UART1_Write
                         i2_strlen
                     i2_dtoa
                       i2___aodiv
                       i2___aomod
                       i2_abs
                         i2___aomod (ARG)
                       i2_pad
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                         i2_fputs
                           i2_fputc
                             i2_putch
                               i2_UART1_Write
                         i2_strlen
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                     i2_isdigit
                     i2_stoa
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                       i2_strlen
                     i2_xtoa
                       i2_isalpha
                       i2_isupper
                       i2_pad
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                         i2_fputs
                           i2_fputc
                             i2_putch
                               i2_UART1_Write
                         i2_strlen
                       i2_toupper
                         i2_islower
           _DisplayEnable
             i2_ValueDisplay
               i2_GetAlarmState
                 i2_AnyAlarm
               i2_GetBpm
               i2_GetDisableAlarmSV1
               i2_GetEp
                 i2___awdiv
                   i2___wmul (ARG)
               i2_GetIp
                 i2___awdiv
                   i2___wmul (ARG)
               i2_GetPmax
                 i2___awdiv
                   i2___wmul (ARG)
               i2_GetSpr
               i2_GetTargetEp
                 i2___awdiv
                   i2___wmul (ARG)
               i2_GetTargetIp
                 i2___awdiv
                   i2___wmul (ARG)
               i2_GetTde
               i2_GetTdi
               i2_GetTe
               i2_GetTi
               i2_GetVolume
               i2___awdiv
                 i2___wmul (ARG)
               i2___awmod
               i2___wmul
               i2_sprintf
                 i2_vfprintf
                   i2_vfpfcnvrt
                     i2_atoi
                       i2___wmul
                       i2_isdigit
                       i2_isspace
                     i2_ctoa
                       i2_pad
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                         i2_fputs
                           i2_fputc
                             i2_putch
                               i2_UART1_Write
                         i2_strlen
                     i2_dtoa
                       i2___aodiv
                       i2___aomod
                       i2_abs
                         i2___aomod (ARG)
                       i2_pad
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                         i2_fputs
                           i2_fputc
                             i2_putch
                               i2_UART1_Write
                         i2_strlen
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                     i2_isdigit
                     i2_stoa
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                       i2_strlen
                     i2_xtoa
                       i2_isalpha
                       i2_isupper
                       i2_pad
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                         i2_fputs
                           i2_fputc
                             i2_putch
                               i2_UART1_Write
                         i2_strlen
                       i2_toupper
                         i2_islower
           _GetControllerBuzzerCheck
           _SetControlFailAlarm
           _SetMaxPressure
           _SetTarget
             i2___aldiv
               i2___lmul (ARG)
             i2___wmul
           _SetVolumeControl
           i2_ClearControlFailAlarm
           i2_EnableAlarmSV1
           i2_LCDOff
           i2_LCDOn
           i2_MonitorDisable
           i2_MonitorEnable
           i2_SetCalibrateState
             i2_ClearVars
               i2_ClearCircuitFailureAlarm
               i2_ClearEPAboveSetAlarm
               i2_ClearEPBelowSetAlarm
               i2_ClearIPAboveSetAlarm
               i2_ClearIPBelowSetAlarm
             i2_GetPressureV_pa
               i2_AdcGetData
                 i2___wmul
               i2___awdiv
                 i2___wmul (ARG)
             i2_GetPressure_pa
               i2_AdcGetData
                 i2___wmul
               i2___aldiv
                 i2___lmul (ARG)
               i2___awdiv
                 i2___wmul (ARG)
               i2___lmul
             i2_TMR0_StartTimer
             i2_TMR0_StopTimer
             i2_UnDisplayCalibrate
             i2___awdiv
               i2___wmul (ARG)
             i2_printf
               i2_GetPressureV_pa (ARG)
                 i2_AdcGetData
                   i2___wmul
                 i2___awdiv
                   i2___wmul (ARG)
               i2_GetPressure_pa (ARG)
                 i2_AdcGetData
                   i2___wmul
                 i2___aldiv
                   i2___lmul (ARG)
                 i2___awdiv
                   i2___wmul (ARG)
                 i2___lmul
               i2___awdiv (ARG)
                 i2___wmul (ARG)
               i2_vfprintf (ARG)
                 i2_vfpfcnvrt
                   i2_atoi
                     i2___wmul
                     i2_isdigit
                     i2_isspace
                   i2_ctoa
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                       i2_strlen
                   i2_dtoa
                     i2___aodiv
                     i2___aomod
                     i2_abs
                       i2___aomod (ARG)
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                       i2_strlen
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_isdigit
                   i2_stoa
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                     i2_strlen
                   i2_xtoa
                     i2_isalpha
                     i2_isupper
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                       i2_strlen
                     i2_toupper
                       i2_islower
           i2_SetSV1
             i2_printf
               i2_GetPressureV_pa (ARG)
                 i2_AdcGetData
                   i2___wmul
                 i2___awdiv
                   i2___wmul (ARG)
               i2_GetPressure_pa (ARG)
                 i2_AdcGetData
                   i2___wmul
                 i2___aldiv
                   i2___lmul (ARG)
                 i2___awdiv
                   i2___wmul (ARG)
                 i2___lmul
               i2___awdiv (ARG)
                 i2___wmul (ARG)
               i2_vfprintf (ARG)
                 i2_vfpfcnvrt
                   i2_atoi
                     i2___wmul
                     i2_isdigit
                     i2_isspace
                   i2_ctoa
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                       i2_strlen
                   i2_dtoa
                     i2___aodiv
                     i2___aomod
                     i2_abs
                       i2___aomod (ARG)
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                       i2_strlen
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_isdigit
                   i2_stoa
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                     i2_strlen
                   i2_xtoa
                     i2_isalpha
                     i2_isupper
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                       i2_strlen
                     i2_toupper
                       i2_islower
           i2_printf
             i2_GetPressureV_pa (ARG)
               i2_AdcGetData
                 i2___wmul
               i2___awdiv
                 i2___wmul (ARG)
             i2_GetPressure_pa (ARG)
               i2_AdcGetData
                 i2___wmul
               i2___aldiv
                 i2___lmul (ARG)
               i2___awdiv
                 i2___wmul (ARG)
               i2___lmul
             i2___awdiv (ARG)
               i2___wmul (ARG)
             i2_vfprintf (ARG)
               i2_vfpfcnvrt
                 i2_atoi
                   i2___wmul
                   i2_isdigit
                   i2_isspace
                 i2_ctoa
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                     i2_strlen
                 i2_dtoa
                   i2___aodiv
                   i2___aomod
                   i2_abs
                     i2___aomod (ARG)
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                     i2_strlen
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_isdigit
                 i2_stoa
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_strlen
                 i2_xtoa
                   i2_isalpha
                   i2_isupper
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                     i2_strlen
                   i2_toupper
                     i2_islower
         i2_printf
           i2_GetPressureV_pa (ARG)
             i2_AdcGetData
               i2___wmul
             i2___awdiv
               i2___wmul (ARG)
           i2_GetPressure_pa (ARG)
             i2_AdcGetData
               i2___wmul
             i2___aldiv
               i2___lmul (ARG)
             i2___awdiv
               i2___wmul (ARG)
             i2___lmul
           i2___awdiv (ARG)
             i2___wmul (ARG)
           i2_vfprintf (ARG)
             i2_vfpfcnvrt
               i2_atoi
                 i2___wmul
                 i2_isdigit
                 i2_isspace
               i2_ctoa
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                   i2_strlen
               i2_dtoa
                 i2___aodiv
                 i2___aomod
                 i2_abs
                   i2___aomod (ARG)
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                   i2_strlen
               i2_fputc
                 i2_putch
                   i2_UART1_Write
               i2_isdigit
               i2_stoa
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_strlen
               i2_xtoa
                 i2_isalpha
                 i2_isupper
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                   i2_strlen
                 i2_toupper
                   i2_islower
   _TMR0_ISR *
     Absolute function(Fake) *
     _MonitorPressureTask *
       _AdcReStartCycle
         i2_ADCC_StartConversion
         i2___wmul
       _AdcReady
         _ADCC_IsConversionDone
       _ClearTdeTooLongAlarm
       _ClearTdiTooLongAlarm
       _ClearVAboveMaxAlarm
       _ClearVBelowMinAlarm
       _DisplayCalibrate
         i2___awdiv (ARG)
           i2___wmul (ARG)
         i2_sprintf (ARG)
           i2_vfprintf
             i2_vfpfcnvrt
               i2_atoi
                 i2___wmul
                 i2_isdigit
                 i2_isspace
               i2_ctoa
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                   i2_strlen
               i2_dtoa
                 i2___aodiv
                 i2___aomod
                 i2_abs
                   i2___aomod (ARG)
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                   i2_strlen
               i2_fputc
                 i2_putch
                   i2_UART1_Write
               i2_isdigit
               i2_stoa
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_strlen
               i2_xtoa
                 i2_isalpha
                 i2_isupper
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                   i2_strlen
                 i2_toupper
                   i2_islower
       _GetPressure_mbar02
         i2_GetPressure_pa
           i2_AdcGetData
             i2___wmul
           i2___aldiv
             i2___lmul (ARG)
           i2___awdiv
             i2___wmul (ARG)
           i2___lmul
         i2___awdiv
           i2___wmul (ARG)
       _SetCircuitFailureAlarm
       _SetEPAboveSetAlarm
       _SetEPBelowSetAlarm
       _SetGasFailureAlarm
       _SetIPAboveSetAlarm
       _SetIPBelowSetAlarm
       _SetTdeTooLongAlarm
       _SetTdiTooLongAlarm
       _SetVAboveMaxAlarm
       _SetVBelowMinAlarm
       ___lldiv
       ___lwdiv
       _isqrt
       i2_AdcDataReady
         i2___wmul
       i2_ClearCircuitFailureAlarm
       i2_ClearEPAboveSetAlarm
       i2_ClearEPBelowSetAlarm
       i2_ClearGasFailureAlarm
       i2_ClearIPAboveSetAlarm
       i2_ClearIPBelowSetAlarm
       i2_ClearVars
         i2_ClearCircuitFailureAlarm
         i2_ClearEPAboveSetAlarm
         i2_ClearEPBelowSetAlarm
         i2_ClearIPAboveSetAlarm
         i2_ClearIPBelowSetAlarm
       i2_GetPressureV_pa
         i2_AdcGetData
           i2___wmul
         i2___awdiv
           i2___wmul (ARG)
       i2_GetPressure_pa
         i2_AdcGetData
           i2___wmul
         i2___aldiv
           i2___lmul (ARG)
         i2___awdiv
           i2___wmul (ARG)
         i2___lmul
       i2_See12V
         i2_AdcSeeData
           i2___wmul
         i2___aldiv
           i2___lmul (ARG)
         i2___lmul
       i2_See5V
         i2_AdcSeeData
           i2___wmul
         i2___aldiv
           i2___lmul (ARG)
       i2___aldiv
         i2___lmul (ARG)
       i2___awdiv
         i2___wmul (ARG)
       i2___awmod
       i2___wmul
       i2_printf
         i2_GetPressureV_pa (ARG)
           i2_AdcGetData
             i2___wmul
           i2___awdiv
             i2___wmul (ARG)
         i2_GetPressure_pa (ARG)
           i2_AdcGetData
             i2___wmul
           i2___aldiv
             i2___lmul (ARG)
           i2___awdiv
             i2___wmul (ARG)
           i2___lmul
         i2___awdiv (ARG)
           i2___wmul (ARG)
         i2_vfprintf (ARG)
           i2_vfpfcnvrt
             i2_atoi
               i2___wmul
               i2_isdigit
               i2_isspace
             i2_ctoa
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
             i2_dtoa
               i2___aodiv
               i2___aomod
               i2_abs
                 i2___aomod (ARG)
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
             i2_fputc
               i2_putch
                 i2_UART1_Write
             i2_isdigit
             i2_stoa
               i2_fputc
                 i2_putch
                   i2_UART1_Write
               i2_strlen
             i2_xtoa
               i2_isalpha
               i2_isupper
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
               i2_toupper
                 i2_islower
     _TMR0_DefaultInterruptHandler *
   _TMR1_ISR *
     Absolute function(Fake) *
     _ButtonTask *
       i2_DisableAlarmSV1
       i2_HistAlarm
         i2_AlarmUpdateLCD
           i2_AlarmDisplay
             i2_ValueDisplay
               i2_GetAlarmState
                 i2_AnyAlarm
               i2_GetBpm
               i2_GetDisableAlarmSV1
               i2_GetEp
                 i2___awdiv
                   i2___wmul (ARG)
               i2_GetIp
                 i2___awdiv
                   i2___wmul (ARG)
               i2_GetPmax
                 i2___awdiv
                   i2___wmul (ARG)
               i2_GetSpr
               i2_GetTargetEp
                 i2___awdiv
                   i2___wmul (ARG)
               i2_GetTargetIp
                 i2___awdiv
                   i2___wmul (ARG)
               i2_GetTde
               i2_GetTdi
               i2_GetTe
               i2_GetTi
               i2_GetVolume
               i2___awdiv
                 i2___wmul (ARG)
               i2___awmod
               i2___wmul
               i2_sprintf
                 i2_vfprintf
                   i2_vfpfcnvrt
                     i2_atoi
                       i2___wmul
                       i2_isdigit
                       i2_isspace
                     i2_ctoa
                       i2_pad
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                         i2_fputs
                           i2_fputc
                             i2_putch
                               i2_UART1_Write
                         i2_strlen
                     i2_dtoa
                       i2___aodiv
                       i2___aomod
                       i2_abs
                         i2___aomod (ARG)
                       i2_pad
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                         i2_fputs
                           i2_fputc
                             i2_putch
                               i2_UART1_Write
                         i2_strlen
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                     i2_isdigit
                     i2_stoa
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                       i2_strlen
                     i2_xtoa
                       i2_isalpha
                       i2_isupper
                       i2_pad
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                         i2_fputs
                           i2_fputc
                             i2_putch
                               i2_UART1_Write
                         i2_strlen
                       i2_toupper
                         i2_islower
             i2___awmod
             i2_sprintf
               i2_vfprintf
                 i2_vfpfcnvrt
                   i2_atoi
                     i2___wmul
                     i2_isdigit
                     i2_isspace
                   i2_ctoa
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                       i2_strlen
                   i2_dtoa
                     i2___aodiv
                     i2___aomod
                     i2_abs
                       i2___aomod (ARG)
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                       i2_strlen
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_isdigit
                   i2_stoa
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                     i2_strlen
                   i2_xtoa
                     i2_isalpha
                     i2_isupper
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                       i2_strlen
                     i2_toupper
                       i2_islower
           i2_AnyAlarm
           i2_HigherAlarm
             i2___wmul
           i2_ValueDisplay
             i2_GetAlarmState
               i2_AnyAlarm
             i2_GetBpm
             i2_GetDisableAlarmSV1
             i2_GetEp
               i2___awdiv
                 i2___wmul (ARG)
             i2_GetIp
               i2___awdiv
                 i2___wmul (ARG)
             i2_GetPmax
               i2___awdiv
                 i2___wmul (ARG)
             i2_GetSpr
             i2_GetTargetEp
               i2___awdiv
                 i2___wmul (ARG)
             i2_GetTargetIp
               i2___awdiv
                 i2___wmul (ARG)
             i2_GetTde
             i2_GetTdi
             i2_GetTe
             i2_GetTi
             i2_GetVolume
             i2___awdiv
               i2___wmul (ARG)
             i2___awmod
             i2___wmul
             i2_sprintf
               i2_vfprintf
                 i2_vfpfcnvrt
                   i2_atoi
                     i2___wmul
                     i2_isdigit
                     i2_isspace
                   i2_ctoa
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                       i2_strlen
                   i2_dtoa
                     i2___aodiv
                     i2___aomod
                     i2_abs
                       i2___aomod (ARG)
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                       i2_strlen
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_isdigit
                   i2_stoa
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                     i2_strlen
                   i2_xtoa
                     i2_isalpha
                     i2_isupper
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                       i2_strlen
                     i2_toupper
                       i2_islower
           i2___wmul
         i2_TMR5_StartTimer
         i2_TMR5_StopTimer
       i2_MuteAlarm
         i2_AnyAlarm
         i2_BuzzerClear
           i2_BuzzerOff
             i2_CMP1_Disable
           i2_TMR4_Stop
         i2_ClearCircuitFailureAlarm
         i2_ClearControlFailAlarm
         i2_ClearGasFailureAlarm
         i2_ClearHighPressureAlarmHigh
         i2_ClearMonitorFailAlarm
         i2_ClearVeryHighPressureAlarmHigh
         i2_HigherAlarm
           i2___wmul
         i2_SetAlarmSV1
           i2_printf
             i2_GetPressureV_pa (ARG)
               i2_AdcGetData
                 i2___wmul
               i2___awdiv
                 i2___wmul (ARG)
             i2_GetPressure_pa (ARG)
               i2_AdcGetData
                 i2___wmul
               i2___aldiv
                 i2___lmul (ARG)
               i2___awdiv
                 i2___wmul (ARG)
               i2___lmul
             i2___awdiv (ARG)
               i2___wmul (ARG)
             i2_vfprintf (ARG)
               i2_vfpfcnvrt
                 i2_atoi
                   i2___wmul
                   i2_isdigit
                   i2_isspace
                 i2_ctoa
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                     i2_strlen
                 i2_dtoa
                   i2___aodiv
                   i2___aomod
                   i2_abs
                     i2___aomod (ARG)
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                     i2_strlen
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_isdigit
                 i2_stoa
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_strlen
                 i2_xtoa
                   i2_isalpha
                   i2_isupper
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                     i2_strlen
                   i2_toupper
                     i2_islower
         i2___wmul
         i2_printf
           i2_GetPressureV_pa (ARG)
             i2_AdcGetData
               i2___wmul
             i2___awdiv
               i2___wmul (ARG)
           i2_GetPressure_pa (ARG)
             i2_AdcGetData
               i2___wmul
             i2___aldiv
               i2___lmul (ARG)
             i2___awdiv
               i2___wmul (ARG)
             i2___lmul
           i2___awdiv (ARG)
             i2___wmul (ARG)
           i2_vfprintf (ARG)
             i2_vfpfcnvrt
               i2_atoi
                 i2___wmul
                 i2_isdigit
                 i2_isspace
               i2_ctoa
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                   i2_strlen
               i2_dtoa
                 i2___aodiv
                 i2___aomod
                 i2_abs
                   i2___aomod (ARG)
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                   i2_strlen
               i2_fputc
                 i2_putch
                   i2_UART1_Write
               i2_isdigit
               i2_stoa
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_strlen
               i2_xtoa
                 i2_isalpha
                 i2_isupper
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                   i2_strlen
                 i2_toupper
                   i2_islower
       i2_printf
         i2_GetPressureV_pa (ARG)
           i2_AdcGetData
             i2___wmul
           i2___awdiv
             i2___wmul (ARG)
         i2_GetPressure_pa (ARG)
           i2_AdcGetData
             i2___wmul
           i2___aldiv
             i2___lmul (ARG)
           i2___awdiv
             i2___wmul (ARG)
           i2___lmul
         i2___awdiv (ARG)
           i2___wmul (ARG)
         i2_vfprintf (ARG)
           i2_vfpfcnvrt
             i2_atoi
               i2___wmul
               i2_isdigit
               i2_isspace
             i2_ctoa
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
             i2_dtoa
               i2___aodiv
               i2___aomod
               i2_abs
                 i2___aomod (ARG)
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
             i2_fputc
               i2_putch
                 i2_UART1_Write
             i2_isdigit
             i2_stoa
               i2_fputc
                 i2_putch
                   i2_UART1_Write
               i2_strlen
             i2_xtoa
               i2_isalpha
               i2_isupper
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
               i2_toupper
                 i2_islower
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
   _TMR4_ISR *
     Absolute function(Fake) *
     _BuzzerHandler *
       i2_BuzzerTask
         i2_BuzzerOff
           i2_CMP1_Disable
         i2_BuzzerOn
           i2_CMP1_Enable
         i2_ClearMonitorFailAlarm
         i2_SetMonitorFailAlarm
         i2_TMR4_Period8BitSet
         i2_TMR4_SetInterruptHandler
         i2_TMR4_Start
         i2_TMR4_Stop
         i2_printf
           i2_GetPressureV_pa (ARG)
             i2_AdcGetData
               i2___wmul
             i2___awdiv
               i2___wmul (ARG)
           i2_GetPressure_pa (ARG)
             i2_AdcGetData
               i2___wmul
             i2___aldiv
               i2___lmul (ARG)
             i2___awdiv
               i2___wmul (ARG)
             i2___lmul
           i2___awdiv (ARG)
             i2___wmul (ARG)
           i2_vfprintf (ARG)
             i2_vfpfcnvrt
               i2_atoi
                 i2___wmul
                 i2_isdigit
                 i2_isspace
               i2_ctoa
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                   i2_strlen
               i2_dtoa
                 i2___aodiv
                 i2___aomod
                 i2_abs
                   i2___aomod (ARG)
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                   i2_strlen
               i2_fputc
                 i2_putch
                   i2_UART1_Write
               i2_isdigit
               i2_stoa
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_strlen
               i2_xtoa
                 i2_isalpha
                 i2_isupper
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                   i2_strlen
                 i2_toupper
                   i2_islower
     _BuzzerTestHandler *
       i2_BuzzerOff
         i2_CMP1_Disable
       i2_printf
         i2_GetPressureV_pa (ARG)
           i2_AdcGetData
             i2___wmul
           i2___awdiv
             i2___wmul (ARG)
         i2_GetPressure_pa (ARG)
           i2_AdcGetData
             i2___wmul
           i2___aldiv
             i2___lmul (ARG)
           i2___awdiv
             i2___wmul (ARG)
           i2___lmul
         i2___awdiv (ARG)
           i2___wmul (ARG)
         i2_vfprintf (ARG)
           i2_vfpfcnvrt
             i2_atoi
               i2___wmul
               i2_isdigit
               i2_isspace
             i2_ctoa
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
             i2_dtoa
               i2___aodiv
               i2___aomod
               i2_abs
                 i2___aomod (ARG)
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
             i2_fputc
               i2_putch
                 i2_UART1_Write
             i2_isdigit
             i2_stoa
               i2_fputc
                 i2_putch
                   i2_UART1_Write
               i2_strlen
             i2_xtoa
               i2_isalpha
               i2_isupper
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
               i2_toupper
                 i2_islower
     _TMR4_DefaultInterruptHandler *
   _TMR5_ISR *
     Absolute function(Fake) *
     _AlarmHandler *
       i2_AnyAlarm
       i2_printf
         i2_GetPressureV_pa (ARG)
           i2_AdcGetData
             i2___wmul
           i2___awdiv
             i2___wmul (ARG)
         i2_GetPressure_pa (ARG)
           i2_AdcGetData
             i2___wmul
           i2___aldiv
             i2___lmul (ARG)
           i2___awdiv
             i2___wmul (ARG)
           i2___lmul
         i2___awdiv (ARG)
           i2___wmul (ARG)
         i2_vfprintf (ARG)
           i2_vfpfcnvrt
             i2_atoi
               i2___wmul
               i2_isdigit
               i2_isspace
             i2_ctoa
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
             i2_dtoa
               i2___aodiv
               i2___aomod
               i2_abs
                 i2___aomod (ARG)
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
             i2_fputc
               i2_putch
                 i2_UART1_Write
             i2_isdigit
             i2_stoa
               i2_fputc
                 i2_putch
                   i2_UART1_Write
               i2_strlen
             i2_xtoa
               i2_isalpha
               i2_isupper
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
               i2_toupper
                 i2_islower
     _TMR5_DefaultInterruptHandler *
     _TMR5_WriteTimer *
   _TMR6_ISR *
     Absolute function(Fake) *
     _ControllerTimerHandler *
       _SetControlFailAlarm
       i2_ClearControlFailAlarm
       i2___awmod
       i2_printf
         i2_GetPressureV_pa (ARG)
           i2_AdcGetData
             i2___wmul
           i2___awdiv
             i2___wmul (ARG)
         i2_GetPressure_pa (ARG)
           i2_AdcGetData
             i2___wmul
           i2___aldiv
             i2___lmul (ARG)
           i2___awdiv
             i2___wmul (ARG)
           i2___lmul
         i2___awdiv (ARG)
           i2___wmul (ARG)
         i2_vfprintf (ARG)
           i2_vfpfcnvrt
             i2_atoi
               i2___wmul
               i2_isdigit
               i2_isspace
             i2_ctoa
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
             i2_dtoa
               i2___aodiv
               i2___aomod
               i2_abs
                 i2___aomod (ARG)
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
             i2_fputc
               i2_putch
                 i2_UART1_Write
             i2_isdigit
             i2_stoa
               i2_fputc
                 i2_putch
                   i2_UART1_Write
               i2_strlen
             i2_xtoa
               i2_isalpha
               i2_isupper
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
               i2_toupper
                 i2_islower
     _TMR6_DefaultInterruptHandler *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *
   _UART1_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0     63F      37       39.0%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      64      13       39.1%
BITBANK3           100      0       0      10        0.0%
BANK3              100      1      FA      11       97.7%
BITBANK2           100      0       0       8        0.0%
BANK2              100      B     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     C7      FC       7       98.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     68      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     459      32        0.0%
DATA                 0      0     A98       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Jul  9 11:45:49 2020

                              i2_EnableAlarmSV1 A56A                            ??_TMR4_Period8BitSet 0104  
                   __end_of_ClearVAboveMaxAlarm A5C2                                  i2_ValueDisplay 1EA8  
                                   ?_LCDMessage 0108                          ??_I2C2_SlaveSetCounter 0001  
                                             _a 034C                     ?i2_ClearCircuitFailureAlarm 0001  
                      _ClearCircuitFailureAlarm A4DA                __end_of_TMR5_SetInterruptHandler A2E8  
                     __size_of_SetVolumeControl 000A                      __end_of_BaterryLowAlarmMed A6B2  
                                  ?_LCDMessage1 0110                                    ?_LCDMessage2 0110  
                                   __CFG_CP$OFF 000000                               ??_CMP1_Initialize 0104  
                                  ___awdiv@sign 010F                         ?i2_ClearEPBelowSetAlarm 0001  
                                            _bp 02BA                               ??_TMR6_StartTimer 0104  
                        __end_of_FVR_Initialize A4BA                                              _pe 01D5  
                                            _pi 01D7                                              _on 00F9  
                                            _te 0258                                              _ti 025A  
                                            _tt 00C8                 ?_ClearVeryHighPressureAlarmHigh 0001  
              ??_ClearVeryHighPressureAlarmHigh 0104                             ___wmul@multiplicand 0106  
                             ??_TMR5_WriteTimer 0003                                 ?_ControllerInit 0001  
                   __end_of_BaterryLowAlarmHigh A6AE                           ??_CircuitFailureAlarm 0104  
                         __end_ofi2_UART1_Write 8DCA                                   ?_LCDMessage12 0110  
                           _SetControlFailAlarm A572                                      HistAlarm@i 02F7  
                      ??_I2C2_SlaveReleaseClock 0001                                     __CFG_LVP$ON 000000  
                         i2_AlarmUpdateLCD$7131 00C3                           i2_AlarmUpdateLCD$7132 00C5  
                __end_ofi2_ClearIPAboveSetAlarm A06E                                             l657 8C8C  
                                           _LED 01F0                                             _PR4 003F9F  
                                           i2l6 7668                              i2___aodiv@quotient 0013  
                          _ClearEPAboveSetAlarm A016                      ??_SetHighPressureAlarmHigh 0104  
                               _timer1ReloadVal 02DD                                             _abs 93E2  
                               _TdeTooLongAlarm A6A2                           __end_of_GetAlarmState 9006  
                                           _bpm 0256                                             _pad 7270  
                                           _tt1 0266                                             _tt2 00DC  
                                           _tt3 01DD                                             _tt4 00DA  
                                           _tde 01D9                                             _msg 0200  
                                           _tdi 01DB                                             _rpe 0246  
                                           _rpi 0248                                             _spr 0232  
                                           _run 00F0                         __size_of_PMD_Initialize 0024  
                                  ___awmod@sign 0109                        __size_of_AdcReStartCycle 0064  
                               _TMR2_Initialize 9ED4                                             prod 003FF3  
                                           tosl 003FFD                                             wreg 003FE8  
                           __end_ofi2_vfpfcnvrt 18D6                             GetPressureV_pa@adcv 0116  
                      ?_ClearNoPowerSupplyAlarm 0001                         __end_of_SeePressureV_pa 818A  
                       __end_ofi2_GetAlarmState 9056                              _UART1_Transmit_ISR 91D4  
                                 __CFG_BBEN$OFF 000000                         ??_ClearControlFailAlarm 0104  
                          __end_of_CMP1_Disable A52A                                 ?_VBelowMinAlarm 0001  
                                  ?_LCDWriteCmd 0001                                 __end_of_LCDInit 69E4  
                               __end_of_LCDTest 7E5C                                    __CFG_ZCD$OFF 000000  
                           __end_of_GetTargetEp 9B50                             __end_of_GetTargetIp 9B2A  
                      ?_I2C2_SlaveSetIsrHandler 0104                        __size_of_GasFailureAlarm 0004  
                                          ?_abs 0116                                      _GetIp$4810 0119  
                                          l2116 2A74                                            l2142 2B50  
                                    _GetIp$4809 0117                                            l1710 90B4  
                                          l1623 780A                                            l1730 90D4  
                                          l1722 90C8                                            l1716 90BE  
                                          l4028 858E                                            l1653 7CB8  
                                          l1647 7CAE                                            l1743 7C18  
                                          l3520 5326                                            l1728 90D2  
                                          l2632 474E                                            l2385 6B9A  
                                          l2377 6B6E                                            l1665 7CCC  
                                          l1761 7C36                                            l4314 56FC  
                                          l1683 7D00                                            l1667 7CCE  
                                          l1659 7CC2                                            l1763 7C38  
                                          l1755 7C2C                                            l3541 3C6E  
                                          l2389 A0FA                                            l1677 7CF6  
                                          l1773 7C60                                            l1749 7C22  
                          _ADCC_StartConversion A15E                                            l1695 7D14  
                                          l1791 7C7E                                            l3473 72AA  
                                          l1697 7D16                                            l1689 7D0A  
                                          l1793 7C80                                            l1785 7C74  
                              __end_of_I2C2_Isr 8904                                            l4283 9412  
                                          l3491 3798                                            l3539 3C62  
                                          l1779 7C6A                                            l3493 37A4  
                                          ?_pad 0116                                            l4393 8EB4  
                                          STR_1 FF77                                            STR_2 FF4D  
                                          STR_3 FFEC                                            STR_4 FD3A  
                                          STR_5 FEF0                                            STR_6 FEDF  
                                          STR_7 FF3E                                            STR_8 FECE  
                                          STR_9 FEBD                                      _AlarmClear 9DF4  
                                          _LATA 003FBA                                            _LATB 003FBB  
                               __end_ofi2_LCDOn A480                                            _LATC 003FBC  
                                          _LATD 003FBD                                            _LATE 003FBE  
                                          _T2PR 003FAB                                            _T4PR 003F9F  
                                          _T6PR 003F93                                            _PMD0 0039C0  
                                          _PMD1 0039C1                                            _PMD2 0039C2  
                                          _PMD3 0039C3                                            _PMD4 0039C4  
                                          _PMD5 0039C5                                            _PMD6 0039C6  
                                          _PMD7 0039C7                      __end_of_SetTdeTooLongAlarm A552  
                                          _WPUA 003A41                                            _WPUB 003A51  
                                          _WPUC 003A61                                            _WPUD 003A71  
                                          _WPUE 003A81                         i2_ClearBatteryFailAlarm A5B2  
                                 __CFG_FCMEN$ON 000000                             ?_UART1_Transmit_ISR 0001  
                          ?_SetControlFailAlarm 0001                                 __end_ofi2_GetEp 9A0C  
                               __end_ofi2_GetIp 52AA                   ?_I2C2_SlaveSetWrColIntHandler 0104  
                               __end_ofi2_GetTe A42C                                 __end_ofi2_GetTi A390  
                                _MonitorDisable A4EA                                            abs@a 0116  
                                          _dbuf 0389                                            _tt12 0262  
                                          _pLow 024E                                 __end_ofi2_See5V 86F2  
                                          _tt34 0260                                            _atoi 559A  
                                          _ctoa 8A9A                               ??_TdiTooLongAlarm 0104  
                                          _main 2D84                                            _dtoa 3716  
                               __end_of_AdcInit 82FE                                            _msg1 03E5  
                                          _msg2 03D1                                            _msg3 03BD  
                                          _msg4 03A9                                            _hist 01E7  
                                          _init 029A          __end_ofi2_ADCC_SetADTIInterruptHandler A3D6  
       __size_ofi2_ADCC_SetADTIInterruptHandler 000E                  i2_ADCC_SetADTIInterruptHandler A3C8  
                                          _lrpe 00D4                                            _pmax 00D8  
                                          _lrpi 01D1                                            _pmin 0254  
                                          _prec 01C9                                 _TMR0_StartTimer A682  
                                          _nout 022A                                            pad@i 011D  
                                          pad@p 011A                                            fsr1h 003FE2  
                         __end_of_MonitorEnable A4EA                                            fsr2h 003FDA  
                                          indf1 003FE7                                            indf2 003FDF  
                                          fsr1l 003FE1                                            pad@w 011F  
                                          fsr2l 003FD9                                            _stoa 52AA  
                                          _xtoa 3C46                                     LCDMessage@i 010E  
                                 ??_InitDisplay 013E                                     i2_atoi$5674 0010  
                                   i2_atoi$5675 0014                                     i2_atoi$5676 0012  
                                          prodh 003FF4                                            prodl 003FF3  
                                          start 001A                                 _timer5ReloadVal 02E3  
                      ??_I2C2_SlaveSetSlaveAddr 0104                         __end_ofi2_MonitorEnable A562  
                            __size_of_LCDWrite4 004E                                 __end_ofi2_fputc 7530  
                      ??_I2C2_SlaveSetSlaveMask 0104                                 __end_ofi2_fputs 9518  
                                    _i2c2RdData 02B6                          __end_ofi2_ValueDisplay 2274  
                 ??_UART1_SetTxInterruptHandler 0106                                __end_of_CMP1_ISR 9D94  
                ??_SetVeryHighPressureAlarmHigh 0104                                 __end_ofi2_putch A4B2  
                               __end_of_GetPmax 9B76                      ??_TMR1_SetInterruptHandler 0106  
                  __end_ofi2_GetDisableAlarmSV1 A640                                   __CFG_CSWEN$ON 000000  
                          _ClearGasFailureAlarm A4CA                                     i2_dtoa$5178 0030  
                    ??_TMR4_SetInterruptHandler 0106                                 __end_of_DumpI2C A6EC  
                ?_I2C2_SlaveSetBusColIntHandler 0104                                    ___param_bank 000000  
                             _SetVBelowMinAlarm A62E                       CMP1_SetIntHandler@handler 0104  
                                    _i2c2WrData 02B7            __size_of_I2C2_SlaveSetAddrIntHandler 000E  
                  __end_of_ClearIPBelowSetAlarm A0C4                  __end_ofi2_ClearEPBelowSetAlarm A084  
                    __size_of_UART1_is_rx_ready 000E                                     ?_UART1_Read 0001  
                           __end_of_HigherAlarm 7270                                ??_AlarmCheckTask 02F5  
                                         ??_abs 0118                                           ??_pad 011C  
                        ??i2_UnDisplayCalibrate 0001                              ?_SetVBelowMinAlarm 0001  
                                 ?_LCDWriteChar 0001                                      i2_vfprintf 87CA  
                       __end_of_TMR0_Initialize 9C58                                     LCDTest@msg1 0116  
                                   LCDTest@msg2 0127                  ??_TMR0_DefaultInterruptHandler 0001  
                               ?_FVR_Initialize 0001                  __size_of_OSCILLATOR_Initialize 0018  
                                ??_LCDMessage12 0114                          ??_HighPressureAlarmLow 0116  
                          ??_UART1_Transmit_ISR 0001                        __size_of_IPAboveSetAlarm 001A  
                 __end_of_OSCILLATOR_Initialize A016                                           l21111 77BA  
                                         l21121 4144                                           l21105 77A2  
                                         l22021 4F94                                           l21133 4194  
                                         l22023 4F9E                                           l22031 7E70  
                                         l20503 91C2                             __end_of_DisplayTask 75D8  
                                         l22017 4F86                                           l22041 7E98  
                                         l22033 7E78                                           l22201 742C  
                                         l22043 7EA0                                           l22035 7E80  
                                         l22051 7EDC                                           l22107 65C0  
                                         l22037 7E88                                           l21077 4D28  
                                         l21069 4CD8                                           l22205 7458  
                                         l22039 7E90                                           l22127 6602  
                                         l22151 4640                                           l22231 58E2  
                                         l21087 4E20                                           l22207 7464  
                                         l20561 96F6                                           l22049 7EA6  
                                         l22241 59DA                                           l21097 7752  
                                         l22091 6582                                           l22083 6552  
                                         l22163 46E2                                           l22155 4676  
                                         l22139 45E4                                           l20821 6B5E  
                                         l22069 6518                                           l22501 3024  
                                         l22421 2EA6                                           l22413 2E86  
                                         l22087 656A                                           l22167 4718  
                                         l22159 46AC                                           l22255 8170  
                                         l20905 9FAE                                           l22505 3034  
                                         l22433 2ED6                                           l22425 2EB6  
                                         l22417 2E96                                           l22409 2E76  
                                         l22099 65AC                                           l22291 854C  
                                         l20765 6A3A                                           l20861 8206  
                                         l20917 9F94                                           l22189 4794  
                                         l22277 64F2                                           l22269 63F8  
                                         l22293 8558                                           l22533 30D8  
                                         l22525 30BC                                           l22461 2F3C  
                                         l22453 2F14                                           l22429 2EC6  
                                         l20791 6AB4                                           l20855 81EA  
                                         l20847 81C0                                           l22279 64F6  
                                         l20785 6A96                                           l20769 6A4E  
                                         l20849 81CE                                           l20929 9F7A  
                                         l22537 30E8                                           l22481 2FB4  
                                         l22473 2F84                                           l22465 2F54  
                                         l22457 2F24                                           l17131 9446  
                                         l18003 1B44                                           l20779 6A84  
                                         l20795 6AC2                                           l21819 96C2  
                                         l22299 8580                                           l22395 2DE8  
                                         l22387 2DC4                                           l17117 8DD8  
                                         l18021 1CCE                                           l18013 1C36  
                                         l20893 9FC8                                           l21933 7562  
                                         l22493 2FFC                                           l22485 2FCC  
                                         l22477 2F9C                                           l22469 2F6C  
                                         l17127 942A                                           l17119 8DDE  
                                         l21839 821A                                           l21919 7DBC  
                                         l22399 2E04                                           l18041 1E3C  
                                         l20993 5DC0                                           l21929 755A  
                                         l22497 3014                                           l22489 2FE4  
                                         l18035 1DEE                                           l18051 1E62  
                                         l19003 2524                                           l20979 5D20  
                                         l21947 7594                                           l21939 7578  
                                         l18045 1E46                                           l19005 252E  
                                         l21975 4E54                                           l21959 75C2  
                                         l17441 5A76                                           l17433 5A3C  
                                         l19009 2542                                           l19201 6C02  
                                         l18305 7CF8                                           l17507 9258  
                                         l17451 5AD2                                           l17427 5A14  
                                         l19211 6C36                                           l21995 4EF0  
                                         l21987 4E7A                                           l18307 7D02  
                                         l18333 9522                                           l17373 72A2  
                                         l21997 4EF6                                           l18309 7D0C  
                                         l16911 8CBA                                           l17383 7304  
                                         l17375 72B4                                           l17439 5A62  
                                         l17455 5AE8                                           l17471 5F48  
                                         l17711 398E                                           l18351 8470  
                                         l19215 6C44                                           l16913 8CC2  
                                         l17369 7290                                           l17481 5F9A  
                                         l18353 84A4                                           l18339 9540  
                                         l18363 7F86                                           l17379 72D0  
                                         l17643 8AB0                                           l17459 5B0E  
                                         l17491 5FF8                                           l17475 5F6C  
                                         l17707 3974                                           l17723 52DA  
                                         l17803 3E16                                           l19219 6C5A  
                                         l19171 8B6E                                           l18291 7CB0  
                                         l18603 7C1A                                           l17645 8ABC  
                                         l17741 537E                                           l17733 5344  
                                         l19501 2B42                                           l19421 2A22  
                                         l18293 7CBA                                           l18621 7C76  
                                         l18605 7C24                                           l19341 90B6  
                                         l18375 7FAC                                           l18391 7FDE  
                                         l17495 601E                                           l17487 5FE2  
                                         l17479 5F86                                           l17751 53E4  
                                         l19175 8B82                                           l19415 2A06  
                                         l19423 2A30                                           l18295 7CC4  
                                         l18607 7C2E                                           l19343 90C0  
                                         l18377 7FB4                                           l18369 7F96  
                                         l18801 8312                                           l17841 5614  
                                         l17825 55AC                                           l17673 37C2  
                                         l17737 5360                                           l19193 6BD4  
                                         l19601 2C36                                           l19521 2B60  
                                         l19433 2A54                                           l18633 7802  
                                         l18617 7C62                                           l19345 90CA  
                                         l18395 7FEC                                           l18387 7FD4  
                                         l18811 8334                                           l17851 568E  
                                         l17843 561C                                           l17835 5602  
                                         l17827 55B0                                           l17659 377C  
                                         l17755 5400                                           l17747 53CA  
                                         l17819 3E8E                                           l19187 6BBC  
                                         l19531 2BC8                                           l19515 2B58  
                                         l19443 2A66                                           l19435 2A58  
                                         l19419 2A1E                                           l18635 7814  
                                         l18619 7C6C                                           l18733 8FCC  
                                         l18821 8356                                           l18805 831E  
                                         l17845 5622                                           l16965 704A  
                                         l17677 37D2                                           l17781 3CE8  
                                         l17773 3CC6                                           l19437 2A5E  
                                         l19429 2A48                                           l19365 7DDE  
                                         l18743 8FE8                                           l17847 5650  
                                         l16959 6FB6                                           l17687 390E  
                                         l17767 3C86                                           l17951 192C  
                                         l19199 6BF6                                           l19623 2C5A  
                                         l19615 2C4C                                           l19471 2A92  
                                         l19463 2A8A                                           l18639 7854  
                                         l19359 7DD6                                           l18825 8364  
                                         l18817 834C                                           l18809 832C  
                                         l16897 8C74                                           l19393 7A70  
                                         l19609 2C44                                           l19553 2BEC  
                                         l19545 2BDE                                           l19529 2B68  
                                         l19481 2B24                                           l19473 2B16  
                                         l19457 2A7C                                           l18691 5092  
                                         l17795 3D7E                                           l17971 1958  
                                         l17963 1938                                           l17955 1930  
                                         l17947 1928                                           l19395 7A78  
                                         l19803 71CA                                           l19651 2C86  
                                         l19643 2C78                                           l19539 2BD6  
                                         l19459 2A82                                           l18749 8FFC  
                                         l17965 193A                                           l17973 19A4  
                                         l19389 7A5A                                           l19813 7252  
                                         l19637 2C70                                           l19629 2C62  
                                         l19581 2C18                                           l19573 2C0A  
                                         l18941 9384                                           l18695 50FC  
                                         l18687 501C                                           l17967 194E  
                                         l17959 1934                                           l19671 2CA4  
                                         l19567 2C02                                           l19559 2BF4  
                                         l19495 2B3A                                           l19487 2B2C  
                                         l17985 1A2E                                           l18953 229A  
                                         l19809 71F6                                           l19665 2C9C  
                                         l19657 2C8E                                           l17987 1A58  
                               __end_of___aldiv 6C74                                           l19595 2C2E  
                                         l19587 2C20                                           l19691 2D56  
                                         l17989 1A6A                                           l19685 2CB4  
                                         l19677 2CAC                                           l18983 24A4  
                                         l18959 22BA                                           l19687 2D50  
                                         l18985 24AC                               __end_of_I2C2_Read A66A  
                               __end_of___aodiv 5B40                                           _ADCAP 003EF5  
                                         _ADACT 003EFE                                           ?_atoi 010B  
                                         ?_ctoa 0121                                           ?_main 0001  
                                         ?_dtoa 0121                                           _ADCLK 003EFF  
                               __end_of___aomod 6050                               __end_of_I2C2_Open 896A  
                                         _ADPCH 003EF1                                           _ADREF 003EFD  
                               __end_of___awdiv 7FFA                                           STR_10 FE67  
                                         STR_11 FFF9                                           STR_20 FF2F  
                                         STR_12 FE81                                           STR_13 FFB2  
                                         STR_21 FF20                                           STR_30 FFE8  
                                         STR_22 FEAB                                           STR_14 FE98  
                                         STR_15 FFC6                                           STR_23 FFBA  
                                         STR_31 FF84                                           STR_24 FEBA  
                                         STR_32 FFE4                                           STR_16 FFCB  
                                         STR_40 FD05                                           STR_17 FFC6  
                                         STR_25 FFC1                                           STR_41 FC98  
                                         STR_33 FC57                                   __CFG_WDTE$OFF 000000  
                                         STR_18 FFCB                                           STR_26 FFF0  
                                         STR_42 FFD8                                           STR_34 FE47  
                                         STR_50 FE27                                           STR_27 FFF6  
                                         STR_43 FFA8                                           STR_19 FF9C  
                                         STR_51 FE07                                           STR_35 FD92  
                                         STR_44 FFFC                                           STR_28 FFF3  
                                         STR_52 FF01                                           STR_36 FDE3  
                               __end_of___awmod 8372                                           STR_29 FEED  
                                         STR_45 FFE0                                           STR_53 FF11  
                                         STR_37 FDBB                                           STR_46 FFDC  
                                         STR_54 FFD4                                           STR_38 FCCF  
                                         STR_55 FFD0                                           STR_47 FF5C  
                                         STR_39 FD67                                           STR_48 FF90  
                                         _ADRPT 003EEC                                           STR_49 FF6A  
                               _TMR1_StartTimer A68E                                           ?_stoa 010F  
                                    SetSV1@last 00F1                                 __end_of___lldiv 7F72  
                                i2_AdcDataReady 9AB6                                           u20010 81DE  
                         ?_ClearEPAboveSetAlarm 0001                                           u20020 81FC  
                                         u20030 9FC4                                           _T1CLK 003FB5  
                                         u20040 9FAA                                           u20050 9F90  
                                         u20060 9F76                                 ___awdiv@divisor 010C  
                                         ?_xtoa 0121                                           _T1CON 003FB2  
                               __end_of___llmod 85A8                                           u20250 418C  
                                         _U1P1H 003DED                                           u20260 41DC  
                                         _U1P2H 003DEF                                           u21310 A1E8  
                                         _U1P1L 003DEC                                           _U1P3H 003DF1  
                                         u22040 855C                                           _T2CON 003FAC  
                                         _U1P2L 003DEE                                           _U1P3L 003DF0  
                                         u21440 825E                                           u21700 6542  
                                         u21630 4EE6                                           u21710 654C  
                                         _T5CLK 003F9D                                           u21640 4F08  
                                         u21800 45DC                                           _T4CON 003FA0  
                                         u21618 4EB0                                           u21619 4EC4  
                                         u21660 4F66                                           u21580 4E60  
                                         u21740 65AC                                           _T2HLT 003FAD  
                                         u15510 6FAE                                           u17030 5374  
                                         u17110 3CE4                                           u21590 4E62  
                                         u21750 65B8                                           u17040 53A8  
                                         u17120 3D1A                                           u21920 479E  
                                         _T5CON 003F9A                                           u15530 6FF6  
                                         u17210 3E4A                                           u17130 3D1C  
                                         u21770 65EA                                           u21930 47A0  
                                         u17211 3E48                                           u16500 965E  
                                         u16420 93F0                                           u17220 3E58  
                                         u21780 65F6                                           u21940 73F2  
                                         u16510 9660                                           u17070 5414  
                                         u16430 95F2                                           u17230 3E5C  
                                         u17150 3D54                                           u21950 73F4  
                                         u17047 539A                                           u22807 69D0  
                                         u16440 95F4                                           u17160 3D56  
                                         _T6CON 003F94                                           u22817 90D8  
                                         u16450 9628                                           u17090 3C58  
                                         u18210 784A                                           u21970 7474  
                                         u22907 7C98                                           u22827 90E2  
                                         u17260 55FE                                           u16620 5F9E  
                                         u16460 962A                                           u17180 3DE2  
                                         _T4HLT 003FA1                                           u16541 5A42  
                                         u22917 7CD2                                           u22837 90EC  
                                         u22757 690C                                           u15830 8E08  
                                         u16470 8E9C                                           u17190 3E28  
                                         u17510 1B8C                                           u19030 7E16  
                                __CFG_DEBUG$OFF 000000                                           u22927 7CDC  
                                         u22847 7E36                                           u22767 6926  
                                         u17280 56C4                                           u16560 5A7A  
                                         u16480 8E9E                                           u19040 7E5A  
                                         u17185 3DD0                                           u22937 7CE6  
                                         u18217 783C                                           u22857 7C3C  
                                         u22777 693E                                           u17290 56C6  
                                         u22947 7D1A                                           u22867 7C46  
                                         u22787 6956                                __end_ofi2_LCDOff A48A  
                                         u16660 9254                                           u16900 391E  
                                         u15860 95BC                                           u17540 1D16  
                                         u17460 1AAC                                           _LCDOn A444  
                                         u15837 8DFA                                           u22957 7D24  
                                         u22877 7C50                                           u22797 6980  
                                         u16830 374E                                           u15870 95BE  
                                         u17470 1AAE                                           u19150 71E8  
                                         u22967 7D2E                                           u22887 7C84  
                                         u18360 8338                                           u16920 3940  
                                         u16840 3750                                           u17480 1ABA  
                                         u16921 393E                                           u22977 7D48  
                                         u22897 7C8E                                           u16930 394E  
                                         u19170 7262                                           u19090 2A18  
                               __end_of___lwdiv 8D1E                      __size_ofi2_TMR5_StartTimer 0004  
                                         u22987 7D6E                                           u17900 9550  
                                         u16940 3952                                           _T6HLT 003F95  
                                         u22997 7D8E                                           u16870 378E  
                                         u16960 395E                      _ADCC_ADTI_InterruptHandler 02F3  
                                         u16890 37BC                                           u18900 6C06  
                                         u16981 52B4                                           u17950 7FB8  
                                         _T2TMR 003FAA                                           _U1UIR 003DF8  
                                         u19850 6A18                                           u19930 6B1C  
                                         _T2RST 003FAF                                           _U1RXB 003DE8  
                   __size_of_SetEPAboveSetAlarm 0020                                           u19940 6B32  
                                         u19870 6A60                                           u19950 6B7A  
                                         u19880 6A7A                                           u19960 6B7C  
                                         u19890 6AA8                                           _U1TXB 003DEA  
                                         _T4TMR 003F9E                                           _PCON0 003FF0  
                                         _T4RST 003FA3                                           i2l270 686E  
                                         i2l280 68B0                                           i2l272 687A  
                                         i2l264 6832                                           i2l282 68BC  
                                         i2l274 6898                                           i2l266 684A  
                    __size_ofi2_ADCC_Initialize 006C                                           i2l284 68C8  
                                         i2l276 68A0                                           i2l268 6862  
                                         _T6TMR 003F92                                           i2l286 68D4  
                                         i2l278 68A8                                           i2l287 68E6  
                                         i2l288 68DC                                           _T6RST 003F97  
                                         i2l750 9CB6                                           i2l657 8D8E  
                                         i2l669 9216                                           i2l862 9CDA  
                               ___awdiv@counter 010E                                           _OSCEN 0039DD  
                            __size_ofi2_AdcInit 0070                                    vfpfcnvrt@fmt 014A  
                                         _TMR0H 003FB7                                    vfpfcnvrt@llu 015A  
                                         _TMR1H 003FB1                                           _TMR0L 003FB6  
                                         _TMR1L 003FB0                                           _TMR5H 003F99  
                                         _TMR5L 003F98                             ??_SetVBelowMinAlarm 0001  
                                         _TRISA 003FC2                                           _TRISB 003FC3  
                                         _TRISC 003FC4                                           _TRISD 003FC5  
                                         _TRISE 003FC6                                ??_I2C2_SlaveOpen 0104  
                                         i2_abs 949C                                           _Get5V 8616  
                                         i2_pad 7056               __size_of_TMR0_SetInterruptHandler 000E  
                                         _GetEp 9926                                           _GetIp 4FB2  
                       ?i2_ClearIPBelowSetAlarm 0001                                           _GetTe A114  
                                         _GetTi A100                        _GetControllerBuzzerCheck A13A  
                               _TMR4_Initialize 98CA                                 _PWM6_Initialize 9FE6  
                                         _See5V 85A8                             ___lmul@multiplicand 0108  
                     ?_TMR0_SetInterruptHandler 0104                               ?_BatteryFailAlarm 0001  
                       ??_ADCC_IsConversionDone 0001                                     ?i2_AnyAlarm 0001  
             __size_of_TMR6_SetInterruptHandler 000E                       ?_TMR6_SetInterruptHandler 0104  
                              __end_of_TMR0_ISR 9D72                                __end_of_TMR1_ISR 986C  
                __size_of_ClearMonitorFailAlarm 0008                                   __CFG_WRTB$OFF 000000  
                                 __CFG_WRTC$OFF 000000                                __end_of_TMR4_ISR 9D50  
                                 __CFG_WRTD$OFF 000000                                __end_of_TMR5_ISR 983A  
                              __end_ofi2_GetBpm A3BA                                __end_of_TMR6_ISR 9D2E  
                  ??_ClearHighPressureAlarmHigh 0104                   __end_of_ClearMonitorFailAlarm A51A  
                              __end_ofi2_GetTde A438                                __end_ofi2_GetTdi A39E  
                              __end_ofi2_See12V 7B72            __size_of_I2C2_SlaveSetReadIntHandler 000E  
                                         _pHigh 01D3                                      i2isalpha@c 0001  
                               _gasFailureAlarm 02AF                                __end_ofi2_GetSpr A3AC  
                   TMR4_Period8BitSet@periodVal 0104                                      i2isdigit@c 0001  
                            __size_ofi2_GetPmax 0026                                 ??i2_BuzzerClear 0001  
                                         _flags 01CB                                           _getch A5DA  
                            ??_BatteryFailAlarm 0128                                     ?_AdcGetData 010A  
                        ?_SetNoPowerSupplyAlarm 0001                                           _count 0244  
                              __end_of_AdcReady A676                              __size_of_TMR4_Stop 0004  
                         ?_ADCC_StartConversion 0001                                           _fputc 6F9E  
                               __end_of_isalpha 9630                                           _fputs 9420  
                               __end_of_isdigit 9666                                   ??_BuzzerCheck 0183  
                                   ?_TMR4_Start 0001                                     ?_AdcHandler 0001  
                              __end_ofi2_SetSV1 99DE                                  _vAboveMaxAlarm 02A5  
                                 ??_BuzzerClear 0104                                           _isqrt 75D8  
                          _ClearIPAboveSetAlarm A0C4                                           _ttExt 0264  
                            __CFG_MCLRE$EXTMCLR 000000                                           atoi@n 0118  
                                         pad@fp 0116                                           atoi@s 010B  
                                         _width 01C7                                           ctoa@c 0123  
                                         _state 01DF                                           _putch A408  
                                   ?_TMR6_Start 0001                                           ctoa@w 0124  
                        __end_of_MonitorDisable A4F2                                           dtoa@d 0123  
                           __size_of_LCDMessage 00A2                                           dtoa@i 0143  
                                         dtoa@n 013B                                           dtoa@p 0135  
                                         dtoa@s 0139                                           dtoa@w 0137  
                                i2HigherAlarm@i 0010                                 __end_of_islower 95C4  
                               __end_of_isspace 9262                            __size_of_CMP1_Enable 0008  
                       __end_of_TMR1_Initialize 8E70                                 __end_of_isupper 95FA  
                                         pclath 003FFA                                           tablat 003FF5  
                                   ?_AdcSeeData 010A                              MonitorFailAlarm@v5 0184  
                         ??_SetControlFailAlarm 0001                                __end_ofi2___lmul 8C1A  
                              __end_ofi2___wmul 9A3A                                           plusw1 003FE3  
                                         plusw2 003FDB             _I2C2_SlaveDefBusColInterruptHandler 000000  
                             i2GetPressure_pa@p 0025                                           stoa@i 011B  
                                         stoa@l 0123                                           stoa@p 0121  
                                         stoa@s 0111                                           stoa@w 011D  
                        ??_ClearTdiTooLongAlarm 0001                                 __end_of_putchar 9F64  
                                    i2islower@c 0001                                 ??i2_SetAlarmSV1 005B  
                                         status 003FD8             __end_of_UART1_SetRxInterruptHandler A216  
                   _UART1_SetRxInterruptHandler A208                                      i2isspace@c 0001  
                               __end_of_sprintf 8C72                                           xtoa@c 0146  
                                         xtoa@d 0123                                           xtoa@i 0144  
                                         xtoa@n 013C                                           xtoa@p 0138  
                                         xtoa@w 013A                                           xtoa@x 012B  
                                 ??_SetAlarmLED 0104                      __size_of_SetVAboveMaxAlarm 0008  
                              __end_of_AlarmSet 9DF4                                 __end_of_toupper 8EC2  
                                 ??_SetAlarmSV1 0183                                     ?i2_BuzzerOn 0001  
                      __end_ofi2_MonitorDisable A56A                                  i2AdcGetData@id 0007  
      __end_of_UART1_DefaultFramingErrorHandler A6F0       __size_of_UART1_DefaultFramingErrorHandler 0002  
            ??_UART1_DefaultFramingErrorHandler 0001               ?_UART1_DefaultFramingErrorHandler 0001  
              _UART1_DefaultFramingErrorHandler A6EE                                 _TMR1_WriteTimer 9CC4  
                            __size_ofi2___aldiv 00D4                        ?_I2C2_SlaveClearStopFlag 0001  
                            __size_ofi2___aodiv 0158                                __end_of_AnyAlarm 9554  
                            __size_ofi2___aomod 0134                              __size_ofi2___awdiv 0088  
                            __size_ofi2___awmod 0074                                      i2isupper@c 0001  
                     __end_of_SetVBelowMinAlarm A634                                __end_ofi2_printf 9C34  
                ??_TMR6_DefaultInterruptHandler 0001                           __size_of_AlarmHandler 0068  
                         ?_ClearGasFailureAlarm 0001                               ?i2_AlarmUpdateLCD 0001  
                               _TMR5_Initialize 8F66                        __size_of_DisableAlarmSV1 0008  
                               ?i2_ValueDisplay 0001                             i2_ValueDisplay$4007 00AC  
                           i2_ValueDisplay$4008 00AE                                  _MuteAlarm$4543 0186  
                              __end_ofi2_strlen 90A6                             i2_ValueDisplay$7130 00A5  
                                  _toupper$5789 0110                     __size_of_SetGasFailureAlarm 0008  
                         __size_of_AlarmDisplay 009A                               ??_I2C2_Initialize 0104  
                               __initialization 6D48                        __size_of_EPBelowSetAlarm 001A  
                                  __end_of_atoi 570A                                    __end_of_ctoa 8AFC  
                                  __end_of_main 3104                                    __end_of_dtoa 39C4  
                            ??i2_AlarmUpdateLCD 005C                                    __end_of_stoa 5422  
                                    i2printf@ap 0059                                    __end_of_xtoa 3EC4  
                                ??_LCDWriteChar 0104                             __end_of_InitDisplay A3F0  
                                    _ButtonInit 9A3A                              __size_of_AlarmInit 007E  
                                __CFG_SAFEN$OFF 000000                     __end_of_ClearVBelowMinAlarm A658  
                   ??_UART1_DefaultErrorHandler 0001                                      _ButtonTask 6608  
                        __size_ofi2_CMP1_Enable 0008                         __end_of_TdeTooLongAlarm A6A6  
                       __size_of_GetPressure_pa 0184                           _ControllerBuzzerCheck A438  
                            __size_ofi2_isalpha 0034                         __end_of_TMR2_Initialize 9EF2  
                            __size_ofi2_isdigit 0034                          __size_of_BuzzerHandler 0006  
                                _GetMaxPressure 93A4                     ?_INTERRUPT_InterruptManager 0001  
                        __end_ofi2_AdcDataReady 9ADE                                      i2stoa@nuls 0011  
                            __size_of_ClearVars 024C                  __size_of_I2C2_SlaveIsRxBufFull 000E  
                                   i2_vfpfcnvrt 12EA                __size_of_ClearBaterryLowAlarmMed 0006  
                              __end_of_BuzzerOn 9F10                        ?i2_ClearMonitorFailAlarm 0001  
                              ??_SetMaxPressure 0003                   __end_of_I2C2_SlaveIsRxBufFull A3C8  
                                  ?_UART1_Write 0001                              __size_ofi2_islower 0034  
                            __size_ofi2_isspace 0044                                   i2vfpfcnvrt@ap 0049  
                             ??_EPAboveSetAlarm 0104                                   i2vfpfcnvrt@cp 0070  
                                 i2vfpfcnvrt@fp 0045                                   i2vfpfcnvrt@ll 0060  
                                   i2_xtoa$5200 0033                 __end_of_ClearNoPowerSupplyAlarm A604  
                                   i2_xtoa$5199 0031                              __size_ofi2_isupper 0034  
                              ??_VAboveMaxAlarm 0104                                          ??_atoi 010D  
                                        ??_ctoa 0124                                          ??_main 01C6  
                                        ??_dtoa 012B                                  __CFG_PR1WAY$ON 000000  
                      _TMR5_SetInterruptHandler A2DA                                    ?i2_TMR4_Stop 0001  
                                        ??_stoa 0113                 __size_of_I2C2_SlaveReleaseClock 0006  
                 i2ADCC_StartConversion@channel 0001                                          ??_xtoa 012C  
                __end_ofi2_ClearIPBelowSetAlarm A058                                   __activetblptr 000003  
                                        ?_LCDOn 0001                                      _BuzzerInit 986C  
                                    i2sprintf@f 008D                                      i2sprintf@s 0077  
                                    _BuzzerTask 29DC                      __end_of_GetPressure_mbar02 969C  
                                    _BuzzerTest 7E5C            __size_of_UART1_SetTxInterruptHandler 000E  
                                   _GetTargetEp 9B2A                                       ??_LCDInit 013C  
                                   _GetTargetIp 9B04                              __size_ofi2_sprintf 0052  
                                     ??_LCDTest 0114                            _ClearEPBelowSetAlarm A0D8  
                                        ?i2_abs 0013                                          ?_Get5V 011E  
               __end_of_I2C2_SlaveSetIsrHandler A2B0                              __size_ofi2_toupper 0052  
                                        ?i2_pad 0013                                          ?_GetEp 0112  
                       ??_HighPressureAlarmHigh 0104                                          ?_GetIp 0112  
                                        ?_GetTe 0104                                          ?_GetTi 0104  
                                 SetTarget@pmax 001B              __size_of_VeryHighPressureAlarmHigh 0004  
                             __end_of_LCDWrite4 90F4                              __size_of_GetVolume 000E  
                                        ?_See5V 011E                                   SetTarget@vmax 0023  
                                 SetTarget@vmin 0025                                 _TMR6_Initialize 989C  
                              _UART1_Initialize 6EDE                                       ??i2_LCDOn 0001  
                                _EnableAlarmSV1 A4F2                                      i2toupper@c 0007  
                              ?_SeePressureV_pa 0112                                ??_AlarmUpdateLCD 01C0  
                              ?i2_GetAlarmState 0005                                       ??i2_GetEp 0011  
                                     ??i2_GetIp 0011                                       ??i2_GetTe 0003  
                                     ??i2_GetTi 0003                         __end_of_TMR0_StartTimer A686  
                                        _ADACCU 003EEA                       ??i2_ClearBatteryFailAlarm 0001  
                  __size_ofi2_SetCalibrateState 0126                                          _ADACQH 003EF4  
                                        _ADACQL 003EF3                                          ?_getch 0001  
                                     ??i2_See5V 001D                                          _ADCON0 003EF8  
                                        _ADCON1 003EF9                                          _ADCON2 003EFA  
                                        _ADCON3 003EFB                           ?_ClearIPAboveSetAlarm 0001  
                                     ??_AdcInit 010A                                          _CM1NCH 003EBE  
                  ?_I2C2_SlaveSetStopIntHandler 0104                                          _CM1PCH 003EBF  
                             _BuzzerTestHandler 9954                       __size_ofi2_TMR0_StopTimer 0004  
                                        ?_fputc 0106                     __size_of_SetIPAboveSetAlarm 0020  
                              ___llmod@dividend 0104                                          _ADLTHH 003EDF  
                                        _ADLTHL 003EDE                                          ?_fputs 010F  
                                        _ADRESH 003EF0                                          _ADRESL 003EEF  
                                        _ADPREH 003EF7                                          _ADPREL 003EF6  
                                        _ADSTAT 003EFC                                          ?_isqrt 0001  
                                        _ADUTHH 003EE1                                ___awdiv@dividend 010A  
                                        _ADUTHL 003EE0                                  i2___aldiv@sign 0016  
                                        _ANSELA 003A40                                          ?_putch 0001  
                                        _ANSELB 003A50                                          _ANSELC 003A60  
                                        _ANSELD 003A70                                          _ANSELE 003A80  
                                        _T0CON0 003FB8                                          _T0CON1 003FB9  
                                        _RB1I2C 003A5A                                     ?_AlarmClear 0001  
                                        _T1GATE 003FB4                                          _RB2I2C 003A5B  
                                        _T1GCON 003FB3                                          _RD0I2C 003A7A  
                               ?_MonitorDisable 0001                                          _U1CON0 003DF2  
                                        _U1CON1 003DF3                                          _U1CON2 003DF4  
                                        _RC3I2C 003A6A                                          _RD1I2C 003A7B  
                                        _RC4I2C 003A6B                             __size_of_UART1_Read 0048  
                                        _U1BRGH 003DF6                                          _U1FIFO 003DF7  
                       ?_SetCircuitFailureAlarm 0001                                          _U1BRGL 003DF5  
                            __size_of_HistAlarm 0108                                          _T5GATE 003F9C  
                              i2_GetPressure_pa 4B24                                          _T5GCON 003F9B  
                                   SetSV1@value 0183                             i2UART1_Write@txData 0001  
                                        _RC1PPS 003A11                                    _AlarmHandler 8834  
                                        _RB4PPS 003A0C                                          _RD0PPS 003A18  
                                        _RB5PPS 003A0D                                          _LCDOff A44E  
                       TMR1_WriteTimer@timerVal 0001                               ??_AdcReStartCycle 0007  
                                 ??_MonitorDump 0183                                   ??_MonitorInit 010A  
                                        _ODCONA 003A42                                          _ODCONB 003A52  
                                        _ODCONC 003A62                                          _ODCOND 003A72  
                                        _ODCONE 003A82                                          i2l1222 88C2  
                                        i2l2116 26C8                                          i2l3101 05A2  
                                        i2l2142 27A6                                          i2l3120 090E  
                                        i2l3121 0944                                          i2l3105 0672  
                                __CFG_WDTCCS$SC 000000                                          i2l3106 068E  
                                        i2l3062 0042                                          i2l3127 0B18  
                                        i2l3162 0FEC                                          i2l3090 04CC  
                                        i2l3163 11B8                                          i2l3155 0F5A  
                                        i2l3520 549C                                          i2l2632 4934  
                                        i2l3177 11AA                                          i2l4314 586C  
                                        i2l3541 39EE                                          i2l3473 7092  
                                        i2l4283 94CC                                          i2l3491 34E8  
                                        i2l3539 39E2                                          i2l3635 7F58  
                                        i2l4099 8D10                                          i2l3493 34F4  
                                        i2l4393 8F58                                          _INLVLA 003A44  
                                        _INLVLB 003A54                                          _INLVLC 003A64  
                                        _INLVLD 003A74                                          _INLVLE 003A84  
                                 i2putch@txData 0002                                          _FVRCON 003EC1  
                            ?_BuzzerTestHandler 0001                                       ??i2_fputc 0007  
                                  _AlarmDisplay 7A3E                                       ??i2_fputs 0010  
                                        _OSCFRQ 0039DF                    __end_ofi2_TMR4_Period8BitSet A476  
                                 vfpfcnvrt@done 0164                                _MonitorFailAlarm 6AC8  
                                     ??i2_putch 0002                                       ??_GetPmax 0114  
                              i2___lmul@product 0009                         ??_SetBaterryLowAlarmMed 0104  
                    __end_of_NoPowerSupplyAlarm A69A                       __size_of_DisplayCalibrate 0034  
                         _UART1_SetErrorHandler A232                                       ??_DumpI2C 0104  
                                i2___aodiv@sign 0012                                          _Get12V 79A4  
                                    TestAlarm@i 0189                                 _prSlowNumStable 0240  
                                        i2abs@a 0013                   __size_of_ClearTdeTooLongAlarm 0008  
                                        i2_atoi 570A                                          i2_ctoa 8AFC  
                                        i2_dtoa 3464                      ??_ADCC_GetConversionResult 0003  
          __end_of_I2C2_SlaveSetWriteIntHandler A286           __size_of_I2C2_SlaveSetWriteIntHandler 000E  
                  _I2C2_SlaveSetWriteIntHandler A278                                          _GetBpm A33C  
                                   _HigherAlarm 71BE                 _I2C2_SlaveWrColInterruptHandler 028C  
                                        i2pad@i 001A                                          i2pad@p 0017  
                                        _GetTde A414                                          i2pad@w 001C  
                             ??_GasFailureAlarm 0104                                          _GetTdi A320  
                                        _See12V 790A                                          i2_stoa 5422  
                           __end_of_BuzzerCheck 7DCC                                 _disableAlarmSV1 00F3  
                                        _GetSpr A32E                             __end_of_BuzzerClear A18E  
                                        i2_xtoa 39C4                                  i2AdcSeeData@id 0007  
                    __end_of_UnDisplayCalibrate A1FA                               __end_ofi2_AdcInit 853A  
                       __size_ofi2_AlarmDisplay 0098                       __size_of_ControlFailAlarm 0014  
                              ?i2_MonitorEnable 0001                                    ?i2_ClearVars 0001  
               __size_of_I2C2_SlaveSetSlaveAddr 000C                              __size_of_BuzzerOff 0010  
                           ??_BuzzerTestHandler 005B                                          _SetSV1 969C  
                            __size_of_BuzzerSet 001A                                  __CFG_XINST$OFF 000000  
               __size_of_I2C2_SlaveSetSlaveMask 0010                  ??_I2C2_SlaveSetWrColIntHandler 0106  
          __end_of_TMR1_DefaultInterruptHandler A6F8           __size_of_TMR1_DefaultInterruptHandler 0002  
                  _TMR1_DefaultInterruptHandler A6F6                               i2_DisableAlarmSV1 A628  
                                  _CCPTMRS1bits 003F5F                                    vfprintf@cfmt 016F  
                                   _DisplayTask 7530                             __size_ofi2_AnyAlarm 003A  
                                i2___aomod@sign 0012                                          ___lmul 8B5E  
                       __end_of_TMR1_StartTimer A692                                       ??___aldiv 0118  
                        __end_of_GetMaxPressure 93E2                               _ADCC_ThresholdISR 9CE8  
                                     ??___aodiv 0114                               __end_ofi2_GetPmax 9BE8  
                                 i2vfprintf@fmt 0051                                       ??___aomod 0114  
                                        ___wmul 98F8                                _SetVolumeControl A48A  
                                     ??___awdiv 010E                             __end_of_SetAlarmLED A304  
                                __CFG_STVREN$ON 000000                                       ??___awmod 0108  
                           __end_of_SetAlarmSV1 9704                                          _alarms 0300  
                                     ??___lldiv 0009                               __end_of_TMR4_Stop A6CA  
                            ?i2_DisableAlarmSV1 0001                                       ??___llmod 010C  
                                        _ledCnt 00EA                                          _enable 00FE  
                            __size_of_SetTarget 00CA                                       ??___lwdiv 0005  
                           __size_of_AdcGetData 0066                                     ?i2_vfprintf 004F  
                                  ?i2_GetVolume 0001                             __size_of_AdcHandler 0134  
                           __size_of_TMR4_Start 0004                                          _prFast 023E  
                              ?_TMR0_Initialize 0001                              ?_ADCC_ThresholdISR 0001  
                       __end_of_PWM6_Initialize 9FFE                         __end_of_TMR4_Initialize 98F8  
                           _MonitorPressureTask 001E                             __size_of_TMR6_Start 0004  
                                        clear_0 6DBA                                          clear_1 6DCC  
                               ?i2_AdcDataReady 0007                                          clear_2 6DD8  
                                        clear_3 6DE4                                          clear_4 6DF0  
                                        clear_5 6DFC                                ___awdiv@quotient 0110  
                                        _prSlow 00CE                                 ___awmod@divisor 0106  
                                     ?_I2C2_Isr 0001                                          _numLow 024A  
                        ??_ClearEPAboveSetAlarm 0104                              __size_of_MuteAlarm 01F2  
                               ___awmod@counter 0108                                    LCDWrite4@chr 0104  
                                        _printf 9A64                                          _numtde 00D0  
                                        pad@buf 0118                                          _numtdi 00D2  
                           _SetBatteryFailAlarm A52A                        __size_of_IPBelowSetAlarm 001A  
                           __size_of_AdcSeeData 003E                            __size_of_LCDMessage1 0020  
                          __size_of_LCDMessage2 0026                                          ctoa@fp 0121  
                                        main@ch 03F9                              __size_of_TestAlarm 00AE  
                                        dtoa@fp 0121                     __size_of_GetDisableAlarmSV1 0006  
                                        _strlen 8DCA                                          _volume 00DE  
                                i2___awdiv@sign 000C                             _AlarmUpdateLCD$6531 01C2  
                           _AlarmUpdateLCD$6532 01C4            __end_ofi2_ClearHighPressureAlarmHigh A59A  
         __size_ofi2_ClearHighPressureAlarmHigh 0008                    i2_ClearHighPressureAlarmHigh A592  
                               _TMR5_StartTimer A692                          __end_of_EnableAlarmSV1 A4FA  
                                  __pdataBIGRAM 0914                     __end_of_SetMonitorFailAlarm A512  
                         ?_ClearEPBelowSetAlarm 0001                                 _ADCC_Initialize 86F2  
                         __size_of_CMP1_Disable 0008                             ??i2_DisableAlarmSV1 0001  
                  ??i2_ClearBaterryLowAlarmHigh 0001            __end_of_TMR4_DefaultInterruptHandler A6F6  
         __size_of_TMR4_DefaultInterruptHandler 0002                    _TMR4_DefaultInterruptHandler A6F4  
                                        fputc@c 0106                                  _PMD_Initialize 9C58  
                   __size_of_SetEPBelowSetAlarm 0020                                    ?i2_HistAlarm 0001  
                                 LCDMessage@str 0108                               __end_ofi2___aldiv 6D48  
           __end_of_I2C2_SlaveSetStopIntHandler A278                     _I2C2_SlaveSetStopIntHandler A26A  
                                        fputs@c 0113                                          fputs@i 0114  
                             __end_ofi2___aodiv 5C98                                          fputs@s 010F  
                                     ??_isalpha 0106                                       ??_isdigit 0106  
                             __end_ofi2___aomod 62B8                             __size_ofi2_BuzzerOn 001C  
                             __end_ofi2___awdiv 8082                               __end_ofi2___awmod 83E6  
                            i2GetPressureV_pa@p 0019                             ??_ADCC_ThresholdISR 005B  
          I2C2_SlaveSetBusColIntHandler@handler 0104                                          isqrt@x 0001  
                                     ??_islower 0106                                    __mediumconst FC56  
                                     ??_isspace 0106                       __end_of_BuzzerTestHandler 9982  
                          _highPressureAlarmLow 02AE                _I2C2_SlaveBusColInterruptHandler 028E  
                                        tblptrh 003FF7                                       ??_isupper 0106  
                                        tblptrl 003FF6                                          tblptru 003FF8  
                             ??_IPAboveSetAlarm 0104                          ??_ADCC_StartConversion 0104  
                            i2GetPressure_pa@mv 0027                                          stoa@cp 011F  
                                        stoa@fp 010F                        __end_ofi2_EnableAlarmSV1 A572  
                          i2_GetDisableAlarmSV1 A63A                                       ?_CMP1_ISR 0001  
                            i2___aomod@dividend 0001                         ??_ClearBatteryFailAlarm 0104  
                              __end_of_vfprintf 84CA                                  i2___awmod@sign 0006  
                __end_of_SetCircuitFailureAlarm A63A                                       ??_putchar 0111  
    i2TMR4_SetInterruptHandler@InterruptHandler 0001  i2ADCC_SetADTIInterruptHandler@InterruptHandler 0001  
      TMR6_SetInterruptHandler@InterruptHandler 0104        TMR1_SetInterruptHandler@InterruptHandler 0104  
      TMR0_SetInterruptHandler@InterruptHandler 0104        TMR5_SetInterruptHandler@InterruptHandler 0104  
   UART1_SetTxInterruptHandler@InterruptHandler 0104     UART1_SetRxInterruptHandler@InterruptHandler 0104  
      TMR4_SetInterruptHandler@InterruptHandler 0104    ADCC_SetADTIInterruptHandler@InterruptHandler 0104  
          __end_of_UART1_SetOverrunErrorHandler A224           __size_of_UART1_SetOverrunErrorHandler 000E  
                  _UART1_SetOverrunErrorHandler A216                       _UART1_DefaultErrorHandler A616  
                                     ??_sprintf 0183                               ?_BuzzerCMPHandler 0001  
                                 i2_CMP1_Enable A57A                         __end_of_TMR1_WriteTimer 9CE8  
                                        xtoa@fp 0121                                       ??_toupper 010C  
                          _ClearIPBelowSetAlarm A0B0                  I2C2_SlaveSetIsrHandler@handler 0104  
                             __end_of_AlarmInit 828A                 __end_of_I2C2_SlaveClearStopFlag A6E6  
                 __size_of_INTERRUPT_Initialize 0004                                   _BuzzerHandler A61C  
                                  ?i2_BuzzerOff 0001                    __size_of_UART1_RxDataHandler 0024  
                                _vBelowMinAlarm 02A6                            ?_MonitorPressureTask 0001  
                 ??_I2C2_SlaveSetStopIntHandler 0106                                ?_TMR1_Initialize 0001  
                     MonitorPressureTask@i_4881 00BF                       MonitorPressureTask@i_4894 00B7  
                     MonitorPressureTask@i_4897 00B9                         __end_of_TMR5_Initialize 8FB6  
                             __end_ofi2_isalpha 97D4                               __end_ofi2_isdigit 9808  
                            ??_BuzzerCMPHandler 005B                            __size_of_LCDWriteCmd 0096  
                             _SYSTEM_Initialize 92A6                                      _adcVOffset 01F4  
                             __end_of_ClearVars 436A                            ?_SetBatteryFailAlarm 0001  
                                    __accesstop 0060                         __end_of__initialization 6E0E  
                             __end_ofi2_islower 976C                   __size_of_I2C2_SlaveRdCallBack 0020  
                          __end_of_LCDMessage12 93A4                               __end_ofi2_isspace 92A6  
                        _I2C2_SlaveReleaseClock A65E                      ??_ClearCircuitFailureAlarm 0104  
                             __end_ofi2_isupper 97A0             I2C2_SlaveSetWrColIntHandler@handler 0104  
                            _CMP1_SetIntHandler A2E8                                 _CMP1_Initialize 9D94  
                                 ??_UpdateState 00BD                              ?_SYSTEM_Initialize 0001  
                               _TMR6_StartTimer A5E0                       __size_ofi2_TMR5_StopTimer 0004  
                                 ___rparam_used 000001                          ??_ClearGasFailureAlarm 0104  
                     __end_ofi2_DisableAlarmSV1 A62E                                     _InitDisplay A3E4  
                                 __end_of_LCDOn A44E                                 _TMR5_WriteTimer 9CA0  
                       __size_of_SeePressure_pa 016E                      __size_of_SetVBelowMinAlarm 0006  
                             __end_ofi2_sprintf 8F14                       MonitorPressureTask@measPe 029D  
                     MonitorPressureTask@measPi 029E                                       ?i2_LCDOff 0001  
                   __end_of_I2C2_SlaveClearBuff A6EA                               __end_ofi2_toupper 8F66  
                   BatteryFailAlarm@timeBelow10 027E                  __size_ofi2_SetMonitorFailAlarm 0006  
                     __end_of_ADCC_ThresholdISR 9D0C                                   __end_ofi2_abs 94DA  
                           __end_of_MonitorDump 3464                             __end_of_MonitorInit 8458  
                                 __end_of_Get5V 8684                        ??_ControllerTimerHandler 005B  
                                 __end_ofi2_pad 710C                               __end_of_GetVolume A320  
                 __end_ofi2_SetMonitorFailAlarm A628                                    ?i2_MuteAlarm 0001  
                                 __end_of_GetEp 9954                                   __end_of_GetIp 512E  
                                 __end_of_GetTe A128                                   __end_of_GetTi A114  
                   BatteryFailAlarm@timeBattery 0280                                   __end_of_See5V 8616  
                                __pcstackCOMRAM 0001                                ??_ControllerInit 0106  
               __end_ofi2_ClearMonitorFailAlarm A592                             ?_CMP1_SetIntHandler 0104  
                                  ??_LCDMessage 010A             __size_ofi2_ClearBaterryLowAlarmHigh 0006  
                                  __pidataBANK1 A676                                    __pidataBANK2 9F10  
                           ??_SYSTEM_Initialize 0108                     __end_of_I2C2_SlaveEnableIrq A042  
                               ?_GetMaxPressure 0112                          ?_ControllerBuzzerCheck 0001  
                                     ?_TMR0_ISR 0001                                    _CMP1_Disable A522  
                   __end_of_I2C2_SlaveGetRxData A670                                       ?_TMR1_ISR 0001  
                           _baterryLowAlarmHigh 02A9                   ?_TMR1_DefaultInterruptHandler 0001  
                                   ?_ButtonInit 0001                                       ?_TMR4_ISR 0001  
                                     ?_TMR5_ISR 0001                                       ?i2_GetBpm 0001  
                                 __end_of_getch A5E0                                       ?_TMR6_ISR 0001  
                                   ?_ButtonTask 0001                                       ?i2_GetTde 0001  
                                     ?i2_GetTdi 0001                                       ?i2_See12V 001B  
                                     ?i2_GetSpr 0001                              ReceiveHandler@data 0004  
                                 __end_of_fputc 7056                                   __end_of_fputs 945E  
                              ?_TdeTooLongAlarm 0001                                   __end_of_isqrt 767E  
                           _AlarmCheckTask$4558 02FB                             _AlarmCheckTask$6533 02F7  
                           _AlarmCheckTask$6537 02F9                                       ?_AdcReady 0001  
                             __end_of_HistAlarm 6608                                   __end_of_putch A414  
                                     ?i2_SetSV1 0001                                     i2printf@fmt 0077  
                              ?_TMR2_Initialize 0001                         __end_of_TMR6_Initialize 98CA  
                             ??_DisableAlarmSV1 0104                             __size_of_AlarmClear 0020  
                                    ??_I2C2_Isr 0060                      ?_ClearHighPressureAlarmLow 0001  
                        __end_of_PMD_Initialize 9C7C                        __size_of_GetPressureV_pa 00A4  
                       __size_ofi2_CMP1_Disable 0008                               ??_EPBelowSetAlarm 0104  
                                     ?i2___lmul 0001                                       ?i2___wmul 0001  
                                   ?_BuzzerInit 0001                                         ??_LCDOn 0104  
                                   ?_BuzzerTask 0001                                     SetTarget@br 0021  
                                   SetTarget@ep 001F                              SetVolumeControl@vc 0001  
                                   SetTarget@ip 001D                                     ?_BuzzerTest 0001  
                                 ??_StopHandler 005E                                 ?_EnableAlarmSV1 0001  
                              ??_VBelowMinAlarm 0104                           __end_ofi2_GetTargetEp 9BC2  
                         __end_ofi2_GetTargetIp 9B9C                          _I2C2_SlaveSetSlaveAddr A3F0  
                                       ??i2_abs 0015                                _alarmMaxPressure 0250  
                                 _volumeControl 02A1                                         ??_Get5V 0120  
                                       ??i2_pad 0019                                       ?_AlarmSet 0001  
                                       ??_GetEp 0114                          _I2C2_SlaveSetSlaveMask A16E  
                                       ??_GetIp 0114                                         ??_GetTe 0106  
                                       ??_GetTi 0106                                 _TdiTooLongAlarm A6A6  
                                       ??_See5V 0120              __end_of_ClearHighPressureAlarmHigh A4CA  
                 ?i2_ClearHighPressureAlarmHigh 0001                      _ClearHighPressureAlarmHigh A4C2  
                     _UART1_FramingErrorHandler 02E9                                       ?_AnyAlarm 0001  
             __size_of_ClearBaterryLowAlarmHigh 0006                   ?_TMR4_DefaultInterruptHandler 0001  
                             __end_of_BuzzerOff A19E                               __end_of_BuzzerSet 9FE6  
                        ??_ClearIPAboveSetAlarm 0104                       ?_ClearBaterryLowAlarmHigh 0001  
                         ?i2_GetDisableAlarmSV1 0001                                  i2vfpfcnvrt@fmt 0047  
                                     ?i2_printf 0077                              _BaterryLowAlarmMed A6AE  
                                i2vfpfcnvrt@llu 0068                     ADCC_StartConversion@channel 0104  
                          ??_CMP1_SetIntHandler 0106                                      ??_CMP1_ISR 005B  
                                ?i2_CMP1_Enable 0001                                       ?i2_strlen 0001  
                      ??_I2C2_SlaveStopCallBack 0060                                         ??_getch 0105  
                              ?_TMR0_StartTimer 0001                                   ?i2_AdcGetData 0007  
                                       ??_fputc 010A                       __end_of_SYSTEM_Initialize 92E8  
                                       ??_fputs 0113                           ?_ClearIPBelowSetAlarm 0001  
                                       ??_isqrt 0003                                  ?_BuzzerHandler 0001  
                                 ?i2_TMR4_Start 0001                                 __CFG_IVT1WAY$ON 000000  
                   __size_of_SetIPBelowSetAlarm 0020        __end_ofi2_ClearVeryHighPressureAlarmHigh A58A  
     __size_ofi2_ClearVeryHighPressureAlarmHigh 0008          __end_of_ClearVeryHighPressureAlarmHigh A4C2  
       __size_of_ClearVeryHighPressureAlarmHigh 0008              ??i2_ClearVeryHighPressureAlarmHigh 0001  
             ?i2_ClearVeryHighPressureAlarmHigh 0001                i2_ClearVeryHighPressureAlarmHigh A582  
                _ClearVeryHighPressureAlarmHigh A4BA                                         ??_putch 0105  
                         _I2C2_InterruptHandler 00EE                                     _BuzzerCheck 7D36  
                         ??_MonitorPressureTask 005B                  __size_of_ClearControlFailAlarm 0008  
                                   _BuzzerClear A17E                            __end_of_LCDWriteChar 7D36  
                             __end_of_SetTarget 6EDE                   __end_of_ClearControlFailAlarm A4DA  
                                    __pbssBANK0 00C8                                      __pbssBANK1 01C7  
                                    __pbssBANK2 0200                                      __pbssBANK3 0300  
                                    __pbssBANK4 0400                                         ?_LCDOff 0001  
                  ControllerTimerHandler@errors 022E                   ?_UART1_SetOverrunErrorHandler 0104  
                  ?_I2C2_SlaveSetAddrIntHandler 0104                              __end_of_LCDMessage 786A  
                                   i2sprintf@ap 008B                           ??_SetBatteryFailAlarm 0104  
                        ?_UART1_SetErrorHandler 0104                                      _alarmCheck 02A3  
                                 ?i2_AdcSeeData 0007                             __size_ofi2_vfprintf 006A  
                    __end_of_SetTdiTooLongAlarm A54A                             ?_BaterryLowAlarmMed 0001  
                               __CFG_MVECEN$OFF 000000                               __end_of_MuteAlarm 47A6  
                                    _alarmState 00FA                                         ?_Get12V 011E  
                             __end_of_TestAlarm 7482                                       ?_BuzzerOn 0001  
                       __size_of_ReceiveHandler 004A                                         ?i2_atoi 0008  
                                       ?i2_ctoa 001E                                         ?i2_dtoa 001E  
                         _TMR4_InterruptHandler 02ED                                     _SetAlarmLED A2F6  
                                       ?_GetBpm 0104                              i2SetAlarmSV1@value 005B  
                                   _SetAlarmSV1 96D0                __size_of_ClearNoPowerSupplyAlarm 0006  
                                       ?_GetTde 0104                                         ?_GetTdi 0104  
                                       ?_See12V 011E                                         ?i2_stoa 000C  
                         __end_ofi2_HigherAlarm 73D4                                         ?_GetSpr 0104  
                        __size_of_ClearAllAlarm 004E                                         ?i2_xtoa 001E  
                                       IVTBASEH 003FD6                                      _batterySV1 01FA  
                                       IVTBASEL 003FD5                                         IVTBASEU 003FD7  
                                 ?_ValueDisplay 0001                                      ??i2_LCDOff 0001  
                            i2AlarmDisplay@type 00BD                           __end_of_DisplayEnable A1CE  
                        __size_of_ClearAlarmLED 000A                                         ?_SetSV1 0001  
                            GetMaxPressure@temp 0114                                ??_FVR_Initialize 0104  
                              SetMaxPressure@pr 0001                __size_of_I2C2_SlaveSetIsrHandler 000E  
                   __end_of_CircuitFailureAlarm A6B6                __end_of_TMR0_SetInterruptHandler A24E  
                       __size_of_TMR0_StopTimer 0004                                         ?___lmul 0104  
                            _SetTdeTooLongAlarm A54A                     __size_of_TMR4_Period8BitSet 000C  
                                  ??_UART1_Read 0104                                         _I2C2CNT 003D56  
                                       ?___wmul 0104                                         _I2C2PIR 003D63  
                              ?_TMR1_StartTimer 0001                                      ??_TMR0_ISR 0060  
                                       _I2C2RXB 003D54                                         _I2C2TXB 003D55  
                                    ??_TMR1_ISR 0060                         __end_of_TMR5_StartTimer A696  
                               __CFG_PPS1WAY$ON 000000                __end_of_TMR6_SetInterruptHandler A26A  
                           __end_of_UpdateState 411E                                  _GetPressure_pa 4CAA  
            __size_ofi2_ClearBaterryLowAlarmMed 0006                                  i2_toupper$5789 000D  
                                    ??_TMR4_ISR 005D                         __end_of_ADCC_Initialize 875E  
                                    ??_TMR5_ISR 005D                                      ??i2_GetBpm 0003  
                                    ??_TMR6_ISR 005B                                      ??i2_GetTde 0003  
                                    ??i2_GetTdi 0003                                      ??i2_See12V 001D  
                                       _I2C2_on 02B4                                      ??i2_GetSpr 0003  
                    ??_GetControllerBuzzerCheck 0001                      ?i2_ClearBaterryLowAlarmMed 0001  
                       _ClearBaterryLowAlarmMed A604                                         _CM1CON0 003EBC  
                                       _CM1CON1 003EBD                    ?_I2C2_SlaveSetReadIntHandler 0104  
                                    ??_AdcReady 0001                                      ??i2_SetSV1 005B  
                                ___lmul@product 010C                   __size_of_I2C2_SlaveSetCounter 000A  
       __end_of_I2C2_SlaveDefRdInterruptHandler A4A8        __size_of_I2C2_SlaveDefRdInterruptHandler 000A  
             ??_I2C2_SlaveDefRdInterruptHandler 0001                ?_I2C2_SlaveDefRdInterruptHandler 0001  
               _I2C2_SlaveDefRdInterruptHandler A49E            __end_of_ADCC_SetADTIInterruptHandler A25C  
         __size_of_ADCC_SetADTIInterruptHandler 000E                ??i2_ADCC_SetADTIInterruptHandler 0003  
               ?i2_ADCC_SetADTIInterruptHandler 0001                    _ADCC_SetADTIInterruptHandler A24E  
                              ?_PWM6_Initialize 0001                                ?_TMR4_Initialize 0001  
               _I2C2_SlaveDefWrInterruptHandler 000000              I2C2_SlaveSetAddrIntHandler@handler 0104  
                          ??_BaterryLowAlarmMed 0104                                         _ADSTPTH 003EE5  
                                       _ADSTPTL 003EE4                                         ?_printf 0171  
                               ?_PMD_Initialize 0001                          ??_ClearEPBelowSetAlarm 0104  
                             _UART1_Receive_ISR 786A               __end_of_ClearHighPressureAlarmLow A65E  
                                       ?_strlen 0104                                      ??i2___lmul 0009  
                           ?_SetTdeTooLongAlarm 0001                            i2_TMR4_Period8BitSet A46C  
                             i2_GetPressureV_pa 767E                                         Get5V@mv 0120  
                                    ??i2___wmul 0005                    __size_of_ClearVAboveMaxAlarm 0008  
                                       _U1ERRIE 003DFA                                         _U1ERRIR 003DF9  
                  ??i2_TMR4_SetInterruptHandler 0003                                       _I2C2STAT0 003D61  
                                     _I2C2STAT1 003D62                                         _LCDInit 6900  
                                       i2l20003 2844                                         i2l20101 28DE  
                                       i2l20031 2870                                         i2l20023 2862  
                           __CFG_PWRTS$PWRT_OFF 000000                                         i2l20121 28FC  
                                       i2l20017 285A                                         i2l20009 284C  
                                       i2l20203 4900                                         i2l20115 28F4  
                                       i2l20107 28E6                                         i2l20051 288E  
                                       i2l21011 886A                                         i2l20045 2886  
                                       i2l20037 2878                                         i2l20141 29B0  
                                       i2l21005 8852                                         i2l20135 290C  
                                       i2l20127 2904                                         i2l21007 885C  
                      ?i2_ClearControlFailAlarm 0001                                         i2l20225 4980  
                                       i2l20137 29AA                                         i2l20073 28B2  
                                       i2l20065 28A4                                         i2l21017 8886  
                                       i2l21051 6146                                         i2l20251 675C  
                                       i2l20059 289C                                         i2l21301 046A  
                                       i2l21205 023C                                         i2l20237 6722  
                                       i2l20093 28D0                                         i2l13117 9C9C  
                                       i2l21039 607A                                         i2l20255 6774  
                                       i2l20191 4864                                         i2l20175 47D4  
                                       i2l20087 28C8                                         i2l20079 28BA  
                                       i2l21321 04F2                                         i2l21209 0254  
                                       i2l21059 616C                                         i2l13083 7656  
                                       i2l13075 75F6                                         i2l21323 04FC  
                                       i2l21307 048A                                         i2l21251 02C0  
                                       i2l21163 005C                                         i2l20275 67C4  
                                       i2l20267 67B0                                         i2l20259 6786  
                                       i2l20195 4898                                         i2l20187 4830  
                                       i2l13077 7602                                         i2l21341 05AE  
                                       i2l21333 0546                                         i2l21309 04AE  
                                       i2l21173 00A6                                         i2l13079 7610  
                                       i2l21407 0880                                         i2l21335 0570  
                                       i2l21327 051C                                         i2l21319 04EC  
                                       i2l21263 0316                                         i2l21159 0044  
                                       i2l20295 6806                                         i2l20199 48CC  
                                       i2l21441 0A64                                         i2l21433 09FE  
                                       i2l21425 0996                                         i2l21409 088A  
                                       i2l21257 02DA                                         i2l21177 00BE  
                                       i2l21169 00A0                                         i2l21603 10E6  
                                       i2l21515 0CFA                                         i2l21283 03AE  
                                       i2l21533 0E0A                                         i2l21381 0756  
                                       i2l21373 0712                                         i2l21365 06EE  
                                       i2l20653 665A                            __size_of_UART1_Write 0056  
                                       i2l21631 11FE                                         i2l21623 1192  
                                       i2l21615 1156                                         i2l21607 1110  
                                       i2l21527 0DA2                                         i2l21535 0E14  
                                       i2l21455 0AAC                                         i2l21391 07BA  
                                       i2l21359 06D0                                         i2l21279 039E  
                                       i2l21199 021E                                         i2l20663 6678  
                                       i2l20647 6648                                         i2l20727 9970  
                                       i2l20737 9C02                                         i2l21641 1264  
                                       i2l21617 115E                                         i2l21609 1118  
                                       i2l21473 0B6C                                         i2l21385 0776  
                                       i2l21377 0730                                         i2l21297 045A  
                                       i2l21289 03CE                                         i2l20729 997C  
                                       i2l17011 5B94                                         i2l20739 9C08  
                                       i2l21643 1268                                         i2l21635 1244  
                                       i2l21571 0FA0                                         i2l21563 0F4E  
                                       i2l21555 0EF6                                         i2l21539 0E4C  
                                       i2l21483 0C00                                         i2l21475 0B72  
                                       i2l17005 5B6C                                         i2l13717 7F0A  
                                       i2l13741 8CE6                                         i2l21653 12A4  
                                       i2l21661 12CC                                         i2l21469 0B14  
                                       i2l21477 0B7A                                         i2l21397 0800  
                                       i2l20693 66FA                                         i2l13719 7F16  
                                       i2l13751 8D06                                         i2l21663 12DC  
                                       i2l21655 12A8                                         i2l21647 1280  
                                       i2l21559 0F28                                         i2l21583 0FFA  
                                       i2l20679 66BC                                         i2l20695 6700  
                                       i2l17017 5BBA                                         i2l17033 5C40  
                                       i2l13729 7F4A                                         i2l21649 1284  
                                       i2l21577 0FD4                                         i2l21569 0F94  
                                       i2l21497 0C8E                                         i2l21681 80C4  
                                       i2l17019 5BCE                                         i2l13739 8CDE  
                                       i2l21659 12C6                                         i2l17141 8B14  
                                       i2l17037 5C66                                         i2l17029 5C2A  
                                       i2l17053 61D4                                         i2l17205 36C6  
                                       i2l17221 5450                                         i2l17301 3B96  
                                       i2l21781 88AE                                         i2l21677 80B6  
                                       i2l17143 8B20                                         i2l17231 54BC  
                                       i2l21599 10B4                                         i2l21687 8102  
                                       i2l21679 80BC                                         i2l17073 6286  
                                       i2l17065 624A                                         i2l17057 61EE  
                                       i2l17049 61B0                                         i2l17209 36E0  
                                       i2l18113 904C                                         i2l18201 6C90  
                                       i2l21785 88BC                                         i2l17323 571C  
                                       i2l17059 6202                                         i2l17171 3512  
                                       i2l17235 54D8                                         i2l18107 9038  
                                       i2l17341 578C                                         i2l17333 5772  
                                       i2l17325 5720                                         i2l17069 6260  
                                       i2l17157 34CA                                         i2l17253 5578  
                                       i2l17245 5540                                         i2l17317 3C10  
                                       i2l18213 6CCA                                         i2l21797 88DA  
                                       _LCDTest 7DCC                                         i2l17343 5792  
                                       i2l17175 3522                                         i2l17239 54F6  
                                       i2l17271 3A46                                         i2l18215 6CD6  
                                       i2l18207 6CA8                                         i2l19111 3FFA  
                                       i2l15719 920E                              ?_UART1_Receive_ISR 0001  
                                       i2l17097 929C                                         i2l17345 57C0  
                                       i2l17185 365E                                         i2l17249 555C  
                                       i2l17265 3A06                                         i2l17521 1340  
                                       i2l18153 520E                                         i2l18233 6D2E  
                                       i2l18225 6D0A                                         i2l19113 3FFE  
                                       i2l17339 5784                                         i2l19131 403E  
                                       i2l19123 4028                                         i2l15739 7904  
                                       i2l17349 57FE                                         i2l17293 3AFE  
                                       i2l17541 1370                                         i2l17533 1352  
                                       i2l17525 1346                                         i2l18157 5278  
                                       i2l18149 5198                                         i2l18261 83C0  
                                       i2l18253 83A0                                         i2l18245 8386  
                                       i2l18421 1EEE                                         i2l18229 6D18  
                                       i2l19125 402C                                         i2l17279 3A68  
                                       i2l17615 186A                                         i2l18255 83A8  
                                       i2l18415 1ECE                                         i2l19119 401A  
                                       i2l19071 3F6C                                         i2l16921 749A  
                                       i2l17609 181C                                         i2l17561 147E  
                                       i2l17545 137A                                         i2l17537 1358  
                                       i2l17529 134C                                         i2l17625 1890  
                                       i2l18097 901A                                         i2l18265 83CA  
                                       i2l18249 8392                                         i2l18505 438E  
                                       i2l18185 8BCC                                         i2l19129 403A  
                                       i2l17619 1874                                         i2l17563 1490  
                                       i2l17539 135C                                         i2l17547 13C6  
                                       i2l19163 917A                                         i2l19075 3F7E  
                                       i2l19059 3F36                                         i2l19251 5E60  
                                       i2l16933 94E4                                         i2l16941 9064  
                                       i2l19157 9150                                         i2l19165 917E  
                                       i2l17901 800E                                         i2l18269 83D8  
                                       i2l18445 20EC                                         i2l18517 43DE  
                                       i2l18189 8BE0                                         i2l18541 4B54  
                                       i2l19149 410E                                         i2l16943 9068  
                                       i2l17559 1454                                         i2l18471 2188  
                                       i2l18447 20F4                                         i2l19095 3FC4  
                                       i2l19079 3F84                                         i2l16937 9500  
                                       i2l17577 156E                                         i2l17913 8034  
                                       i2l18465 216E                                         i2l19097 3FD2  
                                       i2l19265 5F02                                         i2l19281 99A2  
                                       i2l16891 8DBC                                         i2l17595 16FA  
                                       i2l17587 1662                                         i2l17915 803C  
                                       i2l17907 801E                                         i2l18467 2176  
                                       i2l19099 3FD6                                         i2l16893 8DC4  
                                       i2l16877 8D76                                         i2l16973 7078  
                                       i2l17933 8074                                         i2l17925 805C  
                                       i2l18549 4BA4                                         i2l18901 63D0  
                                       i2l16983 70B8                                         i2l17871 955C  
                                       i2l18583 7716                                         i2l18559 4C9C  
                                       i2l18903 63D4                                         i2l16977 708A  
                                       i2l17929 8066                                         i2l18577 76FE  
                                       i2l18569 76AE                                         i2l16987 70EE  
                                       i2l16979 709C                                         i2l17891 880E  
                                       i2l18851 7BAC                                         i2l17877 957A  
                                       i2l18917 99D0                                         i2l18845 7B8E  
                                       i2l17889 87E2                                         i2l18785 6E96  
                                       i2l18849 7BA4                                         i2l18873 732E  
                                       i2l19921 26E6                                         i2l19913 26DE  
                                       i2l18787 6EA0                                         i2l18883 73B6  
                                       i2l19931 277A                                         i2l19923 276C  
                                       i2l19907 26D0                                         i2l18893 62D0  
                                       i2l19909 26D6                                         i2l18879 735A  
                                       i2l19951 2798                                         i2l19871 2678  
                                       i2l19849 8D5A                                         i2l19945 2790  
                                       i2l19937 2782                                         i2l19865 265C  
                                       i2l19873 2686                                         i2l19971 27B6  
                                       i2l19883 26A8                                         i2l19981 2820  
                                       i2l19965 27AE                                         i2l19893 26BA  
                                       i2l19885 26AC                                         i2l19869 2674  
                                       i2l19887 26B2                                         i2l19879 269C  
                                       i2l19995 2836                                         i2l19979 27BE  
                                       i2l19989 282E                                         _U1RXPPS 003AE5  
                       ??_SetNoPowerSupplyAlarm 0104                                      ??_AlarmSet 0104  
                            ?i2_GetPressureV_pa 000F                 ??_I2C2_SlaveSetBusColIntHandler 0106  
                          __size_ofi2_TMR4_Stop 0004                                    ??i2_AnyAlarm 0001  
            I2C2_SlaveSetReadIntHandler@handler 0104                                      ??_AnyAlarm 0104  
                    __size_of_BuzzerTestHandler 002E                                         i2_LCDOn A476  
                                     _I2C2_Read A664                                         _OSCCON1 0039D9  
                                       _OSCCON3 0039DB                                       _I2C2_Open 8904  
                            __size_of_vfpfcnvrt 05D2             __end_of_I2C2_SlaveSetAddrIntHandler A2CC  
                   _I2C2_SlaveSetAddrIntHandler A2BE                                      ??i2_printf 0057  
                                       _OSCTUNE 0039DE                                         _PWM6DCH 003F69  
                                       _PWM6DCL 003F68                                         _PWM6CON 003F6A  
                             ??_IPBelowSetAlarm 0104                                  ??i2_AdcGetData 0009  
                      ??_SetBaterryLowAlarmHigh 0104                    __size_of_BaterryLowAlarmHigh 0004  
                                       _SLRCONA 003A43                                         _SLRCONB 003A53  
                                       _SLRCONC 003A63                                         _SLRCOND 003A73  
                                       _SLRCONE 003A83                                      ??i2_strlen 0003  
                                       i2_GetEp 99DE                                         i2_GetIp 512E  
                                       i2_GetTe A420                                    ??_AdcGetData 010C  
                                       i2_GetTi A382                  __size_of_ADCC_IsConversionDone 000E  
                                ??i2_TMR4_Start 0001                                         i2_See5V 8684  
                              i2BuzzerOn@period 0001                         __end_of_CMP1_Initialize 9DB4  
                              i2_TMR0_StopTimer A6DA                                         See5V@mv 0120  
                                       _AdcInit 828A                   __end_of_ADCC_IsConversionDone A3E4  
                                  ??_AdcHandler 005B                                    ??_TMR4_Start 0104  
                       __end_of_TMR6_StartTimer A5E6                                    _enableAlarms 00F4  
                                  ??_TMR6_Start 0104                             __end_of_StopHandler 8D74  
                           ??_UART1_Receive_ISR 0001                                     TestAlarm@id 0183  
                              ?_TMR1_WriteTimer 0001                         __end_of_TMR5_WriteTimer 9CC4  
                               _I2C2_Initialize A128              I2C2_SlaveSetStopIntHandler@handler 0104  
                                ??i2_AdcSeeData 0009                             ??i2_GetPressureV_pa 0011  
                           __size_of_ButtonInit 002A                                    ??_AdcSeeData 010C  
                           __size_of_ButtonTask 0104                              __end_of_UART1_Read 91D4  
                               __size_of_LCDOff 000A                                         i2_fputc 7482  
                                       i2_fputs 94DA                                     _MonitorDump 3104  
                                   _MonitorInit 83E6                                ?_TMR5_Initialize 0001  
                              ??i2_ValueDisplay 0057                                         i2atoi@n 0015  
                                       i2pad@fp 0013                                         i2atoi@s 0008  
                                       i2ctoa@c 0020                                         i2_putch A4A8  
                                       _GetPmax 9B50                                         i2ctoa@w 0021  
                              _DisplayCalibrate 9704                                         i2dtoa@d 0020  
                                       i2dtoa@i 0040                                         i2dtoa@n 0038  
                                       i2dtoa@p 0032                                         i2dtoa@s 0036  
                                       i2dtoa@w 0034                                      _controlSV1 01F9  
                          ??_SetTdeTooLongAlarm 0001                   ??_I2C2_SlaveSetAddrIntHandler 0106  
                                       _DumpI2C A6EA                         _GetPressure_mbar02$7129 002D  
                      ??i2_ClearEPAboveSetAlarm 0001                                    ??i2_BuzzerOn 0001  
                                    ??_BuzzerOn 0104               __size_of_SetHighPressureAlarmHigh 0006  
                                ??_ValueDisplay 018D                          __size_ofi2_UART1_Write 0056  
                               __size_of_Get12V 009A                               i2___aldiv@divisor 0011  
                                i2_AlarmDisplay 7B72                       ?_SetHighPressureAlarmHigh 0001  
                    __size_ofi2_DisableAlarmSV1 0006                          SetCalibrateState@calib 0183  
                               __size_ofi2_atoi 0170                                 __size_ofi2_ctoa 0062  
                               __size_ofi2_dtoa 02B2                               ?i2_MonitorDisable 0001  
                                       i2stoa@i 0018                                         i2stoa@l 0020  
                                       i2stoa@p 001E                                         i2stoa@s 000E  
                                       i2stoa@w 001A                               i2___aldiv@counter 0015  
                              _ControlFailAlarm A0EC                                 __size_of_GetBpm 000E  
                     __size_of_BatteryFailAlarm 00E4                             __size_of_BuzzerInit 0030  
                               _EPAboveSetAlarm 9F98                                 __size_of_GetTde 000C  
                               __size_of_GetTdi 000E                                      _histButton 00FC  
                               __size_of_See12V 009A                                 __size_ofi2_stoa 0178  
                               _epAboveSetAlarm 00E6                             __size_of_BuzzerTask 03A8  
                               __size_of_GetSpr 000E                                       Get12V@v12 0126  
                               __size_ofi2_xtoa 0282                             __size_of_BuzzerTest 008C  
                                       i2xtoa@c 0043                                         i2xtoa@d 0020  
                                       i2xtoa@i 0041                                         i2xtoa@n 0039  
                                       i2xtoa@p 0035                                         i2xtoa@w 0037  
                                       i2xtoa@x 0028                                         __Hparam 0000  
                                     Get12V@adc 0124                      __size_of_ADCC_ThresholdISR 0024  
           __end_of_I2C2_SlaveSetReadIntHandler A2A2                     _I2C2_SlaveSetReadIntHandler A294  
                        __size_of_GetAlarmState 0050                                         __Lparam 0000  
                      __end_of_UART1_Initialize 6F9E                          __end_of_GetPressure_pa 4E2E  
                               __size_of_SetSV1 0034                      ??_TMR5_SetInterruptHandler 0106  
                            ??i2_MonitorDisable 0001                      __CFG_RSTOSC$HFINTOSC_64MHZ 000000  
               __size_of_ControllerTimerHandler 0086             __size_ofi2_TMR4_SetInterruptHandler 000E  
                       __size_of_DisplayDisable 0012                             i2_SetCalibrateState 62B8  
                                       ___aldiv 6BA0                                         ___aodiv 59E8  
                          __size_ofi2_ClearVars 024A                                         ___aomod 5F1C  
                      ??i2_ADCC_StartConversion 0001                              __end_ofi2_AnyAlarm 958E  
                                       ___awdiv 7F72                                 __size_of___lmul 005E  
                                       ___awmod 82FE                                         ___lldiv 7EE8  
                               __size_of___wmul 002E                                         ___llmod 853A  
                              i2AdcDataReady@id 0007                                         ___lwdiv 8CC8  
                     __end_of_UART1_Receive_ISR 790A                                       ?_vfprintf 0169  
                                 ?_AdcDataReady 010A                                  i2vfprintf@cfmt 0055  
                  _I2C2_SlaveRdInterruptHandler 0296                    _I2C2_SlaveWrInterruptHandler 0294  
                      __end_ofi2_GetPressure_pa 4CAA                       __end_ofi2_GetPressureV_pa 7724  
                            __end_of_AdcGetData 89D0                         __end_of_TdiTooLongAlarm A6AA  
                    __end_of_SetEPAboveSetAlarm 9E94                                    ?i2_vfpfcnvrt 0045  
             __end_ofi2_ClearBaterryLowAlarmMed A64C                                         _hiLimit 01CF  
                                       __pcinit 6D48                                         _pLowAcc 021A  
                            __end_of_AdcHandler 6184                              __end_of_TMR4_Start A6C6  
                               i2AlarmDisplay@t 0057                                ?_TMR6_Initialize 0001  
                       MonitorPressureTask@adcv 00AD                                         __ramtop 1000  
                       MonitorPressureTask@cnt2 0234                         MonitorPressureTask@ecnt 0236  
                   __size_of_UART1_Transmit_ISR 0048                              __end_of_TMR6_Start A68E  
                       MonitorPressureTask@down 029C                   __size_ofi2_UnDisplayCalibrate 000E  
                      __end_of_MonitorFailAlarm 6BA0                                         _cntByte 00CC  
                         ?i2_TMR4_Period8BitSet 0001                   ??_I2C2_SlaveSetReadIntHandler 0106  
              __size_of_I2C2_SlaveClearStopFlag 0004                                         __ptext0 2D84  
                                       __ptext1 A5DA                                         __ptext2 918C  
                                       __ptext3 853A                                         __ptext4 A1DE  
                                       __ptext5 73D4                                         __ptext6 9F4A  
                                       __ptext7 969C                         MonitorPressureTask@tmp2 00B1  
                                       __ptext8 63DE                                         __ptext9 A1EC  
                       MonitorPressureTask@next 00B5              __end_ofi2_ClearBaterryLowAlarmHigh A652  
                    i2_ClearBaterryLowAlarmHigh A64C                         MonitorPressureTask@temp 00BB  
                               __size_of_printf 002A                            __size_ofi2_GetVolume 000E  
                                       _ledType 00FB                                   MuteAlarm@high 0187  
                ??_TMR1_DefaultInterruptHandler 0001                                         _loLimit 01CD  
                 ?_ADCC_SetADTIInterruptHandler 0104                         __size_of_TMR5_StopTimer 0004  
                            __end_of_AdcSeeData 9366                                 __CFG_WRTAPP$OFF 000000  
                 __size_of_HighPressureAlarmLow 0082                                 __size_of_strlen 0054  
                               _AdcReStartCycle 8A36                                       _T1CONbits 003FB2  
                                  ?_GetTargetEp 0112                                    ?_GetTargetIp 0112  
                                       _histSec 01E9                                   _ClearAllAlarm 90F4  
                         _OSCILLATOR_Initialize 9FFE                                    __size_of_abs 003E  
                                  __size_of_pad 00B2                          __size_of_MonitorEnable 0008  
                                       _isalpha 95FA                                         _isdigit 9630  
                          MonitorPressureTask@i 00BD                       __size_ofi2_AlarmUpdateLCD 0142  
                        ??i2_GetDisableAlarmSV1 0001                                   _ClearAlarmLED A462  
                              ___awmod@dividend 0104                                ??_MonitorDisable 0104  
             __size_of_TMR1_SetInterruptHandler 000E                                     _I2C2ERRbits 003D60  
                      ??i2_ClearGasFailureAlarm 0001                                ___aldiv@dividend 0110  
                                     _T4CONbits 003FA0                                         _ttAlarm 025C  
                               ??i2_CMP1_Enable 0001                                         _islower 958E  
                            __end_ofi2_BuzzerOn 9F4A                        ??_PIN_MANAGER_Initialize 0104  
             __size_of_TMR4_SetInterruptHandler 000E                                         _isspace 921C  
                     ?_TMR1_SetInterruptHandler 0104                                         _numHigh 024C  
                               __CFG_WRTSAF$OFF 000000                               _ValueDisplay$4007 01A6  
                             _ValueDisplay$4008 01A8                                      ?_I2C2_Read 0001  
                             _ValueDisplay$6530 019F                                       _T5CONbits 003F9A  
                                    ?_I2C2_Open 0001                       ?_TMR4_SetInterruptHandler 0104  
                                       _isupper 95C4                     __end_of_SetControlFailAlarm A57A  
                                   _I2C2PIEbits 003D64                                   ??_CMP1_Enable 0104  
                               ??_BuzzerHandler 005D                                         _muteSec 01EB  
                                     _T6CONbits 003F94                          ??_ClearIPBelowSetAlarm 0104  
                          __size_ofi2_HistAlarm 0100                  __size_of_HighPressureAlarmHigh 0004  
                             ??_GetPressureV_pa 0114                                 _GasFailureAlarm A6BA  
                          ?i2_SetCalibrateState 0001                                     _I2C2PIRbits 003D63  
                                       atoi@neg 0111                   __end_of_HighPressureAlarmHigh A6BA  
                         __size_of_LCDMessage12 003E                                         _putchar 9F4A  
                                       main@cnt 0226                      __size_of_SYSTEM_Initialize 0042  
                      __end_of_SetVolumeControl A494                                         _sprintf 8C1A  
                           DisplayCalibrate@off 0095                 __size_of_I2C2_SlaveStopCallBack 0020  
                           DisplayCalibrate@prv 0097                                  LCDMessage1@str 0110  
                                LCDMessage2@str 0110                                         _toupper 8E70  
                               GetPressure_pa@p 0128                                    ??_AlarmClear 0104  
                                     _LCDWrite4 90A6                            end_of_initialization 6E0E  
              __size_ofi2_ClearMonitorFailAlarm 0008                           __end_ofi2_BuzzerClear A1AE  
                ??i2_ClearHighPressureAlarmHigh 0001                                i2HigherAlarm@max 000E  
                         _ClearMonitorFailAlarm A512                  ??_TMR4_DefaultInterruptHandler 0001  
                        __end_ofi2_AlarmDisplay 7C0A                              _GetPressure_mbar02 9666  
                                     AnyAlarm@i 0106                                         fputc@fp 0108  
                                 ValueDisplay@r 01B1             __end_of_UART1_SetTxInterruptHandler A208  
                   _UART1_SetTxInterruptHandler A1FA                                         fputs@fp 0111  
                           i2___wmul@multiplier 0001                            __size_ofi2_BuzzerOff 0010  
                                     i2u1203_40 A3C4                      __end_of_SetGasFailureAlarm A55A  
                                     i2u2101_40 1102                                       i2u1150_40 9E8A  
                                     i2u1151_40 9E2A                                       i2u2103_40 1148  
                                     i2u2016_40 60E8                                       i2u1152_40 9E4A  
                                     i2u1081_40 A3E0                                       i2u2105_40 11A2  
                                     i2u2120_48 9D60                                       i2u2122_48 9D82  
                                     i2u2043_40 04C4                                       i2u2130_48 985A  
                                     i2u2115_40 80B0                                       i2u2210_48 683C  
                              i2_TMR5_StopTimer A6D2                                       i2u1149_40 9E6A  
                                     i2u1165_40 7F1A                                       i2u2029_40 003E  
                                     i2u2124_48 9D1C                                       i2u2220_48 6884  
                                     i2u2070_40 0A0C                                       i2u2054_40 0706  
                                     i2u2213_48 6854                                       i2u2118_48 9CFA  
                                     i2u2047_40 053C                                       i2u2126_48 9828  
                                     i2u2207_40 682C                                    ?_HigherAlarm 010A  
                                     i2u1600_40 36A2                                       i2u1168_40 8CEA  
                                     i2u2065_40 08D4                                       i2u2128_48 9D3E  
                                    _targetHigh 01E3                                       i2u1602_40 36B0  
                                     i2u1610_40 5520                  __size_of_SetBaterryLowAlarmMed 0006  
                           i2GetPressureV_pa@mv 0015                                  _SeePressure_pa 587A  
                                     i2u1610_47 5512                                       i2u2219_40 6880  
                                     i2u2092_40 0EAA                                       i2u2084_40 0D3A  
                                     i2u1604_41 542C                                       i2u1613_40 558C  
                                     i2u1621_40 3AD4                                       i2u2093_40 0F44  
                                     i2u2069_40 09A6                                     _UpdateState 3EC4  
                                     i2u1542_40 7492                                       i2u1622_40 3AD6  
                                     i2u1615_40 39D8                                       i2u2095_40 0F8A  
                                     i2u1390_48 78C6                                       i2u1390_49 78D8  
                                     i2u1632_40 576E                                       i2u1544_40 74DA  
                                     i2u1624_40 3B62                                       i2u2088_40 0E04  
                                     i2u1560_41 5B9A                                       i2u1624_45 3B50  
                                     i2u1609_40 54EC                                       i2u1625_40 3BA6  
                                     i2u1617_40 3A64                                       i2u2097_40 0FE4  
                                     i2u1392_48 78F0                                       i2u1634_40 5834  
                                     i2u1546_40 9092                                       i2u1562_40 5BD2  
                                     i2u1618_40 3A9A                                       i2u1546_47 9084  
                                     i2u1635_40 5836                                       i2u1571_40 94AA  
                                     i2u1627_40 3BC8                                       i2u1619_40 3A9C  
                                     i2u1627_41 3BC6                                       i2u1572_40 97CC  
                                     i2u1548_40 9764                                       i2u1580_40 8F40  
                                     i2u1628_40 3BD6                                       i2u1804_40 43D6  
                                    _targetPmax 026E                           __end_ofi2_SetAlarmSV1 99B0  
                                     i2u1573_40 97CE                                       i2u1549_40 9766  
                                     i2u1581_40 8F42                                       i2u1629_40 3BDC  
                                     i2u1733_40 958A                                       i2u1805_40 4426  
                                     i2u1388_48 7898                                       i2u1388_49 78AA  
                 __end_of_SetBaterryLowAlarmMed A5F8                                       i2u1574_40 9800  
                                     i2u1590_40 349E                                       i2u1575_40 9802  
                                     i2u1568_40 6206                                       i2u1680_40 1742  
                                     i2u1672_40 14D2                                       i2u1577_40 9298  
                                     i2u1593_40 34DE                                       i2u1673_40 14D4  
                                     i2u1578_40 9798                                       i2u1674_40 14E2  
                                     i2u1738_40 8040                                       i2u1842_40 734C  
                 __size_of_ClearTdiTooLongAlarm 0008                                       i2u1595_40 350C  
                                     i2u1579_40 979A                                       i2u1923_40 266E  
                                     i2u1596_40 366C                                       i2u1772_40 6CDA  
                                     i2u1844_40 73C6                                         isqrt@op 0005  
                                     i2u1589_40 349C                                       i2u1677_40 15B6  
                                     i2u1861_40 3F30                                       i2u1941_40 674C  
                                     i2u1925_40 47CC                                       i2u1598_40 368E  
                                     i2u1942_40 6756                                       i2u1598_41 368C  
                ??_UART1_SetOverrunErrorHandler 0106                                       i2u1599_40 369C  
                                     i2u1919_40 8D3C                                      _monitorSV1 01F8  
                                     i2u1856_40 3EDA                                       i2u1960_40 661E  
                                     i2u1881_40 4108                                       i2u1873_40 4008  
                                     i2u1857_40 3EDC                                       i2u1945_40 67B0  
                                     i2u1937_40 498C                                       i2u1961_40 6630  
                                     i2u1953_48 9EC2                                       i2u1778_40 83AC  
                                     i2u1874_40 400A                                       i2u1866_40 3F66  
                                     i2u1946_40 67BC                                       i2u1938_40 498E  
                                     i2u1970_40 6698                                       i2u1962_40 6632  
                               ___lldiv@divisor 0005                                       i2u1883_40 9168  
                                     i2u1859_45 3EF2                                       i2u1955_48 9EA2  
                                     i2u1948_40 67EE                                       i2u1980_40 66F0  
                                     i2u1972_40 66AA                                       i2u1949_40 67FA  
                                     i2u1878_40 404E                                       i2u1974_40 66BA  
                                     i2u1879_40 4050                                       i2u1959_40 661C  
                                     i2u1976_40 66CC                           _highPressureAlarmHigh 02AD  
                                     i2u1978_40 66DE                                 ___lldiv@counter 000D  
                                     See12V@v12 0126                                       See12V@adc 0124  
                               SetAlarmLED@type 0104                             ?_GetPressure_mbar02 002B  
                              ??i2_AdcDataReady 0009                                 ?_GetPressure_pa 011E  
                     ??_ClearBaterryLowAlarmMed 0104                                    ?_DisplayTask 0001  
                             __end_of_vfpfcnvrt 1EA8                             i2GetPressure_pa@p32 001F  
                           i2GetPressure_pa@adc 0023                                ___aldiv@quotient 011A  
                              AlarmUpdateLCD@id 01C0                                         postdec1 003FE5  
                                       postdec2 003FDD                        ??i2_ClearIPAboveSetAlarm 0001  
                                       postinc0 003FEE                                         postinc1 003FE6  
                                       postinc2 003FDE                                       i2See5V@mv 001D  
                                     i2_AdcInit 84CA                                  ??_AdcDataReady 010C  
                                    _muteButton 00FD                             i2___lmul@multiplier 0001  
                          __size_ofi2_MuteAlarm 01EE                                ?_TMR5_StartTimer 0001  
                              ?_ADCC_Initialize 0001                                    ??i2_vfprintf 0055  
                                    ??_vfprintf 016F                                 _IPAboveSetAlarm 9F64  
                            _NoPowerSupplyAlarm A696                                 _ipAboveSetAlarm 00E2  
                             UART1_Write@txData 0104                             _UART1_RxDataHandler 9C7C  
               __end_ofi2_ClearControlFailAlarm A5AA                           __CFG_WDTCPS$WDTCPS_31 000000  
                                       strlen@a 0106                                         strlen@s 0104  
                             i2ValueDisplay@ete 00A8                               i2ValueDisplay@eti 00A7  
                         _CMP1_InterruptHandler 028A                               i2ValueDisplay@tde 00B2  
                             i2ValueDisplay@tdi 00B0                               i2ValueDisplay@spr 00A3  
                             i2ValueDisplay@vol 009F                                  i2_CMP1_Disable A5D2  
                                   _adcChannels 02BC                        _TMR0_SetInterruptHandler A240  
                                     i2_GetPmax 9BC2                    __end_of_ClearTdeTooLongAlarm A5D2  
                            __end_of_AlarmClear 9E14                              _UnDisplayCalibrate A1EC  
                                     _PORTDbits 003FCD                                 SetAlarmSV1@last 00F2  
                                  AlarmClear@id 0104                                    _LCDMessage12 9366  
                                     _TMR4_Stop A6C6                                  ?_ClearAllAlarm 0001  
                      _TMR6_SetInterruptHandler A25C                                   i2_UART1_Write 8D74  
                             i2ClearVars@i_4906 0003                           _TMR5_InterruptHandler 02E1  
                                 ?i2_BuzzerTask 0001                                  ?_ClearAlarmLED 0001  
                         _I2C2_SlaveIsRxBufFull A3BA                               __size_of_I2C2_Isr 0068  
                             i2___aodiv@divisor 0009                                i2AdcGetData@data 0009  
                                   _StopHandler 8D1E                             ?_NoPowerSupplyAlarm 0001  
                  __size_of_ClearVBelowMinAlarm 0006                         __end_of_I2C2_Initialize A13A  
                           i2_AlarmDisplay$4015 0058                             i2_AlarmDisplay$4016 005A  
                             i2___aodiv@counter 0011                     GetControllerBuzzerCheck@tmp 0001  
                         __size_of_LCDWriteChar 0096                                   _GetAlarmState 8FB6  
                    __end_of_SetIPAboveSetAlarm 9E54                            ??_GetPressure_mbar02 002D  
                        _ControllerTimerHandler 8082                         __size_of_AlarmCheckTask 0184  
                         ??i2_SetCalibrateState 005B                             ?_UnDisplayCalibrate 0001  
                                     i2___aldiv 6C74                 __size_of_SetBaterryLowAlarmHigh 0006  
                                     i2___aodiv 5B40                               ?i2_EnableAlarmSV1 0001  
                                     i2___aomod 6184                                       i2___awdiv 7FFA  
                              ?_CMP1_Initialize 0001                                       i2___awmod 8372  
                       ?_I2C2_SlaveReleaseClock 0001                                __CFG_FEXTOSC$OFF 000000  
                              ?_TMR6_StartTimer 0001                                      ?_LCDWrite4 0001  
                __size_of_ClearBatteryFailAlarm 0008           __end_of_I2C2_SlaveSetBusColIntHandler A2BE  
        __size_of_I2C2_SlaveSetBusColIntHandler 000E                   _I2C2_SlaveSetBusColIntHandler A2B0  
                          ?_UART1_RxDataHandler 0001                         __end_of_EPAboveSetAlarm 9FB2  
                 __end_of_ClearBatteryFailAlarm A53A                                ?_TMR5_WriteTimer 0001  
                             __size_of_CMP1_ISR 0022                              ??i2_EnableAlarmSV1 0001  
                       TMR5_WriteTimer@timerVal 0001                          __end_of_SeePressure_pa 59E8  
            __size_ofi2_ClearNoPowerSupplyAlarm 0006                                 ?i2_AlarmDisplay 00BD  
                              _monitorFailAlarm 02B0                         __size_of_I2C2_SlaveOpen 000A  
                           __end_of_CMP1_Enable A522                              __end_ofi2_vfprintf 8834  
                                __end_of_LCDOff A458                        __size_of_SeePressureV_pa 0082  
                                _ReceiveHandler 9142                      ?i2_ClearNoPowerSupplyAlarm 0001  
                       _ClearNoPowerSupplyAlarm A5FE                        __size_ofi2_GetAlarmState 0050  
                    MonitorPressureTask@nt_4872 0238                                       _AlarmInit 820C  
                      ??i2_ClearEPBelowSetAlarm 0001                 __size_ofi2_ClearEPAboveSetAlarm 0016  
                              ??_GetMaxPressure 0114                              i2___awdiv@dividend 0007  
                                  ?_InitDisplay 0001                                   _MonitorEnable A4E2  
                               _DisableAlarmSV1 A4FA                            ??_NoPowerSupplyAlarm 0104  
                                     i2_isalpha 97A0                                       i2_isdigit 97D4  
                                __end_of_Get12V 7A3E                         ??_ControllerBuzzerCheck 0001  
                                     _ClearVars 411E                                 _EPBelowSetAlarm 9FB2  
                                __end_ofi2_atoi 587A                                 _epBelowSetAlarm 00E8  
                                __end_ofi2_ctoa 8B5E                         _I2C2_SlaveSetIsrHandler A2A2  
                                __end_ofi2_dtoa 3716                                       i2_islower 9738  
                                     i2_isspace 9262                                  __end_of_GetBpm A34A  
                                __end_of_GetTde A420                                  __end_of_GetTdi A32E  
                                __end_of_See12V 79A4                                  __end_ofi2_stoa 559A  
                       controller@volumeControl 0299                                  __end_of_GetSpr A33C  
                                __end_ofi2_xtoa 3C46                             SeePressureV_pa@adcv 0116  
                                     i2_isupper 976C                           AlarmCheckTask@current 0274  
                          ??_UnDisplayCalibrate 0104                                  BuzzerOn@period 0104  
                                _TMR0_StopTimer A67A                                       _i2c2State 02B8  
                     __size_of_BuzzerCMPHandler 0026                                       i2atoi@neg 000E  
                                __end_of_SetSV1 96D0                          _I2C2_SlaveStopCallBack 9E94  
                             __size_ofi2_LCDOff 000A                                      ?i2_AdcInit 0001  
                          __end_ofi2_AdcGetData 8A36                __end_of_ClearBaterryLowAlarmHigh A610  
                                  ??_ButtonInit 0106                         __end_of_AdcReStartCycle 8A9A  
                                     i2_sprintf 8EC2                    __end_of_INTERRUPT_Initialize A682  
                                  ??_ButtonTask 00C7                                   ??_LCDMessage1 0112  
                                 ??_LCDMessage2 0112                          __end_ofi2_CMP1_Disable A5DA  
                          __end_ofi2_TMR4_Start A6CE                 __size_ofi2_ADCC_StartConversion 0010  
                ??_ADCC_DefaultInterruptHandler 0001                                       i2_toupper 8F14  
                              ??_EnableAlarmSV1 0104                    ??i2_ClearCircuitFailureAlarm 0001  
                    __size_of_UART1_Receive_ISR 00A0                      __end_of_GetDisableAlarmSV1 A616  
                                __end_of___lmul 8BBC                                       _GetVolume A312  
                                 __pidataBIGRAM 4994                                     vfpfcnvrt@ap 014C  
                                   vfpfcnvrt@cp 0162                                     vfpfcnvrt@fp 0148  
                                   vfpfcnvrt@ll 0152                                    _LCDWriteChar 7CA0  
                                __end_of___wmul 9926                          ??i2_TMR4_Period8BitSet 0001  
                    __size_ofi2_GetPressureV_pa 00A6                                   ButtonTask@cnt 0284  
                  __end_of_I2C2_SlaveRdCallBack 9ED4                            __end_ofi2_AdcSeeData 949C  
                              ?_TdiTooLongAlarm 0001                        __size_ofi2_MonitorEnable 0008  
                       ?_I2C2_SlaveSetSlaveAddr 0001                      __end_of_SetEPBelowSetAlarm 9E74  
                             __size_of_TMR0_ISR 0022                               __size_of_TMR1_ISR 0032  
                             __size_of_TMR4_ISR 0022                               __size_of_TMR5_ISR 0032  
                             __size_ofi2_GetBpm 000E                         ?_I2C2_SlaveSetSlaveMask 0001  
                                     i2fputc@fp 0005                               __size_of_TMR6_ISR 0022  
                                    ?i2_GetPmax 000F                               __size_ofi2_GetTde 000C  
                             __size_ofi2_GetTdi 000E                     ??_ClearHighPressureAlarmLow 0001  
                                ?i2_UART1_Write 0001                               __size_ofi2_See12V 009A  
            __end_ofi2_TMR4_SetInterruptHandler A358                      i2_TMR4_SetInterruptHandler A34A  
                             __size_ofi2_GetSpr 000E                          ?_OSCILLATOR_Initialize 0001  
                       __end_of_GasFailureAlarm A6BE                                       i2fputs@fp 000E  
                                    ?_TMR4_Stop 0001                                  ??i2_BuzzerTask 005B  
             __size_of_ADCC_GetConversionResult 0016                                    ??_BuzzerInit 0106  
                             __size_of_AdcReady 0006                                    ??_BuzzerTask 0183  
                     ?_ADCC_GetConversionResult 0001                                    ??_BuzzerTest 0106  
                             __size_ofi2_SetSV1 002E                                i2___wmul@product 0005  
                 __size_of_ClearEPAboveSetAlarm 0016                                  __end_of_printf 9A8E  
                      ?i2_ClearBatteryFailAlarm 0001                                       _HistAlarm 6500  
                                 _i2c2SlaveAddr 02B5                                  ?_GetAlarmState 0108  
                          __end_of_ValueDisplay 2632                                  __end_of_strlen 8E1E  
                           start_initialization 6D48                               __size_ofi2___lmul 005E  
                                   ??_I2C2_Read 0001                              i2___awdiv@quotient 000D  
                                   ??_I2C2_Open 0106                     ?_ClearHighPressureAlarmHigh 0001  
                             __size_ofi2___wmul 002E                                  BuzzerSet@state 0185  
               __size_ofi2_ClearGasFailureAlarm 0008            __end_of_TMR5_DefaultInterruptHandler A6F4  
         __size_of_TMR5_DefaultInterruptHandler 0002                    _TMR5_DefaultInterruptHandler A6F2  
                      __size_of_TMR0_Initialize 0024                 __size_of_PIN_MANAGER_Initialize 00B2  
          __end_of_I2C2_SlaveSetWrColIntHandler A294           __size_of_I2C2_SlaveSetWrColIntHandler 000E  
                  _I2C2_SlaveSetWrColIntHandler A286                  __end_of_I2C2_SlaveReleaseClock A664  
                                   __end_of_abs 9420                                     __end_of_pad 7322  
                       ??_UART1_SetErrorHandler 0106                                   ??_LCDWriteCmd 0104  
                             __size_of_AlarmSet 0020                                  AdcDataReady@id 010A  
                                    ?i2___aldiv 000D                                      ?i2___aodiv 0001  
                        ?_ClearMonitorFailAlarm 0001                                      ?i2___aomod 0001  
                                    ?i2___awdiv 0007                                      ?i2___awmod 0001  
                       __size_of_SetMaxPressure 000E                               __size_of_AnyAlarm 003C  
                         ??_UART1_RxDataHandler 0001                                    i2vfpfcnvrt@c 0076  
                  __size_of_SetMonitorFailAlarm 0008                                    ?_BuzzerCheck 0001  
                 __size_of_ADCC_StartConversion 0010                      ?_VeryHighPressureAlarmHigh 0001  
                                   putch@txData 0105                                    ?_BuzzerClear 0001  
                                    ivt0x8_base 0008                         __size_of_VAboveMaxAlarm 0004  
                             __size_ofi2_printf 0026                                       _BuzzerOff A18E  
                        __end_of_ReceiveHandler 918C                                       _BuzzerSet 9FCC  
                                      ??_LCDOff 0104                               __size_ofi2_strlen 0050  
                                     i2strlen@a 0003                                       i2strlen@s 0001  
                            __end_of_ButtonInit 9A64                              _controllerDetected 02B1  
                                 _uart1RxBuffer 0212                                  BuzzerTest@note 0108  
                            __end_of_ButtonTask 670C                                 ?_SeePressure_pa 011E  
                                 _uart1TxBuffer 0464                                        ??_Get12V 0120  
                               ___llmod@divisor 0108                                  ?_MonitorEnable 0001  
                           _ClearVAboveMaxAlarm A5BA                                      ?_AlarmInit 0001  
                                      ??i2_atoi 000A                                        ??i2_ctoa 0021  
                                      ??i2_dtoa 0028                                    ?_SetAlarmLED 0001  
                               ___llmod@counter 010C                                       _SetTarget 6E14  
           __size_ofi2_ClearCircuitFailureAlarm 0008               __end_ofi2_ClearNoPowerSupplyAlarm A646  
                                  ?_SetAlarmSV1 0001                                        ??_GetBpm 0106  
                       __size_of_AlarmUpdateLCD 0142                                        ??_GetTde 0106  
                                      ??_GetTdi 0106                                        ??_See12V 0120  
                                      ??i2_stoa 0010                                        ??_GetSpr 0106  
                                      ??i2_xtoa 0029                             _circuitFailureAlarm 02AB  
                              _BatteryFailAlarm 69E4                                      ?i2_isalpha 0001  
                        __end_of_TMR0_StopTimer A67E                                      ?i2_isdigit 0001  
                                _currentChannel 01E5                         __end_of_IPAboveSetAlarm 9F7E  
                                    ?_ClearVars 0001                                        ??_SetSV1 0183  
                                    ?i2_islower 0001                              __end_of_BuzzerInit 989C  
                                    ?i2_isspace 0001                                __CFG_LPBOREN$OFF 000000  
                            __end_of_BuzzerTask 2D84                               __size_of_BuzzerOn 001E  
                                     _MuteAlarm 45B4                              __end_of_BuzzerTest 7EE8  
                 __size_of_ClearGasFailureAlarm 0008                                      ?i2_isupper 0001  
                      __size_of_TMR1_Initialize 0052                                     vfprintf@fmt 016B  
                                     _TestAlarm 73D4                                  _DisplayDisable A14C  
                                  i2vfprintf@ap 0053                                 i2vfpfcnvrt@done 0072  
                                  i2vfprintf@fp 004F                          _SetBaterryLowAlarmHigh A5F8  
                           _BaterryLowAlarmHigh A6AA                                ??_PMD_Initialize 0104  
                                      ??___lmul 010C                                        ??___wmul 0108  
                      __end_ofi2_TMR0_StopTimer A6DE                        ??i2_ClearIPBelowSetAlarm 0001  
                                    ?i2_sprintf 0077                                  HigherAlarm@max 0111  
                         i2_SetMonitorFailAlarm A622                 __size_ofi2_ClearIPAboveSetAlarm 0016  
                               ?i2_CMP1_Disable 0001                                      ?i2_toupper 0007  
                            _SetTdiTooLongAlarm A542                  __end_of_I2C2_SlaveSetSlaveAddr A3FC  
                                   __pdataBANK1 01F8                                     __pdataBANK2 02BC  
                                    ?_GetVolume 0104                  __end_of_I2C2_SlaveSetSlaveMask A17E  
                   ??i2_ClearBaterryLowAlarmMed 0001                                ValueDisplay@dtde 01A4  
                              ValueDisplay@dtdi 01A3                                ValueDisplay@etde 01AF  
                              ValueDisplay@etdi 01AE                                 _IPBelowSetAlarm 9F7E  
                       _I2C2_SlaveClearStopFlag A6E2                                 _ipBelowSetAlarm 00E4  
                               ??_ClearAllAlarm 0001                                ValueDisplay@pmax 019B  
                  __size_of_I2C2_SlaveClearBuff 0004                                    _prFastBuffer 0400  
             __size_of_ClearCircuitFailureAlarm 0008                          BuzzerTask@noDetections 0282  
                               ??_ClearAlarmLED 0104                                        ??_printf 017F  
                     ?_ClearCircuitFailureAlarm 0001                        __end_of_DisplayCalibrate 9738  
                                _TMR5_StopTimer A686                               i2___aomod@divisor 0009  
                        ?_I2C2_SlaveIsRxBufFull 0001                                        ??_strlen 0106  
                          ?_ClearVAboveMaxAlarm 0001                          i2_ClearEPAboveSetAlarm A084  
                             i2___aomod@counter 0011                            __size_ofi2_vfpfcnvrt 05EC  
                  __size_of_I2C2_SlaveEnableIrq 0016                             ?_SetTdiTooLongAlarm 0001  
                                      ?_LCDInit 0001                                      ?_HistAlarm 0001  
                  __size_of_I2C2_SlaveGetRxData 0006                                     __pbssBIGRAM 0464  
                           __end_of_LCDMessage1 9DD4                             __end_of_LCDMessage2 9B04  
                              i2_AlarmUpdateLCD 5DDA                                        ?_LCDTest 0001  
                                     _adcOffset 01F6                        __end_of_ControlFailAlarm A100  
                                  i2sprintf@fmt 0079                     __end_of_MonitorPressureTask 12EA  
                              ?_I2C2_Initialize 0001                        __size_of_TdeTooLongAlarm 0004  
                                      ?i2_LCDOn 0001                              _UART1_ErrorHandler 02E5  
              __end_of_SetHighPressureAlarmHigh A5EC                                   __pcstackBANK0 0060  
                                 __pcstackBANK1 0100                                   __pcstackBANK2 02F5  
                                 __pcstackBANK3 03F9                     __end_of_SetBatteryFailAlarm A532  
                    __end_of_SetIPBelowSetAlarm 9E34                                ___aodiv@dividend 0104  
                          __size_of_GetTargetEp 0026                               SeePressureV_pa@mv 011A  
                          __size_of_GetTargetIp 0026                  __size_of_SetNoPowerSupplyAlarm 0006  
                      __size_of_TMR2_Initialize 001E              _I2C2_SlaveDefWrColInterruptHandler 000000  
                                      LCDTest@i 0138                                        LCDTest@j 013A  
                          ?_BaterryLowAlarmHigh 0001                   __end_of_SetNoPowerSupplyAlarm A5F2  
                                   _CMP1_Enable A51A                              _baterryLowAlarmMed 02AA  
                                      ?i2_GetEp 000F                                        ?i2_GetIp 000F  
                                      ?i2_GetTe 0001                                        ?i2_GetTi 0001  
                   __size_of_CMP1_SetIntHandler 000E                        _UART1_RxInterruptHandler 02F1  
                       i2_ClearMonitorFailAlarm A58A                                        ?i2_See5V 001B  
                                      ?_AdcInit 0001                          i2_ADCC_StartConversion A1CE  
                 ?_TMR5_DefaultInterruptHandler 0001                   __size_of_ClearIPAboveSetAlarm 0014  
                                   ??_LCDWrite4 0104                         __end_of_DisableAlarmSV1 A502  
                     ??_ClearNoPowerSupplyAlarm 0104                    __end_of_I2C2_SlaveSetCounter A49E  
                          __end_of_AdcDataReady 9AB6                               SeePressure_pa@p32 0122  
                                    ?_BuzzerOff 0001                                      ?_BuzzerSet 0001  
                             SeePressure_pa@adc 0126                                 ?_ReceiveHandler 0001  
                              ?_EPAboveSetAlarm 0001               __end_of_VeryHighPressureAlarmHigh A6C2  
                       __end_of_EPBelowSetAlarm 9FCC                                   monitor@enable 02A2  
                                  ?_MonitorDump 0001                                    ?_MonitorInit 0001  
                                      ?i2_fputc 0003                                        ?i2_fputs 000C  
                     _ClearHighPressureAlarmLow A658                                        ?i2_putch 0001  
                                      ?_GetPmax 0112                             i2AlarmDisplay@alarm 00BF  
                                     _calibrate 00FF                __size_ofi2_ClearControlFailAlarm 0008  
                     ??_I2C2_SlaveSetIsrHandler 0106                                        ?_DumpI2C 0001  
                         _ClearControlFailAlarm A4D2                             __end_of_LCDWriteCmd 7CA0  
                                AdcGetData@data 010C                            _ClearTdeTooLongAlarm A5CA  
                  ?_UART1_SetRxInterruptHandler 0104                                      ?_SetTarget 001B  
                         _TMR0_InterruptHandler 02DF                            ??_SetTdiTooLongAlarm 0001  
                                     _alarmData 0914                                       _atoi$5674 0113  
                                     _atoi$5675 0117                                       _atoi$5676 0115  
                         _TMR6_InterruptHandler 02D9                                       __pnvBANK2 02D9  
                      __size_of_TMR0_StartTimer 0004                                       _alarmPmax 02D7  
               __size_ofi2_ClearEPBelowSetAlarm 0016                                       _alarmStep 01EF  
                        __end_of_DisplayDisable A15E                                 ?_TMR0_StopTimer 0001  
                    __end_of_TMR4_Period8BitSet A408                          i2_ClearGasFailureAlarm A59A  
                        __size_ofi2_GetTargetEp 0026                                ___lwdiv@dividend 0001  
                        _PIN_MANAGER_Initialize 710C                          __size_ofi2_GetTargetIp 0026  
                                    ?_MuteAlarm 0001                                       _dtoa$5178 0133  
                          __size_of_HigherAlarm 00B2                                      ?_TestAlarm 0183  
                             ?_UART1_Initialize 0001            __end_of_UART1_SetFramingErrorHandler A232  
         __size_of_UART1_SetFramingErrorHandler 000E                    _UART1_SetFramingErrorHandler A224  
                             ??_SeePressureV_pa 0114                __end_of_TMR1_SetInterruptHandler A2DA  
                                 __pmediumconst FC56                               ??i2_GetAlarmState 0007  
                                      ?___aldiv 0110                                        ?___aodiv 0104  
                                   ??i2_AdcInit 0007                                        ?___aomod 0104  
              __end_of_TMR4_SetInterruptHandler A312                             UART1_Read@readValue 0104  
                                      ?___awdiv 010A                                       __ptext100 A692  
                                     __ptext101 A2DA                                       __ptext110 9F64  
                                     __ptext102 986C                                ___aodiv@quotient 0116  
                                     __ptext111 9F7E                                       __ptext103 A2E8  
                                     __ptext200 A33C                                       __ptext120 A0EC  
                                     __ptext112 9F98                                       __ptext104 4E2E  
                                     __ptext201 8FB6                                       __ptext121 6AC8  
                                     __ptext113 9FB2                                       __ptext105 A696  
                                     __ptext210 A616                                       __ptext202 9518  
                                     __ptext130 A462                                       __ptext122 69E4  
                                     __ptext114 A6AA                                       __ptext106 A69A  
                                     __ptext211 9C7C                                       __ptext203 9DD4  
                                     __ptext131 9FCC                                       __ptext123 A6BE  
                                     __ptext115 A6AE                                       __ptext107 A69E  
                                     __ptext300 A420                                       __ptext220 9954  
                                     __ptext212 9D0C                                       __ptext204 9DF4  
                                     __ptext140 A51A                                       __ptext132 29DC  
                                     __ptext124 96D0                                       __ptext116 A6B2  
                                     __ptext108 A6A2                                       __ptext301 A390  
                                     __ptext221 A61C                                       __ptext213 8082  
                                     __ptext205 680C                                       __ptext141 A17E  
                                     __ptext133 9A64                                       __ptext125 A2F6  
                                     __ptext117 A6B6                                       __ptext109 A6A6  
                                     __ptext310 A63A                                       __ptext302 A42C  
                                     __ptext230 9CC4                                       __ptext222 A6F4  
                                     __ptext214 A6F0                                       __ptext206 91D4  
                                     __ptext150 8B5E                                       __ptext142 A6C6  
                                     __ptext134 A6C2                                       __ptext126 8616  
                                     __ptext118 818A                                       __ptext311 A3AC  
                                     __ptext303 9B76                                       __ptext231 6608  
                                     __ptext223 2632                                       __ptext215 9808  
                                     __ptext207 786A                                       __ptext151 6BA0  
                                     __ptext143 A18E                                       __ptext135 A304  
                                     __ptext127 A502                                       __ptext119 A6BA  
                                     __ptext320 A042                                       __ptext312 9006  
                                     __ptext304 9B9C                                       __ptext240 A6D6  
                                     __ptext232 A6F6                                       __ptext224 A6CA  
                                     __ptext216 9CA0                                       __ptext208 A6EC  
                                     __ptext160 7A3E                                       __ptext152 896A  
                                     __ptext144 A522                                       __ptext136 A3FC  
                                     __ptext128 A5E6                                       __ptext321 A058  
                                     __ptext313 9554                                       __ptext305 A39E  
                                     __ptext241 5DDA                                       __ptext233 47A6  
                                     __ptext225 A34A                                       __ptext217 8834  
                                     __ptext209 A6EE                                       __ptext161 2274  
                                     __ptext153 A5FE                                       __ptext145 A5EC  
                                     __ptext137 A50A                                       __ptext129 93A4  
                                     __ptext330 A64C                                       __ptext322 A592  
                                     __ptext314 A438                                       __ptext306 9BC2  
                                     __ptext250 945E                                       __ptext242 7322  
                                     __ptext234 9982                                       __ptext226 A46C  
                                     __ptext218 A6F2                                       __ptext170 52AA  
                                     __ptext162 8C1A                                       __ptext154 A532  
                                     __ptext146 A52A                                       __ptext138 A512  
                                     __ptext331 A652                                       __ptext323 A59A  
                                     __ptext315 A57A                                       __ptext307 512E  
                                     __ptext251 9AB6                                       __ptext243 7B72  
                                     __ptext235 A19E                                       __ptext227 A622  
                                     __ptext219 9D2E                                       __ptext171 3716  
                                     __ptext163 8458                                       __ptext155 A604  
                                     __ptext147 A5F2                                       __ptext139 9EF2  
                                     __ptext340 9142                                       __ptext332 A5BA  
                                     __ptext324 A06E                                       __ptext316 90F4  
                                     __ptext308 99DE                                       __ptext260 9E34  
                                     __ptext252 75D8                                       __ptext244 A628  
                                     __ptext236 A6CE                                       __ptext228 9F2E  
                                     __ptext180 A408                                       __ptext172 93E2  
                                     __ptext164 18D6                                       __ptext156 A60A  
                                     __ptext148 A5F8                                       __ptext341 A664  
                                     __ptext333 A5C2                                       __ptext325 A084  
                                     __ptext317 A582                                       __ptext309 7FFA  
                                     __ptext261 A552                                       __ptext253 8CC8  
                                     __ptext245 9D50                                       __ptext237 A1AE  
                                     __ptext229 983A                                       __ptext181 8C72  
                                     __ptext173 5F1C                                       __ptext165 3C46  
                                     __ptext157 9A8E                                       __ptext149 79A4  
                                     __ptext350 A6FA                                       __ptext342 A66A  
                                     __ptext334 A5CA                                       __ptext326 A5A2  
                                     __ptext318 A640                                       __ptext270 8D1E  
                                     __ptext262 9E54                                       __ptext254 7EE8  
                                     __ptext246 001E                                       __ptext238 670C  
                                     __ptext190 A320                                       __ptext182 559A  
                                     __ptext174 59E8                                       __ptext166 8E70  
                                     __ptext158 5C98                                       __ptext351 6050  
                                     __ptext343 A3BA                                       __ptext335 A658  
                                     __ptext327 A5AA                                       __ptext319 A58A  
                                     __ptext271 3EC4                                       __ptext263 9E74  
                                     __ptext255 A62E                                       __ptext247 A6F8  
                                     __ptext239 A6D2                                       __ptext191 A414  
                                     __ptext183 921C                                       __ptext175 8A9A  
                                     __ptext167 958E                                       __ptext159 71BE  
                                     __ptext360 5422                                       __ptext352 9C0E  
                                     __ptext344 A6E2                                       __ptext336 A494  
                                     __ptext328 A5B2                                       __ptext280 89D0  
                                     __ptext272 99B0                                       __ptext264 A634  
                                     __ptext256 A53A                                       __ptext248 8684  
                                     __ptext192 9B04                                       __ptext184 9630  
                                     __ptext176 7270                                       __ptext168 95C4  
                                     __ptext361 3464                                       __ptext353 87CA  
                                     __ptext345 A6E6                                       __ptext337 A65E  
                                     __ptext329 A646                                       __ptext281 436A  
                                     __ptext273 62B8                                       __ptext265 9666  
                                     __ptext257 A542                                       __ptext249 7AD8  
                                     __ptext193 9B2A                                       __ptext185 98F8  
                                     __ptext177 8DCA                                       __ptext169 95FA  
                                     __ptext370 A4A8                                       __ptext362 949C  
                                     __ptext354 12EA                                       __ptext346 9D72  
                                     __ptext338 9EB4                                       __ptext290 A366  
                                     __ptext282 A55A                                       __ptext274 A358  
                                     __ptext266 9704                                       __ptext258 A54A  
                                     __ptext194 A32E                                       __ptext186 82FE  
                                     __ptext178 9420                                       __ptext371 8D74  
                                     __ptext363 6184                                       __ptext355 39C4  
                                     __ptext347 9BE8                                       __ptext339 A49E  
                                     __ptext291 A572                                       __ptext283 A562  
                                     __ptext275 A6DA                                       __ptext267 8A36  
                                     __ptext259 9E14                                       __ptext195 9B50  
                                     __ptext187 A312                                       __ptext179 6F9E  
                                      ?___awmod 0104                                       __ptext380 A670  
                                     __ptext372 570A                                       __ptext364 5B40  
                                     __ptext356 8F14                                       __ptext348 A5D2  
                                     __ptext292 A13A                                       __ptext284 A476  
                                     __ptext276 A6DE                                       __ptext268 889C  
                                     __ptext196 4FB2                                       __ptext188 A100  
                                     __ptext381 A3D6                                       __ptext373 9262  
                                     __ptext365 8AFC                                       __ptext357 9738  
                                     __ptext349 9CE8                                       __ptext293 A1BE  
                                     __ptext285 A480                                       __ptext277 4B24  
                                     __ptext269 9E94                                       __ptext197 9926  
                                     __ptext189 A114                                       __ptext382 A09A  
                                     __ptext374 97D4                                       __ptext366 7056  
                                     __ptext358 976C                                       __ptext294 A14C  
                                     __ptext286 A56A                                       __ptext278 8BBC  
                                     __ptext198 7F72                                       __ptext383 0000  
                                     __ptext375 84CA                                       __ptext367 9056  
                                     __ptext359 97A0                                       __ptext295 1EA8  
                                     __ptext287 A48A                                       __ptext279 767E  
                                     __ptext199 A610                                       __ptext376 9A0C  
                                     __ptext368 94DA                                       __ptext296 8EC2  
                                     __ptext288 6E14                                       __ptext377 A1CE  
                                     __ptext369 7482                                       __ptext297 8372  
                                     __ptext289 6C74                                       __ptext378 875E  
                                     __ptext298 A374                                       __ptext379 A3C8  
                                     __ptext299 A382                                        ?___lldiv 0001  
                 ?_I2C2_SlaveSetWriteIntHandler 0104                                        ?___llmod 0104  
                              ?_AdcReStartCycle 0001                                        _I2C2ADB0 003D57  
                                      _I2C2ADR0 003D59                                        _I2C2ADR1 003D5A  
                                      ?___lwdiv 0001                              ??_UART1_Initialize 0106  
                                      _I2C2CON0 003D5D                                        _I2C2CON1 003D5E  
                                      _I2C2CON2 003D5F                            __size_of_DisplayTask 00A8  
                               ??i2_UART1_Write 0001                          __end_of_TMR5_StopTimer A68A  
               __end_ofi2_ClearBatteryFailAlarm A5BA                                 _GetPressureV_pa 7724  
                              _uart1RxLastError 02B9                                   ??_UART1_Write 0104  
                             ?i2_GetPressure_pa 001B                                        _I2C2_Isr 889C  
                  ??_INTERRUPT_InterruptManager 0100                                     ??i2_GetPmax 0011  
                   __size_of_BaterryLowAlarmMed 0004                           ??_ClearVAboveMaxAlarm 0001  
                               ??_GetAlarmState 010A                                   ??i2_TMR4_Stop 0001  
                             __size_of_vfprintf 0072                                     ??_TMR4_Stop 0104  
                   ?i2_ClearBaterryLowAlarmHigh 0001                        _ClearBaterryLowAlarmHigh A60A  
                             ?_MonitorFailAlarm 0001                                ?_GasFailureAlarm 0001  
                      ??_SetCircuitFailureAlarm 0001                    __size_of_CircuitFailureAlarm 0004  
                     __size_ofi2_MonitorDisable 0008                              ??i2_GetPressure_pa 001D  
                        __CFG_BBSIZE$BBSIZE_512 000000                                  __size_of_LCDOn 000A  
                      __end_ofi2_TMR5_StopTimer A6D6                                 _tdeTooLongAlarm 02A7  
                      __size_of_TMR1_StartTimer 0004                   __size_of_ClearEPBelowSetAlarm 0014  
      __end_of_UART1_DefaultOverrunErrorHandler A6EE       __size_of_UART1_DefaultOverrunErrorHandler 0002  
            ??_UART1_DefaultOverrunErrorHandler 0001               ?_UART1_DefaultOverrunErrorHandler 0001  
              _UART1_DefaultOverrunErrorHandler A6EC                                        ?_isalpha 0104  
                                      ?_isdigit 0104                         __size_of_ControllerInit 0040  
                                __size_ofi2_abs 003E                                  __size_of_Get5V 006E  
                            ??_MonitorFailAlarm 0183                                  __size_ofi2_pad 00B6  
                                __size_of_GetEp 002E                                  _AlarmCheckTask 4E2E  
                                __size_of_GetIp 017C                                  __size_of_GetTe 0014  
                                __size_of_GetTi 0014                                        ?_islower 0104  
                                      ?_isspace 0104                          __size_ofi2_HigherAlarm 00B2  
                                __size_of_See5V 006E                                        Get12V@mv 0120  
                         ??_BaterryLowAlarmHigh 0104                                        ?_isupper 0104  
                             ??i2_MonitorEnable 0001                                       _prFastDev 023C  
                      __size_of_PWM6_Initialize 0018                        __size_of_TMR4_Initialize 002E  
                        __size_of_DisplayEnable 0010                                    i2ClearVars@i 0001  
                                      _CMP1_ISR 9D72                                ___lwdiv@quotient 0005  
                                   ??i2___aldiv 0015                          i2_ClearIPAboveSetAlarm A058  
                             _SetCalibrateState 63DE                                     ??i2___aodiv 0011  
                                      ?_putchar 010F                                     ??i2___aomod 0011  
                                __size_of_getch 0006                                       _tdeBuffer 0375  
                                   ??i2___awdiv 000B                                     ??i2___awmod 0005  
                                      ?_sprintf 0171                              _SetEPAboveSetAlarm 9E74  
                        MonitorPressureTask@v12 009B               __size_of_GetControllerBuzzerCheck 0012  
                                      Get5V@v12 0126                                  __size_of_fputc 00B8  
                                      _T2CLKCON 003FAE                                  __size_of_fputs 003E  
                     ?_GetControllerBuzzerCheck 0001                          MonitorPressureTask@cnt 023A  
                                      ?_toupper 010A                                        Get5V@adc 0124  
                                __size_of_isqrt 00A6                                     _U1ERRIRbits 003DF9  
                     i2_ClearBaterryLowAlarmMed A646                          MonitorPressureTask@tmp 00AF  
                             ?_SetVolumeControl 0001                                        _T4CLKCON 003FA2  
                                     _tdiBuffer 0361                                   ?_AlarmHandler 0001  
                                __size_of_putch 000C                            _INTERRUPT_Initialize A67E  
                                      _T6CLKCON 003F96                              ?_SetCalibrateState 0001  
                                 ?_AlarmDisplay 01B7                                      _I2C2SDAPPS 003AE4  
                  __end_ofi2_UnDisplayCalibrate A366                                 ??_MonitorEnable 0104  
             _I2C2_SlaveDefAddrInterruptHandler 000000                                      _I2C2SCLPPS 003AE3  
                         _ADCC_IsConversionDone A3D6                         __size_of_VBelowMinAlarm 0004  
                                _I2C2_SlaveOpen A458                                 ___aldiv@divisor 0114  
                             ??_TMR0_Initialize 0106                              ??_SetVolumeControl 0001  
                               ___aldiv@counter 0118                                ??_GetPressure_pa 0120  
                          _I2C2_SlaveRdCallBack 9EB4                    __end_of_HighPressureAlarmLow 820C  
                                ___wmul@product 0108                           ?_ClearTdeTooLongAlarm 0001  
                            DisplayCalibrate@pr 0093                                        _LATAbits 003FBA  
         UART1_SetErrorHandler@interruptHandler 0104                                       _prSlowDev 0242  
                                      _LATCbits 003FBC                                        _LATDbits 003FBD  
                   __size_of_SetTdeTooLongAlarm 0008                                     ??_AlarmInit 0106  
                           ?_SetEPAboveSetAlarm 0001                                    ?_UpdateState 0001  
                          __end_ofi2_BuzzerTask 29DC                                        _PIE1bits 003991  
                         __size_ofi2_AdcGetData 0066                                        _PIE3bits 003993  
                                      _PIE4bits 003994                                        _PIE5bits 003995  
                                   ??i2_isalpha 0003                                        _PIE6bits 003996  
                                   ??i2_isdigit 0003                                       _ttNoAlarm 025E  
                                      _PIE7bits 003997                                        _PIE8bits 003998  
                           __CFG_BORV$VBOR_2P45 000000                                        _PIE9bits 003999  
                              _controlFailAlarm 00F6                           __size_ofi2_TMR4_Start 0004  
                                 ??i2_ClearVars 0001                                 ?_DisplayDisable 0001  
                           _ClearVBelowMinAlarm A652                                     ??_ClearVars 0104  
                             i2_TMR0_StartTimer A6DE                             ??_SetCalibrateState 0183  
                                      i2_LCDOff A480                                       _targetLow 01E1  
                      __size_of_TMR1_WriteTimer 0024                                ?_IPAboveSetAlarm 0001  
                 ??_UART1_SetRxInterruptHandler 0106                         __end_of_IPBelowSetAlarm 9F98  
                                   ??i2_islower 0003                                     ??i2_isspace 0003  
           __size_of_INTERRUPT_InterruptManager 00F4                                i2_vfpfcnvrt$5214 0074  
                    ??_TMR0_SetInterruptHandler 0106                                        _PIR1bits 0039A1  
                                   ??i2_isupper 0003                                        _PIR3bits 0039A3  
                                      _PIR4bits 0039A4                                        _PIR5bits 0039A5  
                                     _normalSV1 029F                                        _PIR6bits 0039A6  
                                      _PIR7bits 0039A7                                        See12V@mv 0120  
                                      _PIR8bits 0039A8                                        _PIR9bits 0039A9  
                         __size_ofi2_AdcSeeData 003E                      ??_TMR6_SetInterruptHandler 0106  
                          __size_of_InitDisplay 000C                                AlarmCheckTask@id 02FE  
                        ?i2_SetMonitorFailAlarm 0001                        __size_of_TMR5_Initialize 0050  
                              _BuzzerCMPHandler 9BE8                                       _testAlarm 0326  
                     ??_I2C2_SlaveClearStopFlag 0001                              ?i2_TMR0_StartTimer 0001  
            __end_ofi2_ClearCircuitFailureAlarm A5B2                      i2_ClearCircuitFailureAlarm A5AA  
           __size_of_ClearHighPressureAlarmHigh 0008                                     ??i2_sprintf 0057  
                                 _I2C2STAT1bits 003D62                                        _TMR0_ISR 9D50  
                              i2ValueDisplay@dr 00AB                                i2ValueDisplay@er 00B6  
                                      _TMR1_ISR 983A                                i2ValueDisplay@pe 009D  
                              i2ValueDisplay@pi 009B                                i2ValueDisplay@te 00B9  
                              i2ValueDisplay@ti 00BB                                        _TMR4_ISR 9D2E  
                    __end_of_UART1_Transmit_ISR 921C                                        _TMR5_ISR 9808  
                                      i2_GetBpm A3AC                                        _TMR6_ISR 9D0C  
                                   ??i2_toupper 0009                                        i2_GetTde A42C  
                                      i2_GetTdi A390                                        i2_See12V 7AD8  
                                      See5V@v12 0126                                        i2_GetSpr A39E  
                                 ??i2_GetVolume 0003                 __size_ofi2_ClearIPBelowSetAlarm 0016  
                 ?_UART1_SetFramingErrorHandler 0104                                     _LCDMessage1 9DB4  
                                      See5V@adc 0124                                     ??_GetVolume 0106  
                                   _LCDMessage2 9ADE                                 ?_TMR5_StopTimer 0001  
                                      _AdcReady A670                           __size_of_ValueDisplay 03BE  
                              LCDMessage12@str1 0110                                LCDMessage12@str2 0112  
                                      i2_SetSV1 99B0                                       _vfpfcnvrt 18D6  
                            _SetGasFailureAlarm A552                                       _xtoa$5200 0136  
                                     _xtoa$5199 0134                               ??_TMR1_Initialize 0106  
                                    _ADCON0bits 003EF8                             ??i2_TMR0_StartTimer 0001  
                             ___wmul@multiplier 0104                         ?_ControllerTimerHandler 0001  
                                      i2___lmul 8BBC                            ??_SetEPAboveSetAlarm 0001  
                        __end_of_AlarmCheckTask 4FB2                    __end_of_ClearTdiTooLongAlarm A5CA  
                                      i2___wmul 9A0C                          i2_ClearEPBelowSetAlarm A06E  
                       __size_of_FVR_Initialize 0008                                   ??i2_HistAlarm 005C  
                                   ??_HistAlarm 02F5                               GetPressureV_pa@mv 0118  
                                  ?_StopHandler 0001                                 _commandReceived 029B  
                          ?_ClearVBelowMinAlarm 0001                       ??i2_ClearMonitorFailAlarm 0001  
                                      _AlarmSet 9DD4                                   i2_GetTargetEp 9B9C  
                                 i2_GetTargetIp 9B76                                __size_of_LCDInit 00E4  
                     __end_of_SetCalibrateState 6500                               i2___awdiv@divisor 0009  
                              __size_of_LCDTest 0090                             ?_SetGasFailureAlarm 0001  
             __size_of_TMR5_SetInterruptHandler 000E                                        _AnyAlarm 9518  
                             i2___awdiv@counter 000B                       ?_TMR5_SetInterruptHandler 0104  
                           __end_of_UART1_Write 8CC8                                    _prSlowBuffer 0432  
                                     _volumeAcc 0222                                        i2_printf 9C0E  
                                      i2pad@buf 0015                                       _volumeMax 026A  
                                     _volumeMin 0268                               GetPressure_pa@p32 0122  
                                  _isspace$5701 010A                                ??i2_AlarmDisplay 0057  
                                      i2ctoa@fp 001E                                __size_ofi2_LCDOn 000A  
                 __size_ofi2_GetDisableAlarmSV1 0006                        __size_of_TMR6_Initialize 002E  
                             GetPressure_pa@adc 0126                           __end_ofi2_CMP1_Enable A582  
                                      i2dtoa@fp 001E                             __end_ofi2_TMR4_Stop A6D2  
                                      i2_strlen 9056                                  _SetMaxPressure A366  
                              i2AdcSeeData@data 0009                                      vfpfcnvrt@c 0168  
                                   _LCDWriteCmd 7C0A                                  ??_AlarmHandler 005B  
                                   _INTCON0bits 003FD2                                  _VAboveMaxAlarm A69E  
                         __end_of_BuzzerHandler A622                          __end_of_I2C2_SlaveOpen A462  
                             ___lmul@multiplier 0104                                    i2_AdcGetData 89D0  
                                     copy_data0 6D5C                                       copy_data1 6D82  
                                      i2fputc@c 0003                                       copy_data2 6DA4  
                              __size_ofi2_GetEp 002E                                __size_ofi2_GetIp 017C  
                         ?_INTERRUPT_Initialize 0001                                __size_ofi2_GetTe 000C  
                              __size_ofi2_GetTi 000E                                  ??_AlarmDisplay 01BB  
                                      i2fputs@c 0010                   __size_of_ClearIPBelowSetAlarm 0014  
                                 ??i2_BuzzerOff 0001                                        i2fputs@i 0011  
                              __size_ofi2_See5V 006E                                        i2fputs@s 000C  
                                  i2_TMR4_Start A6CA                             BatteryFailAlarm@bat 0128  
                              __size_of_AdcInit 0074                                     ??_BuzzerOff 0104  
                              ?_DisableAlarmSV1 0001                                     ??_BuzzerSet 0185  
                            i2___awmod@dividend 0001                        _SetHighPressureAlarmHigh A5E6  
                         _HighPressureAlarmHigh A6B6                              i2___aldiv@dividend 000D  
                      i2SetCalibrateState@calib 005B                                ?_EPBelowSetAlarm 0001  
                             ??_TdeTooLongAlarm 0104                          ?_ClearControlFailAlarm 0001  
                        _uart1TxBufferRemaining 02EB                           ?_I2C2_SlaveRdCallBack 0001  
                                 i2SetSV1@value 005B                                    i2_AdcSeeData 945E  
                             ??_TMR2_Initialize 0104                    __size_of_SetControlFailAlarm 0008  
                          __size_of_BuzzerCheck 0096                            __size_of_BuzzerClear 0010  
                                      i2stoa@cp 001C                                        i2stoa@fp 000C  
                              __size_ofi2_fputc 00AE                                __size_ofi2_fputs 003E  
                     __end_ofi2_TMR0_StartTimer A6E2                  ??_TMR5_DefaultInterruptHandler 0001  
                _I2C2_SlaveAddrInterruptHandler 0290                     ??i2_ClearNoPowerSupplyAlarm 0001  
                                _AlarmUpdateLCD 5C98                                        _BuzzerOn 9EF2  
                              __size_ofi2_putch 000A                                __size_of_GetPmax 0026  
                                   ??_SetTarget 0027                              _SetIPAboveSetAlarm 9E34  
                                      i2xtoa@fp 001E                                __size_of_DumpI2C 0002  
                                  _uart1RxCount 01F1                         ?_I2C2_SlaveStopCallBack 0001  
                                   _maxPressure 0252                               _AlarmDisplay$4015 01BC  
                             _AlarmDisplay$4016 01BE                                    _ValueDisplay 2274  
                _I2C2_SlaveStopInterruptHandler 0292                                        __Hrparam 0000  
                                 i2_HigherAlarm 7322                __end_of_ADCC_GetConversionResult A0B0  
                          ??_SetGasFailureAlarm 0001                         __end_of_GetPressureV_pa 77C8  
                                 ??i2_MuteAlarm 005C                                     ??_MuteAlarm 0184  
                          __size_of_SetAlarmLED 000E                                      vfprintf@ap 016D  
                                      __Lrparam 0000                                      vfprintf@fp 0169  
                                   ??_TestAlarm 0185                            __size_of_SetAlarmSV1 0034  
                                 _DisplayEnable A1BE                  __size_of_ControllerBuzzerCheck 000C  
                         _SetBaterryLowAlarmMed A5F2                              __CFG_BOREN$SBORDIS 000000  
                              LCDMessage@length 010C                   __end_of_ControllerBuzzerCheck A444  
                     __size_ofi2_EnableAlarmSV1 0008                            UpdateState@initPhase 005C  
                       HighPressureAlarmLow@max 0117                                   ?_CMP1_Disable 0001  
                           ?_SetIPAboveSetAlarm 0001                                 ValueDisplay@cnt 0288  
                               ValueDisplay@ete 01A2                                 ValueDisplay@eti 01A1  
                               ValueDisplay@tde 01AC                                 ValueDisplay@tdi 01AA  
                               ValueDisplay@spr 019D                                 ValueDisplay@vol 0199  
                       __size_ofi2_ValueDisplay 03CC                       HighPressureAlarmLow@count 0278  
                       ??_OSCILLATOR_Initialize 0104                             _SetMonitorFailAlarm A50A  
                             ??_TMR0_StartTimer 0104                                __size_of___aldiv 00D4  
                              __size_of___aodiv 0158                                __size_of___aomod 0134  
                              __size_of___awdiv 0088                                __size_of___awmod 0074  
                         i2___wmul@multiplicand 0003                                __size_of___lldiv 008A  
                           __end_ofi2_ClearVars 45B4                                 LCDWriteCmd@data 0104  
                            _noPowerSupplyAlarm 02A4                                __size_of___llmod 006E  
                                    ?_vfpfcnvrt 0148                                 ClearVars@i_4906 0106  
                __end_of_ControllerTimerHandler 8108                                __size_of___lwdiv 0056  
                          _I2C2_SlaveSetCounter A494                                 LCDWriteChar@chr 0104  
                        __size_ofi2_BuzzerClear 0010                                SeePressureV_pa@p 0118  
                     ControllerTimerHandler@cnt 022C                                 ___aodiv@divisor 010C  
                      _TMR1_SetInterruptHandler A2CC                     __end_ofi2_SetCalibrateState 63DE  
                                   _minPressure 00D6                                 ___aodiv@counter 0114  
                            i2___aldiv@quotient 0017                     ?i2_TMR4_SetInterruptHandler 0001  
                      _TMR4_SetInterruptHandler A304                              i2AlarmUpdateLCD@id 00C1  
                                  i2HistAlarm@i 005E                                        _pHighAcc 021E  
                ??_I2C2_SlaveSetWriteIntHandler 0106                                 ?_AlarmCheckTask 0001  
                              SeePressure_pa@mv 012A                           ??_ClearVBelowMinAlarm 0001  
                         _TMR1_InterruptHandler 02DB            __size_of_UART1_SetRxInterruptHandler 000E  
               __size_of_SetCircuitFailureAlarm 0006                                  ?i2_GetTargetEp 000F  
                                    sprintf@fmt 0173                                  ?i2_GetTargetIp 000F  
                      __end_of_BatteryFailAlarm 6AC8                         ??_ClearMonitorFailAlarm 0104  
                                      _alarmSV1 02A0                             __end_ofi2_GetVolume A382  
                      __size_of_TMR5_StartTimer 0004                                      _T0CON0bits 003FB8  
                      __size_of_ADCC_Initialize 006C                           i2GetPressureV_pa@adcv 0013  
                         __size_of_AdcDataReady 0028                          __end_of_SetMaxPressure A374  
                        __size_ofi2_SetAlarmSV1 002E                                __size_of_isalpha 0036  
                              __size_of_isdigit 0036                  I2C2_SlaveSetSlaveMask@maskAddr 0104  
                        __end_of_VAboveMaxAlarm A6A2                                        __pivt0x8 0008  
                               ___lwdiv@divisor 0003                     __size_of_GetPressure_mbar02 0036  
                      _MonitorPressureTask$4886 00A3                        _MonitorPressureTask$4895 00A5  
                      _MonitorPressureTask$4896 00A7                        _MonitorPressureTask$4898 00A9  
                      _MonitorPressureTask$4899 00AB                                    _I2C2CON0bits 003D5D  
                              __size_of_islower 0036                                __size_of_isspace 0046  
                               ___lwdiv@counter 0007                                        _detected 00F8  
                              ??_SeePressure_pa 0120                                        __ptext10 A67A  
                                      __ptext11 4CAA                                        __ptext20 A224  
                                      __ptext12 7724                                        __ptext21 A232  
                                      __ptext13 587A                                        __ptext30 710C  
                                      __ptext22 989C                                        __ptext14 8108  
                                      __ptext31 9FFE                                        __ptext23 8F66  
                                      __ptext15 92A6                                        __ptext40 A4CA  
                                      __ptext32 A67E                                        __ptext24 98CA  
                                      __ptext16 6EDE                                        __ptext41 A4D2  
                                      __ptext33 A128                                        __ptext25 9ED4  
                                      __ptext17 A1FA                                        __ptext50 A4DA  
                                      __ptext42 83E6                                        __ptext34 A4B2  
                                      __ptext26 8E1E                                        __ptext18 A208  
                                      __ptext51 828A                                        __ptext43 A682  
                                      __ptext35 9D94                                        __ptext27 9C34  
                                      __ptext19 A216                                        __ptext60 A444  
                                      __ptext52 A15E                                        __ptext44 A240  
                                      __ptext36 86F2                                        __ptext28 9FE6  
                                      __ptext61 A44E                                        __ptext53 A24E  
                                      __ptext45 411E                                        __ptext37 45B4  
                                      __ptext29 9C58                                        __ptext70 7530  
                                      __ptext62 A3E4                                        __ptext54 A4E2  
                                      __ptext46 A0B0                                        __ptext38 A4BA  
                                      __ptext71 9ADE                                        __ptext63 6900  
                                      __ptext55 3104                                        __ptext47 A0C4  
                                      __ptext39 A4C2                                        __ptext80 A68A  
                                      __ptext72 9366                                        __ptext64 90A6  
                                      __ptext56 85A8                                        __ptext48 A0D8  
                                      __ptext81 A25C                                        __ptext73 9DB4  
                                      __ptext65 7DCC                                        __ptext57 790A  
                                      __ptext49 A016                              _GetDisableAlarmSV1 A610  
                                      __ptext90 A2B0                                        __ptext82 A26A  
                                      __ptext74 7C0A                                        __ptext66 6500  
                                      __ptext58 9328                                        __ptext91 A2BE  
                                      __ptext83 8904                                        __ptext75 77C8  
                                      __ptext67 A686                                        __ptext59 A4EA  
                                      __ptext92 A458                                        __ptext84 A278  
                                      __ptext76 7CA0                                        __ptext68 A4F2  
                                      __ptext93 A02C                                        __ptext85 A286  
                                      __ptext77 A4FA                                        __ptext69 A6EA  
                                      __ptext94 7E5C                                        __ptext86 A16E  
                                      __ptext78 92E8                                        __ptext95 7D36  
                                      __ptext87 A3F0                                        __ptext79 A5E0  
                                      __ptext96 9A3A                                        __ptext88 A294  
                                      __ptext97 A68E                                        __ptext89 A2A2  
                                      __ptext98 A2CC                                        __ptext99 820C  
                              __size_of_isupper 0036                            ??_SetIPAboveSetAlarm 0001  
                               i2MuteAlarm@high 0082                          i2_ClearIPBelowSetAlarm A042  
                          ?_SetMonitorFailAlarm 0001                                 ?_I2C2_SlaveOpen 0001  
                            _SetEPBelowSetAlarm 9E54                             __end_ofi2_HistAlarm 680C  
                        ?_ADCC_IsConversionDone 0001                  __size_of_UART1_SetErrorHandler 000E  
          __end_of_SetVeryHighPressureAlarmHigh A50A           __size_of_SetVeryHighPressureAlarmHigh 0008  
                  _SetVeryHighPressureAlarmHigh A502                                __size_of_putchar 001A  
                             ??_TMR1_StartTimer 0104                   __end_of_UART1_SetErrorHandler A240  
                   ??_VeryHighPressureAlarmHigh 0104                                    i2_GetIp$4810 0016  
                                  i2_GetIp$4809 0014                                __size_of_sprintf 0058  
                              __size_of_toupper 0052                    MonitorPressureTask@halfLimit 009F  
                        __end_of_AlarmUpdateLCD 5DDA                          ??_ClearTdeTooLongAlarm 0001  
                       i2_ClearControlFailAlarm A5A2                             _I2C2_SlaveClearBuff A6E6  
                                   i2AnyAlarm@i 0003                               ??_TMR4_Initialize 0106  
                             ??_PWM6_Initialize 0104                                   __size_of_atoi 0170  
              __size_ofi2_ClearBatteryFailAlarm 0008                                   __size_of_ctoa 0062  
                           ?_GetDisableAlarmSV1 0001                                   __size_of_main 0380  
                __end_of_I2C2_SlaveStopCallBack 9EB4                                   __size_of_dtoa 02AE  
                  __end_of_ClearEPAboveSetAlarm A02C                           MonitorPressureTask@v1 00A1  
                         MonitorPressureTask@v2 00B3                           MonitorPressureTask@v5 009D  
                       __size_of_MonitorDisable 0008                           _ClearBatteryFailAlarm A532  
                         MonitorPressureTask@pr 00C1                        ?_ClearBaterryLowAlarmMed 0001  
                                 __size_of_stoa 0178                                   __size_of_xtoa 027E  
                          __size_of_MonitorDump 0360                            __size_of_MonitorInit 0072  
                                   _buzzerState 02B3                             _I2C2_SlaveEnableIrq A02C  
                           ?_SetEPBelowSetAlarm 0001                         ?_SetBaterryLowAlarmHigh 0001  
          __end_of_TMR0_DefaultInterruptHandler A6FA           __size_of_TMR0_DefaultInterruptHandler 0002  
                  _TMR0_DefaultInterruptHandler A6F8                __end_of_ClearCircuitFailureAlarm A4E2  
                           _I2C2_SlaveGetRxData A66A                                  ?i2_HigherAlarm 0007  
                          __CFG_WDTCWS$WDTCWS_7 000000                        __end_ofi2_AlarmUpdateLCD 5F1C  
                      __size_of_CMP1_Initialize 0020                                ??i2_CMP1_Disable 0001  
                   __size_of_NoPowerSupplyAlarm 0004                             __end_ofi2_BuzzerOff A1BE  
                                 AdcHandler@cnt 0270                        __size_of_TMR6_StartTimer 0006  
                                ?_DisplayEnable 0001                                        _targetBp 026C  
                      __size_of_TMR5_WriteTimer 0024                                ?_IPBelowSetAlarm 0001  
                                   i2See12V@v12 0023                                     i2See12V@adc 0021  
                     _UART1_OverrunErrorHandler 02E7                                       stoa@F1144 02D0  
  UART1_SetOverrunErrorHandler@interruptHandler 0104                       _veryHighPressureAlarmHigh 02AC  
                                ??_CMP1_Disable 0104                                 _checkController 02B2  
                         _MonitorFailAlarm$4446 0183                     __size_of_UnDisplayCalibrate 000E  
                               i2ValueDisplay@r 00B7              __size_of_ClearHighPressureAlarmLow 0006  
            __size_of_UART1_DefaultErrorHandler 0006                                  UpdateState@cnt 0230  
                  __end_of_ADCC_StartConversion A16E                                  UpdateState@old 0298  
                                    _LCDMessage 77C8                      ?_UART1_DefaultErrorHandler 0001  
                       ??_I2C2_SlaveIsRxBufFull 0001                                      AlarmInit@i 0106  
                             ?i2_TMR0_StopTimer 0001                         ?i2_ClearEPAboveSetAlarm 0001  
                                      _vfprintf 8458                                      AlarmSet@id 0104  
            __end_of_INTERRUPT_InterruptManager 6900                     I2C2_SlaveSetCounter@counter 0001  
                    _INTERRUPT_InterruptManager 680C                           ?_I2C2_SlaveSetCounter 0001  
                              GetPressureV_pa@p 011C                                    _AdcDataReady 9A8E  
                                     printf@fmt 0171                            ?_I2C2_SlaveClearBuff 0001  
                             ??_TMR1_WriteTimer 0003                               _UART1_is_rx_ready A1DE  
                          DisplayCalibrate@offv 0099                             __end_ofi2_MuteAlarm 4994  
                                   _UART1_Write 8C72                              ??i2_TMR0_StopTimer 0001  
                          ??_GetDisableAlarmSV1 0104                            i2_UnDisplayCalibrate A358  
                              GetPressure_pa@mv 012A                       i2_ClearNoPowerSupplyAlarm A640  
                             ??_TMR5_Initialize 0106                                ___aomod@dividend 0104  
                 __size_ofi2_TMR4_Period8BitSet 000A                                     i2_TMR4_Stop A6CE  
                              i2_MonitorDisable A562                               ?_DisplayCalibrate 0093  
                            ?_UART1_is_rx_ready 0001                   HighPressureAlarmLow@countVery 0276  
                          ?_I2C2_SlaveEnableIrq 0001                            _HighPressureAlarmLow 818A  
                          ??_SetEPBelowSetAlarm 0001                               i2___awmod@divisor 0003  
                       __size_ofi2_AdcDataReady 0028                  ??_UART1_SetFramingErrorHandler 0106  
                          ?_I2C2_SlaveGetRxData 0001                                  _ControllerInit 92E8  
                             i2___awmod@counter 0005                                  _vfpfcnvrt$5214 0166  
               I2C2_SlaveSetSlaveAddr@slaveAddr 0104                     __end_of_UART1_RxDataHandler 9CA0  
                                   _uart1RxHead 01F3                         ?i2_ADCC_StartConversion 0001  
                  __end_of_ClearGasFailureAlarm A4D2                           i2___lmul@multiplicand 0005  
                                   _uart1TxHead 01ED                      __size_of_SetCalibrateState 0122  
                            ??_DisplayCalibrate 0057                                     _uart1RxTail 01F2  
                               ?_SetMaxPressure 0001                               ?_ControlFailAlarm 0001  
                              ??_ReceiveHandler 0001                                     _uart1TxTail 00EC  
                             i2_TMR5_StartTimer A6D6                               i2_ADCC_Initialize 875E  
                               ?_VAboveMaxAlarm 0001                                      ClearVars@i 0104  
                                  HigherAlarm@i 0113                        __size_of_TdiTooLongAlarm 0004  
                                  ?_CMP1_Enable 0001                                        isalpha@c 0104  
                                ValueDisplay@dr 01A5                                  ValueDisplay@er 01B0  
                                      isdigit@c 0104                                  ValueDisplay@pe 0197  
                                ValueDisplay@pi 0195                                  ValueDisplay@te 01B3  
                        ??_INTERRUPT_Initialize 0104                                  ValueDisplay@ti 01B5  
                         ??_SetMonitorFailAlarm 0104                             ??_UART1_is_rx_ready 0104  
                            ??_ControlFailAlarm 0104                              ?i2_TMR5_StartTimer 0001  
                            ?i2_ADCC_Initialize 0001                          ?_HighPressureAlarmHigh 0001  
          __end_of_TMR6_DefaultInterruptHandler A6F2           __size_of_TMR6_DefaultInterruptHandler 0002  
                  _TMR6_DefaultInterruptHandler A6F0                           __size_ofi2_BuzzerTask 03AA  
                        ??_I2C2_SlaveRdCallBack 0005            __end_of_ADCC_DefaultInterruptHandler A6FC  
         __size_of_ADCC_DefaultInterruptHandler 0002                    _ADCC_DefaultInterruptHandler A6FA  
                               SeePressure_pa@p 0128                                        intlevel2 0000  
                                     sprintf@ap 0185                                  _VBelowMinAlarm A69A  
                              ??_TMR0_StopTimer 0104                                    AdcGetData@id 010A  
                               _SeePressureV_pa 8108                        BatteryFailAlarm@timeFail 027C  
                               ?_AlarmUpdateLCD 0001                                   i2_BuzzerClear A19E  
                               i2_GetAlarmState 9006                   ?_SetVeryHighPressureAlarmHigh 0001  
                         MonitorFailAlarm@cnt5v 027A                                        islower@c 0104  
                __end_of_SetBaterryLowAlarmHigh A5FE                         ?i2_ClearGasFailureAlarm 0001  
                                      isspace@c 0104                                ___lldiv@dividend 0001  
                       ?_PIN_MANAGER_Initialize 0001                               ??_TMR6_Initialize 0106  
                    __size_ofi2_TMR0_StartTimer 0004                                        isqrt@one 0009  
                                      isqrt@res 0007                             ??i2_TMR5_StartTimer 0001  
                        _SetCircuitFailureAlarm A634                             _CircuitFailureAlarm A6B2  
                             __CFG_CLKOUTEN$OFF 000000                             ??i2_ADCC_Initialize 0003  
                            _SetIPBelowSetAlarm 9E14                                        isupper@c 0104  
                          _ClearTdiTooLongAlarm A5C2                                _batteryFailAlarm 00F7  
                        ?_SetBaterryLowAlarmMed 0001                                   i2_SetAlarmSV1 9982  
                             _SetVAboveMaxAlarm A53A                                     i2_ClearVars 436A  
          __size_of_I2C2_SlaveSetStopIntHandler 000E                                ?_GetPressureV_pa 0112  
                           _uart1RxStatusBuffer 020A                   ?_TMR0_DefaultInterruptHandler 0001  
                          __size_of_UpdateState 025A                      ??_ClearBaterryLowAlarmHigh 0104  
                                    i2See12V@mv 001D                                  AdcSeeData@data 010C  
                  __end_of_ClearIPAboveSetAlarm A0D8                  __end_ofi2_ClearEPAboveSetAlarm A09A  
                            ?_SetVAboveMaxAlarm 0001                                        printf@ap 0181  
                     __end_of_UART1_is_rx_ready A1EC                                      _UART1_Read 918C  
           I2C2_SlaveSetWriteIntHandler@handler 0104                             ?_SetIPBelowSetAlarm 0001  
  UART1_SetFramingErrorHandler@interruptHandler 0104                       _VeryHighPressureAlarmHigh A6BE  
                               AlarmHandler@cnt 0272                                      i2See5V@v12 0023  
                          __end_of_AlarmHandler 889C                              AlarmCheckTask@type 02FC  
                      _ADCC_GetConversionResult A09A                                 i2_MonitorEnable A55A  
                         ??_I2C2_SlaveClearBuff 0001                                      i2See5V@adc 0021  
             __end_of_UART1_DefaultErrorHandler A61C                                 ___aomod@divisor 010C  
                                   i2_GetVolume A374                                   ??i2_vfpfcnvrt 004B  
                          __end_of_AlarmDisplay 7AD8                                     ??_vfpfcnvrt 014E  
                                      stoa@nuls 0114                                 ___aomod@counter 0114  
              __end_of_GetControllerBuzzerCheck A14C                           ?i2_UnDisplayCalibrate 0001  
                       __size_of_GetMaxPressure 003E                                        putchar@c 010F  
                        __end_of_ControllerInit 9328                                 ??i2_GetTargetEp 0011  
                             AlarmDisplay@alarm 01B9                                 ??i2_GetTargetIp 0011  
                         ??_I2C2_SlaveEnableIrq 0104                           ?_HighPressureAlarmLow 0001  
                          ?_CircuitFailureAlarm 0001                           __end_of_ClearAllAlarm 9142  
                           ??_SetVAboveMaxAlarm 0001                                  _FVR_Initialize A4B2  
                         ??_I2C2_SlaveGetRxData 0001                              _TMR4_Period8BitSet A3FC  
                __end_ofi2_ADCC_StartConversion A1DE                   i2TMR4_Period8BitSet@periodVal 0001  
                                 ??_GetTargetEp 0114                                   ??_GetTargetIp 0114  
                                      sprintf@f 0187                                        sprintf@s 0171  
                     __end_ofi2_TMR5_StartTimer A6DA                       __end_ofi2_ADCC_Initialize 87CA  
                         __end_of_ClearAlarmLED A46C                                    i2_BuzzerTask 2632  
                              ___lldiv@quotient 0009                                     i2_HistAlarm 670C  
                       ?i2_ClearIPAboveSetAlarm 0001                               ?i2_TMR5_StopTimer 0001  
                               _TMR0_Initialize 9C34                      __end_of_CMP1_SetIntHandler A2F6  
                            i2ValueDisplay@dtde 00AA                              i2ValueDisplay@dtdi 00A9  
                            i2ValueDisplay@etde 00B5                              i2ValueDisplay@etdi 00B4  
                               _tdiTooLongAlarm 02A8                              i2ValueDisplay@pmax 00A1  
                                      toupper@c 010A                       __size_of_UART1_Initialize 00C0  
                                    i2_AnyAlarm 9554                                    ___aldiv@sign 0119  
                       __size_of_EnableAlarmSV1 0008                                i2_MuteAlarm$4543 0081  
                          __size_of_StopHandler 0056                              ??i2_TMR5_StopTimer 0001  
                      __end_of_BuzzerCMPHandler 9C0E                             ?_TMR4_Period8BitSet 0001  
                        __end_of_VBelowMinAlarm A69E                       ??i2_ClearControlFailAlarm 0001  
                      _UART1_TxInterruptHandler 02EF                                      _AdcGetData 896A  
                          ??_SetIPBelowSetAlarm 0001                                      _AdcHandler 6050  
                                    _TMR4_Start A6C2                 __end_of_ClearBaterryLowAlarmMed A60A  
                              SetAlarmSV1@value 0183                                      _TMR6_Start A68A  
                         _SetNoPowerSupplyAlarm A5EC                                   _displayStatus 00E0  
                                i2_isspace$5701 0007                                  ?i2_BuzzerClear 0001  
                                  ___aodiv@sign 0115                       __size_ofi2_GetPressure_pa 0186  
                __end_ofi2_ClearGasFailureAlarm A5A2                               ??_TMR5_StartTimer 0104  
                                   i2_BuzzerOff A1AE                                AlarmDisplay@type 01B7  
                ??_ADCC_SetADTIInterruptHandler 0106                                ??_DisplayDisable 0057  
                __end_of_PIN_MANAGER_Initialize 71BE                               ??_ADCC_Initialize 0106  
                  __size_of_MonitorPressureTask 12CC                                      _AdcSeeData 9328  
                 ?_TMR6_DefaultInterruptHandler 0001                          ?_ClearBatteryFailAlarm 0001  
                      __size_of_I2C2_Initialize 0012                              i2___aodiv@dividend 0001  
                                  AdcSeeData@id 010A                              __size_of_I2C2_Read 0006  
                            __size_of_I2C2_Open 0066                       __size_of_MonitorFailAlarm 00D8  
                  __size_of_SetBatteryFailAlarm 0008                   ?_ADCC_DefaultInterruptHandler 0001  
                               ??i2_HigherAlarm 0009                                 AlarmDisplay@cnt 0286  
                     __end_of_SetVAboveMaxAlarm A542                    __end_of_ClearEPBelowSetAlarm A0EC  
                                 ??_HigherAlarm 010C                                 ??_DisplayEnable 0057  
                                    i2_BuzzerOn 9F2E                    ?_UART1_SetTxInterruptHandler 0104  
                                   _veryHighSV1 01FB                         ??i2_SetMonitorFailAlarm 0001  
                         ?_ClearTdiTooLongAlarm 0001              MonitorFailAlarm@monitorFailAlarm5V 00F5  
                   __size_of_SetTdiTooLongAlarm 0008                                  ?i2_SetAlarmSV1 0001  
                                  ___aomod@sign 0115                                 _TMR1_Initialize 8E1E  
                                 AlarmDisplay@t 01BB                                ??_TMR5_StopTimer 0104  
                                 ??_DisplayTask 0114                        __size_of_EPAboveSetAlarm 001A  
                                   i2_MuteAlarm 47A6  
